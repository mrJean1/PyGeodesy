
=========
PyGeodesy
=========

A pure Python implementation of geodesy tools for various ellipsoidal
and spherical earth models using precision trigonometric, vector-based,
elliptic and approximate methods for geodetic (lat-/longitude) and
geocentric (ECEF_ cartesian) coordinates.

Transcribed from `JavaScript originals`_ by *Chris Veness (C) 2005-2016*
and several `C++ classes`_ by *Charles Karney (C) 2008-2019* and published
under the same `MIT License`_.

There are three modules for ellipsoidal earth models, *ellipsoidalKarney*,
*-Vincenty* and *-Nvector* and two for spherical ones, *sphericalTrigonometry*
and *-Nvector*.  Each module provides a geodetic *LatLon* and a geocentric
*Cartesian* class with methods and functions to compute distance, initial and
final bearing, intermediate and nearest points, area, perimeter, conversions
and unrolling, among other things.  For more information and further details
see the documentation_, the descriptions of `Latitude/Longitude`_, Vincenty_
and `Vector-based`_ geodesy, the original `JavaScript source`_ or docs_ and
the Python `GeographicLib`_.

Also included are modules for conversions to and from `Cassini-Soldner`_,
ECEF_ (Earth-Centered, Earth-Fixed cartesian), UPS_ (Universal Polar
Stereographic), UTM_ (Exact_ and Universal Transverse Mercator) and
`Web Mercator`_ (Pseudo-Mercator) coordinates, MGRS_ (NATO Military Grid
Reference System) and OSGR_ (British Ordinance Survery Grid Reference) grid
references, TRF_ (Terrestrial Reference Frames) and modules to encode and
decode EPSG_, Geohashes_, `Georefs (WGRS)`_ and `Garefs (GARS)`_ .

Other modules provide Lambert conformal conic projections and positions
(from `John P. Snyder`_, *Map Projections -- A Working Manual*, 1987, pp
107-109), functions to clip a path or polygon of *LatLon* points using
the `Cohen-Sutherland`_ and the `Sutherland-Hodgman`_ methods, functions
to simplify_ or linearize a path of *LatLon* points (or a `NumPy array`_),
including implementations of the `Ramer-Douglas-Peucker`_, the
`Visvalingam-Whyatt`_ and the `Reumann-Witkam`_ algorithms and modified
versions of the former.  Other classes interpolate_ the height of
*LatLon* points and several *Geoid* models or compute various `Fréchet`_
or Hausdorff_ distances.

Installation
============

To install PyGeodesy, type ``pip install PyGeodesy`` or ``easy_install
PyGeodesy`` in a terminal or command window.

Alternatively, download ``PyGeodesy-yy.m.d.zip`` from PyPI_ or GitHub_,
``unzip`` the downloaded file, ``cd`` to directory ``PyGeodesy-yy.m.d``
and type ``python setup.py install``.  To run all PyGeodesy tests, type
``python setup.py test`` before installation.

Installation of `GeographicLib`_, `NumPy`_ and `SciPy`_ is optional.
However, the former is required for classes *CassiniSoldner* and *Css*
and function *toCss*, for module *ellipsoidalKarney* classes *LatLon* and
*Cartesian* and functions *areaOf* and *perimeterOf* and for the
*HeightIDWkarney* interpolator.  The latter are needed for the *Geoid...*
and *Height...* interpolator classes, except the *GeoidKarney* and all
*HeightIDW...* classes.

Documentation
=============

In addition to the ``pygeodesy`` package, the PyGeodesy_ distribution
files contain the tests, the test results (on macOS only) and the
complete documentation_ generated by Epydoc_ using command line:
``epydoc --html --no-private --no-source --name=PyGeodesy --url=... -v
pygeodesy``.

Tests
=====

The tests have been run with Python 3.8.1, 3.7.6 and 2.7.17 (all with
geographiclib_ 1.50, numpy_ 1.18.0, 1.17.2 respectively 1.16.5 and scipy_
1.4.1, 1.3.1 respectively 1.2.2), with macOS' Python 2.7.16 (without
geographiclib, numpy and scipy) and with PyPy_ 7.3.0 (Python 2.7.13 and
3.6.9), all on macOS 10.13.6 High Sierra and *all in 64-bit only*.  The
results of those tests are included in the distribution files.

With Python 3.8.1 and 3.7.6, the tests run *with and without* ``lazy import``.

Test coverage has been measured with coverage_ 4.5.4 using Python 3.8.1
and 3.7.6 (both with geographiclib_ 1.50, numpy_ 1.18.0 respectively
1.17.2 and scipy_ 1.4.1 respectively 1.3.1) and macOS' Python 2.7.16
(without geographiclib, numpy and scipy).  A summary PDF file and a full
HMTL report are included in the distribution files.

The tests also ran with Python 2.7.14, 3.5.6, 3.6.3, 3.7.1 and 3.8.0 (and
geographiclib_ 1.49 or 1.50) on `Ubuntu 14.04`_ and with Python 3.7.3 (and
geographiclib_ 1.49 or 1.50) on `Debian 9`_ *all in 64-bit only* and with
Python 2.7.15, 3.6.8, 3.7.2 and 3.8.0 (all with geographiclib_ 1.49 or 1.50)
on `Windows Server 2012R2`_ *in both 32- and 64-bit*.

A single-File and single-Directory application with ``pygeodesy`` has
been bundled using PyInstaller_ 3.4 and 64-bit Python 3.7.3 and 3.7.4
on macOS 10.13.6 High Sierra.

Previously, the tests were run with Python 2.6.9 (and numpy 1.6.2),
2.7.10 (and numpy 1.8.0rc1), 2.7.13, 2.7.14, 2.7.15, 2.7.16 (and numpy
1.13.1, 1.14.0, 1.15.2, 1.16.2 or 1.16.5), 3.5.3, 3.6.2, 3.6.3, 3.6.4,
3.6.5, 3.7.0, 3.7.2, 3.7.3, 3.7.4, 3.7.5, 3.8, and 3.8.1, PyPy_ 6.0.0
(Python 2.7.13 and 3.5.3) and `Intel-Python`_ 3.5.3 (and numpy_ 1.11.3)
on MacOS X 10.10 Yosemite, MacOS X 10.11 El Capitan, macOS 10.12 Sierra,
macOS 10.13.5 High Sierra, macOS 10.14 Mojave and/or macOS 10.15.3 Catalina,
with Pythonista_ 3.1 on iOS 10.3.3, 11.0.3, 11.1.2 and 11.3 on iPad4, with
Pythonista_ 3.2 (with geographiclib 1.49 or 1.50 and numpy 1.8.0) on iOS
11.4.1, 12.0, 12.2 and 12.3 on iPad4, iPhone6 and/or iPhone10, *all in
64-bit only* and with 32-bit Python 2.6.6 on Windows XP SP3 and with
32-bit Python 2.7.14 on Windows 10 Pro.

Notes
=====

All Python source code has been statically checked_ with PyChecker_,
PyFlakes_, PyCodeStyle_ (formerly Pep8) and McCabe_ using Python 2.7.17
and with Flake8_ using Python 3.8.1, both in 64-bit on macOS 10.13.6
High Sierra.

Some function and method names differ from the JavaScript version.  In such
cases documentation tag **JS name:** shows the original JavaScript name.

*Last updated: Feb 24, 2020.*

License
=======

``Copyright (C) 2016-2020 -- mrJean1 at Gmail -- All Rights Reserved.``

``Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:``

``The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.``

``THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.``

.. image:: https://Img.Shields.io/pypi/pyversions/PyGeodesy.svg?label=Python
  :target: https://PyPI.org/project/PyGeodesy
.. image:: https://Img.Shields.io/appveyor/ci/mrJean1/PyGeodesy.svg?branch=master&label=AppVeyor
  :target: https://CI.AppVeyor.com/project/mrJean1/PyGeodesy/branch/master
.. image:: https://Img.Shields.io/travis/mrJean1/PyGeodesy.svg?branch=master&label=Travis
  :target: https://Travis-CI.org/mrJean1/PyGeodesy
.. image:: https://Img.Shields.io/cirrus/github/mrJean1/Pygeodesy?branch=master&label=Cirrus
  :target: https://Cirrus-CI.com/github/mrJean1/PyGeodesy
.. image:: https://Img.Shields.io/badge/coverage-95%-brightgreen
.. image:: https://Img.Shields.io/pypi/v/PyGeodesy.svg?label=PyPI
  :target: https://PyPI.org/project/PyGeodesy
.. image:: https://Img.Shields.io/pypi/wheel/PyGeodesy.svg
  :target: https://PyPI.org/project/PyGeodesy/#files
.. image:: https://Img.Shields.io/pypi/l/PyGeodesy.svg
  :target: https://PyPI.org/project/PyGeodesy

.. _C++ classes: https://GeographicLib.SourceForge.io/html/annotated.html
.. _Cassini-Soldner: https://GeographicLib.SourceForge.io/html/classGeographicLib_1_1CassiniSoldner.html
.. _checked: https://GitHub.com/ActiveState/code/tree/master/recipes/Python/546532_PyChecker_postprocessor
.. _Cohen-Sutherland: https://WikiPedia.org/wiki/Cohen-Sutherland_algorithm
.. _coverage: https://PyPI.org/project/coverage
.. _Debian 9: https://Cirrus-CI.com/github/mrJean1/PyGeodesy/master
.. _docs: https://www.Movable-Type.co.UK/scripts/geodesy/docs
.. _documentation: https://mrJean1.GitHub.io/PyGeodesy
.. _ECEF: https://WikiPedia.org/wiki/ECEF
.. _EPSG: https://www.EPSG-Registry.org
.. _Epydoc: https://PyPI.org/project/epydoc
.. _Exact: https://GeographicLib.SourceForge.io/html/classGeographicLib_1_1TransverseMercatorExact.html
.. _Flake8: https://PyPI.org/project/flake8
.. _Fréchet: https://WikiPedia.org/wiki/Frechet_distance
.. _Garefs (GARS): https://WikiPedia.org/wiki/Global_Area_Reference_System
.. _geographiclib: https://PyPI.org/project/geographiclib
.. _Geohashes: https://www.Movable-Type.co.UK/scripts/geohash.html
.. _Georefs (WGRS): https://WikiPedia.org/wiki/World_Geographic_Reference_System
.. _GitHub: https://GitHub.com/mrJean1/PyGeodesy
.. _Hausdorff: https://WikiPedia.org/wiki/Hausdorff_distance
.. _Intel-Python: https://software.Intel.com/en-us/distribution-for-python
.. _interpolate: https://docs.SciPy.org/doc/scipy/reference/interpolate.html
.. _JavaScript originals: https://GitHub.com/ChrisVeness/geodesy
.. _JavaScript source: https://GitHub.com/ChrisVeness/geodesy
.. _John P. Snyder: https://pubs.er.USGS.gov/djvu/PP/PP_1395.pdf
.. _Latitude/Longitude: https://www.Movable-Type.co.UK/scripts/latlong.html
.. _McCabe: https://PyPI.org/project/mccabe
.. _MGRS: https://www.Movable-Type.co.UK/scripts/latlong-utm-mgrs.html
.. _MIT License: https://OpenSource.org/licenses/MIT
.. _numpy: https://PyPI.org/project/numpy
.. _NumPy array: https://docs.SciPy.org/doc/numpy/reference/generated/numpy.array.html
.. _OSGR: https://www.Movable-Type.co.UK/scripts/latlong-os-gridref.html
.. _PyChecker: https://PyPI.org/project/pychecker
.. _PyCodeStyle: https://PyPI.org/project/pycodestyle
.. _PyFlakes: https://PyPI.org/project/pyflakes
.. _PyGeodesy: https://PyPI.org/project/PyGeodesy
.. _PyInstaller: https://www.PyInstaller.org
.. _PyPI: https://PyPI.org/project/PyGeodesy
.. _PyPy: https://PyPy.org
.. _Pythonista: https://OMZ-Software.com/pythonista
.. _Ramer-Douglas-Peucker: https://WikiPedia.org/wiki/Ramer-Douglas-Peucker_algorithm
.. _Reumann-Witkam: https://psimpl.SourceForge.net/reumann-witkam.html
.. _SciPy: https://SciPy.org
.. _simplify: https://Bost.Ocks.org/mike/simplify
.. _Sutherland-Hodgman: https://WikiPedia.org/wiki/Sutherland-Hodgman_algorithm
.. _TRF: http://ITRF.ENSG.IGN.FR
.. _Ubuntu 14.04: https://Travis-CI.org/mrJean1/PyGeodesy
.. _UPS: https://WikiPedia.org/wiki/Universal_polar_stereographic_coordinate_system
.. _UTM: https://www.Movable-Type.co.UK/scripts/latlong-utm-mgrs.html
.. _Vector-based: https://www.Movable-Type.co.UK/scripts/latlong-vectors.html
.. _Vincenty: https://www.Movable-Type.co.UK/scripts/latlong-vincenty.html
.. _Visvalingam-Whyatt: https://hydra.Hull.ac.UK/resources/hull:8338
.. _Web Mercator: https://WikiPedia.org/wiki/Web_Mercator
.. _Windows Server 2012R2: https://CI.AppVeyor.com/project/mrJean1/pygeodesy
