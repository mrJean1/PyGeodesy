test/run.py typical test results (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W default)

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testAlbers.py
6testing testAlbers.py 21.01.28 (module pygeodesy.albers 22.09.12)
6test 1 name: Karney_example
6test 2 datum: WGS84
6test 3 ellipsoid: WGS84
6test 4 lat0: 40.451991337063
6test 5 scale0: 0.999959500363
6test 6 equatoradius: 6378137.000000000000
6test 7 flattening: 0.003352810665
6test 8 _sign: 1.000000000000
6test 9 _m02: 0.580681094922
6test 10 _n0: 0.648810669236
6test 11 _txi0: 0.848822476849
6test 12 iteration: 3
6test 13 ispolar: False
6test 14 forward: -5675721.76113533, 2516917.91242155, 39.95, -75.17, 311.23285234, 0.99999745  FAILED, KNOWN, expected -5675721.76113534, 2516917.91242155, 39.95, -75.17, 311.23285234, 0.99999745
6test 15 reverse: -5675721.76113533, 2516917.91242155, 39.95, -75.17, 311.23285234, 0.99999745  FAILED, KNOWN, expected -5675721.76113534, 2516917.91242155, 39.95, -75.17, 311.23285234, 0.99999745
6test 16 forward: 199089.12574012, -53115.52801838, 39.95, 2.33, 1.51160641, 0.99999745
6test 17 reverse: 199089.12574012, -53115.52801838, 39.95, -75.17, 1.51160641, 0.99999745  FAILED, KNOWN, expected 199089.12574012, -53115.52801838, 39.95, 2.33, 1.51160641, 0.99999745
6test 18 reverse: 220000.0, -53000.0, 39.94581132, 2.57463362, 1.67031446, 0.99999808
6test 19 forward: 220000.0, -53000.0, 39.94581132, 2.57463362, 1.67031446, 0.99999808
6test 20 reverse: 220000.0, -53000.0, 39.94581132, -74.92536638, 1.67031446, 0.99999808
6test 21 forward: 220000.0, -53000.0, 39.94581132, 2.57463362, 1.67031446, 0.99999808  FAILED, KNOWN, expected 220000.0, -53000.0, 39.94581132, -74.92536638, 1.67031446, 0.99999808
6testPage292(pygeodesy.albers, 22.09.12)
6test 22 name: Snyder_p292
6test 23 datum: NAD27
6test 24 ellipsoid: Clarke1866
6test 25 lat0: 37.934543880726
6test 26 scale0: 0.990309187872
6test 27 equatoradius: 6378206.400000000373
6test 28 flattening: 0.003390075304
6test 29 _sign: 1.000000000000
6test 30 _m02: 0.623664507732
6test 31 _n0: 0.614760830736
6test 32 _txi0: 0.775925617021
6test 33 iteration: 4
6test 34 ispolar: False
6test 35 forward: -6105839.22928149, 2214046.74930274, 35.0, -75.0, 314.78223745, 0.99155461  FAILED, KNOWN, expected -6105839.22928148, 2214046.74930274, 35.0, -75.0, 314.78223745, 0.99155461
6test 36 reverse: -6105839.22928149, 2214046.74930274, 35.0, -75.0, 314.78223745, 0.99155461  FAILED, KNOWN, expected -6105839.22928148, 2214046.74930274, 35.0, -75.0, 314.78223745, 0.99155461
6test 37 forward: 1885472.72581347, -119505.66687765, 35.0, 21.0, 12.66097351, 0.99155461  FAILED, KNOWN, expected 1885472.72581347, -119505.66687766, 35.0, 21.0, 12.66097351, 0.99155461
6test 38 reverse: 1885472.72581347, -119505.66687765, 35.0, -75.0, 12.66097351, 0.99155461  FAILED, KNOWN, expected 1885472.72581347, -119505.66687766, 35.0, 21.0, 12.66097351, 0.99155461
6test 39 reverse: 1885427.7, 1535925.0, 49.40436665, 25.93001383, 15.63329611, 1.01436109
6test 40 forward: 1885427.7, 1535925.0, 49.40436665, 25.93001383, 15.63329611, 1.01436109
6test 41 reverse: 1885427.7, 1535925.0, 49.40436665, -70.06998617, 15.63329611, 1.01436109
6test 42 forward: 1885427.7, 1535925.0, 49.40436665, 25.93001383, 15.63329611, 1.01436109  FAILED, KNOWN, expected 1885427.7, 1535925.0, 49.40436665, -70.06998617, 15.63329611, 1.01436109
6testTable15(pygeodesy.albers, 22.09.12)
6test 43 52 k: 1.02863
6test 44 50 k: 1.01727
6test 45 45.5 k: 1.00000
6test 46 45 k: 0.99869
6test 47 40 k: 0.99097
6test 48 35 k: 0.99155
6test 49 30 k: 0.99893
6test 50 29.5 k: 1.00000
6test 51 25 k: 1.01222
6test 52 22 k: 1.02283
6testLats(pygeodesy.albers, 22.09.12)
6test 53 AlbersEqualArea.lat0: 45.0
6test 54 AlbersEqualArea.lat1: 45.0
6test 55 AlbersEqualArea.lat2: 45.0
6test 56 AlbersEqualArea2.lat0: 40.0
6test 57 AlbersEqualArea2.lat1: 40.0
6test 58 AlbersEqualArea2.lat2: 40.0
6test 59 AlbersEqualArea4.lat0: 30.0
6test 60 AlbersEqualArea4.lat1: 30.0
6test 61 AlbersEqualArea4.lat2: 30.0
6test 62 AlbersEqualArea4.lat0: -30.0
6test 63 AlbersEqualArea4.lat1: -30.0
6test 64 AlbersEqualArea4.lat2: -30.0
6test 65 AlbersEqualAreaCylindrical.lat0: 0.0
6test 66 AlbersEqualAreaCylindrical.lat1: 0.0
6test 67 AlbersEqualAreaCylindrical.lat2: 0.0
6test 68 AlbersEqualAreaNorth.lat0: 90.0
6test 69 AlbersEqualAreaNorth.lat1: 90.0
6test 70 AlbersEqualAreaNorth.lat2: 90.0
6test 71 AlbersEqualAreaSouth.lat0: -90.0
6test 72 AlbersEqualAreaSouth.lat1: -90.0
6test 73 AlbersEqualAreaSouth.lat2: -90.0
6test 74 error: lat1 (150.0): above 90 limit
6test 75 error: slat1 (-0.5) or slat2 (0.5): invalid
69 of 75 testAlbers.py tests (12.0%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 18.121 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testAzimuthal.py
6testing testAzimuthal.py 22.06.20 (module pygeodesy.azimuthal 22.10.11)
6test 1 Equidistant(48.833333, 2.333333, name='Paris'): 48.833333 2.333333
6test 2 forward: -37467.812512, 230294.518853, 50.9, 1.8, 350.759218, 1.000223
6test 3 reverse: -37467.812512, 230294.518853, 50.9, 1.8, 350.759218, 1.000223
6test 4 iteration: None
6test 5 copy(Equidistant): (<class 'pygeodesy.azimuthal.Equidistant'>, True)
6test 6 Equidistant.copy(): (<class 'pygeodesy.azimuthal.Equidistant'>, True)
6test 7 reverse: -38000.0, 230000.0, 50.897321, 1.792455, 350.61849, 1.000222
6test 8 forward: -38000.0, 230000.0, 50.897321, 1.792455, 350.61849, 1.000222
6test 9 reverse: LatLon(50°53′50.36″N, 001°47′32.84″E)
6test 10 reverse: LatLon(50°53′50.36″N, 001°47′32.84″E)
6test 11 reverse: LatLon(50°53′50.36″N, 001°47′32.84″E)
6test 12 reverse: LatLon(50°53′50.36″N, 001°47′32.84″E)
6test 13 Equidistant(51.4934, 0.0098, name='Greenwich'): 51.4934 0.0098
6test 14 forward: 170420.92566, -293667.828613, 48.833333, 2.333333, 149.872606, 1.000472
6test 15 reverse: 170420.92566, -293667.828613, 48.833333, 2.333333, 149.872606, 1.000472
6test 16 iteration: None
6test 17 hypot: 339535.102  FAILED, KNOWN, expected 338901.865
6test 18 antipodal: (170420.92566, -293667.828613, -48.833333, -177.666667, 0.0, 1.000472, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))

6test 19 Gnomonic(48.833333, 2.333333, name='Paris'): 48.833333 2.333333
6test 20 forward: -37484.520018, 230397.210923, 50.9, 1.8, 350.759218, 1.000669
6test 21 reverse: -37484.520018, 230397.210923, 50.9, 1.8, 350.759218, 1.000223
6test 22 iteration: None
6test 23 copy(Gnomonic): (<class 'pygeodesy.azimuthal.Gnomonic'>, True)
6test 24 Gnomonic.copy(): (<class 'pygeodesy.azimuthal.Gnomonic'>, True)
6test 25 reverse: -38000.0, 230000.0, 50.896405, 1.792706, 350.61849, 1.000222
6test 26 forward: -38000.0, 230000.0, 50.896405, 1.792706, 350.61849, 1.000667
6test 27 reverse: LatLon(50°53′47.06″N, 001°47′33.74″E)
6test 28 reverse: LatLon(50°53′47.06″N, 001°47′33.74″E)
6test 29 reverse: LatLon(50°53′47.06″N, 001°47′33.74″E)
6test 30 reverse: LatLon(50°53′47.06″N, 001°47′33.74″E)
6test 31 Gnomonic(51.4934, 0.0098, name='Greenwich'): 51.4934 0.0098
6test 32 forward: 170581.851218, -293945.134107, 48.833333, 2.333333, 149.872606, 1.001416
6test 33 reverse: 170581.851218, -293945.134107, 48.833333, 2.333333, 149.872606, 1.000472
6test 34 iteration: None
6test 35 hypot: 339855.719  FAILED, KNOWN, expected 338901.865
6test 36 antipodal: (170581.851218, -293945.134107, -48.833333, -177.666667, 0.0, 1.000472, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))

6test 37 EquidistantExact(48.833333, 2.333333, name='Paris'): 48.833333 2.333333
6test 38 forward: -37526.978232, 230000.911579, 50.9, 1.8, 350.325442, 0.999778
6test 39 reverse: -37526.978232, 230000.911579, 50.9, 1.8, 350.325442, 0.999778
6test 40 iteration: None
6test 41 copy(EquidistantExact): (<class 'pygeodesy.azimuthal.EquidistantExact'>, True)
6test 42 EquidistantExact.copy(): (<class 'pygeodesy.azimuthal.EquidistantExact'>, True)
6test 43 reverse: -38000.0, 230000.0, 50.899962, 1.793278, 350.205524, 0.999778
6test 44 forward: -38000.0, 230000.0, 50.899962, 1.793278, 350.205524, 0.999778
6test 45 reverse: LatLon(50°53′59.86″N, 001°47′35.8″E)
6test 46 reverse: LatLon(50°53′59.86″N, 001°47′35.8″E)
6test 47 reverse: LatLon(50°53′59.86″N, 001°47′35.8″E)
6test 48 reverse: LatLon(50°53′59.86″N, 001°47′35.8″E)
6test 49 EquidistantExact(51.4934, 0.0098, name='Greenwich'): 51.4934 0.0098
6test 50 forward: 170617.186469, -293210.754313, 48.833333, 2.333333, 151.589952, 0.999529
6test 51 reverse: 170617.186469, -293210.754313, 48.833333, 2.333333, 151.589952, 0.999529
6test 52 iteration: None
6test 53 hypot: 339238.516  FAILED, KNOWN, expected 338901.865
6test 54 antipodal: (170617.186469, -293210.754313, -48.833333, -177.666667, 0.0, 0.999529, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))

6test 55 GnomonicExact(48.833333, 2.333333, name='Paris'): 48.833333 2.333333
6test 56 forward: -37543.665895, 230103.189403, 50.9, 1.8, 350.325442, 0.999333
6test 57 reverse: -37543.665895, 230103.189403, 50.9, 1.8, 350.325442, 0.999333
6test 58 iteration: 3
6test 59 copy(GnomonicExact): (<class 'pygeodesy.azimuthal.GnomonicExact'>, True)
6test 60 GnomonicExact.copy(): (<class 'pygeodesy.azimuthal.GnomonicExact'>, True)
6test 61 reverse: -38000.0, 230000.0, 50.899044, 1.793528, 350.205718, 0.999333
6test 62 forward: -37999.995965, 229999.975581, 50.899044, 1.793528, 350.205718, 0.999334
6test 63 reverse: LatLon(50°53′56.56″N, 001°47′36.7″E)
6test 64 reverse: LatLon(50°53′56.56″N, 001°47′36.7″E)
6test 65 reverse: LatLon(50°53′56.56″N, 001°47′36.7″E)
6test 66 reverse: LatLon(50°53′56.56″N, 001°47′36.7″E)
6test 67 GnomonicExact(51.4934, 0.0098, name='Greenwich'): 51.4934 0.0098
6test 68 forward: 170778.089295, -293487.270649, 48.833333, 2.333333, 151.589952, 0.998587
6test 69 reverse: 170778.089295, -293487.270649, 48.833333, 2.333334, 151.589953, 0.998588
6test 70 iteration: 3
6test 71 hypot: 339558.439  FAILED, KNOWN, expected 338901.963
6test 72 antipodal: (170778.089295, -293487.270649, -48.833333, -177.666666, 0.0, 0.998588, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))

614 tests skipped (14): no geographiclib
6test 73 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E Random +/- 45
6test 74 pygeodesy.ellipsoidalExact: 15.779208°S, 010.954954°E, 16.821634°S, 077.347536°E  d 18722.8 meter  Spherical
6test 75 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 16.921232°S, 077.498875°E  d 5.19015e-10 meter  EquidistantExact
6test 76 pygeodesy.ellipsoidalExact: 15.797696°S, 010.810916°E, 16.843276°S, 077.486283°E  d 7192.33 meter  Equidistant
6test 77 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 6, 4, 5, 0, 3, °, S, ,,  , 0, 0, 0, ., 0, 0, 8, 2, 6, 2, °, W  00.407%, 000.076% of Random
6test 78 pygeodesy.ellipsoidalExact: 15.926899°S, 010.871554°E, 14.539945°S, 064.568108°W  d 10281.1 meter  Spherical
6test 79 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 14.461443°S, 064.496701°W  d 1.02416e-08 meter  EquidistantExact
6test 80 pygeodesy.ellipsoidalExact: 15.878169°S, 010.926406°E, 14.487148°S, 064.623434°W  d 13371.5 meter  Equidistant
6test 81 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 1, 5, 9, 7, 0, °, N, ,,  , 0, 0, 0, ., 1, 2, 3, 7, 5, 2, °, W  00.101%, 001.146% of Random
6test 82 pygeodesy.ellipsoidalExact: 15.943417°S, 010.799179°E, 24.195096°S, 041.733880°E  d 8995.12 meter  Spherical
6test 83 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 24.211801°S, 041.754394°E  d 6.7428e-09 meter  EquidistantExact
6test 84 pygeodesy.ellipsoidalExact: 15.901821°S, 010.758988°E, 24.184949°S, 041.772311°E  d 6410.41 meter  Equidistant
6test 85 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 3, 9, 6, 2, 2, °, N, ,,  , 0, 0, 0, ., 0, 4, 3, 6, 6, 6, °, E  00.250%, 000.404% of Random
6test 86 pygeodesy.ellipsoidalExact: 15.734572°S, 010.705270°E, 15.613395°S, 038.029423°W  d 17559 meter  Spherical
6test 87 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 15.739068°S, 038.127320°W  d 4.50229e-09 meter  EquidistantExact
6test 88 pygeodesy.ellipsoidalExact: 15.774630°S, 010.796462°E, 15.653195°S, 038.121149°W  d 9712.8 meter  Equidistant
6test 89 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 8, 7, 5, 6, 9, °, S, ,,  , 0, 0, 0, ., 0, 0, 6, 1, 9, 1, °, E  00.552%, 000.057% of Random
6test 90 pygeodesy.ellipsoidalExact: 15.938299°S, 010.889734°E, 66.060812°S, 007.408312°W  d 12564.7 meter  Spherical
6test 91 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 66.034844°S, 007.341490°W  d 1.20292e-09 meter  EquidistantExact
6test 92 pygeodesy.ellipsoidalExact: 15.888151°S, 010.947688°E, 65.922197°S, 007.504908°W  d 15796.5 meter  Equidistant
6test 93 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 2, 5, 9, 5, 2, °, N, ,,  , 0, 0, 0, ., 1, 4, 5, 0, 3, 4, °, W  00.164%, 001.343% of Random
6test 94 pygeodesy.ellipsoidalExact: 15.633287°S, 010.790649°E, 69.463235°N, 082.396502°W  d 25363.1 meter  Spherical
6test 95 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 69.605464°N, 082.104206°W  d 3.53392e-10 meter  EquidistantExact
6test 96 pygeodesy.ellipsoidalExact: 15.740738°S, 010.755036°E, 69.601552°N, 081.853610°W  d 14376.1 meter  Equidistant
6test 97 pygeodesy.ellipsoidalExact: 0, 0, ., 1, 2, 1, 4, 6, 1, °, S, ,,  , 0, 0, 0, ., 0, 4, 7, 6, 1, 8, °, E  00.766%, 000.441% of Random
6test 98 pygeodesy.ellipsoidalExact: 15.777959°S, 010.765484°E, 15.424849°S, 056.132858°W  d 10136.6 meter  Spherical
6test 99 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 15.504441°S, 056.170550°W  d 2.40584e-09 meter  EquidistantExact
6test 100 pygeodesy.ellipsoidalExact: 15.798786°S, 010.855005°E, 15.445088°S, 056.223530°W  d 8982.7 meter  Equidistant
6test 101 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 6, 3, 4, 1, 2, °, S, ,,  , 0, 0, 0, ., 0, 5, 2, 3, 5, 1, °, W  00.400%, 000.485% of Random
6test 102 pygeodesy.ellipsoidalExact: 15.661954°S, 010.838497°E, 33.505156°N, 040.024305°W  d 22488.8 meter  Spherical
6test 103 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 33.746481°N, 039.924164°W  d 5.19015e-10 meter  EquidistantExact
6test 104 pygeodesy.ellipsoidalExact: 15.704472°S, 010.943381°E, 33.515979°N, 040.031744°W  d 23065 meter  Equidistant
6test 105 pygeodesy.ellipsoidalExact: 0, 0, ., 1, 5, 7, 7, 2, 7, °, S, ,,  , 0, 0, 0, ., 1, 4, 0, 7, 2, 8, °, W  00.994%, 001.303% of Random
6test 106 pygeodesy.ellipsoidalExact: 15.893225°S, 010.825887°E, 01.817905°S, 026.081378°W  d 4240.11 meter  Spherical
6test 107 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 01.658002°S, 025.989568°W  d 4.5007e-09 meter  EquidistantExact
6test 108 pygeodesy.ellipsoidalExact: 15.840520°S, 010.866464°E, 01.733990°S, 026.075117°W  d 7243.71 meter  Equidistant
6test 109 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 2, 1, 6, 7, 9, °, S, ,,  , 0, 0, 0, ., 0, 6, 3, 8, 1, 0, °, W  00.137%, 000.591% of Random
6test 110 pygeodesy.ellipsoidalExact: 15.779995°S, 010.810087°E, 00.833894°S, 010.073377°W  d 9131.23 meter  Spherical
6test 111 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 00.739617°S, 010.056765°W  d 2.02935e-09 meter  EquidistantExact
6test 112 pygeodesy.ellipsoidalExact: 15.797904°S, 010.846649°E, 00.798682°S, 010.109823°W  d 8534.12 meter  Equidistant
6test 113 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 6, 4, 2, 9, 5, °, S, ,,  , 0, 0, 0, ., 0, 4, 3, 9, 9, 5, °, W  00.405%, 000.407% of Random
6test 114 pygeodesy.ellipsoidalExact: 15.737239°S, 010.657332°E, 16.263112°S, 046.622639°W  d 20823.6 meter  Spherical
6test 115 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 16.396876°S, 046.766351°W  d 1.19489e-09 meter  EquidistantExact
6test 116 pygeodesy.ellipsoidalExact: 15.777644°S, 010.782579°E, 16.304820°S, 046.745126°W  d 9600.52 meter  Equidistant
6test 117 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 8, 4, 5, 5, 5, °, S, ,,  , 0, 0, 0, ., 0, 2, 0, 0, 7, 4, °, E  00.533%, 000.186% of Random
6test 118 pygeodesy.ellipsoidalExact: 15.894232°S, 010.781949°E, 29.646144°S, 003.934216°W  d 4181.1 meter  Spherical
6test 119 pygeodesy.ellipsoidalExact: 15.862199°S, 010.802654°E, 29.746959°S, 003.877174°W  d 3.76685e-09 meter  EquidistantExact
6test 120 pygeodesy.ellipsoidalExact: 15.896062°S, 010.840644°E, 29.665650°S, 003.933395°W  d 5531.37 meter  Equidistant
6test 121 pygeodesy.ellipsoidalExact: 0, 0, ., 0, 3, 3, 8, 6, 3, °, N, ,,  , 0, 0, 0, ., 0, 3, 7, 9, 9, 0, °, W  00.213%, 000.352% of Random
6test 122 pygeodesy.ellipsoidalExact: 0, 0, ., 1, 5, 7, 7, 2, 7, °, N, ,,  , 0, 0, 0, ., 1, 4, 5, 0, 3, 4, °, E  00.994%, 001.343% of Random, max

6test 123 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E Random +/- 45
6test 124 pygeodesy.ellipsoidalVincenty: 36.231453°S, 022.688538°E, 49.217346°N, 025.535875°W  d 27841.1 meter  Spherical
6test 125 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 49.394500°N, 025.413494°W  d 2.45224e-06 meter  EquidistantExact
6test 126 pygeodesy.ellipsoidalVincenty: 36.226172°S, 022.690058°E, 49.201204°N, 025.402762°W  d 28440.7 meter  Equidistant
6test 127 pygeodesy.ellipsoidalVincenty: 0, 0, ., 2, 4, 3, 9, 0, 1, °, S, ,,  , 0, 0, 0, ., 0, 9, 7, 3, 6, 0, °, W  00.669%, 000.431% of Random
6test 128 pygeodesy.ellipsoidalVincenty: 36.321497°S, 022.636673°E, 04.222035°S, 015.970682°W  d 16952.3 meter  Spherical
6test 129 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 04.093155°S, 015.936235°W  d 2.50608e-05 meter  EquidistantExact
6test 130 pygeodesy.ellipsoidalVincenty: 36.318617°S, 022.629302°E, 04.112836°S, 016.049348°W  d 17124.3 meter  Equidistant
6test 131 pygeodesy.ellipsoidalVincenty: 0, 0, ., 1, 5, 1, 4, 5, 6, °, S, ,,  , 0, 0, 0, ., 0, 3, 6, 6, 0, 5, °, W  00.415%, 000.162% of Random
6test 132 pygeodesy.ellipsoidalVincenty: 36.260846°S, 022.698835°E, 25.776097°N, 034.327141°W  d 25095.1 meter  Spherical
6test 133 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 26.022110°N, 034.211489°W  d 2.77422e-05 meter  EquidistantExact
6test 134 pygeodesy.ellipsoidalVincenty: 36.258471°S, 022.693742°E, 25.814265°N, 034.354485°W  d 25170.9 meter  Equidistant
6test 135 pygeodesy.ellipsoidalVincenty: 0, 0, ., 2, 1, 1, 6, 0, 2, °, S, ,,  , 0, 0, 0, ., 1, 0, 1, 0, 4, 4, °, W  00.580%, 000.447% of Random
6test 136 pygeodesy.ellipsoidalVincenty: 36.210266°S, 022.768354°E, 23.415551°N, 040.485077°W  d 32860.6 meter  Spherical
6test 137 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 23.576203°N, 040.424699°W  d 2.80818e-06 meter  EquidistantExact
6test 138 pygeodesy.ellipsoidalVincenty: 36.203532°S, 022.770463°E, 23.377559°N, 040.569716°W  d 33607.9 meter  Equidistant
6test 139 pygeodesy.ellipsoidalVincenty: 0, 0, ., 2, 6, 6, 5, 4, 1, °, S, ,,  , 0, 0, 0, ., 1, 7, 7, 7, 6, 5, °, W  00.731%, 000.787% of Random
6test 140 pygeodesy.ellipsoidalVincenty: 36.424785°S, 022.631530°E, 30.616859°S, 004.013014°W  d 6113.47 meter  Spherical
6test 141 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 30.620062°S, 003.989486°W  d 1.03923e-05 meter  EquidistantExact
6test 142 pygeodesy.ellipsoidalVincenty: 36.423515°S, 022.630093°E, 30.619200°S, 004.020948°W  d 6158.81 meter  Equidistant
6test 143 pygeodesy.ellipsoidalVincenty: 0, 0, ., 0, 4, 6, 5, 5, 7, °, S, ,,  , 0, 0, 0, ., 0, 3, 7, 3, 9, 6, °, W  00.128%, 000.166% of Random
6test 144 pygeodesy.ellipsoidalVincenty: 36.008074°S, 022.911413°E, 45.443308°S, 016.266184°W  d 58727.2 meter  Spherical
6test 145 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 45.755130°S, 015.555965°W  d 1.13426e-05 meter  EquidistantExact
6test 146 pygeodesy.ellipsoidalVincenty: 35.999824°S, 022.914077°E, 45.353988°S, 016.409240°W  d 59644.3 meter  Equidistant
6test 147 pygeodesy.ellipsoidalVincenty: 0, 0, ., 4, 7, 0, 2, 4, 8, °, S, ,,  , 0, 0, 0, ., 3, 2, 1, 3, 8, 0, °, W  01.289%, 001.422% of Random
6test 148 pygeodesy.ellipsoidalVincenty: 36.321386°S, 022.592700°E, 34.951468°N, 030.298490°E  d 16499.2 meter  Spherical
6test 149 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 35.110189°N, 030.244869°E  d 5.49699e-06 meter  EquidistantExact
6test 150 pygeodesy.ellipsoidalVincenty: 36.316202°S, 022.588639°E, 34.953181°N, 030.300613°E  d 17078.4 meter  Equidistant
6test 151 pygeodesy.ellipsoidalVincenty: 0, 0, ., 1, 5, 3, 8, 7, 1, °, S, ,,  , 0, 0, 0, ., 0, 0, 4, 0, 5, 9, °, E  00.422%, 000.018% of Random
6test 152 pygeodesy.ellipsoidalVincenty: 36.344248°S, 022.636356°E, 25.819802°N, 010.989294°E  d 14501.2 meter  Spherical
6test 153 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 25.969221°N, 011.033077°E  d 4.48417e-06 meter  EquidistantExact
6test 154 pygeodesy.ellipsoidalVincenty: 36.338770°S, 022.635653°E, 25.866044°N, 010.974207°E  d 15071.1 meter  Equidistant
6test 155 pygeodesy.ellipsoidalVincenty: 0, 0, ., 1, 3, 1, 3, 0, 3, °, S, ,,  , 0, 0, 0, ., 0, 4, 2, 9, 5, 6, °, W  00.360%, 000.190% of Random
6test 156 pygeodesy.ellipsoidalVincenty: 36.246709°S, 022.592050°E, 45.696870°N, 050.814143°E  d 24785.7 meter  Spherical
6test 157 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 45.868309°N, 050.714733°E  d 6.6988e-06 meter  EquidistantExact
6test 158 pygeodesy.ellipsoidalVincenty: 36.244068°S, 022.583918°E, 45.725485°N, 050.700445°E  d 25091.1 meter  Equidistant
6test 159 pygeodesy.ellipsoidalVincenty: 0, 0, ., 2, 2, 6, 0, 0, 4, °, S, ,,  , 0, 0, 0, ., 0, 0, 8, 7, 8, 0, °, E  00.620%, 000.039% of Random
6test 160 pygeodesy.ellipsoidalVincenty: 36.648251°S, 022.776121°E, 54.732470°S, 025.672314°E  d 25701.8 meter  Spherical
6test 161 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 54.880628°S, 025.505389°E  d 8.05352e-05 meter  EquidistantExact
6test 162 pygeodesy.ellipsoidalVincenty: 36.639185°S, 022.765641°E, 54.897003°S, 025.504579°E  d 24329.1 meter  Equidistant
6test 163 pygeodesy.ellipsoidalVincenty: 0, 0, ., 1, 6, 9, 1, 1, 2, °, N, ,,  , 0, 0, 0, ., 1, 7, 2, 9, 4, 3, °, W  00.464%, 000.765% of Random
6test 164 pygeodesy.ellipsoidalVincenty: 35.906796°S, 025.244745°E, 36.314849°S, 012.160387°E  d 246591 meter  Spherical
6test 165 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 36.713534°S, 014.869080°E  d 7.08659e-06 meter  EquidistantExact
6test 166 pygeodesy.ellipsoidalVincenty: 35.898741°S, 025.276814°E, 36.304371°S, 012.103406°E  d 249619 meter  Equidistant
6test 167 pygeodesy.ellipsoidalVincenty: 0, 0, ., 5, 7, 1, 3, 3, 2, °, S, ,,  , 0, 0, 2, ., 6, 8, 4, 1, 1, 6, °, W  01.567%, 011.880% of Random
6test 168 pygeodesy.ellipsoidalVincenty: 36.170923°S, 022.744501°E, 17.694284°N, 067.344567°W  d 35885 meter  Spherical
6test 169 pygeodesy.ellipsoidalVincenty: 36.470073°S, 022.592698°E, 17.875272°N, 067.270455°W  d 2.20432e-05 meter  EquidistantExact
6test 170 pygeodesy.ellipsoidalVincenty: 36.167176°S, 022.740502°E, 17.694210°N, 067.436867°W  d 36136.7 meter  Equidistant
6test 171 pygeodesy.ellipsoidalVincenty: 0, 0, ., 3, 0, 2, 8, 9, 7, °, S, ,,  , 0, 0, 0, ., 1, 4, 7, 8, 0, 4, °, W  00.831%, 000.654% of Random
6test 172 pygeodesy.ellipsoidalVincenty: 0, 0, ., 5, 7, 1, 3, 3, 2, °, N, ,,  , 0, 0, 2, ., 6, 8, 4, 1, 1, 6, °, E  01.567%, 011.880% of Random, max

6test 173 Equidistant(10, 80): 1.37704, 0.24656
6test 174 Equidistant(10, 80): 10.0, 80.0
6test 175 Gnomonic(10, 80): 5.67128, 1.01543
6test 176 Gnomonic(10, 80): 10.0, 80.0
6test 177 LambertEqualArea(10, 80): 1.26747, 0.22694
6test 178 LambertEqualArea(10, 80): 10.0, 80.0
6test 179 Orthographic(10, 80): 0.96985, 0.17365
6test 180 Orthographic(10, 80): 10.0, 80.0
6test 181 Stereographic(10, 80): 1.65643, 0.29658
6test 182 Stereographic(10, 80): 10.0, 80.0
6test 183 Equidistant(20, 20): 0.33454, 0.35601
6test 184 Equidistant(20, 20): 20.0, 20.0
6test 185 Gnomonic(20, 20): 0.36397, 0.38733
6test 186 Gnomonic(20, 20): 20.0, 20.0
6test 187 LambertEqualArea(20, 20): 0.33123, 0.35248
6test 188 LambertEqualArea(20, 20): 20.0, 20.0
6test 189 Orthographic(20, 20): 0.32139, 0.34202
6test 190 Orthographic(20, 20): 20.0, 20.0
6test 191 Stereographic(20, 20): 0.34136, 0.36327
6test 192 Stereographic(20, 20): 20.0, 20.0
6test 193 Equidistant(40, 40): 0.57386, 0.74912
6test 194 Equidistant(40, 40): 40.0, 40.0
6test 195 Gnomonic(40, 40): 0.8391, 1.09537
6test 196 Gnomonic(40, 40): 40.0, 40.0
6test 197 LambertEqualArea(40, 40): 0.55281, 0.72164
6test 198 LambertEqualArea(40, 40): 40.0, 40.0
6test 199 Orthographic(40, 40): 0.4924, 0.64279
6test 200 Orthographic(40, 40): 40.0, 40.0
6test 201 Stereographic(40, 40): 0.62062, 0.81016
6test 202 Stereographic(40, 40): 40.0, 40.0
6test 203 Equidistant(60, 60): 0.58948, 1.17896
6test 204 Equidistant(60, 60): 60.0, 60.0
6test 205 Gnomonic(60, 60): 1.73205, 3.4641
6test 206 Gnomonic(60, 60): 60.0, 60.0
6test 207 LambertEqualArea(60, 60): 0.54772, 1.09545
6test 208 LambertEqualArea(60, 60): 60.0, 60.0
6test 209 Orthographic(60, 60): 0.43301, 0.86603
6test 210 Orthographic(60, 60): 60.0, 60.0
6test 211 Stereographic(60, 60): 0.69282, 1.38564
6test 212 Stereographic(60, 60): 60.0, 60.0
6test 213 Equidistant(70, 80): 0.50997, 1.42273
6test 214 Equidistant(70, 80): 70.0, 80.0
6test 215 Gnomonic(70, 80): 5.67128, 15.82209
6test 216 Gnomonic(70, 80): 70.0, 80.0
6test 217 LambertEqualArea(70, 80): 0.4628, 1.29114
6test 218 LambertEqualArea(70, 80): 70.0, 80.0
6test 219 Orthographic(70, 80): 0.33682, 0.93969
6test 220 Orthographic(70, 80): 70.0, 80.0
6test 221 Stereographic(70, 80): 0.63588, 1.77402
6test 222 Stereographic(70, 80): 70.0, 80.0
6test 223 Equidistant(80, 80): 0.26358, 1.51792
6test 224 Equidistant(80, 80): 80.0, 80.0
6test 225 Gnomonic(80, 80): 5.67128, 32.65961
6test 226 Gnomonic(80, 80): 80.0, 80.0
6test 227 LambertEqualArea(80, 80): 0.23828, 1.37219
6test 228 LambertEqualArea(80, 80): 80.0, 80.0
6test 229 Orthographic(80, 80): 0.17101, 0.98481
6test 230 Orthographic(80, 80): 80.0, 80.0
6test 231 Stereographic(80, 80): 0.33201, 1.91196
6test 232 Stereographic(80, 80): 80.0, 80.0
6test 233 Equidistant(80, 10): 0.04281, 1.39829
6test 234 Equidistant(80, 10): 80.0, 10.0
6test 235 Gnomonic(80, 10): 0.17633, 5.75877
6test 236 Gnomonic(80, 10): 80.0, 10.0
6test 237 LambertEqualArea(80, 10): 0.03941, 1.28702
6test 238 LambertEqualArea(80, 10): 80.0, 10.0
6test 239 Orthographic(80, 10): 0.03015, 0.98481
6test 240 Orthographic(80, 10): 80.0, 10.0
6test 241 Stereographic(80, 10): 0.0515, 1.68198
6test 242 Stereographic(80, 10): 80.0, 10.0
6test 243 function: equidistant
6test 244 equatoradius: 1.0
6test 245 flattening: 0.0
6test 246 iteration: None
6test 247 latlon0: (0.0, 0.0)
6test 248 latlon0: (1.0, 2.0)
6test 249 name: coverage
6test 250 radius: 1.0
6test 251 function: gnomonic
6test 252 equatoradius: 1.0
6test 253 flattening: 0.0
6test 254 iteration: None
6test 255 latlon0: (0.0, 0.0)
6test 256 latlon0: (1.0, 2.0)
6test 257 name: coverage
6test 258 radius: 1.0
6test 259 NANing: (NAN, NAN, 0.0, 0.0, 0.0, 1.0, None)
64 of 259 testAzimuthal.py tests (1.5%) FAILED, ALL KNOWN, 14 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 10.148 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testBasics.py
6testing testBasics.py 22.06.24 (module pygeodesy.basics 23.02.17)
6test 1 clips: test/t....ics.py
6test 2 halfs2: ('test/test', 'Basics.py')
6test 3 isfinite(0): True
6test 4 isint(0): True
6test 5 isint(0+0.5): False
6test 6 isninf(0): False
6test 7 isscalar(0): True
6test 8 isfinite(0.0): True
6test 9 isint(0.0): True
6test 10 isint(0.0+0.5): False
6test 11 isninf(0.0): False
6test 12 isscalar(0.0): True
6test 13 isfinite(1): True
6test 14 isint(1): True
6test 15 isint(1+0.5): False
6test 16 isninf(1): False
6test 17 isscalar(1): True
6test 18 isfinite(1.0): True
6test 19 isint(1.0): True
6test 20 isint(1.0+0.5): False
6test 21 isninf(1.0): False
6test 22 isscalar(1.0): True
6test 23 isfinite(1e+300): True
6test 24 isint(1e+300): True
6test 25 isint(1e+300+0.5): True
6test 26 isninf(1e+300): False
6test 27 isscalar(1e+300): True
6test 28 isfinite(-1e+300): True
6test 29 isint(-1e+300): True
6test 30 isint(-1e+300+0.5): True
6test 31 isninf(-1e+300): False
6test 32 isscalar(-1e+300): True
6test 33 isfinite(inf): False
6test 34 isint(inf): False
6test 35 isint(inf+0.5): False
6test 36 isninf(inf): False
6test 37 isscalar(inf): True
6test 38 isfinite(inf): False
6test 39 isint(inf): False
6test 40 isint(inf+0.5): False
6test 41 isninf(inf): False
6test 42 isscalar(inf): True
6test 43 isfinite(nan): False
6test 44 isint(nan): False
6test 45 isint(nan+0.5): False
6test 46 isninf(nan): False
6test 47 isscalar(nan): True
6test 48 isfinite(-0.0): True
6test 49 isint(-0.0): True
6test 50 isint(-0.0+0.5): False
6test 51 isninf(-0.0): False
6test 52 isscalar(-0.0): True
6test 53 isfinite(-inf): False
6test 54 isint(-inf): False
6test 55 isint(-inf+0.5): False
6test 56 isninf(-inf): True
6test 57 isscalar(-inf): True
6test 58 isfinite(complex): True
6test 59 isfinite(complex): False
6test 60 isint0(INT0): True
6test 61 isint0(False): False
6test 62 isint0(None): False
6test 63 isint0(0): True
6test 64 isint0(0.): False
6test 65 isint0(0.0): True
6test 66 isneg0(NEG0): True
6test 67 isneg0(0.0): False
6test 68 isneg0(INF): False
6test 69 isneg0(NAN): False
6test 70 type(C.r_o): property_RO
6test 71 type(c.r_o): <class 'bool'>
6test 72 c.r_o: True
6test 73 c.r_o = False: immutable property_RO: C.r_o = False
6test 74 c.a, c.b: (None, None)
6test 75 d.a, d.b: (True, False)
6test 76 c.a, c.b: (None, None)
6test 77 splice: ((0, 2, 4, 6, 8), (1, 3, 5, 7, 9))
6test 78 splice: ((0, 3, 6, 9), (1, 4, 7), (2, 5, 8))
6test 79 splice: ((0, 3, 6, 9), (1, 4, 7, -1), (2, 5, 8, -1))
6test 80 splice: ((0, 5, 10), (1, 6, 11), (2, 7), (3, 8), (4, 9))

6test 81 remainder(181, 360): -179.0
6test 82 remainder(181, -360): -179.0
6test 83 remainder(181, inf): 181.0
6test 84 remainder(181, nan): nan
6test 85 remainder(181, -inf): 181.0
6test 86 remainder(-181, 360): 179.0
6test 87 remainder(-181, -360): 179.0
6test 88 remainder(-181, inf): -181.0
6test 89 remainder(-181, nan): nan
6test 90 remainder(-181, -inf): -181.0
6test 91 remainder(179, 360): 179.0
6test 92 remainder(179, -360): 179.0
6test 93 remainder(179, inf): 179.0
6test 94 remainder(179, nan): nan
6test 95 remainder(179, -inf): 179.0
6test 96 remainder(-179, 360): -179.0
6test 97 remainder(-179, -360): -179.0
6test 98 remainder(-179, inf): -179.0
6test 99 remainder(-179, nan): nan
6test 100 remainder(-179, -inf): -179.0
6test 101 remainder(inf, 360): math domain error
6test 102 remainder(inf, -360): math domain error
6test 103 remainder(inf, inf): math domain error
6test 104 remainder(inf, nan): nan
6test 105 remainder(inf, -inf): math domain error
6test 106 remainder(nan, 360): nan
6test 107 remainder(nan, -360): nan
6test 108 remainder(nan, inf): nan
6test 109 remainder(nan, nan): nan
6test 110 remainder(nan, -inf): nan
6test 111 remainder(-inf, 360): math domain error
6test 112 remainder(-inf, -360): math domain error
6test 113 remainder(-inf, inf): math domain error
6test 114 remainder(-inf, nan): nan
6test 115 remainder(-inf, -inf): math domain error
6test 116 isclose: True
6test 117 isclose: False
6all 117 testBasics.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 958.920 us

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testBooleans.py
6testing testBooleans.py 23.03.12
6testing(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1 and: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 2 or: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 3 minus: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 4 rev_d: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=10, lon=0, height=1), (lat=10, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=7, lon=5, height=2))
6test 5 iand: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 6 ior: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 7 and: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 8 or: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 9 iand: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 10 ior: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 11 sum: BooleanFHP[2][6]((lat=0, lon=0, height=1), (lat=7, lon=5, height=2), (lat=0, lon=10, height=3), (lat=10, lon=0, height=1), (lat=3, lon=5, height=2), (lat=10, lon=10, height=3))
6test 12 toLatLon[3]: (LatLon(00°00′00.0″N, 000°00′00.0″E, +1.00m), LatLon(07°00′00.0″N, 005°00′00.0″E, +2.00m), LatLon(00°00′00.0″N, 010°00′00.0″E, +3.00m))
6testing(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 13 and: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 14 or: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 15 minus: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 16 rev_d: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=10, lon=0, height=1), (lat=10, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=7, lon=5, height=2))
6test 17 iand: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 18 ior: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 19 and: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 20 or: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 21 iand: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 22 ior: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 23 sum: BooleanFHP[2][6]((lat=0, lon=0, height=1), (lat=7, lon=5, height=2), (lat=0, lon=10, height=3), (lat=10, lon=0, height=1), (lat=3, lon=5, height=2), (lat=10, lon=10, height=3))
6test 24 toLatLon[3]: (LatLon(00°00′00.0″N, 000°00′00.0″E, +1.00m), LatLon(07°00′00.0″N, 005°00′00.0″E, +2.00m), LatLon(00°00′00.0″N, 010°00′00.0″E, +3.00m))
6testing(pygeodesy.sphericalNvector, 23.01.18)
6test 25 and: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 26 or: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 27 minus: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 28 rev_d: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=10, lon=0, height=1), (lat=10, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=7, lon=5, height=2))
6test 29 iand: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 30 ior: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 31 and: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 32 or: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 33 iand: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 34 ior: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 35 sum: BooleanFHP[2][6]((lat=0, lon=0, height=1), (lat=7, lon=5, height=2), (lat=0, lon=10, height=3), (lat=10, lon=0, height=1), (lat=3, lon=5, height=2), (lat=10, lon=10, height=3))
6test 36 toLatLon[3]: (LatLon(00°00′00.0″N, 000°00′00.0″E, +1.00m), LatLon(07°00′00.0″N, 005°00′00.0″E, +2.00m), LatLon(00°00′00.0″N, 010°00′00.0″E, +3.00m))
6testing(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 37 and: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 38 or: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 39 minus: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 40 rev_d: BooleanGH[5]((lat=5, lon=3.5714286, height=1.7142857), (lat=10, lon=0, height=1), (lat=10, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=7, lon=5, height=2))
6test 41 iand: BooleanGH[4]((lat=5, lon=3.5714286, height=1.7142857), (lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2))
6test 42 ior: BooleanGH[6]((lat=5, lon=3.5714286, height=1.7142857), (lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1))
6test 43 and: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 44 or: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 45 iand: BooleanFHP[4]((lat=7, lon=5, height=2), (lat=5, lon=6.4285714, height=2.2857143), (lat=3, lon=5, height=2), (lat=5, lon=3.5714286, height=1.7142857))
6test 46 ior: BooleanFHP[6]((lat=0, lon=0, height=1), (lat=0, lon=10, height=3), (lat=5, lon=6.4285714, height=2.2857143), (lat=10, lon=10, height=3), (lat=10, lon=0, height=1), (lat=5, lon=3.5714286, height=1.7142857))
6test 47 sum: BooleanFHP[2][6]((lat=0, lon=0, height=1), (lat=7, lon=5, height=2), (lat=0, lon=10, height=3), (lat=10, lon=0, height=1), (lat=3, lon=5, height=2), (lat=10, lon=10, height=3))
6test 48 toLatLon[3]: (LatLon(00°00′00.0″N, 000°00′00.0″E, +1.00m), LatLon(07°00′00.0″N, 005°00′00.0″E, +2.00m), LatLon(00°00′00.0″N, 010°00′00.0″E, +3.00m))
6all 48 testBooleans.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 17.421 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testCartesian.py
6testing testCartesian.py 22.05.14
6testCartesian(pygeodesy.sphericalNvector, 23.01.18)
6test 1 Cartesian0: [3980581, 97, 4966825]
6test 2 Cartesian4: [3980581.0, 97.0, 4966825.0]
6test 3 isEllipsoidal: False
6test 4 isSpherical: True
6test 5 copy(Cartesian): (<class 'pygeodesy.sphericalNvector.Cartesian'>, True)
6test 6 Cartesian.copy(): (<class 'pygeodesy.sphericalNvector.Cartesian'>, True)
6test 7 height: -5918.380258
6test 8 height4: (3984282.2, 97.1, 4971443.2, -5918.4)
6test 9 height4: [3984282.2, 97.1, 4971443.2]
6test 10 Nvector: Nvector(0.62538, 0.00002, 0.78032, -5918.38)
6test 11 Nvector3: (0.625, 0.0, 0.78, -5918.38)
6test 12 Nvector6: (0.625377, 0.000015, 0.780323, -5918.38)
6test 13 LatLon: 50.0379°N, 008.5622°E
6test 14 LatLon: 51.47°N, 000.4543°E
6test 15 LatLon: 40.633365°N, 073.783328°W
6test 16 LatLon: 33.95°N, 118.4°W
6test 17 LatLon: 41.32°S, 174.81°E, +0.00m  FAILED, KNOWN, expected 41.32°S, 174.81°E
6test 18 LatLon: 40.96°N, 005.5°E
6test 19 LatLon: 40.1°N, 116.6°E, +0.00m  FAILED, KNOWN, expected 40.1°N, 116.6°E
6test 20 LatLon: 37.6°N, 122.4°W, -0.00m  FAILED, KNOWN, expected 37.6°N, 122.4°W
6test 21 copy: True
6test 22 __eq__: True
6test 23 __ne__: False
6test 24 Cartesian: <class 'pygeodesy.sphericalNvector.Cartesian'>
6test 25 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 26 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 27 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 28 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 29 isequalTo: <class 'bool'>
6test 30 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 31 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 32 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 33 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 34 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 35 toLatLon: <class 'pygeodesy.sphericalNvector.LatLon'>
6test 36 toNvector: <class 'pygeodesy.sphericalNvector.Nvector'>
6test 37 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 38 Cartesian: <class 'pygeodesy.cartesianBase.CartesianBase'>
6test 39 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 40 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 41 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 42 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 43 isequalTo: <class 'bool'>
6test 44 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 45 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 46 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 47 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 48 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 49 toLatLon: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 50 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 51 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 52 sphericalNvector.Cartesian.intersections2: 37.673442°N, 090.234036°W
6test 53 sphericalNvector.Cartesian.intersections2: 36.109987°N, 090.95367°W
6test 54 sphericalNvector.Cartesian.intersections2: [-0.032779, -0.784769, 0.61892]
6test 55 sphericalNvector.Cartesian.intersections2: 38.237342°N, 092.391779°W
6test 56 sphericalNvector.Cartesian.intersections2: [0.025768, -0.798347, 0.601646]
6test 57 sphericalNvector.Cartesian.intersections2: 36.987868°N, 088.151309°W
62 tests skipped (2): No module named 'numpy': required by vector2d._numpy
6test 58 vector3d.intersections2: (-0.0035, -0.791926, 0.610589)
6test 59 vector3d.intersections2: 0.0312613
6test 60 vector3d.intersections2: (-0.021973, -0.766467, 0.0)
6test 61 vector3d.intersections2: (0.027459, -0.797488, 0.0)
6testCartesian(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 62 Cartesian0: [3980581, 97, 4966825]
6test 63 Cartesian4: [3980581.0, 97.0, 4966825.0]
6test 64 isEllipsoidal: False
6test 65 isSpherical: True
6test 66 copy(Cartesian): (<class 'pygeodesy.sphericalTrigonometry.Cartesian'>, True)
6test 67 Cartesian.copy(): (<class 'pygeodesy.sphericalTrigonometry.Cartesian'>, True)
6test 68 height: -5918.380258
6test 69 height4: (3984282.2, 97.1, 4971443.2, -5918.4)
6test 70 height4: [3984282.2, 97.1, 4971443.2]
6test 71 Vector4Tuple: 0.625376979018, 1.52393750974e-05, 0.780322775447, -5918.38025833
6test 72 LatLon: 50.0379°N, 008.5622°E
6test 73 LatLon: 51.47°N, 000.4543°E
6test 74 LatLon: 40.633365°N, 073.783328°W
6test 75 LatLon: 33.95°N, 118.4°W
6test 76 LatLon: 41.32°S, 174.81°E, +0.00m  FAILED, KNOWN, expected 41.32°S, 174.81°E
6test 77 LatLon: 40.96°N, 005.5°E
6test 78 LatLon: 40.1°N, 116.6°E, +0.00m  FAILED, KNOWN, expected 40.1°N, 116.6°E
6test 79 LatLon: 37.6°N, 122.4°W, -0.00m  FAILED, KNOWN, expected 37.6°N, 122.4°W
6test 80 copy: True
6test 81 __eq__: True
6test 82 __ne__: False
6test 83 Cartesian: <class 'pygeodesy.sphericalTrigonometry.Cartesian'>
6test 84 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 85 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 86 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 87 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 88 isequalTo: <class 'bool'>
6test 89 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 90 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 91 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 92 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 93 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 94 toLatLon: <class 'pygeodesy.sphericalTrigonometry.LatLon'>
6test 95 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 96 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 97 Cartesian: <class 'pygeodesy.cartesianBase.CartesianBase'>
6test 98 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 99 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 100 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 101 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 102 isequalTo: <class 'bool'>
6test 103 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 104 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 105 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 106 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 107 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 108 toLatLon: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 109 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 110 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 111 sphericalTrigonometry.Cartesian.intersections2: 37.673442°N, 090.234036°W
6test 112 sphericalTrigonometry.Cartesian.intersections2: 36.109987°N, 090.95367°W
6test 113 sphericalTrigonometry.Cartesian.intersections2: [-0.032779, -0.784769, 0.61892]
6test 114 sphericalTrigonometry.Cartesian.intersections2: 38.237342°N, 092.391779°W
6test 115 sphericalTrigonometry.Cartesian.intersections2: [0.025768, -0.798347, 0.601646]
6test 116 sphericalTrigonometry.Cartesian.intersections2: 36.987868°N, 088.151309°W
62 tests skipped (4): No module named 'numpy': required by vector2d._numpy
6test 117 vector3d.intersections2: (-0.0035, -0.791926, 0.610589)
6test 118 vector3d.intersections2: 0.0312613
6test 119 vector3d.intersections2: (-0.021973, -0.766467, 0.0)
6test 120 vector3d.intersections2: (0.027459, -0.797488, 0.0)
6testCartesian(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 121 Cartesian0: [3980581, 97, 4966825]
6test 122 Cartesian4: [3980581.0, 97.0, 4966825.0]
6test 123 isEllipsoidal: True
6test 124 isSpherical: False
6test 125 copy(Cartesian): (<class 'pygeodesy.ellipsoidalNvector.Cartesian'>, True)
6test 126 Cartesian.copy(): (<class 'pygeodesy.ellipsoidalNvector.Cartesian'>, True)
6test 127 convertDatum: [3980581.0, 97.0, 4966825.0]
6test 128 __matmul__: [3980580.124, 107.691, 4966819.407]
6test 129 __matmul__: [3980580.124, 107.691, 4966819.407]
6test 130 __matmul__: [3980580.998, 97.0, 4966824.998]
6test 131 height: 0.242887
6test 132 height4: (3980580.8, 97.0, 4966824.8, 0.2)
6test 133 height4: [3980580.8, 97.0, 4966824.8]
6test 134 Nvector: Nvector(0.62282, 0.00002, 0.78237, +0.24)
6test 135 Nvector3: (0.623, 0.0, 0.782, +0.24)
6test 136 Nvector6: (0.622818, 0.000015, 0.782367, +0.24)
6test 137 LatLon: 50.0379°N, 008.5622°E, +0.00m  FAILED, KNOWN, expected 50.0379°N, 008.5622°E
6test 138 LatLon: 51.47°N, 000.4543°E
6test 139 LatLon: 40.633365°N, 073.783328°W, +0.00m  FAILED, KNOWN, expected 40.633365°N, 073.783328°W
6test 140 LatLon: 33.95°N, 118.4°W
6test 141 LatLon: 41.32°S, 174.81°E, +0.00m  FAILED, KNOWN, expected 41.32°S, 174.81°E
6test 142 LatLon: 40.96°N, 005.5°E, -0.00m  FAILED, KNOWN, expected 40.96°N, 005.5°E
6test 143 LatLon: 40.1°N, 116.6°E, -0.00m  FAILED, KNOWN, expected 40.1°N, 116.6°E
6test 144 LatLon: 37.6°N, 122.4°W, +0.00m  FAILED, KNOWN, expected 37.6°N, 122.4°W
6test 145 copy: True
6test 146 __eq__: True
6test 147 __ne__: False
6test 148 Cartesian: <class 'pygeodesy.ellipsoidalNvector.Cartesian'>
6test 149 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 150 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 151 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 152 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 153 isequalTo: <class 'bool'>
6test 154 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 155 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 156 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 157 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 158 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 159 toLatLon: <class 'pygeodesy.ellipsoidalNvector.LatLon'>
6test 160 toNvector: <class 'pygeodesy.ellipsoidalNvector.Nvector'>
6test 161 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 162 Cartesian: <class 'pygeodesy.cartesianBase.CartesianBase'>
6test 163 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 164 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 165 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 166 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 167 isequalTo: <class 'bool'>
6test 168 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 169 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 170 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 171 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 172 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 173 toLatLon: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 174 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 175 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 176 ellipsoidalNvector.Cartesian.intersections2: 89.998941°N, 090.234036°W
6test 177 ellipsoidalNvector.Cartesian.intersections2: 89.99892°N, 090.95367°W
6test 178 ellipsoidalNvector.Cartesian.intersections2: [-0.0035, -0.791926, 0.610589]
6test 179 ellipsoidalNvector.Cartesian.intersections2: 89.998941°N, 090.253237°W
6test 180 ellipsoidalNvector.Cartesian.intersections2: 0.0312613
6test 181 vector3d.intersections2: (-0.0035, -0.791926, 0.610589)
6test 182 vector3d.intersections2: 0.0312613
6test 183 vector3d.intersections2: (-0.021973, -0.766467, 0.0)
6test 184 vector3d.intersections2: (0.027459, -0.797488, 0.0)
6testCartesian(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 185 Cartesian0: [3980581, 97, 4966825]
6test 186 Cartesian4: [3980581.0, 97.0, 4966825.0]
6test 187 isEllipsoidal: True
6test 188 isSpherical: False
6test 189 copy(Cartesian): (<class 'pygeodesy.ellipsoidalVincenty.Cartesian'>, True)
6test 190 Cartesian.copy(): (<class 'pygeodesy.ellipsoidalVincenty.Cartesian'>, True)
6test 191 convertDatum: [3980581.0, 97.0, 4966825.0]
6test 192 __matmul__: [3980580.124, 107.691, 4966819.407]
6test 193 __matmul__: [3980580.124, 107.691, 4966819.407]
6test 194 __matmul__: [3980580.998, 97.0, 4966824.998]
6test 195 height: 0.242887
6test 196 height4: (3980580.8, 97.0, 4966824.8, 0.2)
6test 197 height4: [3980580.8, 97.0, 4966824.8]
6test 198 Vector4Tuple: 0.622817764745, 1.51770113911e-05, 0.782366941842, 0.242886808051
6test 199 LatLon: 50.0379°N, 008.5622°E, +0.00m  FAILED, KNOWN, expected 50.0379°N, 008.5622°E
6test 200 LatLon: 51.47°N, 000.4543°E
6test 201 LatLon: 40.633365°N, 073.783328°W, +0.00m  FAILED, KNOWN, expected 40.633365°N, 073.783328°W
6test 202 LatLon: 33.95°N, 118.4°W
6test 203 LatLon: 41.32°S, 174.81°E, +0.00m  FAILED, KNOWN, expected 41.32°S, 174.81°E
6test 204 LatLon: 40.96°N, 005.5°E, -0.00m  FAILED, KNOWN, expected 40.96°N, 005.5°E
6test 205 LatLon: 40.1°N, 116.6°E, -0.00m  FAILED, KNOWN, expected 40.1°N, 116.6°E
6test 206 LatLon: 37.6°N, 122.4°W, +0.00m  FAILED, KNOWN, expected 37.6°N, 122.4°W
6test 207 copy: True
6test 208 __eq__: True
6test 209 __ne__: False
6test 210 Cartesian: <class 'pygeodesy.ellipsoidalVincenty.Cartesian'>
6test 211 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 212 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 213 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 214 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 215 isequalTo: <class 'bool'>
6test 216 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 217 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 218 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 219 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 220 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 221 toLatLon: <class 'pygeodesy.ellipsoidalVincenty.LatLon'>
6test 222 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 223 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 224 Cartesian: <class 'pygeodesy.cartesianBase.CartesianBase'>
6test 225 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 226 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 227 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 228 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 229 isequalTo: <class 'bool'>
6test 230 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 231 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 232 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 233 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 234 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 235 toLatLon: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 236 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 237 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 238 ellipsoidalVincenty.Cartesian.intersections2: 89.998941°N, 090.234036°W
6test 239 ellipsoidalVincenty.Cartesian.intersections2: 89.99892°N, 090.95367°W
6test 240 ellipsoidalVincenty.Cartesian.intersections2: [-0.0035, -0.791926, 0.610589]
6test 241 ellipsoidalVincenty.Cartesian.intersections2: 89.998941°N, 090.253237°W
6test 242 ellipsoidalVincenty.Cartesian.intersections2: 0.0312613
6test 243 vector3d.intersections2: (-0.0035, -0.791926, 0.610589)
6test 244 vector3d.intersections2: 0.0312613
6test 245 vector3d.intersections2: (-0.021973, -0.766467, 0.0)
6test 246 vector3d.intersections2: (0.027459, -0.797488, 0.0)
6testCartesian(pygeodesy.ellipsoidalExact, 22.07.07)
6test 247 Cartesian0: [3980581, 97, 4966825]
6test 248 Cartesian4: [3980581.0, 97.0, 4966825.0]
6test 249 isEllipsoidal: True
6test 250 isSpherical: False
6test 251 copy(Cartesian): (<class 'pygeodesy.ellipsoidalExact.Cartesian'>, True)
6test 252 Cartesian.copy(): (<class 'pygeodesy.ellipsoidalExact.Cartesian'>, True)
6test 253 convertDatum: [3980581.0, 97.0, 4966825.0]
6test 254 __matmul__: [3980580.124, 107.691, 4966819.407]
6test 255 __matmul__: [3980580.124, 107.691, 4966819.407]
6test 256 __matmul__: [3980580.998, 97.0, 4966824.998]
6test 257 height: 0.242887
6test 258 height4: (3980580.8, 97.0, 4966824.8, 0.2)
6test 259 height4: [3980580.8, 97.0, 4966824.8]
6test 260 Vector4Tuple: 0.622817764745, 1.51770113911e-05, 0.782366941842, 0.242886808051
6test 261 LatLon: 50.0379°N, 008.5622°E, +0.00m  FAILED, KNOWN, expected 50.0379°N, 008.5622°E
6test 262 LatLon: 51.47°N, 000.4543°E
6test 263 LatLon: 40.633365°N, 073.783328°W
6test 264 LatLon: 33.95°N, 118.4°W, +0.00m  FAILED, KNOWN, expected 33.95°N, 118.4°W
6test 265 LatLon: 41.32°S, 174.81°E
6test 266 LatLon: 40.96°N, 005.5°E
6test 267 LatLon: 40.1°N, 116.6°E
6test 268 LatLon: 37.6°N, 122.4°W, +0.00m  FAILED, KNOWN, expected 37.6°N, 122.4°W
6test 269 copy: True
6test 270 __eq__: True
6test 271 __ne__: False
6test 272 Cartesian: <class 'pygeodesy.ellipsoidalExact.Cartesian'>
6test 273 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 274 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 275 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 276 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 277 isequalTo: <class 'bool'>
6test 278 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 279 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 280 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 281 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 282 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 283 toLatLon: <class 'pygeodesy.ellipsoidalExact.LatLon'>
6test 284 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 285 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 286 Cartesian: <class 'pygeodesy.cartesianBase.CartesianBase'>
6test 287 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 288 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 289 latlonheightdatum: <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 290 height4: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 291 isequalTo: <class 'bool'>
6test 292 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 293 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 294 philamheightdatum: <class 'pygeodesy.namedTuples.PhiLam4Tuple'>
6test 295 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 296 toEcef: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 297 toLatLon: <class 'pygeodesy.ecef.Ecef9Tuple'>
6test 298 toNvector: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 299 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 300 ellipsoidalExact.Cartesian.intersections2: 89.998941°N, 090.234036°W
6test 301 ellipsoidalExact.Cartesian.intersections2: 89.99892°N, 090.95367°W
6test 302 ellipsoidalExact.Cartesian.intersections2: [-0.0035, -0.791926, 0.610589]
6test 303 ellipsoidalExact.Cartesian.intersections2: 89.998941°N, 090.253237°W
6test 304 ellipsoidalExact.Cartesian.intersections2: 0.0312613
6test 305 vector3d.intersections2: (-0.0035, -0.791926, 0.610589)
6test 306 vector3d.intersections2: 0.0312613
6test 307 vector3d.intersections2: (-0.021973, -0.766467, 0.0)
6test 308 vector3d.intersections2: (0.027459, -0.797488, 0.0)
621 of 308 testCartesian.py tests (6.8%) FAILED, ALL KNOWN, 4 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 20.303 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testClasses.py
6testing testClasses.py 22.09.02
6testCartesianAttrs(22.09.02)
6test 1 angleTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 2 apply() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 3 attrs() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 4 bearing() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 5 cassini() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 6 circin6() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 7 circum3() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 8 circum4_() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 9 classname Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 10 classnaming _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 11 classof() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 12 cmp() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 13 collins() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 14 collins5() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 15 convertDatum() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 16 convertRefFrame() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 17 copy() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 18 cross() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 19 crosserrors _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 20 datum _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 21 destinationXyz() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 22 dividedBy() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 23 dot() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 24 dup() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 25 Ecef Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 26 equals() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 27 equirectangular() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 28 euclid Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 29 hartzell() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 30 height Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 31 height4() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 32 intermediateTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 33 intersections2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 34 iscolinearWith() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 35 isconjugateTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 36 isEllipsoidal Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 37 isequalTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 38 isSpherical Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 39 iteration property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 40 latlon Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 41 latlonheight Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 42 latlonheightdatum Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 43 length Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 44 length2 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 45 meeus2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 46 methodname() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 47 minus() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 48 minus_() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 49 name _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 50 named Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 51 named2 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 52 named3 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 53 named4 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 54 nearestOn() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 55 nearestOn6() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 56 negate() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 57 others() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 58 parse() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 59 philam Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 60 philamheight Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 61 philamheightdatum Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 62 pierlot() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 63 plus() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 64 plus_() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 65 radii11() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 66 reframe _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 67 rename() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 68 rotate() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 69 rotateAround() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 70 soddy4() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 71 sum() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 72 tienstra() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 73 tienstra7() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 74 times() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 75 times_() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 76 to2ab() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 77 to2ll() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 78 to3llh() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 79 to3xyz() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 80 toDatum() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 81 toEcef() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 82 toLatLon() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 83 toLocal() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 84 toLtp() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 85 toNvector() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 86 toRefFrame() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 87 toRepr() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 88 toStr() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 89 toStr2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 90 toTransform() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 91 toTransforms_() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 92 toVector() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 93 trilaterate2d2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 94 trilaterate3d2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 95 unit() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 96 x Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 97 x2y2z2 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 98 xyz Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 99 y Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 100 z Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6testCartesianMro(22.09.02)
6test 101 pygeodesy.sphericalNvector: pygeodesy.sphericalNvector.Cartesian, pygeodesy.sphericalBase.CartesianSphericalBase, pygeodesy.cartesianBase.CartesianBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 102 pygeodesy.sphericalTrigonometry: pygeodesy.sphericalTrigonometry.Cartesian, pygeodesy.sphericalBase.CartesianSphericalBase, pygeodesy.cartesianBase.CartesianBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 103 pygeodesy.ellipsoidalNvector: pygeodesy.ellipsoidalNvector.Cartesian, pygeodesy.ellipsoidalBase.CartesianEllipsoidalBase, pygeodesy.cartesianBase.CartesianBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 104 pygeodesy.ellipsoidalVincenty: pygeodesy.ellipsoidalVincenty.Cartesian, pygeodesy.ellipsoidalBase.CartesianEllipsoidalBase, pygeodesy.cartesianBase.CartesianBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 105 pygeodesy.ellipsoidalKarney: pygeodesy.ellipsoidalKarney.Cartesian, pygeodesy.ellipsoidalBase.CartesianEllipsoidalBase, pygeodesy.cartesianBase.CartesianBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 106 pygeodesy.ellipsoidalExact: pygeodesy.ellipsoidalExact.Cartesian, pygeodesy.ellipsoidalBase.CartesianEllipsoidalBase, pygeodesy.cartesianBase.CartesianBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6testLatLonAttrs(22.09.02)
6test 107 alongTrackDistanceTo() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 108 antipode() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 109 attrs() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 110 bearingTo() method: pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 111 bearingTo2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 112 bounds() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 113 boundsOf() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 114 chordTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 115 circin6() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 116 circum3() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 117 circum4_() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 118 classname Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 119 classnaming _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 120 classof() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 121 clipid property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 122 compassAngle() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 123 compassAngleTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 124 convergence _Deprecated_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 125 convertDatum() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 126 convertRefFrame() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 127 copy() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 128 cosineAndoyerLambertTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 129 cosineForsytheAndoyerLambertTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 130 cosineLawTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 131 crossingParallels() method: pygeodesy.sphericalTrigonometry
6test 132 crossTrackDistanceTo() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 133 datum _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 134 deltaTo() method: pygeodesy.ellipsoidalNvector
6test 135 destination() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 136 destination2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty
6test 137 destinationNed() method: pygeodesy.ellipsoidalNvector
6test 138 destinationXyz() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 139 distanceTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 140 distanceTo2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 141 distanceTo3() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty
6test 142 dup() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 143 Ecef Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 144 elevation2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 145 ellipsoid() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 146 ellipsoids() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 147 epoch _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 148 epsilon _NamedProperty: pygeodesy.ellipsoidalVincenty
6test 149 equals() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 150 equals3() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 151 Equidistant Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 152 equirectangularTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 153 euclideanTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 154 finalBearingOn() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty
6test 155 finalBearingTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 156 flatLocalTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 157 flatPolarTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 158 gamma property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 159 geodesic Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty
6test 160 geodesicx Property_RO: pygeodesy.ellipsoidalExact
6test 161 geoidHeight2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 162 greatCircle() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 163 greatCircleTo() method: pygeodesy.sphericalNvector
6test 164 hartzell() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 165 haversineTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 166 height Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 167 height4() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 168 heightStr() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 169 hubenyTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 170 initialBearingTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 171 intermediateChordTo() method: pygeodesy.sphericalNvector
6test 172 intermediateTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 173 intersecant2() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 174 intersection() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 175 intersection3() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 176 intersections2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 177 isantipode() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 178 isantipodeTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 179 isEllipsoidal Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 180 isEllipsoidalLatLon Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 181 isEnclosedBy() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 182 isenclosedBy() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 183 isequalTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 184 isequalTo3() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 185 isnormal Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 186 isSpherical Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 187 isWithin() method: pygeodesy.sphericalNvector
6test 188 iswithin() method: pygeodesy.sphericalNvector
6test 189 iteration property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 190 iterations _NamedProperty: pygeodesy.ellipsoidalVincenty
6test 191 lam Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 192 lat Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 193 latlon Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 194 latlon2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 195 latlon2round() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 196 latlon_() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 197 latlonheight Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 198 lon Property: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 199 maxLat() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 200 methodname() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 201 midpointTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 202 minLat() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 203 name _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 204 named Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 205 named2 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 206 named3 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 207 named4 Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 208 nearestOn() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 209 nearestOn2() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 210 nearestOn3() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 211 nearestOn6() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 212 nearestOn8() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalVincenty
6test 213 normal() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 214 others() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 215 parse() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 216 phi Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 217 philam Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 218 philam2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 219 philamheight Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 220 points() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 221 points2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 222 PointsIter() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 223 radii11() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 224 reframe _NamedProperty: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 225 rename() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 226 rhumbAzimuthTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 227 rhumbBearingTo() method: pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 228 rhumbDestination() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 229 rhumbDistanceTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 230 rhumbLine() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 231 rhumbMidpointTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 232 scale Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 233 thomasTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 234 to2ab() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 235 to3llh() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 236 to3xyz() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 237 toCartesian() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 238 toCss() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 239 toDatum() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 240 toEcef() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 241 toEtm() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 242 toLcc() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 243 toLocal() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 244 toLtp() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 245 toMgrs() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 246 toNvector() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 247 toOsgr() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 248 toRefFrame() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 249 toRepr() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 250 toStr() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 251 toStr2() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 252 toUps() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 253 toUtm() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 254 toUtmUps() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty
6test 255 toVector() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 256 toVector3d() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 257 toWm() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 258 triangle7() method: pygeodesy.sphericalTrigonometry
6test 259 triangulate() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 260 trilaterate() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 261 trilaterate5() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 262 vincentysTo() method: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 263 xyz Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6test 264 xyzh Property_RO: pygeodesy.ellipsoidalExact, pygeodesy.ellipsoidalKarney, pygeodesy.ellipsoidalNvector, pygeodesy.ellipsoidalVincenty, pygeodesy.sphericalNvector, pygeodesy.sphericalTrigonometry
6testLatLonMro(22.09.02)
6test 265 pygeodesy.sphericalNvector: pygeodesy.sphericalNvector.LatLon, pygeodesy.nvectorBase.LatLonNvectorBase, pygeodesy.sphericalBase.LatLonSphericalBase, pygeodesy.latlonBase.LatLonBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 266 pygeodesy.sphericalTrigonometry: pygeodesy.sphericalTrigonometry.LatLon, pygeodesy.sphericalBase.LatLonSphericalBase, pygeodesy.latlonBase.LatLonBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 267 pygeodesy.ellipsoidalNvector: pygeodesy.ellipsoidalNvector.LatLon, pygeodesy.nvectorBase.LatLonNvectorBase, pygeodesy.ellipsoidalBase.LatLonEllipsoidalBase, pygeodesy.latlonBase.LatLonBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 268 pygeodesy.ellipsoidalVincenty: pygeodesy.ellipsoidalVincenty.LatLon, pygeodesy.ellipsoidalBaseDI.LatLonEllipsoidalBaseDI, pygeodesy.ellipsoidalBase.LatLonEllipsoidalBase, pygeodesy.latlonBase.LatLonBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 269 pygeodesy.ellipsoidalKarney: pygeodesy.ellipsoidalKarney.LatLon, pygeodesy.ellipsoidalBaseDI.LatLonEllipsoidalBaseDI, pygeodesy.ellipsoidalBase.LatLonEllipsoidalBase, pygeodesy.latlonBase.LatLonBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 270 pygeodesy.ellipsoidalExact: pygeodesy.ellipsoidalExact.LatLon, pygeodesy.ellipsoidalBaseDI.LatLonEllipsoidalBaseDI, pygeodesy.ellipsoidalBase.LatLonEllipsoidalBase, pygeodesy.latlonBase.LatLonBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6testNvectorAttrs(22.09.02)
6test 271 angleTo() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 272 apply() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 273 attrs() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 274 bearing() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 275 circin6() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 276 circum3() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 277 circum4_() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 278 classname Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 279 classnaming _NamedProperty: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 280 classof() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 281 cmp() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 282 copy() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 283 cross() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 284 crosserrors _NamedProperty: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 285 datum Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 286 dividedBy() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 287 dot() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 288 dup() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 289 Ecef Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 290 equals() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 291 equirectangular() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 292 euclid Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 293 greatCircle() method: pygeodesy.sphericalNvector
6test 294 H _NamedProperty: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 295 h _NamedProperty: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 296 hStr() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 297 intermediateTo() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 298 iscolinearWith() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 299 isconjugateTo() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 300 isEllipsoidal Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 301 isequalTo() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 302 isSpherical Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 303 iteration property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 304 lam Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 305 lat Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 306 latlon Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 307 latlonheight Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 308 latlonheightdatum Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 309 length Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 310 length2 Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 311 lon Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 312 meeus2() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 313 methodname() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 314 minus() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 315 minus_() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 316 name _NamedProperty: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 317 named Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 318 named2 Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 319 named3 Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 320 named4 Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 321 nearestOn() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 322 nearestOn6() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 323 negate() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 324 others() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 325 parse() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 326 phi Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 327 philam Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 328 philamheight Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 329 philamheightdatum Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 330 plus() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 331 plus_() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 332 radii11() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 333 rename() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 334 rotate() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 335 rotateAround() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 336 soddy4() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 337 sum() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 338 times() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 339 times_() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 340 to2ab() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 341 to2ll() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 342 to3abh() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 343 to3llh() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 344 to3xyz() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 345 to4xyzh() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 346 toCartesian() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 347 toLatLon() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 348 toRepr() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 349 toStr() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 350 toStr2() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 351 toVector3d() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 352 trilaterate2d2() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 353 trilaterate3d2() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 354 unit() method: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 355 x Property: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 356 x2y2z2 Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 357 xyz Property: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 358 xyzh Property_RO: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 359 y Property: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6test 360 z Property: pygeodesy.ellipsoidalNvector, pygeodesy.sphericalNvector
6testNvectorMro(22.09.02)
6test 361 pygeodesy.sphericalNvector: pygeodesy.sphericalNvector.Nvector, pygeodesy.nvectorBase.NvectorBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 362 pygeodesy.ellipsoidalNvector: pygeodesy.ellipsoidalNvector.Nvector, pygeodesy.nvectorBase.NvectorBase, pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6testVector3dAttrs(22.09.02)
6test 363 angleTo() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 364 apply() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 365 attrs() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 366 bearing() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 367 circin6() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 368 circum3() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 369 circum4_() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 370 classname Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 371 classnaming _NamedProperty: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 372 classof() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 373 cmp() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 374 copy() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 375 cross() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 376 crosserrors _NamedProperty: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 377 dividedBy() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 378 dot() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 379 dup() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 380 equals() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 381 equirectangular() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 382 euclid Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 383 intermediateTo() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 384 iscolinearWith() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 385 isconjugateTo() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 386 isequalTo() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 387 iteration property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 388 length Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 389 length2 Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 390 meeus2() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 391 methodname() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 392 minus() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 393 minus_() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 394 name _NamedProperty: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 395 named Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 396 named2 Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 397 named3 Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 398 named4 Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 399 nearestOn() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 400 nearestOn6() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 401 negate() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 402 others() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 403 parse() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 404 plus() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 405 plus_() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 406 radii11() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 407 rename() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 408 rotate() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 409 rotateAround() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 410 soddy4() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 411 sum() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 412 times() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 413 times_() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 414 to3xyz() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 415 toRepr() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 416 toStr() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 417 toStr2() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 418 trilaterate2d2() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 419 trilaterate3d2() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 420 unit() method: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 421 x Property: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 422 x2y2z2 Property_RO: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 423 xyz Property: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 424 y Property: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6test 425 z Property: pygeodesy.nvectorBase, pygeodesy.sphericalTrigonometry, pygeodesy.vector3d
6testVector3dMro(22.09.02)
6test 426 pygeodesy.nvectorBase: pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 427 pygeodesy.vector3d: pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6test 428 pygeodesy.sphericalTrigonometry: pygeodesy.vector3d.Vector3d, pygeodesy.vector3dBase.Vector3dBase, pygeodesy.named._NamedBase, pygeodesy.named._Named
6testCopyAttr(22.09.02)
6test 429 Aer: copy
6test 430 Aer4Tuple: copy
6test 431 Albers7Tuple: copy
6test 432 AlbersEqualArea: copy
6test 433 AlbersEqualArea2: copy
6test 434 AlbersEqualArea4: copy
6test 435 AlbersEqualAreaCylindrical: copy
6test 436 AlbersEqualAreaNorth: copy
6test 437 AlbersEqualAreaSouth: copy
6test 438 Area3Tuple: copy
6test 439 Attitude: copy
6test 440 Attitude4Tuple: copy
6test 441 Azimuthal7Tuple: copy
6test 442 Band: copy
6test 443 Bearing: copy
6test 444 Bearing2Tuple: copy
6test 445 Bearing_: copy
6test 446 BetaOmega2Tuple: copy
6test 447 BetaOmega3Tuple: copy
6test 448 Bool: copy
6test 449 BooleanFHP: copy
6test 450 BooleanGH: copy
6test 451 Bounds2Tuple: copy
6test 452 Bounds4Tuple: copy
6test 453 CassiniSoldner: copy
6test 454 ChLV: copy
6test 455 ChLV9Tuple: copy
6test 456 ChLVEN2Tuple: copy
6test 457 ChLVYX2Tuple: copy
6test 458 ChLVa: copy
6test 459 ChLVe: copy
6test 460 ChLVyx2Tuple: copy
6test 461 Circin6Tuple: copy
6test 462 Circle4Tuple: copy
6test 463 Circum3Tuple: copy
6test 464 Circum4Tuple: copy
6test 465 ClipCS3Tuple: copy
6test 466 ClipCS4Tuple: copy
6test 467 ClipFHP4Tuple: copy
6test 468 ClipGH4Tuple: copy
6test 469 ClipLB6Tuple: copy
6test 470 ClipSH3Tuple: copy
6test 471 Collins5Tuple: copy
6test 472 Conic: copy
6test 473 Css: copy
6test 474 Curvature2Tuple: copy
6test 475 Datum: copy
6test 476 Degrees: copy
6test 477 Degrees2: copy
6test 478 Degrees_: copy
6test 479 Destination2Tuple: copy
6test 480 Destination3Tuple: copy
6test 481 Direct9Tuple: copy
6test 482 Distance: copy
6test 483 Distance2Tuple: copy
6test 484 Distance3Tuple: copy
6test 485 Distance4Tuple: copy
6test 486 Distance_: copy
6test 487 EasNor2Tuple: copy
6test 488 EasNor3Tuple: copy
6test 489 EasNorAziRk4Tuple: copy
6test 490 EasNorAziRkEqu6Tuple: copy
6test 491 EasNorExact4Tuple: copy
6test 492 EasNorRadius3Tuple: copy
6test 493 Easting: copy
6test 494 Ecef9Tuple: copy
6test 495 EcefFarrell21: copy
6test 496 EcefFarrell22: copy
6test 497 EcefKarney: copy
6test 498 EcefMatrix: copy
6test 499 EcefSudano: copy
6test 500 EcefVeness: copy
6test 501 EcefYou: copy
6test 502 Elevation2Tuple: copy
6test 503 Ellipsoid: copy
6test 504 Ellipsoid2: copy
6test 505 Elliptic: copy
6test 506 Elliptic3Tuple: copy
6test 507 Enu: copy
6test 508 Enu4Tuple: copy
6test 509 Epoch: copy
6test 510 Epsg: copy
6test 511 Equidistant: copy
6test 512 EquidistantExact: copy
6test 513 EquidistantGeodSolve: copy
6test 514 EquidistantKarney: copy
6test 515 Etm: copy
6test 516 ExactTransverseMercator: copy
6test 517 FIx: copy
6test 518 Fcbrt: copy
6test 519 Fcook: copy
6test 520 Fdot: copy
6test 521 Feet: copy
6test 522 Fhorner: copy
6test 523 Fhypot: copy
6test 524 Flinear: copy
6test 525 Float: copy
6test 526 Float_: copy
6test 527 Fn_rt: copy
6test 528 Footprint5Tuple: copy
6test 529 Forward4Tuple: copy
6test 530 Fpolynomial: copy
6test 531 Fpowers: copy
6test 532 Frechet: copy
6test 533 Frechet6Tuple: copy
6test 534 FrechetCosineAndoyerLambert: copy
6test 535 FrechetCosineForsytheAndoyerLambert: copy
6test 536 FrechetCosineLaw: copy
6test 537 FrechetDegrees: copy
6test 538 FrechetDistanceTo: copy
6test 539 FrechetEquirectangular: copy
6test 540 FrechetEuclidean: copy
6test 541 FrechetExact: copy
6test 542 FrechetFlatLocal: copy
6test 543 FrechetFlatPolar: copy
6test 544 FrechetHaversine: copy
6test 545 FrechetHubeny: copy
6test 546 FrechetKarney: copy
6test 547 FrechetRadians: copy
6test 548 FrechetThomas: copy
6test 549 FrechetVincentys: copy
6test 550 Frustum: copy
6test 551 Fsqrt: copy
6test 552 Fsum: copy
6test 553 Fsum2Tuple: copy
6test 554 Fwelford: copy
6test 555 GDict: copy
6test 556 Garef: copy
6test 557 GeodSolve12Tuple: copy
6test 558 GeodesicAreaExact: copy
6test 559 GeodesicExact: copy
6test 560 GeodesicLineExact: copy
6test 561 GeodesicLineSolve: copy
6test 562 GeodesicSolve: copy
6test 563 Geohash: copy
6test 564 GeoidG2012B: copy
6test 565 GeoidHeight2Tuple: copy
6test 566 GeoidHeight5Tuple: copy
6test 567 GeoidKarney: copy
6test 568 GeoidPGM: copy
6test 569 Georef: copy
6test 570 Gnomonic: copy
6test 571 GnomonicExact: copy
6test 572 GnomonicGeodSolve: copy
6test 573 GnomonicKarney: copy
6test 574 Hausdorff: copy
6test 575 Hausdorff6Tuple: copy
6test 576 HausdorffCosineAndoyerLambert: copy
6test 577 HausdorffCosineForsytheAndoyerLambert: copy
6test 578 HausdorffCosineLaw: copy
6test 579 HausdorffDegrees: copy
6test 580 HausdorffDistanceTo: copy
6test 581 HausdorffEquirectangular: copy
6test 582 HausdorffEuclidean: copy
6test 583 HausdorffExact: copy
6test 584 HausdorffFlatLocal: copy
6test 585 HausdorffFlatPolar: copy
6test 586 HausdorffHaversine: copy
6test 587 HausdorffHubeny: copy
6test 588 HausdorffKarney: copy
6test 589 HausdorffRadians: copy
6test 590 HausdorffThomas: copy
6test 591 HausdorffVincentys: copy
6test 592 Height: copy
6test 593 HeightCubic: copy
6test 594 HeightIDWcosineAndoyerLambert: copy
6test 595 HeightIDWcosineForsytheAndoyerLambert: copy
6test 596 HeightIDWcosineLaw: copy
6test 597 HeightIDWdistanceTo: copy
6test 598 HeightIDWequirectangular: copy
6test 599 HeightIDWeuclidean: copy
6test 600 HeightIDWflatLocal: copy
6test 601 HeightIDWflatPolar: copy
6test 602 HeightIDWhaversine: copy
6test 603 HeightIDWhubeny: copy
6test 604 HeightIDWkarney: copy
6test 605 HeightIDWthomas: copy
6test 606 HeightIDWvincentys: copy
6test 607 HeightLSQBiSpline: copy
6test 608 HeightLinear: copy
6test 609 HeightSmoothBiSpline: copy
6test 610 HeightX: copy
6test 611 Height_: copy
6test 612 Helmert7Tuple: copy
6test 613 Int: copy
6test 614 Int_: copy
6test 615 Intersection3Tuple: copy
6test 616 Inverse10Tuple: copy
6test 617 Jacobi2Tuple: copy
6test 618 JacobiConformal: copy
6test 619 KTransverseMercator: copy
6test 620 Lam: copy
6test 621 Lam_: copy
6test 622 LambertEqualArea: copy
6test 623 Lat: copy
6test 624 LatLon2PsxyIter: copy
6test 625 LatLon2Tuple: copy
6test 626 LatLon2psxy: copy
6test 627 LatLon3Tuple: copy
6test 628 LatLon4Tuple: copy
6test 629 LatLonAziRk4Tuple: copy
6test 630 LatLonDatum3Tuple: copy
6test 631 LatLonDatum5Tuple: copy
6test 632 LatLonExact4Tuple: copy
6test 633 LatLonFHP: copy
6test 634 LatLonGH: copy
6test 635 LatLonPrec3Tuple: copy
6test 636 LatLonPrec5Tuple: copy
6test 637 LatLon_: copy
6test 638 Lat_: copy
6test 639 Lcc: copy
6test 640 Local9Tuple: copy
6test 641 LocalCartesian: copy
6test 642 Lon: copy
6test 643 Lon_: copy
6test 644 Ltp: copy
6test 645 Meeus2Tuple: copy
6test 646 Meter: copy
6test 647 Meter2: copy
6test 648 Meter3: copy
6test 649 Meter_: copy
6test 650 Mgrs: copy
6test 651 Mgrs4Tuple: copy
6test 652 Mgrs6Tuple: copy
6test 653 NearestOn2Tuple: copy
6test 654 NearestOn3Tuple: copy
6test 655 NearestOn4Tuple: copy
6test 656 NearestOn5Tuple: copy
6test 657 NearestOn6Tuple: copy
6test 658 NearestOn8Tuple: copy
6test 659 Ned: copy
6test 660 Ned3Tuple: copy
6test 661 Ned4Tuple: copy
6test 662 Neighbors8Dict: copy
6test 663 Northing: copy
6test 664 Number_: copy
6test 665 Numpy2LatLon: copy
6test 666 Orthographic: copy
6test 667 Osgr: copy
6test 668 Phi: copy
6test 669 PhiLam2Tuple: copy
6test 670 PhiLam3Tuple: copy
6test 671 PhiLam4Tuple: copy
6test 672 Phi_: copy
6test 673 Point3Tuple: copy
6test 674 Points2Tuple: copy
6test 675 PointsIter: copy
6test 676 PolygonArea: copy
6test 677 Precision_: copy
6test 678 Radians: copy
6test 679 Radians2: copy
6test 680 Radians_: copy
6test 681 Radical2Tuple: copy
6test 682 Radii11Tuple: copy
6test 683 Radius: copy
6test 684 Radius_: copy
6test 685 RefFrame: copy
6test 686 Resolutions2Tuple: copy
6test 687 Reverse4Tuple: copy
6test 688 Rhumb: copy
6test 689 Rhumb7Tuple: copy
6test 690 Rhumb8Tuple: copy
6test 691 RhumbLine: copy
6test 692 RhumbLineSolve: copy
6test 693 RhumbOrder2Tuple: copy
6test 694 RhumbSolve: copy
6test 695 RhumbSolve7Tuple: copy
6test 696 Scalar: copy
6test 697 Scalar_: copy
6test 698 Shape2Tuple: copy
6test 699 Soddy4Tuple: copy
6test 700 Stereographic: copy
6test 701 Str: copy
6test 702 Survey3Tuple: copy
6test 703 Tienstra7Tuple: copy
6test 704 Transform: copy
6test 705 Transform7Tuple: copy
6test 706 TriAngle4Tuple: copy
6test 707 TriSide2Tuple: copy
6test 708 TriSide4Tuple: copy
6test 709 Triangle7Tuple: copy
6test 710 Triangle8Tuple: copy
6test 711 Triaxial: copy
6test 712 Triaxial_: copy
6test 713 Trilaterate5Tuple: copy
6test 714 Tuple2LatLon: copy
6test 715 Ups: copy
6test 716 Utm: copy
6test 717 UtmUps2Tuple: copy
6test 718 UtmUps4Tuple: copy
6test 719 UtmUps5Tuple: copy
6test 720 UtmUps8Tuple: copy
6test 721 UtmUpsLatLon5Tuple: copy
6test 722 Vector2Tuple: copy
6test 723 Vector3Tuple: copy
6test 724 Vector3d: copy
6test 725 Vector4Tuple: copy
6test 726 Wm: copy
6test 727 Xyz4Tuple: copy
6test 728 XyzLocal: copy
6test 729 Zone: copy
6test 730 a_f2Tuple: copy
6all 730 testClasses.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 8.431 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testClipy.py
6testing testClipy.py 23.03.10
6testing(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1 clipCS4.p1: 07.5°N, 010.0°E
6test 2 clipCS4.p2: 04.5°N, 000.0°E
6test 3 clipCS4.i: 3
6test 4 clipCS4.j: 0
6test 5 clipCS4.p1: 05.0°N, 005.0°E
6test 6 clipCS4.p2: 05.0°N, 005.0°E
6test 7 clipCS4.i: 1
6test 8 clipCS4.j: 2
6test 9 clipLB6.p1: 07.5°N, 010.0°E
6test 10 clipLB6.p2: 04.5°N, 000.0°E
6test 11 clipLB6.i: 3
6test 12 clipLB6.fi: 3.25
6test 13 clipLB6.fi: 07.5°N, 010.0°E
6test 14 clipLB6.fj: 3.75
6test 15 clipLB6.fj: 04.5°N, 000.0°E
6test 16 clipLB6.j: 0
6test 17 clipLB6.fin: 4
6test 18 clipLB6.p1: 05.0°N, 005.0°E
6test 19 clipLB6.p2: 05.0°N, 005.0°E
6test 20 clipLB6.i: 1
6test 21 clipLB6.fi: 1.00
6test 22 clipLB6.fi: 05.0°N, 005.0°E
6test 23 clipLB6.fj: 2.00
6test 24 clipLB6.fj: 05.0°N, 005.0°E
6test 25 clipLB6.j: 2
6test 26 clipLB6.fin: 4
6test 27 clipCS4.p1: 60.0°N, 123.333333°E
6test 28 clipCS4.p2: 62.857143°N, 130.0°E
6test 29 clipCS4.i: 0
6test 30 clipCS4.j: 1
6test 31 clipLB6.p1: 60.0°N, 123.333333°E
6test 32 clipLB6.p2: 62.857143°N, 130.0°E
6test 33 clipLB6.i: 0
6test 34 clipLB6.fi: 0.666667
6test 35 clipLB6.fi: 60.0°N, 123.333333°E
6test 36 clipLB6.fj: 0.714286
6test 37 clipLB6.fj: 62.857143°N, 130.0°E
6test 38 clipLB6.j: 1
6test 39 clipLB6.fin: 0
6test 40 clipCS4.p1: 17.5°N, 020.0°E
6test 41 clipCS4.p2: 16.25°N, 015.0°E
6test 42 clipCS4.i: 2
6test 43 clipCS4.j: 0
6test 44 clipLB6.p1: 17.5°N, 020.0°E
6test 45 clipLB6.p2: 16.25°N, 015.0°E
6test 46 clipLB6.i: 2
6test 47 clipLB6.fi: 2.500
6test 48 clipLB6.fi: 17.5°N, 020.0°E
6test 49 clipLB6.fj: 2.750
6test 50 clipLB6.fj: 16.25°N, 015.0°E
6test 51 clipLB6.j: 0
6test 52 clipLB6.fin: 3
6test 53 clipSH1.len: 4
6test 54 clipSH1.0: 20.0°N, 020.0°E
6test 55 clipSH1.LL: True
6test 56 clipSH1.1: 17.5°N, 020.0°E
6test 57 clipSH1.LL: True
6test 58 clipSH1.2: 16.25°N, 015.0°E
6test 59 clipSH1.LL: True
6test 60 clipSH1.3: 20.0°N, 015.0°E
6test 61 clipSH1.LL: True
6test 62 clipSH2.len: 5
6test 63 clipSH2.0: 18.571°N, 024.286°E
6test 64 clipSH2.LL: True
6test 65 clipSH2.1: 16.667°N, 016.667°E
6test 66 clipSH2.LL: True
6test 67 clipSH2.2: 20.0°N, 015.0°E
6test 68 clipSH2.LL: True
6test 69 clipSH2.3: 25.0°N, 020.0°E
6test 70 clipSH2.LL: True
6test 71 clipSH2.4: 22.0°N, 026.0°E
6test 72 clipSH2.LL: True
6test 73 clipSH3.len: 2
6test 74 clipSH3.0: 18.571°N, 024.286°E
6test 75 clipSH3.LL: True
6test 76 clipSH3.1: 16.667°N, 016.667°E
6test 77 clipSH3.LL: True
6test 78 clipSH3.edge.: True
6test 79 clipSH3.len: 2
6test 80 clipSH3.0: 16.667°N, 016.667°E
6test 81 clipSH3.LL: True
6test 82 clipSH3.1: 20.0°N, 015.0°E
6test 83 clipSH3.LL: True
6test 84 clipSH3.edge.: False
6test 85 clipSH3.len: 2
6test 86 clipSH3.0: 20.0°N, 015.0°E
6test 87 clipSH3.LL: True
6test 88 clipSH3.1: 25.0°N, 020.0°E
6test 89 clipSH3.LL: True
6test 90 clipSH3.edge.: True
6test 91 clipSH3.len: 2
6test 92 clipSH3.0: 25.0°N, 020.0°E
6test 93 clipSH3.LL: True
6test 94 clipSH3.1: 22.0°N, 026.0°E
6test 95 clipSH3.LL: True
6test 96 clipSH3.edge.: True
6test 97 clipSH3.len: 2
6test 98 clipSH3.0: 22.0°N, 026.0°E
6test 99 clipSH3.LL: True
6test 100 clipSH3.1: 18.571°N, 024.286°E
6test 101 clipSH3.LL: True
6test 102 clipSH3.edge.: False
6test 103 clipSH2.reversed.len: 5
6test 104 clipSH2.reversed.0: 18.571°N, 024.286°E
6test 105 clipSH2.reversed.LL: True
6test 106 clipSH2.reversed.1: 16.667°N, 016.667°E
6test 107 clipSH2.reversed.LL: True
6test 108 clipSH2.reversed.2: 20.0°N, 015.0°E
6test 109 clipSH2.reversed.LL: True
6test 110 clipSH2.reversed.3: 25.0°N, 020.0°E
6test 111 clipSH2.reversed.LL: True
6test 112 clipSH2.reversed.4: 22.0°N, 026.0°E
6test 113 clipSH2.reversed.LL: True
6test 114 clipSH3.reversed.len: 2
6test 115 clipSH3.reversed.0: 18.571°N, 024.286°E
6test 116 clipSH3.reversed.LL: True
6test 117 clipSH3.reversed.1: 16.667°N, 016.667°E
6test 118 clipSH3.reversed.LL: True
6test 119 clipSH3.edge.reversed.: True
6test 120 clipSH3.reversed.len: 2
6test 121 clipSH3.reversed.0: 16.667°N, 016.667°E
6test 122 clipSH3.reversed.LL: True
6test 123 clipSH3.reversed.1: 20.0°N, 015.0°E
6test 124 clipSH3.reversed.LL: True
6test 125 clipSH3.edge.reversed.: False
6test 126 clipSH3.reversed.len: 2
6test 127 clipSH3.reversed.0: 20.0°N, 015.0°E
6test 128 clipSH3.reversed.LL: True
6test 129 clipSH3.reversed.1: 25.0°N, 020.0°E
6test 130 clipSH3.reversed.LL: True
6test 131 clipSH3.edge.reversed.: True
6test 132 clipSH3.reversed.len: 2
6test 133 clipSH3.reversed.0: 25.0°N, 020.0°E
6test 134 clipSH3.reversed.LL: True
6test 135 clipSH3.reversed.1: 22.0°N, 026.0°E
6test 136 clipSH3.reversed.LL: True
6test 137 clipSH3.edge.reversed.: True
6test 138 clipSH3.reversed.len: 2
6test 139 clipSH3.reversed.0: 22.0°N, 026.0°E
6test 140 clipSH3.reversed.LL: True
6test 141 clipSH3.reversed.1: 18.571°N, 024.286°E
6test 142 clipSH3.reversed.LL: True
6test 143 clipSH3.edge.reversed.: False
6test 144 clipSH.allout: ()
6test 145 clipSH3.allout: ()
6test 146 clipSH.allout.reversed: ()
6test 147 clipSH3.allout.reversed: ()
6test 148 clipSH.allin.len: 4
6test 149 clipSH.allin.0: 20.0°N, 030.0°E
6test 150 clipSH.allin.LL: True
6test 151 clipSH.allin.1: 15.0°N, 010.0°E
6test 152 clipSH.allin.LL: True
6test 153 clipSH.allin.2: 25.0°N, 020.0°E
6test 154 clipSH.allin.LL: True
6test 155 clipSH.allin.3: 20.0°N, 030.0°E
6test 156 clipSH.allin.LL: True
6test 157 clipSH3.allin.len: 2
6test 158 clipSH3.allin.0: 20.0°N, 030.0°E
6test 159 clipSH3.allin.LL: True
6test 160 clipSH3.allin.1: 15.0°N, 010.0°E
6test 161 clipSH3.allin.LL: True
6test 162 clipSH3.edge.: True
6test 163 clipSH3.allin.len: 2
6test 164 clipSH3.allin.0: 15.0°N, 010.0°E
6test 165 clipSH3.allin.LL: True
6test 166 clipSH3.allin.1: 25.0°N, 020.0°E
6test 167 clipSH3.allin.LL: True
6test 168 clipSH3.edge.: True
6test 169 clipSH.allin.reversed.len: 4
6test 170 clipSH.allin.reversed.0: 20.0°N, 030.0°E
6test 171 clipSH.allin.reversed.LL: True
6test 172 clipSH.allin.reversed.1: 15.0°N, 010.0°E
6test 173 clipSH.allin.reversed.LL: True
6test 174 clipSH.allin.reversed.2: 25.0°N, 020.0°E
6test 175 clipSH.allin.reversed.LL: True
6test 176 clipSH.allin.reversed.3: 20.0°N, 030.0°E
6test 177 clipSH.allin.reversed.LL: True
6test 178 clipSH3.allin.reversed.len: 2
6test 179 clipSH3.allin.reversed.0: 20.0°N, 030.0°E
6test 180 clipSH3.allin.reversed.LL: True
6test 181 clipSH3.allin.reversed.1: 15.0°N, 010.0°E
6test 182 clipSH3.allin.reversed.LL: True
6test 183 clipSH3.edge.reversed.: True
6test 184 clipSH3.allin.reversed.len: 2
6test 185 clipSH3.allin.reversed.0: 15.0°N, 010.0°E
6test 186 clipSH3.allin.reversed.LL: True
6test 187 clipSH3.allin.reversed.1: 25.0°N, 020.0°E
6test 188 clipSH3.allin.reversed.LL: True
6test 189 clipSH3.edge.reversed.: True
6test 190 clipSH.warped: clipSH clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 191 clipSH3.warped: clipSH3 clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 192 clipSH.warpedreversed.: clipSH clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 193 clipSH3.warpedreversed.: clipSH3 clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 194 boundsOf: (10.0, 10.0, 20.0, 20.0)
6test 195 boundsOf: (15.0, 10.0, 25.0, 30.0)
6test 196 enclosures: (5.0, 0.0, -5.0, -10.0)
6test 197 overlap: (15.0, 10.0, 20.0, 20.0)
6test 198 clipSH4: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 199 clipSH5: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 200 clipSH6: 1.0, 0.5, 2.0, 1.0, 2.0, 0.5
6test 201 clipSH7: -0.2, 2.0, 0.2, 2.0, 0.5, 0.5, 2.0, 0.2, 2.0, -0.2, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -2.0, -0.2, -2.0, 0.2, -0.5, 0.5
6test 202 clipSH8: -0.33, 1.33, 0.0, 2.0, 0.33, 1.33, 0.5, 0.5, 0.78, 0.44, 1.18, -0.36, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -1.18, -0.36, -0.78, 0.44, -0.5, 0.5
6test 203 clipSH9: None
6test 204 clipSH10: None
6test 205 clipSH11: None
6test 206 clipSH12: None
6test 207 clipGH4: (ClipGH4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0), ClipGH4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipGH4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipGH4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0))
6test 208 clipFHP4: (ClipFHP4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipFHP4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0))
6test 209 Fig 8: (ClipFHP4Tuple(lat=4.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=-1.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=3.0, lon=8.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=5.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=1.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=11.0, height=0.0, clipid=0))
6test 210 Fig 14: (ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=6.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=6.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=9.0, lon=3.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=6.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=1))
6test 211 Fig 15: (ClipFHP4Tuple(lat=1.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=1.0, lon=1.0, height=0.0, clipid=1))
6test 212 Fig 16: (ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=1.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=2.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=2.0, height=0.0, clipid=0))
6test 213 Fig 18: ((-10, -10, 0), (-10, -2, 0), (-8, -2, 0), (-8, -8, 0), (-2, -8, 0), (-2, -10, 0), (2, -10, 1), (2, -8, 1), (0, -8, 1), (0, -10, 1), (10, -6, 2), (8, -6, 2), (8, -8, 2), (10, -8, 2), (10, 8, 3), (8, 8, 3), (8, 6, 3), (10, 6, 3), (-6, 10, 4), (-6, 8, 4), (-4, 8, 4), (-4, 10, 4), (-10, 10, 5), (-10, 8, 5), (-8, 8, 5), (-8, 10, 5), (-10, 4, 6), (-8, 4, 6), (-8, 6, 6), (-10, 6, 6), (-10, 0, 7), (-8, 0, 7), (-8, 2, 7), (-10, 2, 7), (-6, 6, 8), (-4, 6, 8), (-4, 4, 8), (-6, 4, 8), (-6, 0, 9), (-4, 0, 9), (-4, 2, 9), (-6, 2, 9), (-6, -6, 10), (-2, -6, 10), (-2, -4, 10), (-4, -4, 10), (-4, -2, 10), (-6, -2, 10), (2, -6, 11), (2, -4, 11), (0, -4, 11), (0, -6, 11), (12, 8, 12), (20, 8, 12), (20, -8, 12), (12, -8, 12), (12, -6, 12), (18, -6, 12), (18, 6, 12), (12, 6, 12), (12, -4, 13), (14, -4, 13), (14, 4, 13), (12, 4, 13))
6testing(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 214 clipCS4.p1: 07.5°N, 010.0°E
6test 215 clipCS4.p2: 04.5°N, 000.0°E
6test 216 clipCS4.i: 3
6test 217 clipCS4.j: 0
6test 218 clipCS4.p1: 05.0°N, 005.0°E
6test 219 clipCS4.p2: 05.0°N, 005.0°E
6test 220 clipCS4.i: 1
6test 221 clipCS4.j: 2
6test 222 clipLB6.p1: 07.5°N, 010.0°E
6test 223 clipLB6.p2: 04.5°N, 000.0°E
6test 224 clipLB6.i: 3
6test 225 clipLB6.fi: 3.25
6test 226 clipLB6.fi: 07.5°N, 010.0°E
6test 227 clipLB6.fj: 3.75
6test 228 clipLB6.fj: 04.5°N, 000.0°E
6test 229 clipLB6.j: 0
6test 230 clipLB6.fin: 4
6test 231 clipLB6.p1: 05.0°N, 005.0°E
6test 232 clipLB6.p2: 05.0°N, 005.0°E
6test 233 clipLB6.i: 1
6test 234 clipLB6.fi: 1.00
6test 235 clipLB6.fi: 05.0°N, 005.0°E
6test 236 clipLB6.fj: 2.00
6test 237 clipLB6.fj: 05.0°N, 005.0°E
6test 238 clipLB6.j: 2
6test 239 clipLB6.fin: 4
6test 240 clipCS4.p1: 60.0°N, 123.333333°E
6test 241 clipCS4.p2: 62.857143°N, 130.0°E
6test 242 clipCS4.i: 0
6test 243 clipCS4.j: 1
6test 244 clipLB6.p1: 60.0°N, 123.333333°E
6test 245 clipLB6.p2: 62.857143°N, 130.0°E
6test 246 clipLB6.i: 0
6test 247 clipLB6.fi: 0.666667
6test 248 clipLB6.fi: 60.0°N, 123.333333°E
6test 249 clipLB6.fj: 0.714286
6test 250 clipLB6.fj: 62.857143°N, 130.0°E
6test 251 clipLB6.j: 1
6test 252 clipLB6.fin: 0
6test 253 clipCS4.p1: 17.5°N, 020.0°E
6test 254 clipCS4.p2: 16.25°N, 015.0°E
6test 255 clipCS4.i: 2
6test 256 clipCS4.j: 0
6test 257 clipLB6.p1: 17.5°N, 020.0°E
6test 258 clipLB6.p2: 16.25°N, 015.0°E
6test 259 clipLB6.i: 2
6test 260 clipLB6.fi: 2.500
6test 261 clipLB6.fi: 17.5°N, 020.0°E
6test 262 clipLB6.fj: 2.750
6test 263 clipLB6.fj: 16.25°N, 015.0°E
6test 264 clipLB6.j: 0
6test 265 clipLB6.fin: 3
6test 266 clipSH1.len: 4
6test 267 clipSH1.0: 20.0°N, 020.0°E
6test 268 clipSH1.LL: True
6test 269 clipSH1.1: 17.5°N, 020.0°E
6test 270 clipSH1.LL: True
6test 271 clipSH1.2: 16.25°N, 015.0°E
6test 272 clipSH1.LL: True
6test 273 clipSH1.3: 20.0°N, 015.0°E
6test 274 clipSH1.LL: True
6test 275 clipSH2.len: 5
6test 276 clipSH2.0: 18.571°N, 024.286°E
6test 277 clipSH2.LL: True
6test 278 clipSH2.1: 16.667°N, 016.667°E
6test 279 clipSH2.LL: True
6test 280 clipSH2.2: 20.0°N, 015.0°E
6test 281 clipSH2.LL: True
6test 282 clipSH2.3: 25.0°N, 020.0°E
6test 283 clipSH2.LL: True
6test 284 clipSH2.4: 22.0°N, 026.0°E
6test 285 clipSH2.LL: True
6test 286 clipSH3.len: 2
6test 287 clipSH3.0: 18.571°N, 024.286°E
6test 288 clipSH3.LL: True
6test 289 clipSH3.1: 16.667°N, 016.667°E
6test 290 clipSH3.LL: True
6test 291 clipSH3.edge.: True
6test 292 clipSH3.len: 2
6test 293 clipSH3.0: 16.667°N, 016.667°E
6test 294 clipSH3.LL: True
6test 295 clipSH3.1: 20.0°N, 015.0°E
6test 296 clipSH3.LL: True
6test 297 clipSH3.edge.: False
6test 298 clipSH3.len: 2
6test 299 clipSH3.0: 20.0°N, 015.0°E
6test 300 clipSH3.LL: True
6test 301 clipSH3.1: 25.0°N, 020.0°E
6test 302 clipSH3.LL: True
6test 303 clipSH3.edge.: True
6test 304 clipSH3.len: 2
6test 305 clipSH3.0: 25.0°N, 020.0°E
6test 306 clipSH3.LL: True
6test 307 clipSH3.1: 22.0°N, 026.0°E
6test 308 clipSH3.LL: True
6test 309 clipSH3.edge.: True
6test 310 clipSH3.len: 2
6test 311 clipSH3.0: 22.0°N, 026.0°E
6test 312 clipSH3.LL: True
6test 313 clipSH3.1: 18.571°N, 024.286°E
6test 314 clipSH3.LL: True
6test 315 clipSH3.edge.: False
6test 316 clipSH2.reversed.len: 5
6test 317 clipSH2.reversed.0: 18.571°N, 024.286°E
6test 318 clipSH2.reversed.LL: True
6test 319 clipSH2.reversed.1: 16.667°N, 016.667°E
6test 320 clipSH2.reversed.LL: True
6test 321 clipSH2.reversed.2: 20.0°N, 015.0°E
6test 322 clipSH2.reversed.LL: True
6test 323 clipSH2.reversed.3: 25.0°N, 020.0°E
6test 324 clipSH2.reversed.LL: True
6test 325 clipSH2.reversed.4: 22.0°N, 026.0°E
6test 326 clipSH2.reversed.LL: True
6test 327 clipSH3.reversed.len: 2
6test 328 clipSH3.reversed.0: 18.571°N, 024.286°E
6test 329 clipSH3.reversed.LL: True
6test 330 clipSH3.reversed.1: 16.667°N, 016.667°E
6test 331 clipSH3.reversed.LL: True
6test 332 clipSH3.edge.reversed.: True
6test 333 clipSH3.reversed.len: 2
6test 334 clipSH3.reversed.0: 16.667°N, 016.667°E
6test 335 clipSH3.reversed.LL: True
6test 336 clipSH3.reversed.1: 20.0°N, 015.0°E
6test 337 clipSH3.reversed.LL: True
6test 338 clipSH3.edge.reversed.: False
6test 339 clipSH3.reversed.len: 2
6test 340 clipSH3.reversed.0: 20.0°N, 015.0°E
6test 341 clipSH3.reversed.LL: True
6test 342 clipSH3.reversed.1: 25.0°N, 020.0°E
6test 343 clipSH3.reversed.LL: True
6test 344 clipSH3.edge.reversed.: True
6test 345 clipSH3.reversed.len: 2
6test 346 clipSH3.reversed.0: 25.0°N, 020.0°E
6test 347 clipSH3.reversed.LL: True
6test 348 clipSH3.reversed.1: 22.0°N, 026.0°E
6test 349 clipSH3.reversed.LL: True
6test 350 clipSH3.edge.reversed.: True
6test 351 clipSH3.reversed.len: 2
6test 352 clipSH3.reversed.0: 22.0°N, 026.0°E
6test 353 clipSH3.reversed.LL: True
6test 354 clipSH3.reversed.1: 18.571°N, 024.286°E
6test 355 clipSH3.reversed.LL: True
6test 356 clipSH3.edge.reversed.: False
6test 357 clipSH.allout: ()
6test 358 clipSH3.allout: ()
6test 359 clipSH.allout.reversed: ()
6test 360 clipSH3.allout.reversed: ()
6test 361 clipSH.allin.len: 4
6test 362 clipSH.allin.0: 20.0°N, 030.0°E
6test 363 clipSH.allin.LL: True
6test 364 clipSH.allin.1: 15.0°N, 010.0°E
6test 365 clipSH.allin.LL: True
6test 366 clipSH.allin.2: 25.0°N, 020.0°E
6test 367 clipSH.allin.LL: True
6test 368 clipSH.allin.3: 20.0°N, 030.0°E
6test 369 clipSH.allin.LL: True
6test 370 clipSH3.allin.len: 2
6test 371 clipSH3.allin.0: 20.0°N, 030.0°E
6test 372 clipSH3.allin.LL: True
6test 373 clipSH3.allin.1: 15.0°N, 010.0°E
6test 374 clipSH3.allin.LL: True
6test 375 clipSH3.edge.: True
6test 376 clipSH3.allin.len: 2
6test 377 clipSH3.allin.0: 15.0°N, 010.0°E
6test 378 clipSH3.allin.LL: True
6test 379 clipSH3.allin.1: 25.0°N, 020.0°E
6test 380 clipSH3.allin.LL: True
6test 381 clipSH3.edge.: True
6test 382 clipSH.allin.reversed.len: 4
6test 383 clipSH.allin.reversed.0: 20.0°N, 030.0°E
6test 384 clipSH.allin.reversed.LL: True
6test 385 clipSH.allin.reversed.1: 15.0°N, 010.0°E
6test 386 clipSH.allin.reversed.LL: True
6test 387 clipSH.allin.reversed.2: 25.0°N, 020.0°E
6test 388 clipSH.allin.reversed.LL: True
6test 389 clipSH.allin.reversed.3: 20.0°N, 030.0°E
6test 390 clipSH.allin.reversed.LL: True
6test 391 clipSH3.allin.reversed.len: 2
6test 392 clipSH3.allin.reversed.0: 20.0°N, 030.0°E
6test 393 clipSH3.allin.reversed.LL: True
6test 394 clipSH3.allin.reversed.1: 15.0°N, 010.0°E
6test 395 clipSH3.allin.reversed.LL: True
6test 396 clipSH3.edge.reversed.: True
6test 397 clipSH3.allin.reversed.len: 2
6test 398 clipSH3.allin.reversed.0: 15.0°N, 010.0°E
6test 399 clipSH3.allin.reversed.LL: True
6test 400 clipSH3.allin.reversed.1: 25.0°N, 020.0°E
6test 401 clipSH3.allin.reversed.LL: True
6test 402 clipSH3.edge.reversed.: True
6test 403 clipSH.warped: clipSH clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 404 clipSH3.warped: clipSH3 clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 405 clipSH.warpedreversed.: clipSH clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 406 clipSH3.warpedreversed.: clipSH3 clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 407 boundsOf: (10.0, 10.0, 20.0, 20.0)
6test 408 boundsOf: (15.0, 10.0, 25.0, 30.0)
6test 409 enclosures: (5.0, 0.0, -5.0, -10.0)
6test 410 overlap: (15.0, 10.0, 20.0, 20.0)
6test 411 clipSH4: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 412 clipSH5: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 413 clipSH6: 1.0, 0.5, 2.0, 1.0, 2.0, 0.5
6test 414 clipSH7: -0.2, 2.0, 0.2, 2.0, 0.5, 0.5, 2.0, 0.2, 2.0, -0.2, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -2.0, -0.2, -2.0, 0.2, -0.5, 0.5
6test 415 clipSH8: -0.33, 1.33, 0.0, 2.0, 0.33, 1.33, 0.5, 0.5, 0.78, 0.44, 1.18, -0.36, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -1.18, -0.36, -0.78, 0.44, -0.5, 0.5
6test 416 clipSH9: None
6test 417 clipSH10: None
6test 418 clipSH11: None
6test 419 clipSH12: None
6test 420 clipGH4: (ClipGH4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0), ClipGH4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipGH4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipGH4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0))
6test 421 clipFHP4: (ClipFHP4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipFHP4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0))
6test 422 Fig 8: (ClipFHP4Tuple(lat=4.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=-1.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=3.0, lon=8.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=5.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=1.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=11.0, height=0.0, clipid=0))
6test 423 Fig 14: (ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=6.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=6.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=9.0, lon=3.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=6.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=1))
6test 424 Fig 15: (ClipFHP4Tuple(lat=1.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=1.0, lon=1.0, height=0.0, clipid=1))
6test 425 Fig 16: (ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=1.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=2.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=2.0, height=0.0, clipid=0))
6test 426 Fig 18: ((-10, -10, 0), (-10, -2, 0), (-8, -2, 0), (-8, -8, 0), (-2, -8, 0), (-2, -10, 0), (2, -10, 1), (2, -8, 1), (0, -8, 1), (0, -10, 1), (10, -6, 2), (8, -6, 2), (8, -8, 2), (10, -8, 2), (10, 8, 3), (8, 8, 3), (8, 6, 3), (10, 6, 3), (-6, 10, 4), (-6, 8, 4), (-4, 8, 4), (-4, 10, 4), (-10, 10, 5), (-10, 8, 5), (-8, 8, 5), (-8, 10, 5), (-10, 4, 6), (-8, 4, 6), (-8, 6, 6), (-10, 6, 6), (-10, 0, 7), (-8, 0, 7), (-8, 2, 7), (-10, 2, 7), (-6, 6, 8), (-4, 6, 8), (-4, 4, 8), (-6, 4, 8), (-6, 0, 9), (-4, 0, 9), (-4, 2, 9), (-6, 2, 9), (-6, -6, 10), (-2, -6, 10), (-2, -4, 10), (-4, -4, 10), (-4, -2, 10), (-6, -2, 10), (2, -6, 11), (2, -4, 11), (0, -4, 11), (0, -6, 11), (12, 8, 12), (20, 8, 12), (20, -8, 12), (12, -8, 12), (12, -6, 12), (18, -6, 12), (18, 6, 12), (12, 6, 12), (12, -4, 13), (14, -4, 13), (14, 4, 13), (12, 4, 13))
6testing(pygeodesy.sphericalNvector, 23.01.18)
6test 427 clipCS4.p1: 07.5°N, 010.0°E
6test 428 clipCS4.p2: 04.5°N, 000.0°E
6test 429 clipCS4.i: 3
6test 430 clipCS4.j: 0
6test 431 clipCS4.p1: 05.0°N, 005.0°E
6test 432 clipCS4.p2: 05.0°N, 005.0°E
6test 433 clipCS4.i: 1
6test 434 clipCS4.j: 2
6test 435 clipLB6.p1: 07.5°N, 010.0°E
6test 436 clipLB6.p2: 04.5°N, 000.0°E
6test 437 clipLB6.i: 3
6test 438 clipLB6.fi: 3.25
6test 439 clipLB6.fi: 07.5°N, 010.0°E
6test 440 clipLB6.fj: 3.75
6test 441 clipLB6.fj: 04.5°N, 000.0°E
6test 442 clipLB6.j: 0
6test 443 clipLB6.fin: 4
6test 444 clipLB6.p1: 05.0°N, 005.0°E
6test 445 clipLB6.p2: 05.0°N, 005.0°E
6test 446 clipLB6.i: 1
6test 447 clipLB6.fi: 1.00
6test 448 clipLB6.fi: 05.0°N, 005.0°E
6test 449 clipLB6.fj: 2.00
6test 450 clipLB6.fj: 05.0°N, 005.0°E
6test 451 clipLB6.j: 2
6test 452 clipLB6.fin: 4
6test 453 clipCS4.p1: 60.0°N, 123.333333°E
6test 454 clipCS4.p2: 62.857143°N, 130.0°E
6test 455 clipCS4.i: 0
6test 456 clipCS4.j: 1
6test 457 clipLB6.p1: 60.0°N, 123.333333°E
6test 458 clipLB6.p2: 62.857143°N, 130.0°E
6test 459 clipLB6.i: 0
6test 460 clipLB6.fi: 0.666667
6test 461 clipLB6.fi: 60.0°N, 123.333333°E
6test 462 clipLB6.fj: 0.714286
6test 463 clipLB6.fj: 62.857143°N, 130.0°E
6test 464 clipLB6.j: 1
6test 465 clipLB6.fin: 0
6test 466 clipCS4.p1: 17.5°N, 020.0°E
6test 467 clipCS4.p2: 16.25°N, 015.0°E
6test 468 clipCS4.i: 2
6test 469 clipCS4.j: 0
6test 470 clipLB6.p1: 17.5°N, 020.0°E
6test 471 clipLB6.p2: 16.25°N, 015.0°E
6test 472 clipLB6.i: 2
6test 473 clipLB6.fi: 2.500
6test 474 clipLB6.fi: 17.5°N, 020.0°E
6test 475 clipLB6.fj: 2.750
6test 476 clipLB6.fj: 16.25°N, 015.0°E
6test 477 clipLB6.j: 0
6test 478 clipLB6.fin: 3
6test 479 clipSH1.len: 4
6test 480 clipSH1.0: 20.0°N, 020.0°E
6test 481 clipSH1.LL: True
6test 482 clipSH1.1: 17.5°N, 020.0°E
6test 483 clipSH1.LL: True
6test 484 clipSH1.2: 16.25°N, 015.0°E
6test 485 clipSH1.LL: True
6test 486 clipSH1.3: 20.0°N, 015.0°E
6test 487 clipSH1.LL: True
6test 488 clipSH2.len: 5
6test 489 clipSH2.0: 18.571°N, 024.286°E
6test 490 clipSH2.LL: True
6test 491 clipSH2.1: 16.667°N, 016.667°E
6test 492 clipSH2.LL: True
6test 493 clipSH2.2: 20.0°N, 015.0°E
6test 494 clipSH2.LL: True
6test 495 clipSH2.3: 25.0°N, 020.0°E
6test 496 clipSH2.LL: True
6test 497 clipSH2.4: 22.0°N, 026.0°E
6test 498 clipSH2.LL: True
6test 499 clipSH3.len: 2
6test 500 clipSH3.0: 18.571°N, 024.286°E
6test 501 clipSH3.LL: True
6test 502 clipSH3.1: 16.667°N, 016.667°E
6test 503 clipSH3.LL: True
6test 504 clipSH3.edge.: True
6test 505 clipSH3.len: 2
6test 506 clipSH3.0: 16.667°N, 016.667°E
6test 507 clipSH3.LL: True
6test 508 clipSH3.1: 20.0°N, 015.0°E
6test 509 clipSH3.LL: True
6test 510 clipSH3.edge.: False
6test 511 clipSH3.len: 2
6test 512 clipSH3.0: 20.0°N, 015.0°E
6test 513 clipSH3.LL: True
6test 514 clipSH3.1: 25.0°N, 020.0°E
6test 515 clipSH3.LL: True
6test 516 clipSH3.edge.: True
6test 517 clipSH3.len: 2
6test 518 clipSH3.0: 25.0°N, 020.0°E
6test 519 clipSH3.LL: True
6test 520 clipSH3.1: 22.0°N, 026.0°E
6test 521 clipSH3.LL: True
6test 522 clipSH3.edge.: True
6test 523 clipSH3.len: 2
6test 524 clipSH3.0: 22.0°N, 026.0°E
6test 525 clipSH3.LL: True
6test 526 clipSH3.1: 18.571°N, 024.286°E
6test 527 clipSH3.LL: True
6test 528 clipSH3.edge.: False
6test 529 clipSH2.reversed.len: 5
6test 530 clipSH2.reversed.0: 18.571°N, 024.286°E
6test 531 clipSH2.reversed.LL: True
6test 532 clipSH2.reversed.1: 16.667°N, 016.667°E
6test 533 clipSH2.reversed.LL: True
6test 534 clipSH2.reversed.2: 20.0°N, 015.0°E
6test 535 clipSH2.reversed.LL: True
6test 536 clipSH2.reversed.3: 25.0°N, 020.0°E
6test 537 clipSH2.reversed.LL: True
6test 538 clipSH2.reversed.4: 22.0°N, 026.0°E
6test 539 clipSH2.reversed.LL: True
6test 540 clipSH3.reversed.len: 2
6test 541 clipSH3.reversed.0: 18.571°N, 024.286°E
6test 542 clipSH3.reversed.LL: True
6test 543 clipSH3.reversed.1: 16.667°N, 016.667°E
6test 544 clipSH3.reversed.LL: True
6test 545 clipSH3.edge.reversed.: True
6test 546 clipSH3.reversed.len: 2
6test 547 clipSH3.reversed.0: 16.667°N, 016.667°E
6test 548 clipSH3.reversed.LL: True
6test 549 clipSH3.reversed.1: 20.0°N, 015.0°E
6test 550 clipSH3.reversed.LL: True
6test 551 clipSH3.edge.reversed.: False
6test 552 clipSH3.reversed.len: 2
6test 553 clipSH3.reversed.0: 20.0°N, 015.0°E
6test 554 clipSH3.reversed.LL: True
6test 555 clipSH3.reversed.1: 25.0°N, 020.0°E
6test 556 clipSH3.reversed.LL: True
6test 557 clipSH3.edge.reversed.: True
6test 558 clipSH3.reversed.len: 2
6test 559 clipSH3.reversed.0: 25.0°N, 020.0°E
6test 560 clipSH3.reversed.LL: True
6test 561 clipSH3.reversed.1: 22.0°N, 026.0°E
6test 562 clipSH3.reversed.LL: True
6test 563 clipSH3.edge.reversed.: True
6test 564 clipSH3.reversed.len: 2
6test 565 clipSH3.reversed.0: 22.0°N, 026.0°E
6test 566 clipSH3.reversed.LL: True
6test 567 clipSH3.reversed.1: 18.571°N, 024.286°E
6test 568 clipSH3.reversed.LL: True
6test 569 clipSH3.edge.reversed.: False
6test 570 clipSH.allout: ()
6test 571 clipSH3.allout: ()
6test 572 clipSH.allout.reversed: ()
6test 573 clipSH3.allout.reversed: ()
6test 574 clipSH.allin.len: 4
6test 575 clipSH.allin.0: 20.0°N, 030.0°E
6test 576 clipSH.allin.LL: True
6test 577 clipSH.allin.1: 15.0°N, 010.0°E
6test 578 clipSH.allin.LL: True
6test 579 clipSH.allin.2: 25.0°N, 020.0°E
6test 580 clipSH.allin.LL: True
6test 581 clipSH.allin.3: 20.0°N, 030.0°E
6test 582 clipSH.allin.LL: True
6test 583 clipSH3.allin.len: 2
6test 584 clipSH3.allin.0: 20.0°N, 030.0°E
6test 585 clipSH3.allin.LL: True
6test 586 clipSH3.allin.1: 15.0°N, 010.0°E
6test 587 clipSH3.allin.LL: True
6test 588 clipSH3.edge.: True
6test 589 clipSH3.allin.len: 2
6test 590 clipSH3.allin.0: 15.0°N, 010.0°E
6test 591 clipSH3.allin.LL: True
6test 592 clipSH3.allin.1: 25.0°N, 020.0°E
6test 593 clipSH3.allin.LL: True
6test 594 clipSH3.edge.: True
6test 595 clipSH.allin.reversed.len: 4
6test 596 clipSH.allin.reversed.0: 20.0°N, 030.0°E
6test 597 clipSH.allin.reversed.LL: True
6test 598 clipSH.allin.reversed.1: 15.0°N, 010.0°E
6test 599 clipSH.allin.reversed.LL: True
6test 600 clipSH.allin.reversed.2: 25.0°N, 020.0°E
6test 601 clipSH.allin.reversed.LL: True
6test 602 clipSH.allin.reversed.3: 20.0°N, 030.0°E
6test 603 clipSH.allin.reversed.LL: True
6test 604 clipSH3.allin.reversed.len: 2
6test 605 clipSH3.allin.reversed.0: 20.0°N, 030.0°E
6test 606 clipSH3.allin.reversed.LL: True
6test 607 clipSH3.allin.reversed.1: 15.0°N, 010.0°E
6test 608 clipSH3.allin.reversed.LL: True
6test 609 clipSH3.edge.reversed.: True
6test 610 clipSH3.allin.reversed.len: 2
6test 611 clipSH3.allin.reversed.0: 15.0°N, 010.0°E
6test 612 clipSH3.allin.reversed.LL: True
6test 613 clipSH3.allin.reversed.1: 25.0°N, 020.0°E
6test 614 clipSH3.allin.reversed.LL: True
6test 615 clipSH3.edge.reversed.: True
6test 616 clipSH.warped: clipSH clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 617 clipSH3.warped: clipSH3 clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 618 clipSH.warpedreversed.: clipSH clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 619 clipSH3.warpedreversed.: clipSH3 clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 620 boundsOf: (10.0, 10.0, 20.0, 20.0)
6test 621 boundsOf: (15.0, 10.0, 25.0, 30.0)
6test 622 enclosures: (5.0, 0.0, -5.0, -10.0)
6test 623 overlap: (15.0, 10.0, 20.0, 20.0)
6test 624 clipSH4: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 625 clipSH5: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 626 clipSH6: 1.0, 0.5, 2.0, 1.0, 2.0, 0.5
6test 627 clipSH7: -0.2, 2.0, 0.2, 2.0, 0.5, 0.5, 2.0, 0.2, 2.0, -0.2, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -2.0, -0.2, -2.0, 0.2, -0.5, 0.5
6test 628 clipSH8: -0.33, 1.33, 0.0, 2.0, 0.33, 1.33, 0.5, 0.5, 0.78, 0.44, 1.18, -0.36, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -1.18, -0.36, -0.78, 0.44, -0.5, 0.5
6test 629 clipSH9: None
6test 630 clipSH10: None
6test 631 clipSH11: None
6test 632 clipSH12: None
6test 633 clipGH4: (ClipGH4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0), ClipGH4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipGH4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipGH4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0))
6test 634 clipFHP4: (ClipFHP4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipFHP4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0))
6test 635 Fig 8: (ClipFHP4Tuple(lat=4.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=-1.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=3.0, lon=8.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=5.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=1.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=11.0, height=0.0, clipid=0))
6test 636 Fig 14: (ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=6.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=6.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=9.0, lon=3.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=6.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=1))
6test 637 Fig 15: (ClipFHP4Tuple(lat=1.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=1.0, lon=1.0, height=0.0, clipid=1))
6test 638 Fig 16: (ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=1.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=2.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=2.0, height=0.0, clipid=0))
6test 639 Fig 18: ((-10, -10, 0), (-10, -2, 0), (-8, -2, 0), (-8, -8, 0), (-2, -8, 0), (-2, -10, 0), (2, -10, 1), (2, -8, 1), (0, -8, 1), (0, -10, 1), (10, -6, 2), (8, -6, 2), (8, -8, 2), (10, -8, 2), (10, 8, 3), (8, 8, 3), (8, 6, 3), (10, 6, 3), (-6, 10, 4), (-6, 8, 4), (-4, 8, 4), (-4, 10, 4), (-10, 10, 5), (-10, 8, 5), (-8, 8, 5), (-8, 10, 5), (-10, 4, 6), (-8, 4, 6), (-8, 6, 6), (-10, 6, 6), (-10, 0, 7), (-8, 0, 7), (-8, 2, 7), (-10, 2, 7), (-6, 6, 8), (-4, 6, 8), (-4, 4, 8), (-6, 4, 8), (-6, 0, 9), (-4, 0, 9), (-4, 2, 9), (-6, 2, 9), (-6, -6, 10), (-2, -6, 10), (-2, -4, 10), (-4, -4, 10), (-4, -2, 10), (-6, -2, 10), (2, -6, 11), (2, -4, 11), (0, -4, 11), (0, -6, 11), (12, 8, 12), (20, 8, 12), (20, -8, 12), (12, -8, 12), (12, -6, 12), (18, -6, 12), (18, 6, 12), (12, 6, 12), (12, -4, 13), (14, -4, 13), (14, 4, 13), (12, 4, 13))
6testing(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 640 clipCS4.p1: 07.5°N, 010.0°E
6test 641 clipCS4.p2: 04.5°N, 000.0°E
6test 642 clipCS4.i: 3
6test 643 clipCS4.j: 0
6test 644 clipCS4.p1: 05.0°N, 005.0°E
6test 645 clipCS4.p2: 05.0°N, 005.0°E
6test 646 clipCS4.i: 1
6test 647 clipCS4.j: 2
6test 648 clipLB6.p1: 07.5°N, 010.0°E
6test 649 clipLB6.p2: 04.5°N, 000.0°E
6test 650 clipLB6.i: 3
6test 651 clipLB6.fi: 3.25
6test 652 clipLB6.fi: 07.5°N, 010.0°E
6test 653 clipLB6.fj: 3.75
6test 654 clipLB6.fj: 04.5°N, 000.0°E
6test 655 clipLB6.j: 0
6test 656 clipLB6.fin: 4
6test 657 clipLB6.p1: 05.0°N, 005.0°E
6test 658 clipLB6.p2: 05.0°N, 005.0°E
6test 659 clipLB6.i: 1
6test 660 clipLB6.fi: 1.00
6test 661 clipLB6.fi: 05.0°N, 005.0°E
6test 662 clipLB6.fj: 2.00
6test 663 clipLB6.fj: 05.0°N, 005.0°E
6test 664 clipLB6.j: 2
6test 665 clipLB6.fin: 4
6test 666 clipCS4.p1: 60.0°N, 123.333333°E
6test 667 clipCS4.p2: 62.857143°N, 130.0°E
6test 668 clipCS4.i: 0
6test 669 clipCS4.j: 1
6test 670 clipLB6.p1: 60.0°N, 123.333333°E
6test 671 clipLB6.p2: 62.857143°N, 130.0°E
6test 672 clipLB6.i: 0
6test 673 clipLB6.fi: 0.666667
6test 674 clipLB6.fi: 60.0°N, 123.333333°E
6test 675 clipLB6.fj: 0.714286
6test 676 clipLB6.fj: 62.857143°N, 130.0°E
6test 677 clipLB6.j: 1
6test 678 clipLB6.fin: 0
6test 679 clipCS4.p1: 17.5°N, 020.0°E
6test 680 clipCS4.p2: 16.25°N, 015.0°E
6test 681 clipCS4.i: 2
6test 682 clipCS4.j: 0
6test 683 clipLB6.p1: 17.5°N, 020.0°E
6test 684 clipLB6.p2: 16.25°N, 015.0°E
6test 685 clipLB6.i: 2
6test 686 clipLB6.fi: 2.500
6test 687 clipLB6.fi: 17.5°N, 020.0°E
6test 688 clipLB6.fj: 2.750
6test 689 clipLB6.fj: 16.25°N, 015.0°E
6test 690 clipLB6.j: 0
6test 691 clipLB6.fin: 3
6test 692 clipSH1.len: 4
6test 693 clipSH1.0: 20.0°N, 020.0°E
6test 694 clipSH1.LL: True
6test 695 clipSH1.1: 17.5°N, 020.0°E
6test 696 clipSH1.LL: True
6test 697 clipSH1.2: 16.25°N, 015.0°E
6test 698 clipSH1.LL: True
6test 699 clipSH1.3: 20.0°N, 015.0°E
6test 700 clipSH1.LL: True
6test 701 clipSH2.len: 5
6test 702 clipSH2.0: 18.571°N, 024.286°E
6test 703 clipSH2.LL: True
6test 704 clipSH2.1: 16.667°N, 016.667°E
6test 705 clipSH2.LL: True
6test 706 clipSH2.2: 20.0°N, 015.0°E
6test 707 clipSH2.LL: True
6test 708 clipSH2.3: 25.0°N, 020.0°E
6test 709 clipSH2.LL: True
6test 710 clipSH2.4: 22.0°N, 026.0°E
6test 711 clipSH2.LL: True
6test 712 clipSH3.len: 2
6test 713 clipSH3.0: 18.571°N, 024.286°E
6test 714 clipSH3.LL: True
6test 715 clipSH3.1: 16.667°N, 016.667°E
6test 716 clipSH3.LL: True
6test 717 clipSH3.edge.: True
6test 718 clipSH3.len: 2
6test 719 clipSH3.0: 16.667°N, 016.667°E
6test 720 clipSH3.LL: True
6test 721 clipSH3.1: 20.0°N, 015.0°E
6test 722 clipSH3.LL: True
6test 723 clipSH3.edge.: False
6test 724 clipSH3.len: 2
6test 725 clipSH3.0: 20.0°N, 015.0°E
6test 726 clipSH3.LL: True
6test 727 clipSH3.1: 25.0°N, 020.0°E
6test 728 clipSH3.LL: True
6test 729 clipSH3.edge.: True
6test 730 clipSH3.len: 2
6test 731 clipSH3.0: 25.0°N, 020.0°E
6test 732 clipSH3.LL: True
6test 733 clipSH3.1: 22.0°N, 026.0°E
6test 734 clipSH3.LL: True
6test 735 clipSH3.edge.: True
6test 736 clipSH3.len: 2
6test 737 clipSH3.0: 22.0°N, 026.0°E
6test 738 clipSH3.LL: True
6test 739 clipSH3.1: 18.571°N, 024.286°E
6test 740 clipSH3.LL: True
6test 741 clipSH3.edge.: False
6test 742 clipSH2.reversed.len: 5
6test 743 clipSH2.reversed.0: 18.571°N, 024.286°E
6test 744 clipSH2.reversed.LL: True
6test 745 clipSH2.reversed.1: 16.667°N, 016.667°E
6test 746 clipSH2.reversed.LL: True
6test 747 clipSH2.reversed.2: 20.0°N, 015.0°E
6test 748 clipSH2.reversed.LL: True
6test 749 clipSH2.reversed.3: 25.0°N, 020.0°E
6test 750 clipSH2.reversed.LL: True
6test 751 clipSH2.reversed.4: 22.0°N, 026.0°E
6test 752 clipSH2.reversed.LL: True
6test 753 clipSH3.reversed.len: 2
6test 754 clipSH3.reversed.0: 18.571°N, 024.286°E
6test 755 clipSH3.reversed.LL: True
6test 756 clipSH3.reversed.1: 16.667°N, 016.667°E
6test 757 clipSH3.reversed.LL: True
6test 758 clipSH3.edge.reversed.: True
6test 759 clipSH3.reversed.len: 2
6test 760 clipSH3.reversed.0: 16.667°N, 016.667°E
6test 761 clipSH3.reversed.LL: True
6test 762 clipSH3.reversed.1: 20.0°N, 015.0°E
6test 763 clipSH3.reversed.LL: True
6test 764 clipSH3.edge.reversed.: False
6test 765 clipSH3.reversed.len: 2
6test 766 clipSH3.reversed.0: 20.0°N, 015.0°E
6test 767 clipSH3.reversed.LL: True
6test 768 clipSH3.reversed.1: 25.0°N, 020.0°E
6test 769 clipSH3.reversed.LL: True
6test 770 clipSH3.edge.reversed.: True
6test 771 clipSH3.reversed.len: 2
6test 772 clipSH3.reversed.0: 25.0°N, 020.0°E
6test 773 clipSH3.reversed.LL: True
6test 774 clipSH3.reversed.1: 22.0°N, 026.0°E
6test 775 clipSH3.reversed.LL: True
6test 776 clipSH3.edge.reversed.: True
6test 777 clipSH3.reversed.len: 2
6test 778 clipSH3.reversed.0: 22.0°N, 026.0°E
6test 779 clipSH3.reversed.LL: True
6test 780 clipSH3.reversed.1: 18.571°N, 024.286°E
6test 781 clipSH3.reversed.LL: True
6test 782 clipSH3.edge.reversed.: False
6test 783 clipSH.allout: ()
6test 784 clipSH3.allout: ()
6test 785 clipSH.allout.reversed: ()
6test 786 clipSH3.allout.reversed: ()
6test 787 clipSH.allin.len: 4
6test 788 clipSH.allin.0: 20.0°N, 030.0°E
6test 789 clipSH.allin.LL: True
6test 790 clipSH.allin.1: 15.0°N, 010.0°E
6test 791 clipSH.allin.LL: True
6test 792 clipSH.allin.2: 25.0°N, 020.0°E
6test 793 clipSH.allin.LL: True
6test 794 clipSH.allin.3: 20.0°N, 030.0°E
6test 795 clipSH.allin.LL: True
6test 796 clipSH3.allin.len: 2
6test 797 clipSH3.allin.0: 20.0°N, 030.0°E
6test 798 clipSH3.allin.LL: True
6test 799 clipSH3.allin.1: 15.0°N, 010.0°E
6test 800 clipSH3.allin.LL: True
6test 801 clipSH3.edge.: True
6test 802 clipSH3.allin.len: 2
6test 803 clipSH3.allin.0: 15.0°N, 010.0°E
6test 804 clipSH3.allin.LL: True
6test 805 clipSH3.allin.1: 25.0°N, 020.0°E
6test 806 clipSH3.allin.LL: True
6test 807 clipSH3.edge.: True
6test 808 clipSH.allin.reversed.len: 4
6test 809 clipSH.allin.reversed.0: 20.0°N, 030.0°E
6test 810 clipSH.allin.reversed.LL: True
6test 811 clipSH.allin.reversed.1: 15.0°N, 010.0°E
6test 812 clipSH.allin.reversed.LL: True
6test 813 clipSH.allin.reversed.2: 25.0°N, 020.0°E
6test 814 clipSH.allin.reversed.LL: True
6test 815 clipSH.allin.reversed.3: 20.0°N, 030.0°E
6test 816 clipSH.allin.reversed.LL: True
6test 817 clipSH3.allin.reversed.len: 2
6test 818 clipSH3.allin.reversed.0: 20.0°N, 030.0°E
6test 819 clipSH3.allin.reversed.LL: True
6test 820 clipSH3.allin.reversed.1: 15.0°N, 010.0°E
6test 821 clipSH3.allin.reversed.LL: True
6test 822 clipSH3.edge.reversed.: True
6test 823 clipSH3.allin.reversed.len: 2
6test 824 clipSH3.allin.reversed.0: 15.0°N, 010.0°E
6test 825 clipSH3.allin.reversed.LL: True
6test 826 clipSH3.allin.reversed.1: 25.0°N, 020.0°E
6test 827 clipSH3.allin.reversed.LL: True
6test 828 clipSH3.edge.reversed.: True
6test 829 clipSH.warped: clipSH clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 830 clipSH3.warped: clipSH3 clip region ((LatLon(10°00′00.0″N, 010°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 010°00′00.0″E))): not convex
6test 831 clipSH.warpedreversed.: clipSH clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 832 clipSH3.warpedreversed.: clipSH3 clip region ((LatLon(20°00′00.0″N, 010°00′00.0″E), LatLon(10°00′00.0″N, 020°00′00.0″E), LatLon(20°00′00.0″N, 020°00′00.0″E), LatLon(10°00′00.0″N, 010°00′00.0″E))): not convex
6test 833 boundsOf: (10.0, 10.0, 20.0, 20.0)
6test 834 boundsOf: (15.0, 10.0, 25.0, 30.0)
6test 835 enclosures: (5.0, 0.0, -5.0, -10.0)
6test 836 overlap: (15.0, 10.0, 20.0, 20.0)
6test 837 clipSH4: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 838 clipSH5: 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0
6test 839 clipSH6: 1.0, 0.5, 2.0, 1.0, 2.0, 0.5
6test 840 clipSH7: -0.2, 2.0, 0.2, 2.0, 0.5, 0.5, 2.0, 0.2, 2.0, -0.2, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -2.0, -0.2, -2.0, 0.2, -0.5, 0.5
6test 841 clipSH8: -0.33, 1.33, 0.0, 2.0, 0.33, 1.33, 0.5, 0.5, 0.78, 0.44, 1.18, -0.36, 0.5, -0.5, 0.2, -2.0, -0.2, -2.0, -0.5, -0.5, -1.18, -0.36, -0.78, 0.44, -0.5, 0.5
6test 842 clipSH9: None
6test 843 clipSH10: None
6test 844 clipSH11: None
6test 845 clipSH12: None
6test 846 clipGH4: (ClipGH4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0), ClipGH4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipGH4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipGH4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0))
6test 847 clipFHP4: (ClipFHP4Tuple(lat=7.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=6.428571, height=2.285714, clipid=0), ClipFHP4Tuple(lat=3.0, lon=5.0, height=2.0, clipid=0), ClipFHP4Tuple(lat=5.0, lon=3.571429, height=1.714286, clipid=0))
6test 848 Fig 8: (ClipFHP4Tuple(lat=4.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=-1.0, lon=12.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=3.0, lon=8.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=5.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=1.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=11.0, height=0.0, clipid=0))
6test 849 Fig 14: (ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=6.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=6.0, lon=6.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=9.0, lon=3.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=6.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=3.0, lon=3.0, height=0.0, clipid=1))
6test 850 Fig 15: (ClipFHP4Tuple(lat=1.0, lon=3.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=4.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=1), ClipFHP4Tuple(lat=1.0, lon=1.0, height=0.0, clipid=1))
6test 851 Fig 16: (ClipFHP4Tuple(lat=0.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=1.0, lon=0.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=2.0, lon=2.0, height=0.0, clipid=0), ClipFHP4Tuple(lat=0.0, lon=2.0, height=0.0, clipid=0))
6test 852 Fig 18: ((-10, -10, 0), (-10, -2, 0), (-8, -2, 0), (-8, -8, 0), (-2, -8, 0), (-2, -10, 0), (2, -10, 1), (2, -8, 1), (0, -8, 1), (0, -10, 1), (10, -6, 2), (8, -6, 2), (8, -8, 2), (10, -8, 2), (10, 8, 3), (8, 8, 3), (8, 6, 3), (10, 6, 3), (-6, 10, 4), (-6, 8, 4), (-4, 8, 4), (-4, 10, 4), (-10, 10, 5), (-10, 8, 5), (-8, 8, 5), (-8, 10, 5), (-10, 4, 6), (-8, 4, 6), (-8, 6, 6), (-10, 6, 6), (-10, 0, 7), (-8, 0, 7), (-8, 2, 7), (-10, 2, 7), (-6, 6, 8), (-4, 6, 8), (-4, 4, 8), (-6, 4, 8), (-6, 0, 9), (-4, 0, 9), (-4, 2, 9), (-6, 2, 9), (-6, -6, 10), (-2, -6, 10), (-2, -4, 10), (-4, -4, 10), (-4, -2, 10), (-6, -2, 10), (2, -6, 11), (2, -4, 11), (0, -4, 11), (0, -6, 11), (12, 8, 12), (20, 8, 12), (20, -8, 12), (12, -8, 12), (12, -6, 12), (18, -6, 12), (18, 6, 12), (12, 6, 12), (12, -4, 13), (14, -4, 13), (14, 4, 13), (12, 4, 13))
6all 852 testClipy.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 104.289 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testConstants.py
6testing testConstants.py 22.09.15 (module pygeodesy.constants 23.03.12)
6test 1 _0_0: 0.0
6test 2 _0_0001: 0.0001
6test 3 _0_001: 0.001
6test 4 _0_01: 0.01
6test 5 _0_1: 0.1
6test 6 _0_125: 0.125
6test 7 _0_25: 0.25
6test 8 _0_26: 0.26
6test 9 _0_5: 0.5
6test 10 _1000_0: 1000.0
6test 11 _100_0: 100.0
6test 12 _10_0: 10.0
6test 13 _16_0: 16.0
6test 14 _180_0: 180.0
6test 15 _1_0: 1.0
6test 16 _1_16th: _1_16th (0.0625)
6test 17 _1_16th: _1_16th
6test 18 _1_16th: True
6test 19 _1_3rd: _1_3rd (0.333333333333)
6test 20 _1_3rd: _1_3rd
6test 21 _1_3rd: True
6test 22 _1_5: 1.5
6test 23 _1_64th: _1_64th (0.015625)
6test 24 _1_64th: _1_64th
6test 25 _1_64th: True
6test 26 _1_75: 1.75
6test 27 _1__90: _1__90 (0.0111111111111)
6test 28 _1__90: _1__90
6test 29 _1__90: True
6test 30 _1_EPS: _1_EPS (4.50359962737e+15)
6test 31 _1_EPS: _1_EPS
6test 32 _1_EPS: True
6test 33 _270_0: 270.0
6test 34 _2_0: 2.0
6test 35 _2_3rd: _2_3rd (0.666666666667)
6test 36 _2_3rd: _2_3rd
6test 37 _2_3rd: True
6test 38 _2__PI: _2__PI (0.636619772368)
6test 39 _2__PI: _2__PI
6test 40 _2__PI: True
6test 41 _32_0: 32.0
6test 42 _3600_0: 3600.0
6test 43 _360_0: 360.0
6test 44 _3_0: 3.0
6test 45 _400_0: 400.0
6test 46 _4_0: 4.0
6test 47 _5_0: 5.0
6test 48 _60_0: 60.0
6test 49 _6_0: 6.0
6test 50 _720_0: 720.0
6test 51 _89_999_: _89_999_ (90.0)
6test 52 _89_999_: _89_999_
6test 53 _89_999_: True
6test 54 _8_0: 8.0
6test 55 _90_0: 90.0
6test 56 _9_0: 9.0
6test 57 _EPS2e4: _EPS2e4 (4.4408920985e-12)
6test 58 _EPS2e4: _EPS2e4
6test 59 _EPS2e4: True
6test 60 _EPS4e8: _EPS4e8 (8.881784197e-08)
6test 61 _EPS4e8: _EPS4e8
6test 62 _EPS4e8: True
6test 63 _EPSmin: _EPSmin (1.49166814624e-154)
6test 64 _EPSmin: _EPSmin
6test 65 _EPSmin: True
6test 66 _EPSqrt: _EPSqrt (1.49011611938e-08)
6test 67 _EPSqrt: _EPSqrt
6test 68 _EPSqrt: True
6test 69 _EPStol: _EPStol (1.49011611938e-09)
6test 70 _EPStol: _EPStol
6test 71 _EPStol: True
6test 72 _inf: inf
6test 73 _K0_UTM: _K0_UTM (0.9996)
6test 74 _K0_UTM: _K0_UTM
6test 75 _K0_UTM: True
6test 76 _M_KM: 1000.0  FAILED, KNOWN, expected M.KM
6test 77 _M_NM: 1852.0  FAILED, KNOWN, expected M.NM
6test 78 _M_SM: 1609.344  FAILED, KNOWN, expected M.SM
6test 79 _N_0_0: -0.0  FAILED, KNOWN, expected N.0.0
6test 80 _N_0_5: -0.5  FAILED, KNOWN, expected N.0.5
6test 81 _N_180_0: -180.0  FAILED, KNOWN, expected N.180.0
6test 82 _N_1_0: -1.0  FAILED, KNOWN, expected N.1.0
6test 83 _N_2_0: -2.0  FAILED, KNOWN, expected N.2.0
6test 84 _N_90_0: -90.0  FAILED, KNOWN, expected N.90.0
6test 85 _nan: nan
6test 86 _pi: 3.141592653589793  FAILED, KNOWN, expected pi
6test 87 _SQRT2_2: _SQRT2_2 (0.707106781187)
6test 88 _SQRT2_2: _SQRT2_2
6test 89 _SQRT2_2: True
6test 90 DIG: DIG (15)
6test 91 DIG: DIG
6test 92 DIG: True
6test 93 DIG: True
6test 94 EPS: EPS (2.22044604925e-16)
6test 95 EPS: EPS
6test 96 EPS: True
6test 97 EPS: True
6test 98 EPS0: EPS0 (4.93038065763e-32)
6test 99 EPS0: EPS0
6test 100 EPS0: True
6test 101 EPS0: True
6test 102 EPS02: EPS02 (2.43086534291e-63)
6test 103 EPS02: EPS02
6test 104 EPS02: True
6test 105 EPS02: True
6test 106 EPS1: EPS1 (1.0)
6test 107 EPS1: EPS1
6test 108 EPS1: True
6test 109 EPS1: True
6test 110 EPS2: EPS2 (4.4408920985e-16)
6test 111 EPS2: EPS2
6test 112 EPS2: True
6test 113 EPS2: True
6test 114 EPS4: EPS4 (8.881784197e-16)
6test 115 EPS4: EPS4
6test 116 EPS4: True
6test 117 EPS4: True
6test 118 EPS_2: EPS_2 (1.11022302463e-16)
6test 119 EPS_2: EPS_2
6test 120 EPS_2: True
6test 121 EPS_2: True
6test 122 INF: INF (inf)
6test 123 INF: INF
6test 124 INF: True
6test 125 INF: True
6test 126 INT0: INT0 (0)
6test 127 INT0: INT0
6test 128 INT0: True
6test 129 INT0: True
6test 130 MANT_DIG: MANT_DIG (53)
6test 131 MANT_DIG: MANT_DIG
6test 132 MANT_DIG: True
6test 133 MANT_DIG: True
6test 134 MAX: MAX (1.79769313486e+308)
6test 135 MAX: MAX
6test 136 MAX: True
6test 137 MAX: True
6test 138 MIN: MIN (2.22507385851e-308)
6test 139 MIN: MIN
6test 140 MIN: True
6test 141 MIN: True
6test 142 NAN: NAN (nan)
6test 143 NAN: NAN
6test 144 NAN: True
6test 145 NAN: True
6test 146 NEG0: NEG0 (-0)
6test 147 NEG0: NEG0
6test 148 NEG0: True
6test 149 NEG0: True
6test 150 NINF: NINF (-inf)
6test 151 NINF: NINF
6test 152 NINF: True
6test 153 NINF: True
6test 154 PI: PI (3.14159265359)
6test 155 PI: PI
6test 156 PI: True
6test 157 PI: True
6test 158 PI2: PI2 (6.28318530718)
6test 159 PI2: PI2
6test 160 PI2: True
6test 161 PI2: True
6test 162 PI3: PI3 (9.42477796077)
6test 163 PI3: PI3
6test 164 PI3: True
6test 165 PI3: True
6test 166 PI3_2: PI3_2 (4.71238898038)
6test 167 PI3_2: PI3_2
6test 168 PI3_2: True
6test 169 PI3_2: True
6test 170 PI4: PI4 (12.5663706144)
6test 171 PI4: PI4
6test 172 PI4: True
6test 173 PI4: True
6test 174 PI_2: PI_2 (1.57079632679)
6test 175 PI_2: PI_2
6test 176 PI_2: True
6test 177 PI_2: True
6test 178 PI_3: PI_3 (1.0471975512)
6test 179 PI_3: PI_3
6test 180 PI_3: True
6test 181 PI_3: True
6test 182 PI_4: PI_4 (0.785398163397)
6test 183 PI_4: PI_4
6test 184 PI_4: True
6test 185 PI_4: True
6test 186 R_FM: R_FM (6371000.0)
6test 187 R_FM: R_FM
6test 188 R_FM: True
6test 189 R_FM: True
6test 190 R_GM: R_GM (6371230.0)
6test 191 R_GM: R_GM
6test 192 R_GM: True
6test 193 R_GM: True
6test 194 R_KM: R_KM (6371.00877141)
6test 195 R_KM: R_KM
6test 196 R_KM: True
6test 197 R_KM: True
6test 198 R_M: R_M (6371008.77141)
6test 199 R_M: R_M
6test 200 R_M: True
6test 201 R_M: True
6test 202 R_MA: R_MA (6378137.0)
6test 203 R_MA: R_MA
6test 204 R_MA: True
6test 205 R_MA: True
6test 206 R_MB: R_MB (6356752.3)
6test 207 R_MB: R_MB
6test 208 R_MB: True
6test 209 R_MB: True
6test 210 R_NM: R_NM (3440.069531)
6test 211 R_NM: R_NM
6test 212 R_NM: True
6test 213 R_NM: True
6test 214 R_QM: R_QM (6372797.56086)
6test 215 R_QM: R_QM
6test 216 R_QM: True
6test 217 R_QM: True
6test 218 R_SM: R_SM (3958.76131605)
6test 219 R_SM: R_SM
6test 220 R_SM: True
6test 221 R_SM: True
6test 222 R_VM: R_VM (6366707.01949)
6test 223 R_VM: R_VM
6test 224 R_VM: True
6test 225 R_VM: True
6test 226 EPS: True
6test 227 EPS+1: True
6test 228 EPS-1: True
6test 229 EPS0: True
6test 230 EPS02: True
6test 231 EPS_2: True
6test 232 EPS_2: 1.1102230246251565e-16
6test 233 EPS1: True
6test 234 EPS1+1: True
6test 235 EPS1-1: True
6test 236 EPS2: True
6test 237 EPS2: 4.440892098500626e-16
6test 238 EPS4: True
6test 239 EPS4: 8.881784197001252e-16
6test 240 INF: True
6test 241 INF: False
6test 242 NINF: True
6test 243 NINF: -inf
6test 244 INT0: 0
6test 245 INT0: True
6test 246 INT0: True
6test 247 INT0: False
6test 248 INT0: False
6test 249 INT0: False
6test 250 NAN: True
6test 251 NAN: False
6test 252 NAN: False
6test 253 NEG0: -0.0
6test 254 NEG0: True
6test 255 NEG0: False
6test 256 NEG0: 0.0
6test 257 _off90: True
6test 258 _off90: True
6test 259 float_: (1.0, 2.0, 3.0)
6test 260 float_: True
6test 261 _0_0: True

6test 262 _0_0s: 0
6test 263 _0_0s: 0
6test 264 _0_0s: 1
6test 265 _0_0s: 1
6test 266 _0_0s: 2
6test 267 _0_0s: 2
6test 268 _0_0s: 3
6test 269 _0_0s: 3
6test 270 _0_0s: 5
6test 271 _0_0s: 5
6test 272 _0_0s: 8
6test 273 _0_0s: 8
6test 274 _0_0s: 9
6test 275 _0_0s: 9
6test 276 _0_0s: 10
6test 277 _0_0s: 10
6test 278 _0_0s: 12
6test 279 _0_0s: 12
6test 280 _0_0s: 25
6test 281 _0_0s: 25
6test 282 _0_0s: 49
6test 283 _0_0s: 49
6test 284 _0_0s: 129
6test 285 _0_0s: 129
6test 286 _0_0s: 257
6test 287 _0_0s: 257
610 of 287 testConstants.py tests (3.5%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 2.016 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testCss.py
6testing testCss.py 22.05.03 (module pygeodesy.css 22.09.24)
6test 1 CassiniSoldner(48.833333, 2.333333, name='Paris'): 48.833333 2.333333
6test 2 Exact: True
6test 3 forward: -37518.854545, 230003.561828
6test 4 reverse: 50.9, 1.8
6test 5 forward4: -37518.854545, 230003.561828, 89.586104, 0.999983
6test 6 equatorarc: 89.662511
6test 7 equatorazimuth: 39.192992
6test 8 copy(CassiniSoldner): (<class 'pygeodesy.css.CassiniSoldner'>, True)
6test 9 CassiniSoldner.copy(): (<class 'pygeodesy.css.CassiniSoldner'>, True)
6test 10 reverse: 50.899937, 1.793161
6test 11 forward: -38000.0, 230000.0
6test 12 reverse4: 50.899937, 1.793161, 89.580797, 0.999982
6test 13 reverse(pygeodesy.ellipsoidalExact): LatLon(50°53′59.77″N, 001°47′35.38″E)
6test 14 reverse(pygeodesy.ellipsoidalNvector): LatLon(50°53′59.77″N, 001°47′35.38″E)
6test 15 reverse(pygeodesy.ellipsoidalVincenty): LatLon(50°53′59.77″N, 001°47′35.38″E)
6test 16 CassiniSoldner(51.4934, 0.0098, name='Greenwich'): 51.4934 0.0098
6test 17 forward: 170557.151692, -293280.6051
6test 18 reverse: 48.833333, 2.333333
6test 19 hypot: 339268.707  FAILED, KNOWN, expected 338901.865
6test 20 toCss: -37518.854545 230003.561828 +1.00m
6test 21 toCss: [E:-37518.854545, N:230003.561828, H:+1.00m, name:'Calais', C:CassiniSoldner(48.833333, 2.333333, name='Paris')]
6test 22 Css.easting: -37518.854545
6test 23 Css.northing: 230003.561828
6test 24 Css.height: 1.0
6test 25 Css.azi: 89.586103815
6test 26 Css.rk: 0.999982722
6test 27 Css.name: Calais
6test 28 Css.cs0: 48.833333 2.333333
6test 29 Css.toLatLon: LatLon(50°54′00.0″N, 001°48′00.0″E, +1.00m)
6test 30 Css.toLatLon.height: 1.0
6test 31 Css.toLatLon.name: Calais
6test 32 Css.toLatLon.datum.name: WGS84
6test 33 Css.toLatLon.height: 1.0  FAILED, KNOWN, expected height(1.0)
6test 34 copy(Css): (<class 'pygeodesy.css.Css'>, True)
6test 35 Css.copy(): (<class 'pygeodesy.css.Css'>, True)
6test 36 cs0.name: Paris
6test 37 cs0.name: Default
6test 38 cs0.flattening: 0.003352811
6test 39 cs0.lat0: 0.0
6test 40 cs0.equatoradius: 6378137.0
6test 41 cs0.lat0: 0.0  FAILED, KNOWN, expected lat(0.0)
6test 42 classof.height: 1.0
6test 43 classof.azi: 89.586103815
6test 44 classof.rk: 0.999982722
6test 45 classof.name: Calais
6test 46 classof.cs0: 48.833333 2.333333
6test 47 cs0.latlon0: (48.833333, 2.333333)
6test 48 cs0.latlon0: (48.833333, 2.333333)
6test 49 cs0.latlon0: latlon0 (None): 'NoneType' object has no attribute 'lat'
6test 50 cs0.latlon0: (48.0, 2.0)
6test 51 datum: True
6test 52 datum: True
6test 53 forward6: (39142.269011, -229679.266845, 90.401497, 0.999981, 90.352206, 41.257592)
63 of 53 testCss.py tests (5.7%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 177.291 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testDatums.py
6testing testDatums.py 22.09.02 (module pygeodesy.datums 22.10.05)
6test 1 ellipsoid: True
6test 2 transform: True
6test 3 datum: True
6test 4 TestEllipsiod: name='TestEllipsiod', a=1000, b=1000, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=1000, L=1570.79632679, R1=1000, R2=1000, R3=1000, Rbiaxial=1000, Rtriaxial=1000
6test 5 TestTransform: name='TestTransform', tx=0, ty=0, tz=0, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 6 TestDatum: name='TestDatum', ellipsoid=Ellipsoids.TestEllipsiod, transform=Transforms.TestTransform
6test 7 ED50.inverse().inverse(): True
6test 8 Sphere: True
6test 9 BD72: name='BD72', ellipsoid=Ellipsoids.Intl1924, transform=Transforms.BD72
6test 10 Intl1924: name='Intl1924', a=6378388, b=6356911.94612795, f_=297, f=0.003367, f2=0.00337838, n=0.00168634, e=0.08199189, e2=0.00672267, e22=0.00676817, e32=0.00337267, A=6367654.50005758, L=10002288.29898944, R1=6371229.31537598, R2=6371227.71133444, R3=6371221.26587487, Rbiaxial=6367659.02704315, Rtriaxial=6373025.77129687
6test 11 BD72: name='BD72', tx=106.86863, ty=-52.29778, tz=103.72389, rx=-0, ry=-0, rz=-0.00001, s=1.2727, s1=1, sx=-0.33657, sy=-0.45696, sz=-1.84218
6test 12 DHDN: name='DHDN', ellipsoid=Ellipsoids.Bessel1841, transform=Transforms.DHDN
6test 13 Bessel1841: name='Bessel1841', a=6377397.155, b=6356078.962818, f_=299.1528128, f=0.00334277, f2=0.00335398, n=0.00167418, e=0.08169683, e2=0.00667437, e22=0.00671922, e32=0.00334836, A=6366742.52023395, L=10000855.76443237, R1=6370291.09093933, R2=6370289.51012659, R3=6370283.15821523, Rbiaxial=6366746.98155108, Rtriaxial=6372074.29334012
6test 14 DHDN: name='DHDN', tx=-591.28, ty=-81.35, tz=-396.39, rx=0.00001, ry=-0, rz=-0.00001, s=-9.82, s1=0.99999, sx=1.477, sy=-0.0736, sz=-1.458
6test 15 ED50: name='ED50', ellipsoid=Ellipsoids.Intl1924, transform=Transforms.ED50
6test 16 Intl1924: name='Intl1924', a=6378388, b=6356911.94612795, f_=297, f=0.003367, f2=0.00337838, n=0.00168634, e=0.08199189, e2=0.00672267, e22=0.00676817, e32=0.00337267, A=6367654.50005758, L=10002288.29898944, R1=6371229.31537598, R2=6371227.71133444, R3=6371221.26587487, Rbiaxial=6367659.02704315, Rtriaxial=6373025.77129687
6test 17 ED50: name='ED50', tx=89.5, ty=93.8, tz=123.1, rx=0, ry=0, rz=0, s=-1.2, s1=1, sx=0, sy=0, sz=0.156
6test 18 GDA2020: name='GDA2020', ellipsoid=Ellipsoids.GRS80, transform=Transforms.WGS84
6test 19 GRS80: name='GRS80', a=6378137, b=6356752.31414035, f_=298.2572221, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14577104, L=10001965.72923046, R1=6371008.77138012, R2=6371007.18088351, R3=6371000.78997414, Rbiaxial=6367453.634464, Rtriaxial=6372797.55593326
6test 20 WGS84: name='WGS84', tx=0, ty=0, tz=0, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 21 GRS80: name='GRS80', ellipsoid=Ellipsoids.GRS80, transform=Transforms.WGS84
6test 22 GRS80: name='GRS80', a=6378137, b=6356752.31414035, f_=298.2572221, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14577104, L=10001965.72923046, R1=6371008.77138012, R2=6371007.18088351, R3=6371000.78997414, Rbiaxial=6367453.634464, Rtriaxial=6372797.55593326
6test 23 WGS84: name='WGS84', tx=0, ty=0, tz=0, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 24 Irl1975: name='Irl1975', ellipsoid=Ellipsoids.AiryModified, transform=Transforms.Irl1975
6test 25 AiryModified: name='AiryModified', a=6377340.189, b=6356034.44793853, f_=299.3249646, f=0.00334085, f2=0.00335205, n=0.00167322, e=0.08167337, e2=0.00667054, e22=0.00671533, e32=0.00334643, A=6366691.77461988, L=10000776.05340819, R1=6370238.27531284, R2=6370236.69633043, R3=6370230.35179013, Rbiaxial=6366696.2307627, Rtriaxial=6372020.43236847
6test 26 Irl1975: name='Irl1975', tx=-482.53, ty=130.596, tz=-564.557, rx=-0.00001, ry=-0, rz=-0, s=-1.1, s1=1, sx=-1.042, sy=-0.214, sz=-0.631
6test 27 Krassovski1940: name='Krassovski1940', ellipsoid=Ellipsoids.Krassovski1940, transform=Transforms.Krassovski1940
6test 28 Krassovski1940: name='Krassovski1940', a=6378245, b=6356863.01877305, f_=298.3, f=0.00335233, f2=0.00336361, n=0.00167898, e=0.08181333, e2=0.00669342, e22=0.00673853, e32=0.00335795, A=6367558.49687498, L=10002137.49754285, R1=6371117.67292435, R2=6371116.08285656, R3=6371109.69367439, Rbiaxial=6367562.98435553, Rtriaxial=6372906.23027515
6test 29 Krassovski1940: name='Krassovski1940', tx=-24, ty=123, tz=94, rx=-0, ry=0, rz=0, s=-2.423, s1=1, sx=-0.02, sy=0.26, sz=0.13
6test 30 Krassowsky1940: name='Krassowsky1940', ellipsoid=Ellipsoids.Krassowsky1940, transform=Transforms.Krassowsky1940
6test 31 Krassowsky1940: name='Krassowsky1940', a=6378245, b=6356863.01877305, f_=298.3, f=0.00335233, f2=0.00336361, n=0.00167898, e=0.08181333, e2=0.00669342, e22=0.00673853, e32=0.00335795, A=6367558.49687498, L=10002137.49754285, R1=6371117.67292435, R2=6371116.08285656, R3=6371109.69367439, Rbiaxial=6367562.98435553, Rtriaxial=6372906.23027515
6test 32 Krassowsky1940: name='Krassowsky1940', tx=-24, ty=123, tz=94, rx=-0, ry=0, rz=0, s=-2.423, s1=1, sx=-0.02, sy=0.26, sz=0.13
6test 33 MGI: name='MGI', ellipsoid=Ellipsoids.Bessel1841, transform=Transforms.MGI
6test 34 Bessel1841: name='Bessel1841', a=6377397.155, b=6356078.962818, f_=299.1528128, f=0.00334277, f2=0.00335398, n=0.00167418, e=0.08169683, e2=0.00667437, e22=0.00671922, e32=0.00334836, A=6366742.52023395, L=10000855.76443237, R1=6370291.09093933, R2=6370289.51012659, R3=6370283.15821523, Rbiaxial=6366746.98155108, Rtriaxial=6372074.29334012
6test 35 MGI: name='MGI', tx=-577.326, ty=-90.129, tz=-463.92, rx=0.00002, ry=0.00001, rz=0.00003, s=-2.423, s1=1, sx=5.137, sy=1.474, sz=5.297
6test 36 NAD27: name='NAD27', ellipsoid=Ellipsoids.Clarke1866, transform=Transforms.NAD27
6test 37 Clarke1866: name='Clarke1866', a=6378206.4, b=6356583.8, f_=294.97869821, f=0.00339008, f2=0.00340161, n=0.00169792, e=0.08227185, e2=0.00676866, e22=0.00681478, e32=0.00339582, A=6367399.68916978, L=10001888.04298286, R1=6370998.86666667, R2=6370997.240633, R3=6370990.70659881, Rbiaxial=6367404.2783313, Rtriaxial=6372807.62791066
6test 38 NAD27: name='NAD27', tx=8, ty=-160, tz=-176, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 39 NAD83: name='NAD83', ellipsoid=Ellipsoids.GRS80, transform=Transforms.NAD83
6test 40 GRS80: name='GRS80', a=6378137, b=6356752.31414035, f_=298.2572221, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14577104, L=10001965.72923046, R1=6371008.77138012, R2=6371007.18088351, R3=6371000.78997414, Rbiaxial=6367453.634464, Rtriaxial=6372797.55593326
6test 41 NAD83: name='NAD83', tx=1.004, ty=-1.91, tz=-0.515, rx=0, ry=0, rz=0, s=-0.0015, s1=1, sx=0.0267, sy=0.00034, sz=0.011
6test 42 NTF: name='NTF', ellipsoid=Ellipsoids.Clarke1880IGN, transform=Transforms.NTF
6test 43 Clarke1880IGN: name='Clarke1880IGN', a=6378249.2, b=6356515, f_=293.46602129, f=0.00340755, f2=0.0034192, n=0.00170668, e=0.08248326, e2=0.00680349, e22=0.00685009, e32=0.00341336, A=6367386.73667336, L=10001867.69724907, R1=6371004.46666667, R2=6371002.82383112, R3=6370996.22212395, Rbiaxial=6367391.37333829, Rtriaxial=6372822.59907505
6test 44 NTF: name='NTF', tx=-168, ty=-60, tz=320, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 45 OSGB36: name='OSGB36', ellipsoid=Ellipsoids.Airy1830, transform=Transforms.OSGB36
6test 46 Airy1830: name='Airy1830', a=6377563.396, b=6356256.90923729, f_=299.3249646, f=0.00334085, f2=0.00335205, n=0.00167322, e=0.08167337, e2=0.00667054, e22=0.00671533, e32=0.00334643, A=6366914.60892522, L=10001126.0807165, R1=6370461.23374576, R2=6370459.65470808, R3=6370453.30994572, Rbiaxial=6366919.065224, Rtriaxial=6372243.45317691
6test 47 OSGB36: name='OSGB36', tx=-446.448, ty=125.157, tz=-542.06, rx=-0, ry=-0, rz=-0, s=20.4894, s1=1.00002, sx=-0.1502, sy=-0.247, sz=-0.8421
6test 48 Potsdam: name='Potsdam', ellipsoid=Ellipsoids.Bessel1841, transform=Transforms.Bessel1841
6test 49 Bessel1841: name='Bessel1841', a=6377397.155, b=6356078.962818, f_=299.1528128, f=0.00334277, f2=0.00335398, n=0.00167418, e=0.08169683, e2=0.00667437, e22=0.00671922, e32=0.00334836, A=6366742.52023395, L=10000855.76443237, R1=6370291.09093933, R2=6370289.51012659, R3=6370283.15821523, Rbiaxial=6366746.98155108, Rtriaxial=6372074.29334012
6test 50 Bessel1841: name='Bessel1841', tx=-582, ty=-105, tz=-414, rx=-0.00001, ry=-0, rz=0.00001, s=-8.3, s1=0.99999, sx=-1.04, sy=-0.35, sz=3.08
6test 51 Sphere: name='Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.WGS84
6test 52 Sphere: name='Sphere', a=6371008.771415, b=6371008.771415, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371008.771415, L=10007557.17611675, R1=6371008.771415, R2=6371008.771415, R3=6371008.771415, Rbiaxial=6371008.771415, Rtriaxial=6371008.771415
6test 53 WGS84: name='WGS84', tx=0, ty=0, tz=0, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 54 TokyoJapan: name='TokyoJapan', ellipsoid=Ellipsoids.Bessel1841, transform=Transforms.TokyoJapan
6test 55 Bessel1841: name='Bessel1841', a=6377397.155, b=6356078.962818, f_=299.1528128, f=0.00334277, f2=0.00335398, n=0.00167418, e=0.08169683, e2=0.00667437, e22=0.00671922, e32=0.00334836, A=6366742.52023395, L=10000855.76443237, R1=6370291.09093933, R2=6370289.51012659, R3=6370283.15821523, Rbiaxial=6366746.98155108, Rtriaxial=6372074.29334012
6test 56 TokyoJapan: name='TokyoJapan', tx=148, ty=-507, tz=-685, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 57 WGS72: name='WGS72', ellipsoid=Ellipsoids.WGS72, transform=Transforms.WGS72
6test 58 WGS72: name='WGS72', a=6378135, b=6356750.52001609, f_=298.26, f=0.00335278, f2=0.00336406, n=0.0016792, e=0.08181881, e2=0.00669432, e22=0.00673943, e32=0.0033584, A=6367447.24862383, L=10001962.74919858, R1=6371006.84000536, R2=6371005.24953886, R3=6370998.8587507, Rbiaxial=6367451.7372317, Rtriaxial=6372795.60727472
6test 59 WGS72: name='WGS72', tx=0, ty=0, tz=-4.5, rx=0, ry=0, rz=0, s=-0.22, s1=1, sx=0, sy=0, sz=0.554
6test 60 WGS84: name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84
6test 61 WGS84: name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594
6test 62 WGS84: name='WGS84', tx=0, ty=0, tz=0, rx=0, ry=0, rz=0, s=0, s1=1, sx=0, sy=0, sz=0
6test 63 total: 18
6all 63 testDatums.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 13.061 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testDeprecated.py
./pygeodesy/deprecated/__init__.py:135: DeprecationWarning: class L{pygeodesy.deprecated.HeightIDW} has been DEPRECATED, use class L{HeightIDWeuclidean}.
  deprecated_class(self.__class__)
./pygeodesy/deprecated/__init__.py:149: DeprecationWarning: class L{pygeodesy.deprecated.HeightIDW2} has been DEPRECATED, use class L{HeightIDWequirectangular}.
  deprecated_class(self.__class__)
./pygeodesy/deprecated/__init__.py:164: DeprecationWarning: class L{pygeodesy.deprecated.HeightIDW3} has been DEPRECATED, use class L{HeightIDWhaversine}.
  deprecated_class(self.__class__)
./test/testDeprecated.py:38: DeprecationWarning: function L{pygeodesy.deprecated.areaof} has been DEPRECATED, use function L{pygeodesy.areaOf}.
  self.test('areaof', areaof(p, radius=R_MA), '7.086883e+09', fmt='%.6e')
./test/testDeprecated.py:41: DeprecationWarning: function L{pygeodesy.deprecated.bounds} has been DEPRECATED, use function L{pygeodesy.boundsOf}.
  b = map2(float, bounds(p))
./test/testDeprecated.py:44: DeprecationWarning: function L{pygeodesy.deprecated.anStr} has been DEPRECATED, use function L{pygeodesy.anstr}.
  self.test('anStr', anStr('a-b?_'), 'a-b__')
./test/testDeprecated.py:46: DeprecationWarning: function L{pygeodesy.deprecated.clipStr} has been DEPRECATED, use function L{pygeodesy.clips}.
  self.test('clipStr', clipStr('test/testBasics.py', limit=12), 'test/t....ics.py')
./test/testDeprecated.py:48: DeprecationWarning: function L{pygeodesy.deprecated.decodeEPSG2} has been DEPRECATED, use function L{epsg.decode2}.
  self.test('decodeEPSG2', decodeEPSG2(32712), "(12, 'S')")
./test/testDeprecated.py:49: DeprecationWarning: function L{pygeodesy.deprecated.encodeEPSG} has been DEPRECATED, use function L{epsg.encode}.
  self.test('encodeEPSG', encodeEPSG(12, hemipole='S'), '32712')
./test/testDeprecated.py:51: DeprecationWarning: function L{pygeodesy.deprecated.equirectangular3} has been DEPRECATED, use function C{equirectangular_}.
  t = equirectangular3(0, 2, 3, 4)
./test/testDeprecated.py:55: DeprecationWarning: function L{pygeodesy.deprecated.fStr} has been DEPRECATED, use function L{fstr}.
  self.test('fStr', fStr(0.123, prec=-6), '0.123000')
./test/testDeprecated.py:56: DeprecationWarning: function L{pygeodesy.deprecated.fStr} has been DEPRECATED, use function L{fstr}.
  self.test('fStr', fStr(0.123, prec=+6), '0.123')
./test/testDeprecated.py:57: DeprecationWarning: function L{pygeodesy.deprecated.fStr} has been DEPRECATED, use function L{fstr}.
  self.test('fStr', fStr((0.123, 456.789), prec=+6), '0.123, 456.789')
./test/testDeprecated.py:58: DeprecationWarning: function L{pygeodesy.deprecated.fStr} has been DEPRECATED, use function L{fstr}.
  self.test('fStr', fStr(0.123, prec=-5, fmt='%.*e'), '1.23000e-01')
./test/testDeprecated.py:59: DeprecationWarning: function L{pygeodesy.deprecated.fStr} has been DEPRECATED, use function L{fstr}.
  self.test('fStr', fStr(0.123, prec=+5, fmt='%.*e'), '1.23e-01')
./test/testDeprecated.py:60: DeprecationWarning: function L{pygeodesy.deprecated.fStr} has been DEPRECATED, use function L{fstr}.
  self.test('fStr', fStr(0.123, prec=+6, fmt='%.*f'), '0.123')
./test/testDeprecated.py:62: DeprecationWarning: function L{pygeodesy.deprecated.hypot3} has been DEPRECATED, use function L{pygeodesy.hypot_}.
  h = hypot3(3000, 200, 10)
./test/testDeprecated.py:67: DeprecationWarning: function L{pygeodesy.deprecated.isenclosedby} has been DEPRECATED, use function L{pygeodesy.isenclosedBy}.
  self.test('isenclosedby', isenclosedby(LatLon(45.5, 1.5), b), True)
./test/testDeprecated.py:71: DeprecationWarning: function L{pygeodesy.deprecated.nearestOn3} has been DEPRECATED, use function L{pygeodesy.nearestOn5}.
  t = nearestOn3(p, b, adjust=False)
./test/testDeprecated.py:74: DeprecationWarning: function L{pygeodesy.deprecated.nearestOn4} has been DEPRECATED, use function L{pygeodesy.nearestOn5}.
  t = nearestOn4(p, b, adjust=False)
./test/testDeprecated.py:78: DeprecationWarning: function L{pygeodesy.deprecated.parseUTM} has been DEPRECATED, use function L{parseUTM5}.
  t = parseUTM('18 N 516620 4574500', Utm=None)  # Milford, PA
./test/testDeprecated.py:82: DeprecationWarning: function L{pygeodesy.deprecated.perimeterof} has been DEPRECATED, use function L{perimeterOf}.
  self.test('perimeterof', perimeterof(p, radius=R_MA), '2.687460e+05', fmt='%.6e')
./test/testDeprecated.py:85: DeprecationWarning: function L{pygeodesy.deprecated.polygon} has been DEPRECATED, use function L{points2}.
  self.test('polygon', polygon(p)[0], 3)
./test/testDeprecated.py:87: DeprecationWarning: function L{pygeodesy.deprecated.simplify2} has been DEPRECATED, use function L{pygeodesy.simplifyRW}.
  t = simplify2(RdpFFI, 16, adjust=True, shortest=False)
./test/testDeprecated.py:90: DeprecationWarning: function L{pygeodesy.deprecated.toUtm} has been DEPRECATED, use function L{pygeodesy.toUtm8}.
  t = toUtm('50°52′10″N', '115°39′03″W', Utm=None, name='Mt Assiniboine')
./test/testDeprecated.py:93: DeprecationWarning: function L{pygeodesy.deprecated.utmZoneBand2} has been DEPRECATED, use function L{pygeodesy.utmZoneBand5}.
  t = utmZoneBand2('50°52′10″N', '115°39′03″W')
6testing testDeprecated.py 22.09.16 (module pygeodesy.deprecated 22.09.23)
6test 1 HeightIDW: True
6test 2 HeightIDW2: True
6test 3 HeightIDW3: True

6test 4 areaof: 7.086883e+09
6test 5 bounds: (-85.0, -180.0, 85.0, 90.0)
6test 6 anStr: a-b__
6test 7 clipStr: test/t....ics.py
6test 8 decodeEPSG2: (12, 'S')
6test 9 encodeEPSG: 32712
6test 10 equirectangular3: 3
6test 11 equirectangular3: 12.997
6test 12 fStr: 0.123000
6test 13 fStr: 0.123
6test 14 fStr: 0.123, 456.789
6test 15 fStr: 1.23000e-01
6test 16 fStr: 1.23e-01
6test 17 fStr: 0.123
6test 18 hypot3: 3006.675905
6test 19 isenclosedby: True
6test 20 nearestOn3: 3
6test 21 nearestOn3: (45.5, 1.5)
6test 22 nearestOn4: 4
6test 23 nearestOn4: (45.5, 1.5)
6test 24 parseUTM: (18, 'N', 516620.0, 4574500.0)
6test 25 perimeterof: 2.687460e+05
6test 26 polygon: 3
6test 27 simplify2: 4
6test 28 toUtm: 6
6test 29 utmZoneBand2: (11, 'U')

6test 30 HeightIDW: True
6test 31 HeightIDW2: True
6test 32 HeightIDW3: True

6test 33 areaof: 7.086883e+09
6test 34 bounds: (-85.0, -180.0, 85.0, 90.0)
6test 35 anStr: a-b__
6test 36 clipStr: test/t....ics.py
6test 37 decodeEPSG2: (12, 'S')
6test 38 encodeEPSG: 32712
6test 39 equirectangular3: 3
6test 40 equirectangular3: 12.997
6test 41 fStr: 0.123000
6test 42 fStr: 0.123
6test 43 fStr: 0.123, 456.789
6test 44 fStr: 1.23000e-01
6test 45 fStr: 1.23e-01
6test 46 fStr: 0.123
6test 47 hypot3: 3006.675905
6test 48 isenclosedby: True
6test 49 nearestOn3: 3
6test 50 nearestOn3: (45.5, 1.5)
6test 51 nearestOn4: 4
6test 52 nearestOn4: (45.5, 1.5)
6test 53 parseUTM: (18, 'N', 516620.0, 4574500.0)
6test 54 perimeterof: 2.687460e+05
6test 55 polygon: 3
6test 56 simplify2: 4
6test 57 toUtm: 6
6test 58 utmZoneBand2: (11, 'U')

6test 59 HeightIDW: True
6test 60 HeightIDW2: True
6test 61 HeightIDW3: True

6test 62 areaof: 7.086883e+09
6test 63 bounds: (-85.0, -180.0, 85.0, 90.0)
6test 64 anStr: a-b__
6test 65 clipStr: test/t....ics.py
6test 66 decodeEPSG2: (12, 'S')
6test 67 encodeEPSG: 32712
6test 68 equirectangular3: 3
6test 69 equirectangular3: 12.997
6test 70 fStr: 0.123000
6test 71 fStr: 0.123
6test 72 fStr: 0.123, 456.789
6test 73 fStr: 1.23000e-01
6test 74 fStr: 1.23e-01
6test 75 fStr: 0.123
6test 76 hypot3: 3006.675905
6test 77 isenclosedby: True
6test 78 nearestOn3: 3
6test 79 nearestOn3: (45.5, 1.5)
6test 80 nearestOn4: 4
6test 81 nearestOn4: (45.5, 1.5)
6test 82 parseUTM: (18, 'N', 516620.0, 4574500.0)
6test 83 perimeterof: 2.687460e+05
6test 84 polygon: 3
6test 85 simplify2: 4
6test 86 toUtm: 6
6test 87 utmZoneBand2: (11, 'U')

6test 88 isDEPRECATED(EPS1_2): True
6test 89 isDEPRECATED(MANTIS): True
6test 90 isDEPRECATED(OK): True
6test 91 isDEPRECATED(bases): True
6test 92 isDEPRECATED(datum): True
6test 93 isDEPRECATED(nvector): True
6test 94 isDEPRECATED(ClipCS3Tuple): True
6test 95 isDEPRECATED(EcefCartesian): True
6test 96 isDEPRECATED(EasNorExact4Tuple): True
6test 97 isDEPRECATED(HeightIDW): True
6test 98 isDEPRECATED(HeightIDW2): True
6test 99 isDEPRECATED(HeightIDW3): True
6test 100 isDEPRECATED(LatLonExact4Tuple): True
6test 101 isDEPRECATED(Ned3Tuple): True
6test 102 isDEPRECATED(RefFrameError): True
6test 103 isDEPRECATED(Rhumb7Tuple): True
6test 104 isDEPRECATED(Transform7Tuple): True
6test 105 isDEPRECATED(UtmUps4Tuple): True
6test 106 isDEPRECATED(anStr): True
6test 107 isDEPRECATED(areaof): True
6test 108 isDEPRECATED(bounds): True
6test 109 isDEPRECATED(clipCS3): True
6test 110 isDEPRECATED(clipDMS): True
6test 111 isDEPRECATED(clipStr): True
6test 112 isDEPRECATED(collins): True
6test 113 isDEPRECATED(decodeEPSG2): True
6test 114 isDEPRECATED(encodeEPSG): True
6test 115 isDEPRECATED(equirectangular3): True
6test 116 isDEPRECATED(enStr2): True
6test 117 isDEPRECATED(false2f): True
6test 118 isDEPRECATED(falsed2f): True
6test 119 isDEPRECATED(fStr): True
6test 120 isDEPRECATED(fStrzs): True
6test 121 isDEPRECATED(hypot3): True
6test 122 isDEPRECATED(inStr): True
6test 123 isDEPRECATED(isDEPRECATED): False  FAILED, KNOWN, expected True
6test 124 isDEPRECATED(isenclosedby): True
6test 125 isDEPRECATED(joined): True
6test 126 isDEPRECATED(joined_): True
6test 127 isDEPRECATED(nearestOn3): True
6test 128 isDEPRECATED(nearestOn4): True
6test 129 isDEPRECATED(parseUTM): True
6test 130 isDEPRECATED(perimeterof): True
6test 131 isDEPRECATED(polygon): True
6test 132 isDEPRECATED(scalar): True
6test 133 isDEPRECATED(simplify2): True
6test 134 isDEPRECATED(tienstra): True
6test 135 isDEPRECATED(toUtm): True
6test 136 isDEPRECATED(unsign0): True
6test 137 isDEPRECATED(unStr): True
6test 138 isDEPRECATED(utmZoneBand2): True
679 of 138 testDeprecated.py tests (57.2%) FAILED, incl. 1 KNOWN plus 78 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 7.016 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testDms.py
6testing testDms.py 22.09.20 (module pygeodesy.dms 22.09.24)
6test 1 parseDMS('0.0°'): 0.0
6test 2 parseDMS('0°'): 0.0
6test 3 parseDMS('000°00'00"'): 0.0
6test 4 parseDMS('000°00'00.0"'): 0.0
6test 5 parseDMS('000° 00'00"'): 0.0
6test 6 parseDMS('000°00 ' 00.0"'): 0.0
6test 7 parseDMS('000° 00' 00.0'): 0.0
6test 8 parseDMS('000°-00′-00.0"'): 0.0
6test 9 parseDDDMMSS(1): 1.0
6test 10 parseDMS(1): 1.0
6test 11 parseDDDMMSS(12): 12.0
6test 12 parseDMS(12): 12.0
6test 13 parseDDDMMSS(123): 123.0
6test 14 parseDMS(123): 123.0
6test 15 parseDDDMMSS(1234): 12.567
6test 16 parseDMS(1234): 1234.0
6test 17 parseDDDMMSS(12345): 123.75
6test 18 parseDMS(12345): 12345.0
6test 19 parseDDDMMSS(123456): 12.582
6test 20 parseDMS(123456): 123456.0
6test 21 parseDDDMMSS(1234567): 123.769
6test 22 parseDMS(1234567): 1234567.0
6test 23 parseDDDMMSS(12345678): 1234.955
6test 24 parseDMS(12345678): 12345678.0
6test 25 parseDDDMMSS(0.1): 0.1
6test 26 parseDMS(0.1): 0.1
6test 27 parseDDDMMSS(1.2): 1.2
6test 28 parseDMS(1.2): 1.2
6test 29 parseDDDMMSS(12.3): 12.3
6test 30 parseDMS(12.3): 12.3
6test 31 parseDDDMMSS(123.4): 123.4
6test 32 parseDMS(123.4): 123.4
6test 33 parseDDDMMSS(1234.5): 12.575
6test 34 parseDMS(1234.5): 1234.5
6test 35 parseDDDMMSS(12345.6): 123.76
6test 36 parseDMS(12345.6): 12345.6
6test 37 parseDDDMMSS(123456.7): 12.582
6test 38 parseDMS(123456.7): 123456.7
6test 39 parseDDDMMSS('1N'): 1.0
6test 40 parseDMS('1N'): 1.0
6test 41 parseDDDMMSS('12S'): -12.0
6test 42 parseDMS('12S'): -12.0
6test 43 parseDDDMMSS('012.3W'): -12.3
6test 44 parseDMS('012.3W'): -12.3
6test 45 parseDDDMMSS('123E'): 123.0
6test 46 parseDMS('123E'): 123.0
6test 47 parseDDDMMSS('1234N'): 12.567
6test 48 parseDMS('1234N'): 1234.0
6test 49 parseDDDMMSS('12345E'): 123.75
6test 50 parseDMS('12345E'): 12345.0
6test 51 parseDDDMMSS('1234.5S'): -12.575
6test 52 parseDMS('1234.5S'): -1234.5
6test 53 parseDDDMMSS('12345.6E'): 123.76
6test 54 parseDMS('12345.6E'): 12345.6
6test 55 parseDDDMMSS('123456.7S'): -12.582
6test 56 parseDMS('123456.7S'): -123456.7
6test 57 parseDDDMMSS('1234567.8W'): -123.769
6test 58 parseDMS('1234567.8W'): -1234567.8
6test 59 parseDDDMMSS('12345678E'): 12345678.0
6test 60 parseDMS('12345678E'): 12345678.0
6test 61 parseDDDMMSS(345.0, NS): 3.75
6test 62 parseDDDMMSS(345.0, EW): 345.0
6test 63 parseDDDMMSS(5430.0, NS): 54.5
6test 64 parseDDDMMSS(5430.0, EW): 54.5
6test 65 parseDDDMMSS(76.5432, sexagecimal=False): 76.5432
6test 66 parseDDDMMSS(76.5432, sexagecimal=True): 76.9089
6test 67 parseDDDMMSS(00.0102, sexagecimal=False): 0.0102
6test 68 parseDDDMMSS(00.0102, sexagecimal=True): 0.0172
6test 69 parseDDDMMSS('12E'): ParseError("sexagecimal (False), strDDDMMSS ('12E') or suffix ('NSEW'): form DD applies N-S: invalid")
6test 70 parseDMS('12E'): 12.0
6test 71 parseDDDMMSS('012.3S'): ParseError("sexagecimal (False), strDDDMMSS ('012.3S') or suffix ('NSEW'): form DDD applies E-W: invalid")
6test 72 parseDMS('012.3S'): -12.3
6test 73 parseDDDMMSS('123N'): ParseError("sexagecimal (False), strDDDMMSS ('123N') or suffix ('NSEW'): form DDD applies E-W: invalid")
6test 74 parseDMS('123N'): 123.0
6test 75 parseDDDMMSS('1234E'): ParseError("sexagecimal (False), strDDDMMSS ('1234E') or suffix ('NSEW'): form DDMM applies N-S: invalid")
6test 76 parseDMS('1234E'): 1234.0
6test 77 parseDDDMMSS('12345N'): ParseError("sexagecimal (False), strDDDMMSS ('12345N') or suffix ('NSEW'): form DDDMM applies E-W: invalid")
6test 78 parseDMS('12345N'): 12345.0
6test 79 parseDDDMMSS('1234.5W'): ParseError("sexagecimal (False), strDDDMMSS ('1234.5W') or suffix ('NSEW'): form DDMM applies N-S: invalid")
6test 80 parseDMS('1234.5W'): -1234.5
6test 81 parseDDDMMSS('123456E'): ParseError("sexagecimal (False), strDDDMMSS ('123456E') or suffix ('NSEW'): form DDMMSS applies N-S: invalid")
6test 82 parseDMS('123456E'): 123456.0
6test 83 parseDDDMMSS('1234567S'): ParseError("sexagecimal (False), strDDDMMSS ('1234567S') or suffix ('NSEW'): form DDDMMSS applies E-W: invalid")
6test 84 parseDMS('1234567S'): -1234567.0
6test 85 parseDMS: strDMS (181) or suffix ('NSEW'): 181 beyond 180.0 degrees
6test 86 parseDMS: -90.0
6test 87 parse3llh: 51.477811, -0.001475, 0.0
6test 88 toDMS(dm): 46°00.0′
6test 89 toDMS(dm): 46°00.0′
6test 90 toDMS(dm): 45°59.99′
6test 91 toDMS(dm): 45°59.999′
6test 92 toDMS(dms): 46°00′00.0″
6test 93 toDMS(dms): 45°59′59.96″
6test 94 toDMS(dms): 45°59′59.964″
6test 95 toDMS(d60): 45.5959964
6test 96 toDMS(d60): 45°45′45.36″
6test 97 toDMS(d60): 45d45m45.36s
6test 98 normDMS: 45°45′45.36″
6test 99 parseDMS: 45.7626
6test 100 toDMS(d): 45.7626°
6test 101 toDMS(d): -45.7626°
6test 102 toDMS(dm): 45°45.756′
6test 103 toDMS(dm): -45°45.756′
6test 104 toDMS(dms): 45°45′45.36″
6test 105 toDMS(dms): -45°45′45.36″
6test 106 toDMS(deg): 45.7626
6test 107 toDMS(deg): -45.7626
6test 108 toDMS(min): 4545.756
6test 109 toDMS(min): -4545.756
6test 110 toDMS(sec): 454545.36
6test 111 toDMS(sec): -454545.36
6test 112 toDMS(rad): 0.79871
6test 113 toDMS(rad): -0.79871
6test 114 toDMS(d60): 45.4545
6test 115 toDMS(d60): -45.4545
6test 116 toDMS(d): 45.7626°
6test 117 toDMS(d): -45.7626°
6test 118 toDMS(dm): 45°45.7560′
6test 119 toDMS(dm): -45°45.7560′
6test 120 toDMS(dms): 45°45′45.36″
6test 121 toDMS(dms): -45°45′45.36″
6test 122 toDMS(deg): 45.762600
6test 123 toDMS(deg): -45.762600
6test 124 toDMS(min): 4545.75600
6test 125 toDMS(min): -4545.75600
6test 126 toDMS(sec): 454545.360
6test 127 toDMS(sec): -454545.360
6test 128 toDMS(rad): 0.798708
6test 129 toDMS(rad): -0.798708
6test 130 toDMS(d60): 45.4545360
6test 131 toDMS(d60): -45.4545360
6test 132 toDMS(-d): 45.7626°
6test 133 toDMS(-d): -45.7626°
6test 134 toDMS(-dm): 45°45.7560′
6test 135 toDMS(-dm): -45°45.7560′
6test 136 toDMS(-dms): 45°45′45.36″
6test 137 toDMS(-dms): -45°45′45.36″
6test 138 toDMS(-deg): 45.762600
6test 139 toDMS(-deg): -45.762600
6test 140 toDMS(-min): 4545.75600
6test 141 toDMS(-min): -4545.75600
6test 142 toDMS(-sec): 454545.360
6test 143 toDMS(-sec): -454545.360
6test 144 toDMS(-rad): 0.798708
6test 145 toDMS(-rad): -0.798708
6test 146 toDMS(-d60): 45.45453600
6test 147 toDMS(-d60): -45.45453600
6test 148 toDMS(+d): +45.7626°
6test 149 toDMS(+d): -45.7626°
6test 150 toDMS(+dm): +45°45.7560′
6test 151 toDMS(+dm): -45°45.7560′
6test 152 toDMS(+dms): +45°45′45.36″
6test 153 toDMS(+dms): -45°45′45.36″
6test 154 toDMS(+deg): +45.762600
6test 155 toDMS(+deg): -45.762600
6test 156 toDMS(+min): +4545.75600
6test 157 toDMS(+min): -4545.75600
6test 158 toDMS(+sec): +454545.360
6test 159 toDMS(+sec): -454545.360
6test 160 toDMS(+rad): +0.798708
6test 161 toDMS(+rad): -0.798708
6test 162 toDMS(+d60): +45.454536
6test 163 toDMS(+d60): -45.454536
6test 164 compassPoint(1,): N
6test 165 compassPoint(0,): N
6test 166 compassPoint(-1,): N
6test 167 compassPoint(359,): N
6test 168 compassPoint(24,): NNE
6test 169 compassPoint(24, 1): N
6test 170 compassPoint(24, 2): NE
6test 171 compassPoint(24, 3): NNE
6test 172 compassPoint(226,): SW
6test 173 compassPoint(226, 1): W
6test 174 compassPoint(226, 2): SW
6test 175 compassPoint(226, 3): SW
6test 176 compassPoint(237,): WSW
6test 177 compassPoint(237, 1): W
6test 178 compassPoint(237, 2): SW
6test 179 compassPoint(237, 3): WSW
6test 180 compassPoint(11.25,): NNE
6test 181 compassPoint(11.249,): N
6test 182 compassPoint(-11.25,): N
6test 183 compassPoint(348.749,): NNW
6test 184 compassPoint(45, 1): E
6test 185 compassPoint(44.99, 1): N
6test 186 compassPoint(45, 2): NE
6test 187 compassPoint(44.99, 2): NE
6test 188 compassPoint(45, 3): NE
6test 189 compassPoint(44.99, 3): NE
6test 190 compassPoint(45, 4): NE
6test 191 compassPoint(44.99, 4): NE
6test 192 compassPoint(22.5, 1): N
6test 193 compassPoint(22.49, 1): N
6test 194 compassPoint(22.5, 2): NE
6test 195 compassPoint(22.49, 2): N
6test 196 compassPoint(22.5, 3): NNE
6test 197 compassPoint(22.49, 3): NNE
6test 198 compassPoint(22.5, 4): NNE
6test 199 compassPoint(22.49, 4): NNE
6test 200 compassPoint(11.25, 1): N
6test 201 compassPoint(11.249, 1): N
6test 202 compassPoint(11.25, 2): N
6test 203 compassPoint(11.249, 2): N
6test 204 compassPoint(11.25, 3): NNE
6test 205 compassPoint(11.249, 3): N
6test 206 compassPoint(11.25, 4): NbE
6test 207 compassPoint(11.249, 4): NbE
6test 208 compassPoint(24, 1): N
6test 209 compassPoint(24, 2): NE
6test 210 compassPoint(24, 3): NNE
6test 211 compassPoint(24,): NNE
6test 212 compassPoint(18, 3): NNE
6test 213 compassPoint(11, 4): NbE
6test 214 compassPoint(30, 4): NEbN
6test 215 compassPoint(11.25): NbE
6test 216 compassPoint(33.75): NEbN
6test 217 compassPoint(56.25): NEbE
6test 218 compassPoint(78.75): EbN
6test 219 compassPoint(101.25): EbS
6test 220 compassPoint(123.75): SEbE
6test 221 compassPoint(146.25): SEbS
6test 222 compassPoint(168.75): SbE
6test 223 compassPoint(191.25): SbW
6test 224 compassPoint(213.75): SWbS
6test 225 compassPoint(236.25): SWbW
6test 226 compassPoint(258.75): WbS
6test 227 compassPoint(281.25): WbN
6test 228 compassPoint(303.75): NWbW
6test 229 compassPoint(326.25): NWbN
6test 230 compassPoint(348.75): NbW
6test 231 _DEG: +1.0101
6test 232 _MIN: +0.606′
6test 233 _SEC: +36.36″
6all 233 testDms.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 3.329 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testEcef.py
6testing testEcef.py 22.09.10
6test 1 EcefKarney: ...
6test 2 name: Test
6test 3 toStr: EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name='Test')  FAILED, KNOWN, expected EcefKarney
6test 4 a, f: a=6378137.0, f=0.003352811, datum=Datum(name='_Test', ellipsoid=Ellipsoids._Test, transform=Transforms.Identity), name='Test'  FAILED, KNOWN, expected EcefKarney
6test 5 copy(EcefKarney): (<class 'pygeodesy.ecef.EcefKarney'>, True)
6test 6 EcefKarney.copy(): (<class 'pygeodesy.ecef.EcefKarney'>, True)
6test 7 forward: 27.99, 86.93, 8820.0
6test 8 forward: 302271.4, 5635928.4, 2979666.1
6test 9 name: Test
6test 10 reverse: 302271.4, 5635928.4, 2979666.1
6test 11 reverse: 27.99, 86.93, 8820.01
6test 12 case: 2
6test 13 iteration: None
6test 14 name: Test
6test 15 reverse: 302000.0, 5636000.0, 2980000.0
6test 16 reverse: 27.99, 86.93, 9027.03
6test 17 case: 2
6test 18 iteration: None
6test 19 forward: 27.99, 86.93, 8820.0
6test 20 forward: 302271.43, 5635928.37, 2979666.13
6test 21 forward: 33.3, 44.4, 6000.0
6test 22 forward: 3816209.6, 3737108.55, 3485109.57
6test 23 reverse: 3816209.6, 3737108.55, 3485109.57
6test 24 reverse: 33.3, 44.4, 5999.996
6test 25 case: 2
6test 26 iteration: None
6test 27 reverse: 30000.0, 30000.0, 0.0
6test 28 reverse: 6.483, 45.0, -6335709.726
6test 29 case: 3
6test 30 iteration: None
6test 31 forward: 6.483, 45.0, -6335709.726
6test 32 forward: 30000.0, 30000.0, -0.0
6test 33 Vermeille: -168.919
6test 34 Vermeille: 190.939
6test 35 Vermeille: (65.772506, 169.060801)
6test 36 Vermeille: (1.147947, 3.141593)
6test 37 reverse-1: 45.0, 120.0, 1000.0
6test 38 forward-1: -2259149.0, 3912960.8, 4488055.5
6test 39 xyzh-1: -2259149.0, 3912960.8, 4488055.5, 1000.0
6test 40 philam-1: 0.7854, 2.0944
6test 41 reverse-2: 45.0, 120.0, 2000.0
6test 42 forward-2: -2259502.5, 3913573.2, 4488762.6
6test 43 xyzh-2: -2259502.5, 3913573.2, 4488762.6, 2000.0
6test 44 philam-2: 0.7854, 2.0944
6test 45 reverse-3: 45.0, 120.0, 3000.0
6test 46 forward-3: -2259856.1, 3914185.6, 4489469.7
6test 47 xyzh-3: -2259856.1, 3914185.6, 4489469.7, 3000.0
6test 48 philam-3: 0.7854, 2.0944
6test 49 reverse-4: 45.0, 120.0, 4000.0
6test 50 forward-4: -2260209.7, 3914798.0, 4490176.8
6test 51 xyzh-4: -2260209.7, 3914798.0, 4490176.8, 4000.0
6test 52 philam-4: 0.7854, 2.0944
6test 53 reverse-5: 45.0, 120.0, 10000.0
6test 54 forward-5: -2262331.0, 3918472.2, 4494419.5
6test 55 xyzh-5: -2262331.0, 3918472.2, 4494419.5, 10000.0
6test 56 philam-5: 0.7854, 2.0944
6test 57 reverse-6: 45.0, 120.0, 20000.0
6test 58 forward-6: -2265866.5, 3924595.9, 4501490.5
6test 59 xyzh-6: -2265866.5, 3924595.9, 4501490.5, 20000.0
6test 60 philam-6: 0.7854, 2.0944
6test 61 reverse-7: 45.0, 120.0, 100000.0
6test 62 forward-7: -2294150.8, 3973585.7, 4558059.1
6test 63 xyzh-7: -2294150.8, 3973585.7, 4558059.1, 100000.0
6test 64 philam-7: 0.7854, 2.0944
6test 65 reverse-8: 45.0, 120.0, 800000.0
6test 66 forward-8: -2541638.2, 4402246.4, 5053033.8
6test 67 xyzh-8: -2541638.2, 4402246.4, 5053033.8, 800000.0
6test 68 philam-8: 0.7854, 2.0944
6test 69 reverse-9: 45.0, 120.0, 1000000.0
6test 70 forward-9: -2612348.8, 4524720.9, 5194455.2
6test 71 xyzh-9: -2612348.8, 4524720.9, 5194455.2, 1000000.0
6test 72 philam-9: 0.7854, 2.0944
6test 73 sudano: 45.0, 0.0, 100000.0
6test 74 name: OS-UK
6test 75 forward: 53.61199036, -1.66444222, 299.8
6test 76 forward: 3790644.9, -110149.21, 5111482.97
6test 77 reverse: 3790644.9, -110149.21, 5111482.97
6test 78 reverse: 53.61199036, -1.66444223
6test 79 reverse.lat: 53°36′43.1653″N
6test 80 reverse.lon: 001°39′51.992″W
6test 81 reverse.height: 299.800
6test 82 case: 2
6test 83 iteration: None
6test 84 forward: -2430601.827685, -4702442.703125, 3546587.358103
6test 85 reverse: 34.0, -117.333569, 251.702
6test 86 forward_: -2430601.812953, -4702442.744488, 3546587.313654, 34.0, -117.333569, 251.702
6test 87 EcefError: (0.0, 0.0, 0.0, 90.0, 0.0, -6356752.31414, 3, None, Datum(name='Datum', ellipsoid=Ellipsoids.GRS80, transform=Transforms.Identity))  FAILED, KNOWN, expected (0.0, 0.0, ...)
6test 88 EcefError: height (None), lat (None) or lon (None)  FAILED, KNOWN, expected lat (None), lon (None) ...
6test 89 EcefKarney: EcefKarney(a=None, f=None) ellipsoid: type(earth) (None): not a Datum, Ellipsoid, Ellipsoid2 or a_f2Tuple  FAILED, KNOWN, expected EcefKarney
6test 90 EcefFarrell21: ...
6test 91 name: Test
6test 92 toStr: EcefFarrell21(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name='Test')  FAILED, KNOWN, expected EcefFarrell21
6test 93 a, f: a=6378137.0, f=0.003352811, datum=Datum(name='_Test', ellipsoid=Ellipsoids._Test, transform=Transforms.Identity), name='Test'  FAILED, KNOWN, expected EcefFarrell21
6test 94 copy(EcefFarrell21): (<class 'pygeodesy.ecef.EcefFarrell21'>, True)
6test 95 EcefFarrell21.copy(): (<class 'pygeodesy.ecef.EcefFarrell21'>, True)
6test 96 forward: 27.99, 86.93, 8820.0
6test 97 forward: 302271.4, 5635928.4, 2979666.1
6test 98 name: Test
6test 99 reverse: 302271.4, 5635928.4, 2979666.1
6test 100 reverse: 27.99, 86.93, 8820.01
6test 101 case: 1
6test 102 iteration: None
6test 103 name: Test
6test 104 reverse: 302000.0, 5636000.0, 2980000.0
6test 105 reverse: 27.99, 86.93, 9027.03
6test 106 case: 1
6test 107 iteration: None
6test 108 forward: 27.99, 86.93, 8820.0
6test 109 forward: 302271.43, 5635928.37, 2979666.13
6test 110 forward: 33.3, 44.4, 6000.0
6test 111 forward: 3816209.6, 3737108.55, 3485109.57
6test 112 reverse: 3816209.6, 3737108.55, 3485109.57
6test 113 reverse: 33.3, 44.4, 5999.996
6test 114 case: 1
6test 115 iteration: None
6test 116 reverse: 30000.0, 30000.0, 0.0
6test 117 reverse: 0.0, 45.0, -6335168.061  FAILED, KNOWN, expected 6.483, 45.0, -6335709.726
6test 118 case: 1
6test 119 iteration: None
6test 120 forward: 6.483, 45.0, -6335709.726
6test 121 forward: 30000.0, 30000.0, -0.0
6test 122 Vermeille: -168.919
6test 123 Vermeille: 190.939
6test 124 Vermeille: (65.772506, 169.060801)
6test 125 Vermeille: (1.147947, 3.141593)
6test 126 reverse-1: 45.0, 120.0, 1000.0
6test 127 forward-1: -2259149.0, 3912960.8, 4488055.5
6test 128 xyzh-1: -2259149.0, 3912960.8, 4488055.5, 1000.0
6test 129 philam-1: 0.7854, 2.0944
6test 130 reverse-2: 45.0, 120.0, 2000.0
6test 131 forward-2: -2259502.5, 3913573.2, 4488762.6
6test 132 xyzh-2: -2259502.5, 3913573.2, 4488762.6, 2000.0
6test 133 philam-2: 0.7854, 2.0944
6test 134 reverse-3: 45.0, 120.0, 3000.0
6test 135 forward-3: -2259856.1, 3914185.6, 4489469.7
6test 136 xyzh-3: -2259856.1, 3914185.6, 4489469.7, 3000.0
6test 137 philam-3: 0.7854, 2.0944
6test 138 reverse-4: 45.0, 120.0, 4000.0
6test 139 forward-4: -2260209.7, 3914798.0, 4490176.8
6test 140 xyzh-4: -2260209.7, 3914798.0, 4490176.8, 4000.0
6test 141 philam-4: 0.7854, 2.0944
6test 142 reverse-5: 45.0, 120.0, 10000.0
6test 143 forward-5: -2262331.0, 3918472.2, 4494419.5
6test 144 xyzh-5: -2262331.0, 3918472.2, 4494419.5, 10000.0
6test 145 philam-5: 0.7854, 2.0944
6test 146 reverse-6: 45.0, 120.0, 20000.0
6test 147 forward-6: -2265866.5, 3924595.9, 4501490.5
6test 148 xyzh-6: -2265866.5, 3924595.9, 4501490.5, 20000.0
6test 149 philam-6: 0.7854, 2.0944
6test 150 reverse-7: 45.0, 120.0, 100000.0
6test 151 forward-7: -2294150.8, 3973585.7, 4558059.1
6test 152 xyzh-7: -2294150.8, 3973585.7, 4558059.1, 100000.0
6test 153 philam-7: 0.7854, 2.0944
6test 154 reverse-8: 45.0, 120.0, 800000.0
6test 155 forward-8: -2541638.2, 4402246.4, 5053033.8
6test 156 xyzh-8: -2541638.2, 4402246.4, 5053033.8, 800000.0
6test 157 philam-8: 0.7854, 2.0944
6test 158 reverse-9: 45.0, 120.0, 1000000.0
6test 159 forward-9: -2612348.8, 4524720.9, 5194455.2
6test 160 xyzh-9: -2612348.8, 4524720.9, 5194455.2, 1000000.0
6test 161 philam-9: 0.7854, 2.0944
6test 162 sudano: 45.0, 0.0, 100000.0
6test 163 name: OS-UK
6test 164 forward: 53.61199036, -1.66444222, 299.8
6test 165 forward: 3790644.9, -110149.21, 5111482.97
6test 166 reverse: 3790644.9, -110149.21, 5111482.97
6test 167 reverse: 53.61199036, -1.66444223
6test 168 reverse.lat: 53°36′43.1653″N
6test 169 reverse.lon: 001°39′51.992″W
6test 170 reverse.height: 299.800
6test 171 case: 1
6test 172 iteration: None
6test 173 forward: -2430601.827685, -4702442.703125, 3546587.358103
6test 174 reverse: 34.0, -117.333569, 251.702
6test 175 forward_: -2430601.812953, -4702442.744488, 3546587.313654, 34.0, -117.333569, 251.702
6test 176 EcefError: (0.0, 0.0, 0.0, 0.0, 0.0, -6292741.654168, 1, None, Datum(name='Datum', ellipsoid=Ellipsoids.GRS80, transform=Transforms.Identity))  FAILED, KNOWN, expected (0.0, 0.0, ...)
6test 177 EcefError: height (None), lat (None) or lon (None)  FAILED, KNOWN, expected lat (None), lon (None) ...
6test 178 EcefFarrell21: EcefFarrell21(a=None, f=None) ellipsoid: type(earth) (None): not a Datum, Ellipsoid, Ellipsoid2 or a_f2Tuple  FAILED, KNOWN, expected EcefFarrell21
6test 179 EcefFarrell22: ...
6test 180 name: Test
6test 181 toStr: EcefFarrell22(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name='Test')  FAILED, KNOWN, expected EcefFarrell22
6test 182 a, f: a=6378137.0, f=0.003352811, datum=Datum(name='_Test', ellipsoid=Ellipsoids._Test, transform=Transforms.Identity), name='Test'  FAILED, KNOWN, expected EcefFarrell22
6test 183 copy(EcefFarrell22): (<class 'pygeodesy.ecef.EcefFarrell22'>, True)
6test 184 EcefFarrell22.copy(): (<class 'pygeodesy.ecef.EcefFarrell22'>, True)
6test 185 forward: 27.99, 86.93, 8820.0
6test 186 forward: 302271.4, 5635928.4, 2979666.1
6test 187 name: Test
6test 188 reverse: 302271.4, 5635928.4, 2979666.1
6test 189 reverse: 27.99, 86.93, 8820.01
6test 190 case: 1
6test 191 iteration: None
6test 192 name: Test
6test 193 reverse: 302000.0, 5636000.0, 2980000.0
6test 194 reverse: 27.99, 86.93, 9027.03
6test 195 case: 1
6test 196 iteration: None
6test 197 forward: 27.99, 86.93, 8820.0
6test 198 forward: 302271.43, 5635928.37, 2979666.13
6test 199 forward: 33.3, 44.4, 6000.0
6test 200 forward: 3816209.6, 3737108.55, 3485109.57
6test 201 reverse: 3816209.6, 3737108.55, 3485109.57
6test 202 reverse: 33.3, 44.4, 5999.996
6test 203 case: 1
6test 204 iteration: None
6test 205 reverse: 30000.0, 30000.0, 0.0
6test 206 reverse: -180.0, 45.0, -6420563.407  FAILED, KNOWN, expected 6.483, 45.0, -6335709.726
6test 207 case: 1
6test 208 iteration: None
6test 209 forward: 6.483, 45.0, -6335709.726
6test 210 forward: 30000.0, 30000.0, -0.0
6test 211 Vermeille: -168.919
6test 212 Vermeille: 190.939
6test 213 Vermeille: (65.772506, 169.060801)
6test 214 Vermeille: (1.147947, 3.141593)
6test 215 reverse-1: 45.0, 120.0, 1000.0
6test 216 forward-1: -2259149.0, 3912960.8, 4488055.5
6test 217 xyzh-1: -2259149.0, 3912960.8, 4488055.5, 1000.0
6test 218 philam-1: 0.7854, 2.0944
6test 219 reverse-2: 45.0, 120.0, 2000.0
6test 220 forward-2: -2259502.5, 3913573.2, 4488762.6
6test 221 xyzh-2: -2259502.5, 3913573.2, 4488762.6, 2000.0
6test 222 philam-2: 0.7854, 2.0944
6test 223 reverse-3: 45.0, 120.0, 3000.0
6test 224 forward-3: -2259856.1, 3914185.6, 4489469.7
6test 225 xyzh-3: -2259856.1, 3914185.6, 4489469.7, 3000.0
6test 226 philam-3: 0.7854, 2.0944
6test 227 reverse-4: 45.0, 120.0, 4000.0
6test 228 forward-4: -2260209.7, 3914798.0, 4490176.8
6test 229 xyzh-4: -2260209.7, 3914798.0, 4490176.8, 4000.0
6test 230 philam-4: 0.7854, 2.0944
6test 231 reverse-5: 45.0, 120.0, 10000.0
6test 232 forward-5: -2262331.0, 3918472.2, 4494419.5
6test 233 xyzh-5: -2262331.0, 3918472.2, 4494419.5, 10000.0
6test 234 philam-5: 0.7854, 2.0944
6test 235 reverse-6: 45.0, 120.0, 20000.0
6test 236 forward-6: -2265866.5, 3924595.9, 4501490.5
6test 237 xyzh-6: -2265866.5, 3924595.9, 4501490.5, 20000.0
6test 238 philam-6: 0.7854, 2.0944
6test 239 reverse-7: 45.0, 120.0, 100000.0
6test 240 forward-7: -2294150.8, 3973585.7, 4558059.1
6test 241 xyzh-7: -2294150.8, 3973585.7, 4558059.1, 100000.0
6test 242 philam-7: 0.7854, 2.0944
6test 243 reverse-8: 45.0, 120.0, 800000.005  FAILED, KNOWN, expected 45.0, 120.0, 800000.0
6test 244 forward-8: -2541638.2, 4402246.4, 5053033.8
6test 245 xyzh-8: -2541638.2, 4402246.4, 5053033.8, 800000.0
6test 246 philam-8: 0.7854, 2.0944
6test 247 reverse-9: 45.0, 120.0, 1000000.007  FAILED, KNOWN, expected 45.0, 120.0, 1000000.0
6test 248 forward-9: -2612348.8, 4524720.9, 5194455.2
6test 249 xyzh-9: -2612348.8, 4524720.9, 5194455.2, 1000000.0
6test 250 philam-9: 0.7854, 2.0944
6test 251 sudano: 45.0, 0.0, 100000.0
6test 252 name: OS-UK
6test 253 forward: 53.61199036, -1.66444222, 299.8
6test 254 forward: 3790644.9, -110149.21, 5111482.97
6test 255 reverse: 3790644.9, -110149.21, 5111482.97
6test 256 reverse: 53.61199036, -1.66444223
6test 257 reverse.lat: 53°36′43.1653″N
6test 258 reverse.lon: 001°39′51.992″W
6test 259 reverse.height: 299.800
6test 260 case: 1
6test 261 iteration: None
6test 262 forward: -2430601.827685, -4702442.703125, 3546587.358103
6test 263 reverse: 34.0, -117.333569, 251.702
6test 264 forward_: -2430601.812953, -4702442.744488, 3546587.313654, 34.0, -117.333569, 251.702
6test 265 EcefError: (0.0, 0.0, 0.0, -180.0, 0.0, -6378137.0, 1, None, Datum(name='Datum', ellipsoid=Ellipsoids.GRS80, transform=Transforms.Identity))  FAILED, KNOWN, expected (0.0, 0.0, ...)
6test 266 EcefError: height (None), lat (None) or lon (None)  FAILED, KNOWN, expected lat (None), lon (None) ...
6test 267 EcefFarrell22: EcefFarrell22(a=None, f=None) ellipsoid: type(earth) (None): not a Datum, Ellipsoid, Ellipsoid2 or a_f2Tuple  FAILED, KNOWN, expected EcefFarrell22
6test 268 EcefVeness: ...
6test 269 name: Test
6test 270 toStr: EcefVeness(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name='Test')  FAILED, KNOWN, expected EcefVeness
6test 271 a, f: a=6378137.0, f=0.003352811, datum=Datum(name='_Test', ellipsoid=Ellipsoids._Test, transform=Transforms.Identity), name='Test'  FAILED, KNOWN, expected EcefVeness
6test 272 copy(EcefVeness): (<class 'pygeodesy.ecef.EcefVeness'>, True)
6test 273 EcefVeness.copy(): (<class 'pygeodesy.ecef.EcefVeness'>, True)
6test 274 forward: 27.99, 86.93, 8820.0
6test 275 forward: 302271.4, 5635928.4, 2979666.1
6test 276 name: Test
6test 277 reverse: 302271.4, 5635928.4, 2979666.1
6test 278 reverse: 27.99, 86.93, 8820.01
6test 279 case: 1
6test 280 iteration: None
6test 281 name: Test
6test 282 reverse: 302000.0, 5636000.0, 2980000.0
6test 283 reverse: 27.99, 86.93, 9027.03
6test 284 case: 1
6test 285 iteration: None
6test 286 forward: 27.99, 86.93, 8820.0
6test 287 forward: 302271.43, 5635928.37, 2979666.13
6test 288 forward: 33.3, 44.4, 6000.0
6test 289 forward: 3816209.6, 3737108.55, 3485109.57
6test 290 reverse: 3816209.6, 3737108.55, 3485109.57
6test 291 reverse: 33.3, 44.4, 5999.996
6test 292 case: 1
6test 293 iteration: None
6test 294 reverse: 30000.0, 30000.0, 0.0
6test 295 reverse: -180.0, 45.0, -6420563.407  FAILED, KNOWN, expected 6.483, 45.0, -6335709.726
6test 296 case: 1
6test 297 iteration: None
6test 298 forward: 6.483, 45.0, -6335709.726
6test 299 forward: 30000.0, 30000.0, -0.0
6test 300 Vermeille: -168.919
6test 301 Vermeille: 190.939
6test 302 Vermeille: (65.772506, 169.060801)
6test 303 Vermeille: (1.147947, 3.141593)
6test 304 reverse-1: 45.0, 120.0, 1000.0
6test 305 forward-1: -2259149.0, 3912960.8, 4488055.5
6test 306 xyzh-1: -2259149.0, 3912960.8, 4488055.5, 1000.0
6test 307 philam-1: 0.7854, 2.0944
6test 308 reverse-2: 45.0, 120.0, 2000.0
6test 309 forward-2: -2259502.5, 3913573.2, 4488762.6
6test 310 xyzh-2: -2259502.5, 3913573.2, 4488762.6, 2000.0
6test 311 philam-2: 0.7854, 2.0944
6test 312 reverse-3: 45.0, 120.0, 3000.0
6test 313 forward-3: -2259856.1, 3914185.6, 4489469.7
6test 314 xyzh-3: -2259856.1, 3914185.6, 4489469.7, 3000.0
6test 315 philam-3: 0.7854, 2.0944
6test 316 reverse-4: 45.0, 120.0, 4000.0
6test 317 forward-4: -2260209.7, 3914798.0, 4490176.8
6test 318 xyzh-4: -2260209.7, 3914798.0, 4490176.8, 4000.0
6test 319 philam-4: 0.7854, 2.0944
6test 320 reverse-5: 45.0, 120.0, 10000.0
6test 321 forward-5: -2262331.0, 3918472.2, 4494419.5
6test 322 xyzh-5: -2262331.0, 3918472.2, 4494419.5, 10000.0
6test 323 philam-5: 0.7854, 2.0944
6test 324 reverse-6: 45.0, 120.0, 20000.0
6test 325 forward-6: -2265866.5, 3924595.9, 4501490.5
6test 326 xyzh-6: -2265866.5, 3924595.9, 4501490.5, 20000.0
6test 327 philam-6: 0.7854, 2.0944
6test 328 reverse-7: 45.0, 120.0, 100000.0
6test 329 forward-7: -2294150.8, 3973585.7, 4558059.1
6test 330 xyzh-7: -2294150.8, 3973585.7, 4558059.1, 100000.0
6test 331 philam-7: 0.7854, 2.0944
6test 332 reverse-8: 45.0, 120.0, 800000.0
6test 333 forward-8: -2541638.2, 4402246.4, 5053033.8
6test 334 xyzh-8: -2541638.2, 4402246.4, 5053033.8, 800000.0
6test 335 philam-8: 0.7854, 2.0944
6test 336 reverse-9: 45.0, 120.0, 1000000.0
6test 337 forward-9: -2612348.8, 4524720.9, 5194455.2
6test 338 xyzh-9: -2612348.8, 4524720.9, 5194455.2, 1000000.0
6test 339 philam-9: 0.7854, 2.0944
6test 340 sudano: 45.0, 0.0, 100000.0
6test 341 name: OS-UK
6test 342 forward: 53.61199036, -1.66444222, 299.8
6test 343 forward: 3790644.9, -110149.21, 5111482.97
6test 344 reverse: 3790644.9, -110149.21, 5111482.97
6test 345 reverse: 53.61199036, -1.66444223
6test 346 reverse.lat: 53°36′43.1653″N
6test 347 reverse.lon: 001°39′51.992″W
6test 348 reverse.height: 299.800
6test 349 case: 1
6test 350 iteration: None
6test 351 forward: -2430601.827685, -4702442.703125, 3546587.358103
6test 352 reverse: 34.0, -117.333569, 251.702
6test 353 forward_: -2430601.812953, -4702442.744488, 3546587.313654, 34.0, -117.333569, 251.702
6test 354 EcefError: (0.0, 0.0, 0.0, 90.0, 0.0, -6356752.31414, 3, None, Datum(name='Datum', ellipsoid=Ellipsoids.GRS80, transform=Transforms.Identity))  FAILED, KNOWN, expected (0.0, 0.0, ...)
6test 355 EcefError: height (None), lat (None) or lon (None)  FAILED, KNOWN, expected lat (None), lon (None) ...
6test 356 EcefVeness: EcefVeness(a=None, f=None) ellipsoid: type(earth) (None): not a Datum, Ellipsoid, Ellipsoid2 or a_f2Tuple  FAILED, KNOWN, expected EcefVeness
6test 357 EcefSudano: ...
6test 358 name: Test
6test 359 toStr: EcefSudano(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name='Test')  FAILED, KNOWN, expected EcefSudano
6test 360 a, f: a=6378137.0, f=0.003352811, datum=Datum(name='_Test', ellipsoid=Ellipsoids._Test, transform=Transforms.Identity), name='Test'  FAILED, KNOWN, expected EcefSudano
6test 361 copy(EcefSudano): (<class 'pygeodesy.ecef.EcefSudano'>, True)
6test 362 EcefSudano.copy(): (<class 'pygeodesy.ecef.EcefSudano'>, True)
6test 363 forward: 27.99, 86.93, 8820.0
6test 364 forward: 302271.4, 5635928.4, 2979666.1
6test 365 name: Test
6test 366 reverse: 302271.4, 5635928.4, 2979666.1
6test 367 reverse: 28.01, 86.93, 8819.58  FAILED, KNOWN, expected 27.99, 86.93, 8820.01
6test 368 case: 6
6test 369 iteration: 6
6test 370 name: Test
6test 371 reverse: 302000.0, 5636000.0, 2980000.0
6test 372 reverse: 28.01, 86.93, 9026.6  FAILED, KNOWN, expected 27.99, 86.93, 9027.03
6test 373 case: 6
6test 374 iteration: 6
6test 375 forward: 27.99, 86.93, 8820.0
6test 376 forward: 302271.43, 5635928.37, 2979666.13
6test 377 forward: 33.3, 44.4, 6000.0
6test 378 forward: 3816209.6, 3737108.55, 3485109.57
6test 379 reverse: 3816209.6, 3737108.55, 3485109.57
6test 380 reverse: 33.335, 44.4, 5998.836  FAILED, KNOWN, expected 33.3, 44.4, 5999.996
6test 381 case: 6
6test 382 iteration: 6
6test 383 reverse: 30000.0, 30000.0, 0.0
6test 384 reverse: 0.0, 45.0, -6335710.593  FAILED, KNOWN, expected 6.483, 45.0, -6335709.726
6test 385 case: 1
6test 386 iteration: 1
6test 387 forward: 6.483, 45.0, -6335709.726
6test 388 forward: 30000.0, 30000.0, -0.0
6test 389 Vermeille: -168.919
6test 390 Vermeille: 190.939
6test 391 Vermeille: (65.979481, 169.060801)  FAILED, KNOWN, expected (65.772506, 169.060801)
6test 392 Vermeille: (1.151559, 3.141593)  FAILED, KNOWN, expected (1.147947, 3.141593)
6test 393 reverse-1: 45.08, 120.0, 993.852  FAILED, KNOWN, expected 45.0, 120.0, 1000.0
6test 394 forward-1: -2256016.0, 3907534.4, 4494304.0  FAILED, KNOWN, expected -2259149.0, 3912960.8, 4488055.5
6test 395 xyzh-1: -2256016.0, 3907534.4, 4494304.0, 993.9  FAILED, KNOWN, expected -2259149.0, 3912960.8, 4488055.5, 1000.0
6test 396 philam-1: 0.7868, 2.0944
6test 397 reverse-2: 45.08, 120.0, 1993.853  FAILED, KNOWN, expected 45.0, 120.0, 2000.0
6test 398 forward-2: -2256369.6, 3908146.8, 4495011.2  FAILED, KNOWN, expected -2259502.5, 3913573.2, 4488762.6
6test 399 xyzh-2: -2256369.6, 3908146.8, 4495011.2, 1993.9  FAILED, KNOWN, expected -2259502.5, 3913573.2, 4488762.6, 2000.0
6test 400 philam-2: 0.7868, 2.0944
6test 401 reverse-3: 45.08, 120.0, 2993.854  FAILED, KNOWN, expected 45.0, 120.0, 3000.0
6test 402 forward-3: -2256723.1, 3908759.1, 4495718.3  FAILED, KNOWN, expected -2259856.1, 3914185.6, 4489469.7
6test 403 xyzh-3: -2256723.1, 3908759.1, 4495718.3, 2993.9  FAILED, KNOWN, expected -2259856.1, 3914185.6, 4489469.7, 3000.0
6test 404 philam-3: 0.7868, 2.0944
6test 405 reverse-4: 45.08, 120.0, 3993.855  FAILED, KNOWN, expected 45.0, 120.0, 4000.0
6test 406 forward-4: -2257076.7, 3909371.5, 4496425.4  FAILED, KNOWN, expected -2260209.7, 3914798.0, 4490176.8
6test 407 xyzh-4: -2257076.7, 3909371.5, 4496425.4, 3993.9  FAILED, KNOWN, expected -2260209.7, 3914798.0, 4490176.8, 4000.0
6test 408 philam-4: 0.7868, 2.0944
6test 409 reverse-5: 45.08, 120.0, 9993.861  FAILED, KNOWN, expected 45.0, 120.0, 10000.0
6test 410 forward-5: -2259198.0, 3913045.8, 4500668.0  FAILED, KNOWN, expected -2262331.0, 3918472.2, 4494419.5
6test 411 xyzh-5: -2259198.0, 3913045.8, 4500668.0, 9993.9  FAILED, KNOWN, expected -2262331.0, 3918472.2, 4494419.5, 10000.0
6test 412 philam-5: 0.7868, 2.0944
6test 413 reverse-6: 45.079, 120.0, 19993.87  FAILED, KNOWN, expected 45.0, 120.0, 20000.0
6test 414 forward-6: -2262733.6, 3919169.6, 4507739.0  FAILED, KNOWN, expected -2265866.5, 3924595.9, 4501490.5
6test 415 xyzh-6: -2262733.6, 3919169.6, 4507739.0, 19993.9  FAILED, KNOWN, expected -2265866.5, 3924595.9, 4501490.5, 20000.0
6test 416 philam-6: 0.7868, 2.0944
6test 417 reverse-7: 45.078, 120.0, 99993.947  FAILED, KNOWN, expected 45.0, 120.0, 100000.0
6test 418 forward-7: -2291018.1, 3968159.8, 4564307.3  FAILED, KNOWN, expected -2294150.8, 3973585.7, 4558059.1
6test 419 xyzh-7: -2291018.1, 3968159.8, 4564307.3, 99993.9  FAILED, KNOWN, expected -2294150.8, 3973585.7, 4558059.1, 100000.0
6test 420 philam-7: 0.7868, 2.0944
6test 421 reverse-8: 45.071, 120.0, 799994.544  FAILED, KNOWN, expected 45.0, 120.0, 800000.0
6test 422 forward-8: -2538507.3, 4396823.7, 5059280.0  FAILED, KNOWN, expected -2541638.2, 4402246.4, 5053033.8
6test 423 xyzh-8: -2538507.3, 4396823.7, 5059280.0, 799994.5  FAILED, KNOWN, expected -2541638.2, 4402246.4, 5053033.8, 800000.0
6test 424 philam-8: 0.7866, 2.0944
6test 425 reverse-9: 45.069, 120.0, 999994.693  FAILED, KNOWN, expected 45.0, 120.0, 1000000.0
6test 426 forward-9: -2609218.5, 4519299.0, 5200700.9  FAILED, KNOWN, expected -2612348.8, 4524720.9, 5194455.2
6test 427 xyzh-9: -2609218.5, 4519299.0, 5200700.9, 999994.7  FAILED, KNOWN, expected -2612348.8, 4524720.9, 5194455.2, 1000000.0
6test 428 philam-9: 0.7866, 2.0944
6test 429 sudano: 45.078, 0.0, 99993.947  FAILED, KNOWN, expected 45.0, 0.0, 100000.0
6test 430 name: OS-UK
6test 431 forward: 53.61199036, -1.66444222, 299.8
6test 432 forward: 3790644.9, -110149.21, 5111482.97
6test 433 reverse: 3790644.9, -110149.21, 5111482.97
6test 434 reverse: 53.73795244, -1.66444223  FAILED, KNOWN, expected 53.61199036, -1.66444223
6test 435 reverse.lat: 53°44′16.6288″N  FAILED, KNOWN, expected 53°36′43.1653″N
6test 436 reverse.lon: 001°39′51.992″W
6test 437 reverse.height: 284.389  FAILED, KNOWN, expected 299.800
6test 438 case: 7
6test 439 iteration: 7
6test 440 forward: -2430601.827685, -4702442.703125, 3546587.358103
6test 441 reverse: 34.036724, -117.333569, 250.396541  FAILED, KNOWN, expected 34.0, -117.333569, 251.702
6test 442 forward_: -2430601.812953, -4702442.744488, 3546587.313654, 34.0, -117.333569, 251.702
6test 443 EcefError: (0.0, 0.0, 0.0, 0.0, 0.0, -6378137.0, 1, None, Datum(name='Datum', ellipsoid=Ellipsoids.GRS80, transform=Transforms.Identity))  FAILED, KNOWN, expected (0.0, 0.0, ...)
6test 444 EcefError: height (None), lat (None) or lon (None)  FAILED, KNOWN, expected lat (None), lon (None) ...
6test 445 EcefSudano: EcefSudano(a=None, f=None) ellipsoid: type(earth) (None): not a Datum, Ellipsoid, Ellipsoid2 or a_f2Tuple  FAILED, KNOWN, expected EcefSudano
6test 446 EcefYou: ...
6test 447 name: Test
6test 448 toStr: EcefYou(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name='Test')  FAILED, KNOWN, expected EcefYou
6test 449 a, f: a=6378137.0, f=0.003352811, datum=Datum(name='_Test', ellipsoid=Ellipsoids._Test, transform=Transforms.Identity), name='Test'  FAILED, KNOWN, expected EcefYou
6test 450 copy(EcefYou): (<class 'pygeodesy.ecef.EcefYou'>, True)
6test 451 EcefYou.copy(): (<class 'pygeodesy.ecef.EcefYou'>, True)
6test 452 forward: 27.99, 86.93, 8820.0
6test 453 forward: 302271.4, 5635928.4, 2979666.1
6test 454 name: Test
6test 455 reverse: 302271.4, 5635928.4, 2979666.1
6test 456 reverse: 27.99, 86.93, 8820.01
6test 457 case: 1
6test 458 iteration: None
6test 459 name: Test
6test 460 reverse: 302000.0, 5636000.0, 2980000.0
6test 461 reverse: 27.99, 86.93, 9027.03
6test 462 case: 1
6test 463 iteration: None
6test 464 forward: 27.99, 86.93, 8820.0
6test 465 forward: 302271.43, 5635928.37, 2979666.13
6test 466 forward: 33.3, 44.4, 6000.0
6test 467 forward: 3816209.6, 3737108.55, 3485109.57
6test 468 reverse: 3816209.6, 3737108.55, 3485109.57
6test 469 reverse: 33.3, 44.4, 5999.996
6test 470 case: 1
6test 471 iteration: None
6test 472 reverse: 30000.0, 30000.0, 0.0
6test 473 reverse: 90.0, 45.0, -6356893.894  FAILED, KNOWN, expected 6.483, 45.0, -6335709.726
6test 474 case: 1
6test 475 iteration: None
6test 476 forward: 6.483, 45.0, -6335709.726
6test 477 forward: 30000.0, 30000.0, -0.0
6test 478 Vermeille: -168.919
6test 479 Vermeille: 190.939
6test 480 Vermeille: (65.772506, 169.060801)
6test 481 Vermeille: (1.147947, 3.141593)
6test 482 reverse-1: 45.0, 120.0, 1000.0
6test 483 forward-1: -2259149.0, 3912960.8, 4488055.5
6test 484 xyzh-1: -2259149.0, 3912960.8, 4488055.5, 1000.0
6test 485 philam-1: 0.7854, 2.0944
6test 486 reverse-2: 45.0, 120.0, 2000.0
6test 487 forward-2: -2259502.5, 3913573.2, 4488762.6
6test 488 xyzh-2: -2259502.5, 3913573.2, 4488762.6, 2000.0
6test 489 philam-2: 0.7854, 2.0944
6test 490 reverse-3: 45.0, 120.0, 3000.0
6test 491 forward-3: -2259856.1, 3914185.6, 4489469.7
6test 492 xyzh-3: -2259856.1, 3914185.6, 4489469.7, 3000.0
6test 493 philam-3: 0.7854, 2.0944
6test 494 reverse-4: 45.0, 120.0, 4000.0
6test 495 forward-4: -2260209.7, 3914798.0, 4490176.8
6test 496 xyzh-4: -2260209.7, 3914798.0, 4490176.8, 4000.0
6test 497 philam-4: 0.7854, 2.0944
6test 498 reverse-5: 45.0, 120.0, 10000.0
6test 499 forward-5: -2262331.0, 3918472.2, 4494419.5
6test 500 xyzh-5: -2262331.0, 3918472.2, 4494419.5, 10000.0
6test 501 philam-5: 0.7854, 2.0944
6test 502 reverse-6: 45.0, 120.0, 20000.0
6test 503 forward-6: -2265866.5, 3924595.9, 4501490.5
6test 504 xyzh-6: -2265866.5, 3924595.9, 4501490.5, 20000.0
6test 505 philam-6: 0.7854, 2.0944
6test 506 reverse-7: 45.0, 120.0, 100000.0
6test 507 forward-7: -2294150.8, 3973585.7, 4558059.1
6test 508 xyzh-7: -2294150.8, 3973585.7, 4558059.1, 100000.0
6test 509 philam-7: 0.7854, 2.0944
6test 510 reverse-8: 45.0, 120.0, 800000.0
6test 511 forward-8: -2541638.2, 4402246.4, 5053033.8
6test 512 xyzh-8: -2541638.2, 4402246.4, 5053033.8, 800000.0
6test 513 philam-8: 0.7854, 2.0944
6test 514 reverse-9: 45.0, 120.0, 1000000.0
6test 515 forward-9: -2612348.8, 4524720.9, 5194455.2
6test 516 xyzh-9: -2612348.8, 4524720.9, 5194455.2, 1000000.0
6test 517 philam-9: 0.7854, 2.0944
6test 518 sudano: 45.0, 0.0, 100000.0
6test 519 name: OS-UK
6test 520 forward: 53.61199036, -1.66444222, 299.8
6test 521 forward: 3790644.9, -110149.21, 5111482.97
6test 522 reverse: 3790644.9, -110149.21, 5111482.97
6test 523 reverse: 53.61199036, -1.66444223
6test 524 reverse.lat: 53°36′43.1653″N
6test 525 reverse.lon: 001°39′51.992″W
6test 526 reverse.height: 299.800
6test 527 case: 1
6test 528 iteration: None
6test 529 forward: -2430601.827685, -4702442.703125, 3546587.358103
6test 530 reverse: 34.0, -117.333569, 251.702
6test 531 forward_: -2430601.812953, -4702442.744488, 3546587.313654, 34.0, -117.333569, 251.702
6test 532 EcefError: (0.0, 0.0, 0.0, 90.0, 0.0, -6356752.31414, 1, None, Datum(name='Datum', ellipsoid=Ellipsoids.GRS80, transform=Transforms.Identity))  FAILED, KNOWN, expected (0.0, 0.0, ...)
6test 533 EcefError: height (None), lat (None) or lon (None)  FAILED, KNOWN, expected lat (None), lon (None) ...
6test 534 EcefYou: EcefYou(a=None, f=None) ellipsoid: type(earth) (None): not a Datum, Ellipsoid, Ellipsoid2 or a_f2Tuple  FAILED, KNOWN, expected EcefYou
6test 535 EcefMatrix: ...
6test 536 index: (0, 1, 2, 3, 4, 5, 6, 7, 8)
6test 537 matrix: 0, 1, 2, 3, 4, 5, 6, 7, 8
6test 538 multiply: 45, 54, 63, 54, 66, 78, 63, 78, 93
6test 539 copy(EcefMatrix): (<class 'pygeodesy.ecef.EcefMatrix'>, True)
6test 540 EcefMatrix.copy(): (<class 'pygeodesy.ecef.EcefMatrix'>, True)
6test 541 matrix: 1, 0, 0, 0, 1, 0, 0, 0, 1
6test 542 multiply: 1, 0, 0, 0, 1, 0, 0, 0, 1
6test 543 copy(EcefMatrix): (<class 'pygeodesy.ecef.EcefMatrix'>, True)
6test 544 EcefMatrix.copy(): (<class 'pygeodesy.ecef.EcefMatrix'>, True)
6test 545 unrotate: (1.0, 1.0, 1.0)
6test 546 pygeodesy.sphericalNvector: Cartesian
6test 547 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 548 pygeodesy.sphericalNvector: LatLon
6test 549 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 550 forward: 48.833, 2.333, 0.0
6test 551 forward: 4190278.55, 170716.35, 4796058.21
6test 552 name: Paris
6test 553 reverse: 48.833, 2.333, 0.0
6test 554 name: Paris
6test 555 toLatLon: LatLon(48°49′58.8″N, 002°19′58.8″E)
6test 556 name: Paris
6test 557 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 558 to4Tuple: LatLon4Tuple
6test 559 to4Tuple: Paris(lat=48.833, lon=2.333, height=0.0, datum=Datum(name='Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.WGS84))
6test 560 to3Tuple: LatLon3Tuple
6test 561 to3Tuple: Paris(lat=48.833, lon=2.333, height=0.0)
6test 562 toVector: (4190278.55277, 170716.34863, 4796058.20898)
6test 563 name: Paris
6test 564 forward: [4190278.55, 170716.35, 4796058.21]
6test 565 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 566 pygeodesy.sphericalTrigonometry: Cartesian
6test 567 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 568 pygeodesy.sphericalTrigonometry: LatLon
6test 569 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 570 forward: 48.833, 2.333, 0.0
6test 571 forward: 4190278.55, 170716.35, 4796058.21
6test 572 name: Paris
6test 573 reverse: 48.833, 2.333, 0.0
6test 574 name: Paris
6test 575 toLatLon: LatLon(48°49′58.8″N, 002°19′58.8″E)
6test 576 name: Paris
6test 577 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 578 to4Tuple: LatLon4Tuple
6test 579 to4Tuple: Paris(lat=48.833, lon=2.333, height=0.0, datum=Datum(name='Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.WGS84))
6test 580 to3Tuple: LatLon3Tuple
6test 581 to3Tuple: Paris(lat=48.833, lon=2.333, height=0.0)
6test 582 toVector: (4190278.55277, 170716.34863, 4796058.20898)
6test 583 name: Paris
6test 584 forward: [4190278.55, 170716.35, 4796058.21]
6test 585 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 586 pygeodesy.ellipsoidalNvector: Cartesian
6test 587 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 588 pygeodesy.ellipsoidalNvector: LatLon
6test 589 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 590 forward: 48.833, 2.333, 0.0
6test 591 forward: 4202946.8, 171232.47, 4778354.17
6test 592 name: Paris
6test 593 reverse: 48.833, 2.333, 0.0
6test 594 name: Paris
6test 595 toLatLon: LatLon(48°49′58.8″N, 002°19′58.8″E, +0.00m)
6test 596 name: Paris
6test 597 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 598 to4Tuple: LatLon4Tuple
6test 599 to4Tuple: Paris(lat=48.833, lon=2.333, height=0.0, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 600 to3Tuple: LatLon3Tuple
6test 601 to3Tuple: Paris(lat=48.833, lon=2.333, height=0.0)
6test 602 toVector: (4202946.79528, 171232.46613, 4778354.17)
6test 603 name: Paris
6test 604 forward: [4202946.8, 171232.47, 4778354.17]
6test 605 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 606 pygeodesy.ellipsoidalVincenty: Cartesian
6test 607 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 608 pygeodesy.ellipsoidalVincenty: LatLon
6test 609 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 610 forward: 48.833, 2.333, 0.0
6test 611 forward: 4202946.8, 171232.47, 4778354.17
6test 612 name: Paris
6test 613 reverse: 48.833, 2.333, 0.0
6test 614 name: Paris
6test 615 toLatLon: LatLon(48°49′58.8″N, 002°19′58.8″E, +0.00m)
6test 616 name: Paris
6test 617 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 618 to4Tuple: LatLon4Tuple
6test 619 to4Tuple: Paris(lat=48.833, lon=2.333, height=0.0, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 620 to3Tuple: LatLon3Tuple
6test 621 to3Tuple: Paris(lat=48.833, lon=2.333, height=0.0)
6test 622 toVector: (4202946.79528, 171232.46613, 4778354.17)
6test 623 name: Paris
6test 624 forward: [4202946.8, 171232.47, 4778354.17]
6test 625 Ecef: <class 'pygeodesy.ecef.EcefVeness'>
6test 626 pygeodesy.ellipsoidalKarney: Cartesian
6test 627 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 628 pygeodesy.ellipsoidalKarney: LatLon
6test 629 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 630 forward: 48.833, 2.333, 0.0
6test 631 forward: 4202946.8, 171232.47, 4778354.17
6test 632 name: Paris
6test 633 reverse: 48.833, 2.333, 0.0
6test 634 name: Paris
6test 635 toLatLon: LatLon(48°49′58.8″N, 002°19′58.8″E, +0.00m)
6test 636 name: Paris
6test 637 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 638 to4Tuple: LatLon4Tuple
6test 639 to4Tuple: Paris(lat=48.833, lon=2.333, height=0.0, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 640 to3Tuple: LatLon3Tuple
6test 641 to3Tuple: Paris(lat=48.833, lon=2.333, height=0.0)
6test 642 toVector: (4202946.79528, 171232.46613, 4778354.17)
6test 643 name: Paris
6test 644 forward: [4202946.8, 171232.47, 4778354.17]
6test 645 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 646 pygeodesy.ellipsoidalExact: Cartesian
6test 647 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 648 pygeodesy.ellipsoidalExact: LatLon
6test 649 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 650 forward: 48.833, 2.333, 0.0
6test 651 forward: 4202946.8, 171232.47, 4778354.17
6test 652 name: Paris
6test 653 reverse: 48.833, 2.333, 0.0
6test 654 name: Paris
6test 655 toLatLon: LatLon(48°49′58.8″N, 002°19′58.8″E, +0.00m)
6test 656 name: Paris
6test 657 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 658 to4Tuple: LatLon4Tuple
6test 659 to4Tuple: Paris(lat=48.833, lon=2.333, height=0.0, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 660 to3Tuple: LatLon3Tuple
6test 661 to3Tuple: Paris(lat=48.833, lon=2.333, height=0.0)
6test 662 toVector: (4202946.79528, 171232.46613, 4778354.17)
6test 663 name: Paris
6test 664 forward: [4202946.8, 171232.47, 4778354.17]
6test 665 Ecef: <class 'pygeodesy.ecef.EcefKarney'>
674 of 665 testEcef.py tests (11.1%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 24.420 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testElevations.py
6testing testElevations.py 21.11.21
6test 1 elevation2: elevation2(37.8816, -121.9142): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 1173.79
6test 2 geoidHeight2: -31.699
6test 3 elevation2: elevation2(37.8816, -121.9142): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 1173.79
6test 4 geodHeight2: -31.699
6test 5 elevation2: elevation2(42.354117, -71.069351): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 2.03
6test 6 geodHeight2: -27.773
6test 7 elevation2: elevation2(41.499498, -81.695391): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 199.18
6test 8 geodHeight2: -34.337  FAILED, KNOWN, expected -27.077
6test 9 elevation2: elevation2(41.49008, -71.312796): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 8.52
6test 10 geodHeight2: -30.000
6test 11 elevation2: elevation2(40.779147, -73.96808): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 32.79
6test 12 geodHeight2: -31.666
6test 13 elevation2: (None, "<HTTPError 404: 'Not Found'>")  FAILED, KNOWN, expected (None, 'non-CONUS -1000000.00')
6test 14 geoidHeight2: (None, 'no JSON "{}"')  FAILED, KNOWN, expected (None, "<HTTPError 403: 'Forbidden'>")
6test 15 elevation2: (None, "URLError(timeout('timed out'))")
6test 16 geodHeight2: (None, "URLError(timeout('timed out'))")
6test 17 elevation2: elevation2(37.8816, -121.9142): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 1173.79
6test 18 geoidHeight2: -31.699
6test 19 elevation2: elevation2(37.8816, -121.9142): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 1173.79
6test 20 geodHeight2: -31.699
6test 21 elevation2: elevation2(42.354117, -71.069351): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 2.03
6test 22 geodHeight2: -27.773
6test 23 elevation2: elevation2(41.499498, -81.695391): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 199.18
6test 24 geodHeight2: -34.337  FAILED, KNOWN, expected -27.077
6test 25 elevation2: elevation2(41.49008, -71.312796): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 8.52
6test 26 geodHeight2: -30.000
6test 27 elevation2: elevation2(40.779147, -73.96808): <HTTPError 404: 'Not Found'>  FAILED, KNOWN, expected 32.79
6test 28 geodHeight2: -31.666
6test 29 elevation2: (None, "<HTTPError 404: 'Not Found'>")  FAILED, KNOWN, expected (None, 'non-CONUS -1000000.00')
6test 30 geoidHeight2: (None, 'no JSON "{}"')  FAILED, KNOWN, expected (None, "<HTTPError 403: 'Forbidden'>")
6test 31 elevation2: (None, "URLError(timeout('timed out'))")
6test 32 geodHeight2: (None, "URLError(timeout('timed out'))")
618 of 32 testElevations.py tests (56.2%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 14.292 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testEllipsoidal.py
./pygeodesy/ellipsoidalNvector.py:280: DeprecationWarning: Property_RO L{pygeodesy.ltpTuples.Ned.ned} has been DEPRECATED, use property C{ned4}.
  dn = delta.ned
./pygeodesy/deprecated/__init__.py:64: DeprecationWarning: class L{pygeodesy.deprecated.Ned3Tuple} has been DEPRECATED, use class L{pygeodesy.Ned4Tuple}.
  deprecated_class(cls)
6testing testEllipsoidal.py 22.08.24
6testEllipsoidal(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1 isEllipsoidal: True
6test 2 isSpherical: False
6test 3 isEllipsoidal: True
6test 4 isSpherical: False
6test 5 toDatum: 51.477284°N, 000.00002°E, -45.91m
6test 6 toDatum: 51.4773°N, 000.0°E, -45.91m
6test 7 toDatum: 51.4778°N, 000.0016°W
6test 8 __matmul__: 51.477284°N, 000.00002°E, -45.91m
6test 9 __matmul__: 51.477284°N, 000.00002°E, -45.91m
6test 10 parse: 51.477284°N, 000.00002°E, -45.91m
6test 11 reframe: None
6test 12 toCartesian: [3980581.21, -111.159, 4966824.522]
6test 13 toEcef: 3980581.21, -111.159, 4966824.522
6test 14 toEtm: 30 N 916396 5720041
6test 15 toEtm: 30 N 916396 5720041
6test 16 toLcc: 5639901 4612638
6test 17 toLcc: 5639901 4612638
6test 18 toOsgr: TQ 38876 77320
6test 19 toOsgr: TQ 38876 77320
6test 20 toOsgrTM: TQ 38876 77320
6test 21 toUtmUps: 30 N 708207 5707224
6test 22 toUtm: 30 N 708207 5707224
6test 23 toUtm: 30 N 708207 5707224
6test 24 toWm: -178.111 6672799.209
6test 25 toWm: -178.111 6672799.209
6test 26 elevation2: None
6test 27 geoidHeight2: None
6test 28 toUtmUps: 30 N 708207 5707224
6test 29 toUtm: 30 N 708207 5707224
6test 30 toUtm: 30 N 708207 5707224
6test 31 toUtmUps: 00 N 2000000 1333272
6test 32 toUps: 00 N 2000000 1333272
6test 33 toUps: 00 N 0 -666728
6test 34 toUps: 00 N 2000000 1555732
6test 35 toUtm: 31 N 459200 9217519
6test 36 nearestOn: 32.81°N, 031.42°E
6test 37 toNVector: (0.6228, 0.0, 0.7824, +0.24)
6test 38 toNvector: True
6test 39 toCartesian: [3980581, 97, 4966825]
6test 40 toCartesian: True
6test 41 toVector3D: (0.6228, 0.0, 0.7824)
6test 42 Nvector: (0.5, 0.5, 0.7071)
6test 43 toVector3D: (0.5, 0.5, 0.7071)
6test 44 philamheight: 0.7854, 0.7854, 0.0
6test 45 latlonheight: 45.0, 45.0, 0.0
6test 46 xyzh: 0.5, 0.5, 0.7, 0.0
6test 47 toCartesian: [3194434.411, 3194434.411, 4487326.82]
6test 48 toCartesian: True
6test 49 toLatLon: 45.0°N, 045.0°E
6test 50 toLatLon: True
6test 51 Nvector: (0.51, 0.512, 0.707, +1.00)
6test 52 sat: 82.545852°N, 059.719736°E, -6353121.71m
6test 53 dop: 51.998889°N, 004.373333°E, +134.64m
6test 54 distance: 3806542.943645769  FAILED, KNOWN, expected 3806542.943647
6testLatLon(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 55 isEllipsoidal: True
6test 56 isSpherical: False
6test 57 lat/lonDMS: 52.20472°N, 000.14056°E
6test 58 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 59 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 60 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 61 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 62 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 63 isequalTo: True
6test 64 isequalTo: True
6test 65 latlon2: 52.20472, 0.14056
6test 66 latlon2: 52.2047, 0.1406
6test 67 latlon2: 52.205, 0.141
6test 68 latlon2: 52.2, 0.14
6test 69 latlon2: 52.2, 0.1
6test 70 latlon2: 52.0, 0.0
6test 71 chordTo: 12029263.15
6test 72 chordTo: 12029049.69
6test 73 copy: True
6test 74 __eq__: True
6test 75 __ne__: False
6test 76 equirectangularTo: 404329.56
6test 77 distanceTo: 404279.720589
6test 78 distanceTo: 404279.720589
6test 79 distanceTo: 3972863
6test 80 distanceTo: 18013602.92
6test 81 distanceTo: 20015114.35  FAILED, KNOWN, expected 20003931.46
6test 82 intermediateTo: 51.372294°N, 000.707192°E
6test 83 intermediateTo: True
6test 84 intermediateTo: 404279.721
6test 85 intermediateTo+5: 35.560239°N, 008.833512°E
6test 86 intermediateTo+5: 4.885
6test 87 intermediateTo-4: 64.570387°N, 013.156352°W
6test 88 intermediateTo-4: 3.885
6test 89 intermediateTo-h: 125.000
6test 90 midpointTo: 50.536327°N, 001.274614°E
6test 91 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 92 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 93 chordTo: 125203.963
6test 94 cosineAndoyerLambertTo: 125205.962
6test 95 cosineAndoyerLambertTo: 125205.962
6test 96 cosineForsyheAndoyerLambertTo: 125205.965
6test 97 cosineForsyheAndoyerLambertTo: 125205.965
6test 98 cosineLawTo: 124801.098
6test 99 cosineLawTo: 124801.098
6test 100 equirectangularTo: 124804.754
6test 101 equirectangularTo: 124804.754
6test 102 euclideanTo: 130015.089
6test 103 euclideanTo: 130015.089
6test 104 flatLocalTo: 125209.633
6test 105 flatLocalTo: 125209.633
6test 106 flatPolarTo: 133663.257
6test 107 flatPolarTo: 133663.257
6test 108 hartzell: 53.3206°N, 001.7297°W
6test 109 hartzell: 53.349541°N, 001.7297°W
6test 110 height4: 1.0413519725444986e-09  FAILED, KNOWN, expected 0.0
6test 111 height4: (3820333.9, -115367.0, 5097204.4, -6584.9)
6test 112 height4: 53°19′14.2″N, 001°43′46.9″W
6test 113 height4: 53°19′14.2″N, 001°43′46.9″W
6test 114 haversineTo: 124801.098
6test 115 haversineTo: 124801.098
6test 116 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 117 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 118 thomasTo: 125206.188
6test 119 thomasTo: 125206.188
6test 120 vincentysTo: 124801.098
6test 121 vincentysTo: 124801.098
6test 122 isclockwise: False
6test 123 isclockwise*: False
6test 124 isclockwise: True
6test 125 isclockwise*: True
6test 126 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 127 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 128 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 129 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 130 isconvex: False
6test 131 isconvex*: False
6test 132 isconvex: True
6test 133 isconvex*: True
6test 134 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 135 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 136 isenclosedBy1: True
6test 137 isenclosedBy1*: True
6test 138 isenclosedBy2: False
6test 139 isenclosedBy2*: False
6test 140 isenclosedBy3: False
6test 141 isenclosedBy3*: False
6test 142 isenclosedBy4: False
6test 143 isenclosedBy4*: False
6test 144 isenclosedBy5: False
6test 145 isenclosedBy5*: False
6test 146 isenclosedBy6: True
6test 147 isenclosedBy6*: True
6test 148 isenclosedBy7: True
6test 149 isenclosedBy7*: True
6test 150 compassAngleTo: 100.017
6test 151 compassAngleTo: 105.599
6test 152 compassAngleTo: 280.017
6test 153 compassAngleTo: 285.599
6test 154 equirectangularTo: 592.185
6test 155 distanceTo: 591.831
6test 156 compassAngleTo: 0.0
6test 157 compassAngleTo: 45.0
6test 158 compassAngleTo: 90.0
6test 159 compassAngleTo: 180.0
6test 160 compassAngleTo: 225.0
6test 161 compassAngleTo: 315.0
6test 162 compassAngleTo: 270.0
6test 163 compassAngleTo: 359.4
6test 164 latlon2: (53.0, 1.0)
6test 165 philam2: (0.93, 0.02)
6test 166 compassAngleTo: 31
6test 167 compassAngleTo: 45

6test 168 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 169 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 170 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 171 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 172 isequalTo: <class 'bool'>
6test 173 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 174 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 175 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 176 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 177 compassAngleTo: <class 'float'>
6test 178 cosineLawTo: <class 'float'>
6test 179 euclideanTo: <class 'float'>
6test 180 flatLocalTo: <class 'float'>
6test 181 flatPolarTo: <class 'float'>
6test 182 haversineTo: <class 'float'>
6test 183 hubenyTo: <class 'float'>
6test 184 vincentysTo: <class 'float'>
6test 185 toVector: (0.615661, 0.0, 0.788011)
6test 186 toVector3d: (0.61566, 0.0, 0.78801)
6test 187 trilaterate5 (pygeodesy.ellipsoidalNvector) .min: 223.305
6test 188 trilaterate5 (pygeodesy.ellipsoidalNvector) .point: 42.67456065°N, 002.49539502°E
6test 189 trilaterate5 (pygeodesy.ellipsoidalNvector) .min- is .maxPoint: True
6test 190 trilaterate5 (pygeodesy.ellipsoidalNvector) .n: 1
6test 191 trilaterate5 (pygeodesy.ellipsoidalNvector) .error: ellipsoidalNvector.LatLon.trilaterate5(area=True, wrap=False), MRO(nvectorBase.LatLonNvectorBase, ellipsoidalBase.LatLonEllipsoidalBase, latlonBase.LatLonBase, named._NamedBase, named._Named): not implemented
6test 192 radii11: Radii11Tuple(rA=7705.84217, rB=1367.057272, rC=498.160185, cR=4897.488519, rIn=740.470746, riS=179.544791, roS=5964.029657, a=1865.217457, b=8204.002354, c=9072.899442, s=9571.059626)
622 tests skipped (22): No module named 'numpy': required by vector2d._numpy
6testVectorial(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 193 toLatLon: 44.995674°N, 045.0°E
6test 194 toNvector: (0.50004, 0.50004, 0.70705)
6test 195 isequalTo: False
6test 196 isequalTo: True
6test 197 length: 0.99992449715
6test 198 euclid: 0.99995577
6test 199 length: 1.00
6test 200 euclid: 1.0000
6test 201 meanOf: 44.995674°N, 045.0°E
6test 202 meanOf: LatLon
6test 203 apply: (0.5, 0.5, 0.707)
6test 204 init: (0.5, 0.5, 0.707)
6test 205 i***: (0.5, 0.5, 0.707)
6test 206 abs: 0.99992449715
6test 207 sumOf: (52.70504, 0.61904, 0.70705)
6test 208 sumOf: Nv
6test 209 sumOf: sumOf
6test 210 length: 52.7134151513
6test 211 sizeof: 128  FAILED, KNOWN, expected 72
6test 212 copy: True
6test 213 length: 52.2051356286
6test 214 length: 52.2051356286
6test 215 sizeof: 128
6test 216 nearestOn: 51.0°N, 001.0°E
6test 217 nearestOn: 50.987°N, 000.298°W
6test 218 nearestOn: 51.0°N, 002.0°E
6test 219 nearestOn: 50.995°N, 002.655°E
6test 220 nearestOn: 51.0°N, 001.9°E
6test 221 nearestOn: True
6test 222 distanceTo: 42.826
6test 223 nearestOn: 51.0°N, 002.0°E
6test 224 nearestOn: True
6test 225 nearestOn: 00.0°N, 000.0°E
6test 226 nearestOn: True
6test 227 nearestOn: 00.0°N, 020.0°E
6test 228 nearestOn: True
6test 229 nearestOn: 02.0°N, 002.0°E
6test 230 nearestOn: 02.0°N, 002.0°E
6test 231 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 232 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 233 BasseC: 47.3038°N, 002.5721°W
6test 234 BasseH: 47.311067°N, 002.528617°W
6test 235 triangulate: 47.323667°N, 002.568501°W
6test 236 triangulate: True
6test 237 trilaterate: 37.419078°N, 121.960579°W
6test 238 trilaterate: True
6test 239 trilaterate: 08.068912°S, 034.888699°W
6test 240 trilaterate: True
6test 241 trilaterate: 08.068912°S, 034.888695°W  FAILED, KNOWN, expected 08.068912°S, 034.888699°W
6test 242 trilaterate: True
6test 243 trilaterate: 42.67456065°N, 002.49539502°E
6test 244 trilaterate: distance1 (5110), distance2 (5110), distance3 (5110), point1 (LatLon(42°41′19.82″N, 002°26′19.89″E)), point2 (LatLon(42°38′07.52″N, 002°31′21.25″E)) or point3 (LatLon(42°38′43.44″N, 002°30′17.32″E)): no intersection (useZ=False, z=-8.13526e-05)
6test 245 destinationNed: 48°53′12.01″N, 002°22′29.0″E, +0.20m
6testNvector(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 246 sumOf: Nvector
6test 247 ecef.x, .y, .z: 3194659.54086, 3194659.54086, 4487008.4122
6test 248 ecef.lat, .lon: 44.995674, 45.0
6test 249 ecef.height: -0.0
6test 250 ecef.M: -0.707106781, -0.499962243, 0.500037754, 0.707106781, -0.499962243, 0.500037754, 0.0, 0.707160174, 0.707053385
6test 251 .isEllipsoidal: True
6test 252 .isSpherical: False
6test 253 .latlon: (44.995674, 45.0)
6test 254 .philam: (0.785323, 0.785398)
6test 255 .latlonheight: (44.995674, 45.0, 0.0)
6test 256 .philamheight: (0.785323, 0.785398, 0.0)
6test 257 parse: (0.5, 0.5, 0.707)
6test 258 cmp: 0
6test 259 eq: True
6test 260 ge: True
6test 261 gt: False
6test 262 le: True
6test 263 lt: False
6test 264 ne: False
6test 265 *: (1.0, 1.0, 1.414)
6test 266 +: (1.0, 1.0, 1.414)
6test 267 /: (0.5, 0.5, 0.707)
6test 268 -: (0.5, 0.5, 0.707)
6test 269 @: (0.0, 0.0, 0.0)
6test 270 @: (0.0, 0.0, 0.0)
6test 271 rotate: (0.26268, 0.26268, 0.37143)
6test 272 crosserrors: True
6test 273 0: divisor (0): float division by zero
6test 274 intersections2: (500.0, 0.0, 0.0)
6test 275 nearestOn: (0.0, 0.0, 0.0)
6test 276 nearestOn: True
6test 277 nearestOn: (100.0, 100.0, 100.0)
6test 278 nearestOn: True
6test 279 iscolinearWith: False
6test 280 iscolinearWith: True
6test 281 nearestOn: (0.0, 0.0, 0.0)
6test 282 nearestOn: True
6test 283 nearestOn: (100.0, 100.0, 100.0)
6test 284 nearestOn: True
6test 285 iscolinearWith: False
6test 286 iscolinearWith: True
6testEllipsoidal(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 287 isEllipsoidal: True
6test 288 isSpherical: False
6test 289 isEllipsoidal: True
6test 290 isSpherical: False
6test 291 toDatum: 51.477284°N, 000.00002°E, -45.91m
6test 292 toDatum: 51.4773°N, 000.0°E, -45.91m
6test 293 toDatum: 51.4778°N, 000.0016°W
6test 294 __matmul__: 51.477284°N, 000.00002°E, -45.91m
6test 295 __matmul__: 51.477284°N, 000.00002°E, -45.91m
6test 296 parse: 51.477284°N, 000.00002°E, -45.91m
6test 297 reframe: None
6test 298 toCartesian: [3980581.21, -111.159, 4966824.522]
6test 299 toEcef: 3980581.21, -111.159, 4966824.522
6test 300 toEtm: 30 N 916396 5720041
6test 301 toEtm: 30 N 916396 5720041
6test 302 toLcc: 5639901 4612638
6test 303 toLcc: 5639901 4612638
6test 304 toOsgr: TQ 38876 77320
6test 305 toOsgr: TQ 38876 77320
6test 306 toOsgrTM: TQ 38876 77320
6test 307 toUtmUps: 30 N 708207 5707224
6test 308 toUtm: 30 N 708207 5707224
6test 309 toUtm: 30 N 708207 5707224
6test 310 toWm: -178.111 6672799.209
6test 311 toWm: -178.111 6672799.209
6test 312 elevation2: None
6test 313 geoidHeight2: None
6test 314 toUtmUps: 30 N 708207 5707224
6test 315 toUtm: 30 N 708207 5707224
6test 316 toUtm: 30 N 708207 5707224
6test 317 toUtmUps: 00 N 2000000 1333272
6test 318 toUps: 00 N 2000000 1333272
6test 319 toUps: 00 N 0 -666728
6test 320 toUps: 00 N 2000000 1555732
6test 321 toUtm: 31 N 459200 9217519
6test 322 nearestOn: 32.81°N, 031.42°E
6test 323 sat: 82.545852°N, 059.719736°E, -6353121.71m
6test 324 dop: 51.998889°N, 004.373333°E, +134.64m
6test 325 distance: 3817991.0740122627  FAILED, KNOWN, expected 3817991.074015
6test 326 neareston8: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4874369.98942, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E), 0.0, 0.0)
6test 327 iteration: 0
6test 328 neareston8: (LatLon(45°30′03.93″N, 020°00′00.0″E), 39078.779519, 1.501069, 2, LatLon(45°00′00.0″N, 020°00′00.0″E), LatLon(46°00′00.0″N, 020°00′00.0″E), 270.356041, 269.999412)
6test 329 iteration: 1
6testLatLon(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 330 isEllipsoidal: True
6test 331 isSpherical: False
6test 332 lat/lonDMS: 52.20472°N, 000.14056°E
6test 333 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 334 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 335 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 336 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 337 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 338 isequalTo: True
6test 339 isequalTo: True
6test 340 latlon2: 52.20472, 0.14056
6test 341 latlon2: 52.2047, 0.1406
6test 342 latlon2: 52.205, 0.141
6test 343 latlon2: 52.2, 0.14
6test 344 latlon2: 52.2, 0.1
6test 345 latlon2: 52.0, 0.0
6test 346 chordTo: 12029263.15
6test 347 chordTo: 12029049.69
6test 348 initialBearingTo: 156.1106
6test 349 initialBearingTo: 65.9335
6test 350 initialBearingTo: 0.0
6test 351 initialBearingTo: 180.0
6test 352 finalBearingTo: 157.8345
6test 353 finalBearingTo: 93.9034
./test/testLatLon.py:617: DeprecationWarning: function L{pygeodesy.ellipsoidalVincenty.areaOf} has been DEPRECATED, use function L{ellipsoidalExact.areaOf} or L{ellipsoidalKarney.areaOf}.
  r = a(reversed(b))
./test/testLatLon.py:618: DeprecationWarning: function L{pygeodesy.ellipsoidalVincenty.areaOf} has been DEPRECATED, use function L{ellipsoidalExact.areaOf} or L{ellipsoidalKarney.areaOf}.
  f = a(b)  # ccw
6test 354 bearingTo2: 156.1106, 157.8345
6test 355 ispolar: True
6test 356 copy: True
6test 357 __eq__: True
6test 358 __ne__: False
6test 359 equirectangularTo: 404329.56
6test 360 distanceTo: 404607.805988
6test 361 distanceTo: 404607.805988
6test 362 distanceTo: 3981601
6test 363 antipodal: False
6test 364 distanceTo dateline: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 365 distanceTo unrolled: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 366 antipodal: False
6test 367 distanceTo dateline: 9513998
6test 368 distanceTo unrolled: 9513998
6test 369 distanceTo: 18012714.66
6test 370 distanceTo: ambiguous: LatLon(00°00′00.0″N, 000°00′00.0″E) antipodal to LatLon(00°00′00.0″N, 180°00′00.0″E)  FAILED, KNOWN, expected ambiguous, antipodal ...
6test 371 distanceTo3 dateline: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 372 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 373 distanceTo3 dateline: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 374 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 375 intermediateTo: 51.372275°N, 000.707253°E
6test 376 intermediateTo: True
6test 377 intermediateTo: 404607.806
6test 378 intermediateTo+5: 35.139582°N, 008.994368°E
6test 379 intermediateTo+5: 5.000
6test 380 intermediateTo-4: 64.894124°N, 013.705689°W
6test 381 intermediateTo-4: 4.000
6test 382 intermediateTo-h: 125.000
6test 383 midpointTo: 50.536583°N, 001.274507°E
6test 384 destination: 51.513526°N, 000.098038°W
6test 385 destination: 51°30′49″N, 000°05′53″W
6test 386 destination: 33°57′N, 118°24′W
6test 387 destination: 33.950367°N, 118.399012°W
6test 388 destination: 0.592546N, 2.066453W
6test 389 destination: 32.11195529°N, 064.56074722°E  FAILED, KNOWN, expected 32.11195529°N, 063.95925278°E
6test 390 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 391 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 392 chordTo: 125203.963
6test 393 cosineAndoyerLambertTo: 125205.962
6test 394 cosineAndoyerLambertTo: 125205.962
6test 395 cosineForsyheAndoyerLambertTo: 125205.965
6test 396 cosineForsyheAndoyerLambertTo: 125205.965
6test 397 cosineLawTo: 124801.098
6test 398 cosineLawTo: 124801.098
6test 399 equirectangularTo: 124804.754
6test 400 equirectangularTo: 124804.754
6test 401 euclideanTo: 130015.089
6test 402 euclideanTo: 130015.089
6test 403 flatLocalTo: 125209.633
6test 404 flatLocalTo: 125209.633
6test 405 flatPolarTo: 133663.257
6test 406 flatPolarTo: 133663.257
6test 407 hartzell: 53.3206°N, 001.7297°W
6test 408 hartzell: 53.349541°N, 001.7297°W
6test 409 height4: 1.0413519725444986e-09  FAILED, KNOWN, expected 0.0
6test 410 height4: (3820333.9, -115367.0, 5097204.4, -6584.9)
6test 411 height4: 53°19′14.2″N, 001°43′46.9″W
6test 412 height4: 53°19′14.2″N, 001°43′46.9″W
6test 413 haversineTo: 124801.098
6test 414 haversineTo: 124801.098
6test 415 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 416 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 417 thomasTo: 125206.188
6test 418 thomasTo: 125206.188
6test 419 vincentysTo: 124801.098
6test 420 vincentysTo: 124801.098
6test 421 isclockwise: False
6test 422 isclockwise*: False
6test 423 isclockwise: True
6test 424 isclockwise*: True
6test 425 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 426 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 427 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 428 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 429 isconvex: False
6test 430 isconvex*: False
6test 431 isconvex: True
6test 432 isconvex*: True
6test 433 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 434 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 435 isenclosedBy1: True
6test 436 isenclosedBy1*: True
6test 437 isenclosedBy2: False
6test 438 isenclosedBy2*: False
6test 439 isenclosedBy3: False
6test 440 isenclosedBy3*: False
6test 441 isenclosedBy4: False
6test 442 isenclosedBy4*: False
6test 443 isenclosedBy5: False
6test 444 isenclosedBy5*: False
6test 445 isenclosedBy6: True
6test 446 isenclosedBy6*: True
6test 447 isenclosedBy7: True
6test 448 isenclosedBy7*: True
6test 449 initialBearingTo: 102.392291
6test 450 compassAngleTo: 100.017
6test 451 compassAngleTo: 105.599
6test 452 initialBearingTo: 288.676039
6test 453 compassAngleTo: 280.017
6test 454 compassAngleTo: 285.599
6test 455 equirectangularTo: 592.185
6test 456 distanceTo: 593.571
6test 457 bearingTo: 0.0
6test 458 compassAngleTo: 0.0
6test 459 bearingTo: 45.2  FAILED, KNOWN, expected 45.0
6test 460 compassAngleTo: 45.0
6test 461 bearingTo: 90.0
6test 462 compassAngleTo: 90.0
6test 463 bearingTo: 180.0
6test 464 compassAngleTo: 180.0
6test 465 bearingTo: 225.2  FAILED, KNOWN, expected 225.0
6test 466 compassAngleTo: 225.0
6test 467 bearingTo: 314.8  FAILED, KNOWN, expected 315.0
6test 468 compassAngleTo: 315.0
6test 469 bearingTo: 270.0
6test 470 compassAngleTo: 270.0
6test 471 bearingTo: 360.0  FAILED, KNOWN, expected 359.4
6test 472 compassAngleTo: 359.4
6test 473 latlon2: (53.0, 1.0)
6test 474 philam2: (0.93, 0.02)
6test 475 bearingTo: 31
6test 476 compassAngleTo: 31
6test 477 compassAngleTo: 45

6test 478 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 479 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 480 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 481 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 482 isequalTo: <class 'bool'>
6test 483 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 484 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 485 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 486 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 487 compassAngleTo: <class 'float'>
6test 488 cosineLawTo: <class 'float'>
6test 489 euclideanTo: <class 'float'>
6test 490 flatLocalTo: <class 'float'>
6test 491 flatPolarTo: <class 'float'>
6test 492 haversineTo: <class 'float'>
6test 493 hubenyTo: <class 'float'>
6test 494 vincentysTo: <class 'float'>
6test 495 toNvector: (0.615661, 0.0, 0.788011)
6test 496 toVector: (0.615661, 0.0, 0.788011)
6test 497 toVector3d: (0.61566, 0.0, 0.78801)
6test 498 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 305.091  FAILED, KNOWN, expected 311.234
6test 499 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.66933643°N, 002.48620262°E  FAILED, KNOWN, expected 42.66938776°N, 002.48641176°E
6test 500 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 1592.545  FAILED, KNOWN, expected 1586.951
6test 501 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.65141232°N, 002.46816989°E  FAILED, KNOWN, expected 42.65153156°N, 002.46821899°E
6test 502 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 3
6test 503 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 127.229  FAILED, KNOWN, expected 137.897
6test 504 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 152.612  FAILED, KNOWN, expected 148.175
6test 505 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 506 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 2
6test 507 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 2400.293  FAILED, KNOWN, expected 2399.908
6test 508 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 2400.293  FAILED, KNOWN, expected 2399.908
6test 509 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.66128984°N, 002.47973818°E  FAILED, KNOWN, expected 42.6613586°N, 002.47981223°E
6test 510 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min- is .maxPoint: True
6test 511 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 1
6test 512 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 1343.743  FAILED, KNOWN, expected 1332.749
6test 513 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.69131964°N, 002.50112167°E  FAILED, KNOWN, expected 42.69124153°N, 002.50124031°E
6test 514 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 1445.554  FAILED, KNOWN, expected 1450.709
6test 515 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 516 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 2
6test 517 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
627 tests skipped (49): No module named 'numpy': required by vector2d._numpy
6test 518 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
622 tests skipped (71): No module named 'numpy': required by vector2d._numpy
6test 519 area cw/ccw: 1.0
6testNOAA(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 520 NOAAexample1: 191872.1190, 249 03 16.4237, 67 59 11.1619
6test 521 NOAAexample2: 182009.1679, 254 42 44.6439, 73 09 21.3315
6test 522 NOAAexample3: 123456.7891, 245 00 34.7001, 64 20 24.6864
6test 523 NOAAexample4: 145239.0603, 114 29 26.9586, 295 21 32.6566
6testIntersection3(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 524 (30, 17): (LatLon(30°52′03.1″N, 015°30′38.41″E), 0, 0)
6test 525 (30, 17): (LatLon(30°52′03.1″N, 015°30′38.41″E), -1, 0)
6test 526 (-1,  3): (LatLon(01°34′52.49″N, 006°00′51.83″E), -1, -2)
6test 527 (-1,  3): (LatLon(01°34′52.49″N, 006°00′51.83″E), -1, 2)
6test 528 (65, 32): (LatLon(56°58′26.51″N, 032°00′00.0″E), 1, 0)
6test 529 (65, 32): (LatLon(56°58′26.51″N, 032°00′00.0″E), 1, 2)
6test 530 (-2, 17): <class 'pygeodesy.errors.IntersectionError'>
6test 531 (49, 25): (LatLon(49°00′00.0″N, 025°00′00.0″E), 0, -2)  FAILED, KNOWN, expected (LatLon(49°00′00.0″N, 025°00′00.0″E), 0, 0)
6test 532 #58: (LatLon(01°54′25.65″S, 005°37′48.76″E), 1, -2)
6test 533 #58: <class 'pygeodesy.errors.IntersectionError'>
6testIntersections2(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 534 Equidistant: 36.9879°N, 088.1564°W, 38.2441°N, 092.3835°W  FAILED, KNOWN, expected 36.9892°N, 088.152°W, 38.2377°N, 092.39°W
6test 535 Equidistant: 36.9892°N, 088.152°W, 38.2377°N, 092.39°W
6test 536 Equidistant: 00.0°N, 035.4073°W, 00.0°N, 035.4073°E  FAILED, KNOWN, expected 00.0°S, 035.4073°W, 00.0°S, 035.4073°E
6test 537 Equidistant: 1.63814 (% of radius)
6test 538 Equidistant: 22.756°N, 000.0°E, 22.756°S, 000.0°E  FAILED, KNOWN, expected 22.756°N, 000.0°W, 22.756°S, 000.0°W
6test 539 Equidistant: 1.30784 (% of radius)
6test 540 Equidistant: 29.2359°N, 040.2625°W, 29.2359°S, 040.2625°E
6test 541 Equidistant: 1.31348 (% of radius)
6test 542 Equidistant: 01.1557°S, 045.0894°E, 01.1557°N, 045.0894°E
6test 543 Equidistant: 1.81093 (% of radius)
6test 544 Equidistant 5: 05.0218°S, 005.0605°W, 05.0218°N, 005.0605°E
6test 545 Equidistant 5: 0.00337268 (% of radius)
6test 546 Equidistant 10: 10.0378°S, 010.3545°W, 10.0378°N, 010.3545°E
6test 547 Equidistant 10: 0.00344677 (% of radius)
6test 548 Equidistant 15: 15.0326°S, 016.1429°W, 15.0326°N, 016.1429°E
6test 549 Equidistant 15: 0.00356146 (% of radius)
6test 550 Equidistant 20: 19.9682°S, 022.7468°W, 19.9682°N, 022.7468°E
6test 551 Equidistant 20: 0.00370135 (% of radius)
6test 552 Equidistant 25: 24.7603°S, 030.5908°W, 24.7603°N, 030.5908°E
6test 553 Equidistant 25: 0.00383987 (% of radius)
6test 554 Equidistant 30: 29.2359°S, 040.2625°W, 29.2359°N, 040.2625°E
6test 555 Equidistant 30: 0.00393258 (% of radius)
6test 556 Equidistant 35: 33.0487°S, 052.585°W, 33.0487°N, 052.585°E
6test 557 Equidistant 35: 0.00390516 (% of radius)
6test 558 Equidistant 40: 35.5123°S, 068.6794°W, 35.5123°N, 068.6794°E
6test 559 Equidistant 40: 0.0036308 (% of radius)
6test 560 Equidistant 45: 35.2644°S, 090.0019°W, 35.2644°N, 090.0019°E
6test 561 Equidistant 45: 0.00288386 (% of radius)
6test 562 Equidistant 50: 29.3392°S, 119.0221°W, 29.3392°N, 119.0221°E
6test 563 Equidistant 50: 0.00271777 (% of radius)
6test 564 Equidistant: center1 (LatLon(55°00′00.0″N, 055°00′00.0″W)), center2 (LatLon(55°00′00.0″S, 055°00′00.0″E)), radius1 (12231458.77080936) or radius2 (12231458.77080936): no convergence (222847): tolerance (0.001) too low, antipodal or near-polar?  FAILED, KNOWN, expected 2-tuple
6test 565 Equidistant: center1 (LatLon(60°00′00.0″N, 060°00′00.0″W)), center2 (LatLon(60°00′00.0″S, 060°00′00.0″E)), radius1 (13343409.568155663) or radius2 (13343409.568155663): no convergence (1.02385e+06): tolerance (0.001) too low, antipodal or near-polar?  FAILED, KNOWN, expected 2-tuple
6test 566 Equidistant: center1 (LatLon(65°00′00.0″N, 065°00′00.0″W)), center2 (LatLon(65°00′00.0″S, 065°00′00.0″E)), radius1 (14455360.36550197) or radius2 (14455360.36550197): no convergence (1.55077e+06): tolerance (0.001) too low, antipodal or near-polar?  FAILED, KNOWN, expected 2-tuple
6test 567 Equidistant: 15.862199°S, 010.802654°E Random +/- 45
6test 568 Equidistant: 15.797696°S, 010.810916°E, 16.843276°S, 077.486283°E  d 7192.33 meter (iteration 3)
6test 569 Equidistant: 15.878169°S, 010.926406°E, 14.487148°S, 064.623434°W  d 13371.5 meter (iteration 4)
6test 570 Equidistant: 15.901821°S, 010.758988°E, 24.184949°S, 041.772311°E  d 6410.41 meter (iteration 4)
6test 571 Equidistant: 15.77463°S, 010.796462°E, 15.653195°S, 038.121149°W  d 9712.8 meter (iteration 3)
6test 572 Equidistant: 15.888151°S, 010.947688°E, 65.922197°S, 007.504908°W  d 15796.5 meter (iteration 4)
6test 573 Equidistant: 15.740738°S, 010.755036°E, 69.601552°N, 081.85361°W  d 14376.1 meter (iteration 4)
6test 574 Equidistant: 15.798786°S, 010.855005°E, 15.445088°S, 056.22353°W  d 8982.7 meter (iteration 3)
6test 575 Equidistant: 15.704472°S, 010.943381°E, 33.515979°N, 040.031744°W  d 23065 meter (iteration 4)
6test 576 Equidistant: 15.84052°S, 010.866464°E, 01.73399°S, 026.075117°W  d 7243.71 meter (iteration 4)
6test 577 Equidistant: 15.797904°S, 010.846649°E, 00.798682°S, 010.109823°W  d 8534.12 meter (iteration 3)
6test 578 Equidistant: 15.777644°S, 010.782579°E, 16.30482°S, 046.745126°W  d 9600.52 meter (iteration 4)
6test 579 Equidistant: 15.896062°S, 010.840644°E, 29.66565°S, 003.933395°W  d 5531.37 meter (iteration 3)
6testVincenty(pygeodesy.ellipsoidalVincenty, 22.09.12, datum='WGS84')
6test 580 distanceTo: 866455.43292
6test 581 toDatum: OSGB36
6test 582 ValueError2: Ellipsoid 'Airy1830': incompatible with Ellipsoid 'WGS84'
6test 583 isEllipsoidal: True
6test 584 isSpherical: False
6test 585 epsilon: 1e-12
6test 586 iterations: 100
6test 587 copy: True
6test 588 isEllipsoidal: True
6test 589 isSpherical: False
6test 590 copy: 37°57′03.7203″S, 144°25′29.5244″E
6test 591 epsilon: 2.220446049250e-16
6test 592 iterations: 200
6test 593 iteration: None
6testKarneyVincenty(pygeodesy.ellipsoidalVincenty, 22.09.12, datum='WGS84')
6test 594 coincident: 0.0
6test 595 coincident: 0.0, 0.0, 0.0
6test 596 destination: 37.6528°S, 143.9265°E
6test 597 destination: True
6test 598 destination2: 37.652821°S, 143.926496°E, 307.1736°NW
6test 599 destination2: True
6test 600 finalBearingOn: 307.1736°, 307°10′25.07″NW
6test 601 distanceTo: 969954.166
6test 602 distanceTo3: 969954.166314, 9.141877, 11.29722
6test 603 distanceTo2: 972708.16174, 11.22502
6test 604 initialBearingTo: 9.1419°, 9°08′30.76″N
6test 605 destination: 58.64402°N, 003.07009°W
6test 606 finalBearingTo: 11.2972°, 11°17′49.99″NNE
6test 607 finalBearingOn: 11.2972°, 11°17′49.99″NNE
6test 608 distanceTo: 404607.806
6test 609 distanceTo3: 404607.805988, 156.11064, 157.8345
6test 610 distanceTo2: 402574.597287, 157.726344
6test 611 initialBearingTo: 156.1106°, 156°06′38.31″SSE
6test 612 destination: 48.857°N, 002.351°E
6test 613 finalBearingTo: 157.8345°, 157°50′04.2″SSE
6test 614 finalBearingOn: 157.8345°, 157°50′04.2″SSE
6test 615 distanceTo: 54973.295
6test 616 distanceTo3: 54973.29527, 233.13008, 232.82461
6test 617 distanceTo2: 54903.41209, 232.9209
6test 618 initialBearingTo: 233.1301°, 233°07′48.28″SW
6test 619 destination: 37.6528°N, 143.9265°E
6test 620 finalBearingTo: 232.8246°, 232°49′28.59″SW
6test 621 finalBearingOn: 232.8246°, 232°49′28.59″SW
6test 622 distanceToMP: 298396.057
6test 623 distanceToSM: 185.415
6test 624 distanceToMP: 111319.491
6test 625 distanceToMP: 110574.389
6test 626 distanceToKW: 222638.982
6test 627 distanceToKW: 111319.491
6test 628 distanceTo3: 54972.271
6test 629 distanceTo3: 306°52′05.37″
6test 630 distanceTo3: 307°10′25.07″
6test 631 distanceTo2: 54902.390
6test 632 distanceTo2: 307°04′38.41″
6testKarneyVincentyError(pygeodesy.ellipsoidalVincenty, 22.09.12, datum='WGS84')
6test 633 distanceTo/antipodal (None): no convergence (2.52508e-08): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°30′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 634 distanceTo/VincentyError (None): no convergence (0.00746541): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°42′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 635 initialBearingTo/VincentyError (None): no convergence (0.00746541): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°42′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 636 finalBearingTo/VincentyError (None): no convergence (0.00746541): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°42′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 637 distanceTo/equatorial (None): ambiguous: LatLon(00°00′00.0″N, 000°00′00.0″E) antipodal to LatLon(00°00′00.0″N, 180°00′00.0″E)  FAILED, KNOWN, expected ambiguous, ...
6test 638 initialBearingTo/equatorial (None): ambiguous: LatLon(00°00′00.0″N, 000°00′00.0″E) antipodal to LatLon(00°00′00.0″N, 180°00′00.0″E)  FAILED, KNOWN, expected ambiguous, ...
6test 639 distanceTo/coincident (5): 111319.491
6test 640 distanceTo/meridional (1): 10001965.729
6test 641 initialBearingTo/meridional (1): 180.0
6test 642 distanceTo/coincident (1): 0.0
6test 643 initialBearingTo/coincident (1): 0.0
6test 644 finalBearingTo/coincident (1): 0.0
6test 645 destination/coincident (1): 50.06632°N, 005.71475°W
6test 646 distanceTo/anti-meridian (4): 10825924.1
6test 647 distanceTo/quadrants (5): 4015703.02
6test 648 distanceTo/quadrants (5): 4015703.02
6test 649 distanceTo/quadrants (5): 4015703.02
6test 650 distanceTo/quadrants (5): 4015703.02
6test 651 distanceTo/quadrants (5): 4015703.02
6test 652 distanceTo/quadrants (5): 4015703.02
6test 653 distanceTo/quadrants (5): 4015703.02
6test 654 distanceTo/quadrants (5): 4015703.02
6test 655 distanceTo/quadrants (5): 4015703.02
6test 656 distanceTo/quadrants (5): 4015703.02
6test 657 distanceTo/quadrants (5): 4015703.02
6test 658 distanceTo/quadrants (5): 4015703.02
6test 659 distanceTo/quadrants (5): 4015703.02
6test 660 distanceTo/quadrants (5): 4015703.02
6test 661 distanceTo/quadrants (5): 4015703.02
6test 662 distanceTo/quadrants (5): 4015703.02
6testVincenty(pygeodesy.ellipsoidalVincenty, 22.09.12, datum='NAD83')
6test 663 distanceTo: 866455.43292
6test 664 toDatum: OSGB36
6test 665 ValueError2: Ellipsoid 'Airy1830': incompatible with Ellipsoid 'GRS80'
6test 666 isEllipsoidal: True
6test 667 isSpherical: False
6test 668 epsilon: 1e-12
6test 669 iterations: 100
6test 670 copy: True
6test 671 isEllipsoidal: True
6test 672 isSpherical: False
6test 673 copy: 37°57′03.7203″S, 144°25′29.5244″E
6test 674 epsilon: 2.220446049250e-16
6test 675 iterations: 200
6test 676 iteration: None
6testKarneyVincenty(pygeodesy.ellipsoidalVincenty, 22.09.12, datum='NAD83')
6test 677 coincident: 0.0
6test 678 coincident: 0.0, 0.0, 0.0
6test 679 destination: 37.6528°S, 143.9265°E
6test 680 destination: True
6test 681 destination2: 37.652821°S, 143.926496°E, 307.1736°NW
6test 682 destination2: True
6test 683 finalBearingOn: 307.1736°, 307°10′25.07″NW
6test 684 distanceTo: 969954.166
6test 685 distanceTo3: 969954.166314, 9.141877, 11.29722
6test 686 distanceTo2: 972708.16174, 11.22502
6test 687 initialBearingTo: 9.1419°, 9°08′30.76″N
6test 688 destination: 58.64402°N, 003.07009°W
6test 689 finalBearingTo: 11.2972°, 11°17′49.99″NNE
6test 690 finalBearingOn: 11.2972°, 11°17′49.99″NNE
6test 691 distanceTo: 404607.806
6test 692 distanceTo3: 404607.805988, 156.11064, 157.8345
6test 693 distanceTo2: 402574.597287, 157.726344
6test 694 initialBearingTo: 156.1106°, 156°06′38.31″SSE
6test 695 destination: 48.857°N, 002.351°E
6test 696 finalBearingTo: 157.8345°, 157°50′04.2″SSE
6test 697 finalBearingOn: 157.8345°, 157°50′04.2″SSE
6test 698 distanceTo: 54973.295
6test 699 distanceTo3: 54973.29527, 233.13008, 232.82461
6test 700 distanceTo2: 54903.41209, 232.9209
6test 701 initialBearingTo: 233.1301°, 233°07′48.28″SW
6test 702 destination: 37.6528°N, 143.9265°E
6test 703 finalBearingTo: 232.8246°, 232°49′28.59″SW
6test 704 finalBearingOn: 232.8246°, 232°49′28.59″SW
6test 705 distanceToMP: 298396.057
6test 706 distanceToSM: 185.415
6test 707 distanceToMP: 111319.491
6test 708 distanceToMP: 110574.389
6test 709 distanceToKW: 222638.982
6test 710 distanceToKW: 111319.491
6test 711 distanceTo3: 54972.271
6test 712 distanceTo3: 306°52′05.37″
6test 713 distanceTo3: 307°10′25.07″
6test 714 distanceTo2: 54902.390
6test 715 distanceTo2: 307°04′38.41″
6testKarneyVincentyError(pygeodesy.ellipsoidalVincenty, 22.09.12, datum='NAD83')
6test 716 distanceTo/antipodal (None): no convergence (2.52508e-08): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°30′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 717 distanceTo/VincentyError (None): no convergence (0.00746541): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°42′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 718 initialBearingTo/VincentyError (None): no convergence (0.00746541): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°42′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 719 finalBearingTo/VincentyError (None): no convergence (0.00746541): epsilon (1e-12) and iterations (100), LatLon(00°00′00.0″N, 000°00′00.0″E) to LatLon(00°30′00.0″N, 179°42′00.0″E)  FAILED, KNOWN, expected no convergence: ...
6test 720 distanceTo/equatorial (None): ambiguous: LatLon(00°00′00.0″N, 000°00′00.0″E) antipodal to LatLon(00°00′00.0″N, 180°00′00.0″E)  FAILED, KNOWN, expected ambiguous, ...
6test 721 initialBearingTo/equatorial (None): ambiguous: LatLon(00°00′00.0″N, 000°00′00.0″E) antipodal to LatLon(00°00′00.0″N, 180°00′00.0″E)  FAILED, KNOWN, expected ambiguous, ...
6test 722 distanceTo/coincident (5): 111319.491
6test 723 distanceTo/meridional (1): 10001965.729
6test 724 initialBearingTo/meridional (1): 180.0
6test 725 distanceTo/coincident (1): 0.0
6test 726 initialBearingTo/coincident (1): 0.0
6test 727 finalBearingTo/coincident (1): 0.0
6test 728 destination/coincident (1): 50.06632°N, 005.71475°W
6test 729 distanceTo/anti-meridian (4): 10825924.1
6test 730 distanceTo/quadrants (5): 4015703.02
6test 731 distanceTo/quadrants (5): 4015703.02
6test 732 distanceTo/quadrants (5): 4015703.02
6test 733 distanceTo/quadrants (5): 4015703.02
6test 734 distanceTo/quadrants (5): 4015703.02
6test 735 distanceTo/quadrants (5): 4015703.02
6test 736 distanceTo/quadrants (5): 4015703.02
6test 737 distanceTo/quadrants (5): 4015703.02
6test 738 distanceTo/quadrants (5): 4015703.02
6test 739 distanceTo/quadrants (5): 4015703.02
6test 740 distanceTo/quadrants (5): 4015703.02
6test 741 distanceTo/quadrants (5): 4015703.02
6test 742 distanceTo/quadrants (5): 4015703.02
6test 743 distanceTo/quadrants (5): 4015703.02
6test 744 distanceTo/quadrants (5): 4015703.02
6test 745 distanceTo/quadrants (5): 4015703.02
6testEllipsoidal(pygeodesy.ellipsoidalExact, 22.07.07)
6test 746 isEllipsoidal: True
6test 747 isSpherical: False
6test 748 isEllipsoidal: True
6test 749 isSpherical: False
6test 750 toDatum: 51.477284°N, 000.00002°E, -45.91m
6test 751 toDatum: 51.4773°N, 000.0°E, -45.91m
6test 752 toDatum: 51.4778°N, 000.0016°W
6test 753 __matmul__: 51.477284°N, 000.00002°E, -45.91m
6test 754 __matmul__: 51.477284°N, 000.00002°E, -45.91m
6test 755 parse: 51.477284°N, 000.00002°E, -45.91m
6test 756 reframe: None
6test 757 toCartesian: [3980581.21, -111.159, 4966824.522]
6test 758 toEcef: 3980581.21, -111.159, 4966824.522
6test 759 toEtm: 30 N 916396 5720041
6test 760 toEtm: 30 N 916396 5720041
6test 761 toLcc: 5639901 4612638
6test 762 toLcc: 5639901 4612638
6test 763 toOsgr: TQ 38876 77320
6test 764 toOsgr: TQ 38876 77320
6test 765 toOsgrTM: TQ 38876 77320
6test 766 toUtmUps: 30 N 708207 5707224
6test 767 toUtm: 30 N 708207 5707224
6test 768 toUtm: 30 N 708207 5707224
6test 769 toWm: -178.111 6672799.209
6test 770 toWm: -178.111 6672799.209
6test 771 elevation2: None
6test 772 geoidHeight2: None
6test 773 toUtmUps: 30 N 708207 5707224
6test 774 toUtm: 30 N 708207 5707224
6test 775 toUtm: 30 N 708207 5707224
6test 776 toUtmUps: 00 N 2000000 1333272
6test 777 toUps: 00 N 2000000 1333272
6test 778 toUps: 00 N 0 -666728
6test 779 toUps: 00 N 2000000 1555732
6test 780 toUtm: 31 N 459200 9217519
6test 781 nearestOn: 32.81°N, 031.42°E
6test 782 sat: 82.219069°N, 059.719736°E, -6353120.97m
6test 783 dop: 51.998889°N, 004.373333°E, +134.64m
6test 784 distance: 3802238.5049886256  FAILED, KNOWN, expected 3802238.504989
6test 785 neareston8: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4871366.31512, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 020°00′00.0″E), 0.0, 0.0)
6test 786 iteration: 1
6test 787 neareston8: (LatLon(45°30′03.93″N, 020°00′00.0″E), 39078.779519, 1.501069, 2, LatLon(45°00′00.0″N, 020°00′00.0″E), LatLon(46°00′00.0″N, 020°00′00.0″E), 270.356041, 269.999412)
6test 788 iteration: 1
6testLatLon(pygeodesy.ellipsoidalExact, 22.07.07)
6test 789 isEllipsoidal: True
6test 790 isSpherical: False
6test 791 lat/lonDMS: 52.20472°N, 000.14056°E
6test 792 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 793 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 794 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 795 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 796 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 797 isequalTo: True
6test 798 isequalTo: True
6test 799 latlon2: 52.20472, 0.14056
6test 800 latlon2: 52.2047, 0.1406
6test 801 latlon2: 52.205, 0.141
6test 802 latlon2: 52.2, 0.14
6test 803 latlon2: 52.2, 0.1
6test 804 latlon2: 52.0, 0.0
6test 805 chordTo: 12029263.15
6test 806 chordTo: 12029049.69
6test 807 initialBearingTo: 156.1106
6test 808 initialBearingTo: 65.9335
6test 809 initialBearingTo: 0.0
6test 810 initialBearingTo: 180.0
6test 811 finalBearingTo: 157.8345
6test 812 finalBearingTo: 93.9034
6test 813 bearingTo2: 156.1106, 157.8345
6test 814 ispolar: True
6test 815 copy: True
6test 816 __eq__: True
6test 817 __ne__: False
6test 818 equirectangularTo: 404329.56
6test 819 distanceTo: 404607.805988
6test 820 distanceTo: 404607.805988
6test 821 distanceTo: 3981601
6test 822 antipodal: False
6test 823 distanceTo dateline: 19959679.267
6test 824 distanceTo unrolled: 19959679.267
6test 825 antipodal: False
6test 826 distanceTo dateline: 9513998
6test 827 distanceTo unrolled: 9513998
6test 828 distanceTo: 18003740.39
6test 829 distanceTo: 0.00  FAILED, KNOWN, expected 20003931.46
6test 830 distanceTo3 dateline: 19959679.2674, 161.0677, 18.8252
6test 831 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 832 distanceTo3 dateline: 19959679.2674, 161.0677, 18.8252
6test 833 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 834 intermediateTo: 51.372275°N, 000.707253°E
6test 835 intermediateTo: True
6test 836 intermediateTo: 404607.806
6test 837 intermediateTo+5: 35.139582°N, 008.994368°E
6test 838 intermediateTo+5: 5.000
6test 839 intermediateTo-4: 64.894124°N, 013.705689°W
6test 840 intermediateTo-4: 4.000
6test 841 intermediateTo-h: 125.000
6test 842 midpointTo: 50.536583°N, 001.274507°E
6test 843 destination: 51.513526°N, 000.098038°W
6test 844 destination: 51°30′49″N, 000°05′53″W
6test 845 destination: 33°57′N, 118°24′W
6test 846 destination: 33.950367°N, 118.399012°W
6test 847 destination: 0.592546N, 2.066453W
6test 848 destination: 32.11195529°N, 064.56074722°E  FAILED, KNOWN, expected 32.11195529°N, 063.95925278°E
6test 849 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 850 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 851 chordTo: 125203.963
6test 852 cosineAndoyerLambertTo: 125205.962
6test 853 cosineAndoyerLambertTo: 125205.962
6test 854 cosineForsyheAndoyerLambertTo: 125205.965
6test 855 cosineForsyheAndoyerLambertTo: 125205.965
6test 856 cosineLawTo: 124801.098
6test 857 cosineLawTo: 124801.098
6test 858 equirectangularTo: 124804.754
6test 859 equirectangularTo: 124804.754
6test 860 euclideanTo: 130015.089
6test 861 euclideanTo: 130015.089
6test 862 flatLocalTo: 125209.633
6test 863 flatLocalTo: 125209.633
6test 864 flatPolarTo: 133663.257
6test 865 flatPolarTo: 133663.257
6test 866 hartzell: 53.3206°N, 001.7297°W
6test 867 hartzell: 53.349541°N, 001.7297°W
6test 868 height4: 1.0413519725444986e-09  FAILED, KNOWN, expected 0.0
6test 869 height4: (3820333.9, -115367.0, 5097204.4, -6584.9)
6test 870 height4: 53°19′14.2″N, 001°43′46.9″W
6test 871 height4: 53°19′14.2″N, 001°43′46.9″W
6test 872 haversineTo: 124801.098
6test 873 haversineTo: 124801.098
6test 874 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 875 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 876 thomasTo: 125206.188
6test 877 thomasTo: 125206.188
6test 878 vincentysTo: 124801.098
6test 879 vincentysTo: 124801.098
6test 880 isclockwise: False
6test 881 isclockwise*: False
6test 882 isclockwise: True
6test 883 isclockwise*: True
6test 884 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 885 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 886 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 887 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 888 isconvex: False
6test 889 isconvex*: False
6test 890 isconvex: True
6test 891 isconvex*: True
6test 892 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 893 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 894 isenclosedBy1: True
6test 895 isenclosedBy1*: True
6test 896 isenclosedBy2: False
6test 897 isenclosedBy2*: False
6test 898 isenclosedBy3: False
6test 899 isenclosedBy3*: False
6test 900 isenclosedBy4: False
6test 901 isenclosedBy4*: False
6test 902 isenclosedBy5: False
6test 903 isenclosedBy5*: False
6test 904 isenclosedBy6: True
6test 905 isenclosedBy6*: True
6test 906 isenclosedBy7: True
6test 907 isenclosedBy7*: True
6test 908 initialBearingTo: 102.392291
6test 909 compassAngleTo: 100.017
6test 910 compassAngleTo: 105.599
6test 911 initialBearingTo: 288.676039
6test 912 compassAngleTo: 280.017
6test 913 compassAngleTo: 285.599
6test 914 equirectangularTo: 592.185
6test 915 distanceTo: 593.571
6test 916 bearingTo: 0.0
6test 917 compassAngleTo: 0.0
6test 918 bearingTo: 45.2  FAILED, KNOWN, expected 45.0
6test 919 compassAngleTo: 45.0
6test 920 bearingTo: 90.0
6test 921 compassAngleTo: 90.0
6test 922 bearingTo: 180.0
6test 923 compassAngleTo: 180.0
6test 924 bearingTo: 225.2  FAILED, KNOWN, expected 225.0
6test 925 compassAngleTo: 225.0
6test 926 bearingTo: 314.8  FAILED, KNOWN, expected 315.0
6test 927 compassAngleTo: 315.0
6test 928 bearingTo: 270.0
6test 929 compassAngleTo: 270.0
6test 930 bearingTo: 0.0  FAILED, KNOWN, expected 359.4
6test 931 compassAngleTo: 359.4
6test 932 latlon2: (53.0, 1.0)
6test 933 philam2: (0.93, 0.02)
6test 934 bearingTo: 31
6test 935 compassAngleTo: 31
6test 936 compassAngleTo: 45

6test 937 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 938 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 939 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 940 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 941 isequalTo: <class 'bool'>
6test 942 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 943 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 944 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 945 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 946 compassAngleTo: <class 'float'>
6test 947 cosineLawTo: <class 'float'>
6test 948 euclideanTo: <class 'float'>
6test 949 flatLocalTo: <class 'float'>
6test 950 flatPolarTo: <class 'float'>
6test 951 haversineTo: <class 'float'>
6test 952 hubenyTo: <class 'float'>
6test 953 vincentysTo: <class 'float'>
6test 954 toNvector: (0.615661, 0.0, 0.788011)
6test 955 toVector: (0.615661, 0.0, 0.788011)
6test 956 toVector3d: (0.61566, 0.0, 0.78801)
6test 957 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 305.091  FAILED, KNOWN, expected 311.234
6test 958 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.66933643°N, 002.48620262°E  FAILED, KNOWN, expected 42.66938776°N, 002.48641176°E
6test 959 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 1592.545  FAILED, KNOWN, expected 1586.951
6test 960 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.65141232°N, 002.46816989°E  FAILED, KNOWN, expected 42.65153156°N, 002.46821899°E
6test 961 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 3
6test 962 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 127.229  FAILED, KNOWN, expected 137.897
6test 963 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 152.612  FAILED, KNOWN, expected 148.175
6test 964 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 965 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 2
6test 966 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 2400.293  FAILED, KNOWN, expected 2399.908
6test 967 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 2400.293  FAILED, KNOWN, expected 2399.908
6test 968 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.66128984°N, 002.47973818°E  FAILED, KNOWN, expected 42.6613586°N, 002.47981223°E
6test 969 trilaterate5 (pygeodesy.ellipsoidalExact) .min- is .maxPoint: True
6test 970 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 1
6test 971 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 1343.743  FAILED, KNOWN, expected 1332.749
6test 972 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.69131964°N, 002.50112167°E  FAILED, KNOWN, expected 42.69124153°N, 002.50124031°E
6test 973 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 1445.554  FAILED, KNOWN, expected 1450.709
6test 974 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 975 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 2
6test 976 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
627 tests skipped (98): No module named 'numpy': required by vector2d._numpy
6test 977 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
622 tests skipped (120): No module named 'numpy': required by vector2d._numpy
6test 978 area cw/ccw: 1.0
6testNOAA(pygeodesy.ellipsoidalExact, 22.07.07)
6test 979 NOAAexample1: 191872.1190, 249 03 16.4237, 67 59 11.1619
6test 980 NOAAexample2: 182009.1679, 254 42 44.6439, 73 09 21.3315
6test 981 NOAAexample3: 123456.7891, 245 00 34.7001, 64 20 24.6864
6test 982 NOAAexample4: 145239.0603, 114 29 26.9586, 295 21 32.6566
6testIntersection3(pygeodesy.ellipsoidalExact, 22.07.07)
6test 983 (30, 17): (LatLon(30°52′03.1″N, 015°30′38.41″E), 0, 0)
6test 984 (30, 17): (LatLon(30°52′03.1″N, 015°30′38.41″E), -1, 0)
6test 985 (-1,  3): (LatLon(01°34′52.49″N, 006°00′51.83″E), -1, -2)
6test 986 (-1,  3): (LatLon(01°34′52.49″N, 006°00′51.83″E), -1, 2)
6test 987 (65, 32): (LatLon(56°58′26.51″N, 032°00′00.0″E), 1, 0)
6test 988 (65, 32): (LatLon(56°58′26.51″N, 032°00′00.0″E), 1, 2)
6test 989 (-2, 17): <class 'pygeodesy.errors.IntersectionError'>
6test 990 (49, 25): (LatLon(49°00′00.0″N, 025°00′00.0″E), 0, -2)  FAILED, KNOWN, expected (LatLon(49°00′00.0″N, 025°00′00.0″E), 0, 0)
6test 991 #58: (LatLon(01°54′25.65″S, 005°37′48.76″E), 1, -2)
6test 992 #58: <class 'pygeodesy.errors.IntersectionError'>
6testIntersections2(pygeodesy.ellipsoidalExact, 22.07.07)
6test 993 EquidistantExact: 36.9879°N, 088.1564°W, 38.2441°N, 092.3835°W
6test 994 EquidistantExact: 36.9879°N, 088.1564°W, 38.2441°N, 092.3835°W
6test 995 EquidistantExact: 00.0°S, 035.3478°W, 00.0°N, 035.3478°E  FAILED, KNOWN, expected 00.0°N, 035.3478°W, 00.0°S, 035.3478°E
6test 996 EquidistantExact: 1.63715 (% of radius)
6test 997 EquidistantExact: 22.657°N, 000.0°W, 22.657°S, 000.0°E  FAILED, KNOWN, expected 22.657°N, 000.0°E, 22.657°S, 000.0°E
6test 998 EquidistantExact: 1.30663 (% of radius)
6test 999 EquidistantExact: 29.4898°N, 040.1785°W, 29.4898°S, 040.1785°E
6test 1000 EquidistantExact: 1.31396 (% of radius)
6test 1001 EquidistantExact: 02.7402°S, 044.885°E, 02.7402°N, 044.885°E
6test 1002 EquidistantExact: 1.83268 (% of radius)
6test 1003 EquidistantExact 5: 05.0558°S, 005.0271°W, 05.0558°N, 005.0271°E
6test 1004 EquidistantExact 5: 2.72206e-15 (% of radius)
6test 1005 EquidistantExact 10: 10.1081°S, 010.2901°W, 10.1081°N, 010.2901°E
6test 1006 EquidistantExact 10: 8.37557e-16 (% of radius)
6test 1007 EquidistantExact 15: 15.1433°S, 016.0531°W, 15.1433°N, 016.0531°E
6test 1008 EquidistantExact 15: 3.35023e-15 (% of radius)
6test 1009 EquidistantExact 20: 20.1241°S, 022.6411°W, 20.1241°N, 022.6411°E
6test 1010 EquidistantExact 20: 4.18779e-16 (% of radius)
6test 1011 EquidistantExact 25: 24.9655°S, 030.4846°W, 24.9655°N, 030.4846°E
6test 1012 EquidistantExact 25: 1.17258e-15 (% of radius)
6test 1013 EquidistantExact 30: 29.4898°S, 040.1785°W, 29.4898°N, 040.1785°E
6test 1014 EquidistantExact 30: 9.7715e-16 (% of radius)
6test 1015 EquidistantExact 35: 33.3405°S, 052.5516°W, 33.3405°N, 052.5516°E
6test 1016 EquidistantExact 35: 8.37557e-16 (% of radius)
6test 1017 EquidistantExact 40: 35.8146°S, 068.7149°W, 35.8146°N, 068.7149°E
6test 1018 EquidistantExact 40: 1.46573e-15 (% of radius)
6test 1019 EquidistantExact 45: 35.5368°S, 090.0616°W, 35.5368°N, 090.0616°E
6test 1020 EquidistantExact 45: 5.58372e-16 (% of radius)
6test 1021 EquidistantExact 50: 29.5972°S, 118.8695°W, 29.5972°N, 118.8695°E
6test 1022 EquidistantExact 50: 3.35023e-16 (% of radius)
6test 1023 EquidistantExact: center1 (LatLon(55°00′00.0″N, 055°00′00.0″W)), center2 (LatLon(55°00′00.0″S, 055°00′00.0″E)), radius1 (12231458.77080936) or radius2 (12231458.77080936): no convergence (188568): tolerance (0.001) too low, antipodal or near-polar?  FAILED, KNOWN, expected 2-tuple
6test 1024 EquidistantExact: center1 (LatLon(60°00′00.0″N, 060°00′00.0″W)), center2 (LatLon(60°00′00.0″S, 060°00′00.0″E)), radius1 (13343409.568155663) or radius2 (13343409.568155663): no convergence (1.01348e+06): tolerance (0.001) too low, antipodal or near-polar?  FAILED, KNOWN, expected 2-tuple
6test 1025 EquidistantExact: center1 (LatLon(65°00′00.0″N, 065°00′00.0″W)), center2 (LatLon(65°00′00.0″S, 065°00′00.0″E)), radius1 (14455360.36550197) or radius2 (14455360.36550197): no convergence (1.55092e+06): tolerance (0.001) too low, antipodal or near-polar?  FAILED, KNOWN, expected 2-tuple
6test 1026 EquidistantExact: 36.470073°S, 022.592698°E Random +/- 45
6test 1027 EquidistantExact: 36.470073°S, 022.592698°E, 49.3945°N, 025.413494°W  d 8.62616e-09 meter (iteration 3)
6test 1028 EquidistantExact: 36.470073°S, 022.592698°E, 04.093155°S, 015.936235°W  d 2.33821e-09 meter (iteration 3)
6test 1029 EquidistantExact: 36.470073°S, 022.592698°E, 26.02211°N, 034.211489°W  d 3.57311e-09 meter (iteration 3)
6test 1030 EquidistantExact: 36.470073°S, 022.592698°E, 23.576203°N, 040.424699°W  d 9.51211e-10 meter (iteration 3)
6test 1031 EquidistantExact: 36.470073°S, 022.592698°E, 30.620062°S, 003.989486°W  d 4.36956e-09 meter (iteration 3)
6test 1032 EquidistantExact: 36.470073°S, 022.592698°E, 45.75513°S, 015.555965°W  d 1.09389e-08 meter (iteration 3)
6test 1033 EquidistantExact: 36.470073°S, 022.592698°E, 35.110189°N, 030.244869°E  d 4.09404e-09 meter (iteration 3)
6test 1034 EquidistantExact: 36.470073°S, 022.592698°E, 25.969221°N, 011.033077°E  d 7.75009e-10 meter (iteration 3)
6test 1035 EquidistantExact: 36.470073°S, 022.592698°E, 45.868309°N, 050.714733°E  d 1.78225e-08 meter (iteration 3)
6test 1036 EquidistantExact: 36.470073°S, 022.592698°E, 54.880628°S, 025.505389°E  d 3.50264e-08 meter (iteration 3)
6test 1037 EquidistantExact: 36.470073°S, 022.592698°E, 36.713534°S, 014.86908°E  d 9.39359e-08 meter (iteration 4)
6test 1038 EquidistantExact: 36.470073°S, 022.592698°E, 17.875272°N, 067.270455°W  d 7.13408e-09 meter (iteration 3)
6testKarney(pygeodesy.ellipsoidalExact, 22.07.07, datum='WGS84')
6test 1039 distanceTo: 866455.4329
6test 1040 coincident: 0.0
6test 1041 toDatum: OSGB36
6test 1042 ValueError2: Ellipsoid 'Airy1830': incompatible with Ellipsoid 'WGS84'
6test 1043 isEllipsoidal: True
6test 1044 copy: True
6test 1045 isEllipsoidal: True
6test 1046 isSpherical: False
6test 1047 copy: 37°57′03.7203″S, 144°25′29.5244″E
6testKarneyVincenty(pygeodesy.ellipsoidalExact, 22.07.07, datum='WGS84')
6test 1048 coincident: 0.0
6test 1049 coincident: 0.0, 0.0, 0.0
6test 1050 destination: 37.6528°S, 143.9265°E
6test 1051 destination: True
6test 1052 destination2: 37.652821°S, 143.926496°E, 307.1736°NW
6test 1053 destination2: True
6test 1054 finalBearingOn: 307.1736°, 307°10′25.07″NW
6test 1055 distanceTo: 969954.166
6test 1056 distanceTo3: 969954.166314, 9.141877, 11.29722
6test 1057 distanceTo2: 972708.16174, 11.22502
6test 1058 initialBearingTo: 9.1419°, 9°08′30.76″N
6test 1059 destination: 58.64402°N, 003.07009°W
6test 1060 finalBearingTo: 11.2972°, 11°17′49.99″NNE
6test 1061 finalBearingOn: 11.2972°, 11°17′49.99″NNE
6test 1062 distanceTo: 404607.806
6test 1063 distanceTo3: 404607.805988, 156.11064, 157.8345
6test 1064 distanceTo2: 402574.597287, 157.726344
6test 1065 initialBearingTo: 156.1106°, 156°06′38.31″SSE
6test 1066 destination: 48.857°N, 002.351°E
6test 1067 finalBearingTo: 157.8345°, 157°50′04.2″SSE
6test 1068 finalBearingOn: 157.8345°, 157°50′04.2″SSE
6test 1069 distanceTo: 54973.295
6test 1070 distanceTo3: 54973.29527, 233.13008, 232.82461
6test 1071 distanceTo2: 54903.41209, 232.9209
6test 1072 initialBearingTo: 233.1301°, 233°07′48.28″SW
6test 1073 destination: 37.6528°N, 143.9265°E
6test 1074 finalBearingTo: 232.8246°, 232°49′28.59″SW
6test 1075 finalBearingOn: 232.8246°, 232°49′28.59″SW
6test 1076 distanceToMP: 298396.057
6test 1077 distanceToSM: 185.415
6test 1078 distanceToMP: 111319.491
6test 1079 distanceToMP: 110574.361
6test 1080 distanceToKW: 222638.982
6test 1081 distanceToKW: 111319.491
6test 1082 distanceTo3: 54972.271
6test 1083 distanceTo3: 306°52′05.37″
6test 1084 distanceTo3: 307°10′25.07″
6test 1085 distanceTo2: 54902.390
6test 1086 distanceTo2: 307°04′38.41″
6testKarneyVincentyError(pygeodesy.ellipsoidalExact, 22.07.07, datum='WGS84')
6test 1087 distanceTo/antipodal (None): 19936288.579
6test 1088 distanceTo/VincentyError (None): 19944127.421
6test 1089 initialBearingTo/VincentyError (None): 15.556883
6test 1090 finalBearingTo/VincentyError (None): 164.442514
6test 1091 distanceTo/equatorial (None): 0.00  FAILED, KNOWN, expected 20003931.46
6test 1092 initialBearingTo/equatorial (None): 0.0
6test 1093 distanceTo/coincident (None): 111319.491
6test 1094 distanceTo/meridional (None): 9999551.606
6test 1095 initialBearingTo/meridional (None): 180.0
6test 1096 distanceTo/coincident (None): 0.0
6test 1097 initialBearingTo/coincident (None): 180.0
6test 1098 finalBearingTo/coincident (None): 180.0
6test 1099 destination/coincident (None): 50.06632°N, 005.71475°W
6test 1100 distanceTo/anti-meridian (None): 10825924.1
6test 1101 distanceTo/quadrants (None): 4015703.02
6test 1102 distanceTo/quadrants (None): 4015703.02
6test 1103 distanceTo/quadrants (None): 4015703.02
6test 1104 distanceTo/quadrants (None): 4015703.02
6test 1105 distanceTo/quadrants (None): 4015703.02
6test 1106 distanceTo/quadrants (None): 4015703.02
6test 1107 distanceTo/quadrants (None): 4015703.02
6test 1108 distanceTo/quadrants (None): 4015703.02
6test 1109 distanceTo/quadrants (None): 4015703.02
6test 1110 distanceTo/quadrants (None): 4015703.02
6test 1111 distanceTo/quadrants (None): 4015703.02
6test 1112 distanceTo/quadrants (None): 4015703.02
6test 1113 distanceTo/quadrants (None): 4015703.02
6test 1114 distanceTo/quadrants (None): 4015703.02
6test 1115 distanceTo/quadrants (None): 4015703.02
6test 1116 distanceTo/quadrants (None): 4015703.02
6testKarney(pygeodesy.ellipsoidalExact, 22.07.07, datum='NAD83')
6test 1117 distanceTo: 866455.4329
6test 1118 coincident: 0.0
6test 1119 toDatum: OSGB36
6test 1120 ValueError2: Ellipsoid 'Airy1830': incompatible with Ellipsoid 'GRS80'
6test 1121 isEllipsoidal: True
6test 1122 copy: True
6test 1123 isEllipsoidal: True
6test 1124 isSpherical: False
6test 1125 copy: 37°57′03.7203″S, 144°25′29.5244″E
6testKarneyVincenty(pygeodesy.ellipsoidalExact, 22.07.07, datum='NAD83')
6test 1126 coincident: 0.0
6test 1127 coincident: 0.0, 0.0, 0.0
6test 1128 destination: 37.6528°S, 143.9265°E
6test 1129 destination: True
6test 1130 destination2: 37.652821°S, 143.926496°E, 307.1736°NW
6test 1131 destination2: True
6test 1132 finalBearingOn: 307.1736°, 307°10′25.07″NW
6test 1133 distanceTo: 969954.166
6test 1134 distanceTo3: 969954.166314, 9.141877, 11.29722
6test 1135 distanceTo2: 972708.16174, 11.22502
6test 1136 initialBearingTo: 9.1419°, 9°08′30.76″N
6test 1137 destination: 58.64402°N, 003.07009°W
6test 1138 finalBearingTo: 11.2972°, 11°17′49.99″NNE
6test 1139 finalBearingOn: 11.2972°, 11°17′49.99″NNE
6test 1140 distanceTo: 404607.806
6test 1141 distanceTo3: 404607.805988, 156.11064, 157.8345
6test 1142 distanceTo2: 402574.597287, 157.726344
6test 1143 initialBearingTo: 156.1106°, 156°06′38.31″SSE
6test 1144 destination: 48.857°N, 002.351°E
6test 1145 finalBearingTo: 157.8345°, 157°50′04.2″SSE
6test 1146 finalBearingOn: 157.8345°, 157°50′04.2″SSE
6test 1147 distanceTo: 54973.295
6test 1148 distanceTo3: 54973.29527, 233.13008, 232.82461
6test 1149 distanceTo2: 54903.41209, 232.9209
6test 1150 initialBearingTo: 233.1301°, 233°07′48.28″SW
6test 1151 destination: 37.6528°N, 143.9265°E
6test 1152 finalBearingTo: 232.8246°, 232°49′28.59″SW
6test 1153 finalBearingOn: 232.8246°, 232°49′28.59″SW
6test 1154 distanceToMP: 298396.057
6test 1155 distanceToSM: 185.415
6test 1156 distanceToMP: 111319.491
6test 1157 distanceToMP: 110574.361
6test 1158 distanceToKW: 222638.982
6test 1159 distanceToKW: 111319.491
6test 1160 distanceTo3: 54972.271
6test 1161 distanceTo3: 306°52′05.37″
6test 1162 distanceTo3: 307°10′25.07″
6test 1163 distanceTo2: 54902.390
6test 1164 distanceTo2: 307°04′38.41″
6testKarneyVincentyError(pygeodesy.ellipsoidalExact, 22.07.07, datum='NAD83')
6test 1165 distanceTo/antipodal (None): 19936288.579
6test 1166 distanceTo/VincentyError (None): 19944127.421
6test 1167 initialBearingTo/VincentyError (None): 15.556883
6test 1168 finalBearingTo/VincentyError (None): 164.442514
6test 1169 distanceTo/equatorial (None): 0.00  FAILED, KNOWN, expected 20003931.46
6test 1170 initialBearingTo/equatorial (None): 0.0
6test 1171 distanceTo/coincident (None): 111319.491
6test 1172 distanceTo/meridional (None): 9999551.606
6test 1173 initialBearingTo/meridional (None): 180.0
6test 1174 distanceTo/coincident (None): 0.0
6test 1175 initialBearingTo/coincident (None): 180.0
6test 1176 finalBearingTo/coincident (None): 180.0
6test 1177 destination/coincident (None): 50.06632°N, 005.71475°W
6test 1178 distanceTo/anti-meridian (None): 10825924.1
6test 1179 distanceTo/quadrants (None): 4015703.02
6test 1180 distanceTo/quadrants (None): 4015703.02
6test 1181 distanceTo/quadrants (None): 4015703.02
6test 1182 distanceTo/quadrants (None): 4015703.02
6test 1183 distanceTo/quadrants (None): 4015703.02
6test 1184 distanceTo/quadrants (None): 4015703.02
6test 1185 distanceTo/quadrants (None): 4015703.02
6test 1186 distanceTo/quadrants (None): 4015703.02
6test 1187 distanceTo/quadrants (None): 4015703.02
6test 1188 distanceTo/quadrants (None): 4015703.02
6test 1189 distanceTo/quadrants (None): 4015703.02
6test 1190 distanceTo/quadrants (None): 4015703.02
6test 1191 distanceTo/quadrants (None): 4015703.02
6test 1192 distanceTo/quadrants (None): 4015703.02
6test 1193 distanceTo/quadrants (None): 4015703.02
6test 1194 distanceTo/quadrants (None): 4015703.02
6testKarney_s(pygeodesy.ellipsoidalExact, 22.07.07)
6test 1195 .lat1: -41.320
6test 1196 .lon1: 174.810
6test 1197 .azi1: 161.067669986159  FAILED, KNOWN, expected 161.067669986160
6test 1198 .lat2: 40.960
6test 1199 .lon2: -5.500
6test 1200 .azi2: 18.825195123248  FAILED, KNOWN, expected 18.825195123247
6test 1201 .s12: 19959679.267353821546
6test 1202 distanceTo3: 19959679.267354, 161.067670, 18.825195
6test 1203 destination2: 40.96, -5.5, 18.825195123247
6test 1204 areaOf: 1.366270368e+13
6test 1205 perimeterOf: 1.683089136e+07
6test 1206 isclockwise: False
6test 1207 isclockwise: True
6test 1208 areaCO: 2.69154549884e+11
6test 1209 isclockwise: True
6test 1210 perimeterCO: 2098430.887891
6104 of 1210 testEllipsoidal.py tests (8.6%) FAILED, incl. 100 KNOWN plus 4 DeprecationWarnings, 120 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 51.004 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testEllipsoidalGeodTest.py
6testing testEllipsoidalGeodTest.py 21.05.16 (module pygeodesy.ellipsoidalExact 22.07.07)
6test 1 line 1 lat: -48.164271
6test 2 line 1 lon: 5.762345
6test 3 line 1 fb: 175.334308
6test 4 line 1 lat2: -48.164270779098
6test 5 line 1 lon2: 5.762344694676  FAILED, KNOWN, expected 5.762344694677
6test 6 line 1 azi2: 175.334308316285
6test 7 line 2 lat: -23.186513
6test 8 line 2 lon: 68.567247
6test 9 line 2 fb: 154.287114
6test 10 line 2 lat2: -23.186512533703
6test 11 line 2 lon2: 68.567247430960
6test 12 line 2 azi2: 154.287114123872
6test 13 line 3 lat: 53.997072
6test 14 line 3 lon: 44.520619
6test 15 line 3 fb: 52.159487
6test 16 line 3 lat2: 53.997072295385
6test 17 line 3 lon2: 44.520619105668
6test 18 line 3 azi2: 52.159486739948
6test 19 line 4 lat: -49.416672
6test 20 line 4 lon: 166.828083
6test 21 line 4 fb: 22.033031
6test 22 line 4 lat2: -49.416672064706
6test 23 line 4 lon2: 166.828083210689
6test 24 line 4 azi2: 22.033030848249
6test 25 line 5 lat: -60.405136
6test 26 line 5 lon: 110.581140
6test 27 line 5 fb: 75.518296
6test 28 line 5 lat2: -60.405136414530
6test 29 line 5 lon2: 110.581139538777
6test 30 line 5 azi2: 75.518295964649
6test 31 line 6 lat: -11.212600
6test 32 line 6 lon: 144.177077
6test 33 line 6 fb: 133.027766
6test 34 line 6 lat2: -11.212600121556
6test 35 line 6 lon2: 144.177076511360
6test 36 line 6 azi2: 133.027766301029
6test 37 line 7 lat: -6.529067
6test 38 line 7 lon: 2.895924
6test 39 line 7 fb: 178.740350
6test 40 line 7 lat2: -6.529066987956
6test 41 line 7 lon2: 2.895923948125
6test 42 line 7 azi2: 178.740350145954
6test 43 line 8 lat: -8.855512
6test 44 line 8 lon: 112.749196
6test 45 line 8 fb: 119.512004
6test 46 line 8 lat2: -8.855512357257
6test 47 line 8 lon2: 112.749196494485
6test 48 line 8 azi2: 119.512003891282
6test 49 line 9 lat: 29.866967
6test 50 line 9 lon: 171.726893
6test 51 line 9 fb: 171.662245
6test 52 line 9 lat2: 29.866967483293
6test 53 line 9 lon2: 171.726892560963
6test 54 line 9 azi2: 171.662244609397
6test 55 line 10 lat: -29.238404
6test 56 line 10 lon: 133.459814
6test 57 line 10 fb: 69.814124
6test 58 line 10 lat2: -29.238404337998
6test 59 line 10 lon2: 133.459813533284
6test 60 line 10 azi2: 69.814124320813
6test 61 line 11 lat: 55.600487
6test 62 line 11 lon: 75.128743
6test 63 line 11 fb: 153.896689
6test 64 line 11 lat2: 55.600487151982  FAILED, KNOWN, expected 55.600487151983
6test 65 line 11 lon2: 75.128743229496  FAILED, KNOWN, expected 75.128743229495
6test 66 line 11 azi2: 153.896688535572
6test 67 line 12 lat: -22.858435
6test 68 line 12 lon: 67.207513
6test 69 line 12 fb: 142.939529
6test 70 line 12 lat2: -22.858434825399
6test 71 line 12 lon2: 67.207513019332
6test 72 line 12 azi2: 142.939529056687
6test 73 line 13 lat: -32.634475
6test 74 line 13 lon: 22.238523
6test 75 line 13 fb: 172.112993
6test 76 line 13 lat2: -32.634475461067
6test 77 line 13 lon2: 22.238523021935
6test 78 line 13 azi2: 172.112992582333
6test 79 line 14 lat: 62.224985
6test 80 line 14 lon: 47.119133
6test 81 line 14 fb: 54.318105
6test 82 line 14 lat2: 62.224984867045
6test 83 line 14 lon2: 47.119133304525
6test 84 line 14 azi2: 54.318105291965
6test 85 line 15 lat: 33.069613
6test 86 line 15 lon: 5.796996
6test 87 line 15 fb: 17.403845
6test 88 line 15 lat2: 33.069613195450
6test 89 line 15 lon2: 5.796995960186
6test 90 line 15 azi2: 17.403844642346
6test 91 line 16 lat: 53.760900
6test 92 line 16 lon: 119.204306
6test 93 line 16 fb: 141.069793
6test 94 line 16 lat2: 53.760899500985
6test 95 line 16 lon2: 119.204305898518
6test 96 line 16 azi2: 141.069793254983
6test 97 line 17 lat: -3.225632
6test 98 line 17 lon: 103.742354
6test 99 line 17 fb: 127.880328
6test 100 line 17 lat2: -3.225632004245
6test 101 line 17 lon2: 103.742354347526
6test 102 line 17 azi2: 127.880328388524
6test 103 line 18 lat: 47.108712
6test 104 line 18 lon: 99.934107
6test 105 line 18 fb: 104.103491
6test 106 line 18 lat2: 47.108712008353
6test 107 line 18 lon2: 99.934107358387
6test 108 line 18 azi2: 104.103491123038
6test 109 line 19 lat: 5.399363
6test 110 line 19 lon: 135.250064
6test 111 line 19 fb: 102.177018
6test 112 line 19 lat2: 5.399363208349
6test 113 line 19 lon2: 135.250063670790
6test 114 line 19 azi2: 102.177017677370
6test 115 line 20 lat: -58.669225
6test 116 line 20 lon: 54.875015
6test 117 line 20 fb: 131.345308
6test 118 line 20 lat2: -58.669224697403
6test 119 line 20 lon2: 54.875014559502
6test 120 line 20 azi2: 131.345308028428
6test 121 line 21 lat: 9.184229
6test 122 line 21 lon: 151.302637
6test 123 line 21 fb: 128.175105
6test 124 line 21 lat2: 9.184228666560
6test 125 line 21 lon2: 151.302636871911
6test 126 line 21 azi2: 128.175105446048
6test 127 line 22 lat: 53.467940
6test 128 line 22 lon: 67.724192
6test 129 line 22 fb: 78.863492
6test 130 line 22 lat2: 53.467939714247
6test 131 line 22 lon2: 67.724192258333
6test 132 line 22 azi2: 78.863492168727
6test 133 line 23 lat: 39.699456
6test 134 line 23 lon: 67.156325
6test 135 line 23 fb: 85.276830
6test 136 line 23 lat2: 39.699455912449
6test 137 line 23 lon2: 67.156324625647
6test 138 line 23 azi2: 85.276829539878
6test 139 line 24 lat: 70.942602
6test 140 line 24 lon: 17.379214
6test 141 line 24 fb: 21.869008
6test 142 line 24 lat2: 70.942602144324
6test 143 line 24 lon2: 17.379213644124
6test 144 line 24 azi2: 21.869008256312
6test 145 line 25 lat: 69.633349
6test 146 line 25 lon: 110.601933
6test 147 line 25 fb: 138.575193
6test 148 line 25 lat2: 69.633349004538
6test 149 line 25 lon2: 110.601933261211
6test 150 line 25 azi2: 138.575192608514
6test 151 line 26 lat: 16.190815
6test 152 line 26 lon: 87.606993
6test 153 line 26 fb: 131.929410
6test 154 line 26 lat2: 16.190814826165
6test 155 line 26 lon2: 87.606993293114
6test 156 line 26 azi2: 131.929409507039
6test 157 line 27 lat: 54.774905
6test 158 line 27 lon: 52.952507
6test 159 line 27 fb: 85.904051
6test 160 line 27 lat2: 54.774904542264
6test 161 line 27 lon2: 52.952506835523
6test 162 line 27 azi2: 85.904050867676
6test 163 line 28 lat: -62.008569
6test 164 line 28 lon: 172.274877
6test 165 line 28 fb: 21.992601
6test 166 line 28 lat2: -62.008568677307
6test 167 line 28 lon2: 172.274876714260
6test 168 line 28 azi2: 21.992601380429
6test 169 line 29 lat: 27.303730
6test 170 line 29 lon: 159.184451
6test 171 line 29 fb: 150.697920
6test 172 line 29 lat2: 27.303729660018
6test 173 line 29 lon2: 159.184451093393
6test 174 line 29 azi2: 150.697920369703
6test 175 line 30 lat: 31.979897
6test 176 line 30 lon: 55.946759
6test 177 line 30 fb: 87.398293
6test 178 line 30 lat2: 31.979897342658
6test 179 line 30 lon2: 55.946758945497
6test 180 line 30 azi2: 87.398292964767
6test 181 line 31 lat: 49.991468
6test 182 line 31 lon: 133.962411
6test 183 line 31 fb: 142.016540
6test 184 line 31 lat2: 49.991467522545
6test 185 line 31 lon2: 133.962411191467
6test 186 line 31 azi2: 142.016540226251
6test 187 line 32 lat: 2.818559
6test 188 line 32 lon: 7.234774
6test 189 line 32 fb: 168.804029
6test 190 line 32 lat2: 2.818558842278
6test 191 line 32 lon2: 7.234774421859
6test 192 line 32 azi2: 168.804029404993
6test 193 line 33 lat: -38.118071
6test 194 line 33 lon: 93.395971
6test 195 line 33 fb: 117.017377
6test 196 line 33 lat2: -38.118070550305
6test 197 line 33 lon2: 93.395971367720
6test 198 line 33 azi2: 117.017376985228
6test 199 line 34 lat: 3.377824
6test 200 line 34 lon: 65.294746
6test 201 line 34 fb: 138.982544
6test 202 line 34 lat2: 3.377824468035
6test 203 line 34 lon2: 65.294745963255
6test 204 line 34 azi2: 138.982543784560
6test 205 line 35 lat: 4.631157
6test 206 line 35 lon: 84.335045
6test 207 line 35 fb: 132.120804
6test 208 line 35 lat2: 4.631157299024
6test 209 line 35 lon2: 84.335044694540
6test 210 line 35 azi2: 132.120804319474
6test 211 line 36 lat: 38.952215
6test 212 line 36 lon: 133.416463
6test 213 line 36 fb: 160.690586
6test 214 line 36 lat2: 38.952215219507
6test 215 line 36 lon2: 133.416463103113
6test 216 line 36 azi2: 160.690585690749
6test 217 line 37 lat: -39.013297
6test 218 line 37 lon: 160.302849
6test 219 line 37 fb: 115.363715
6test 220 line 37 lat2: -39.013296805131
6test 221 line 37 lon2: 160.302849365986
6test 222 line 37 azi2: 115.363714797610
6test 223 line 38 lat: -48.456093
6test 224 line 38 lon: 38.613822
6test 225 line 38 fb: 137.651668
6test 226 line 38 lat2: -48.456093143589
6test 227 line 38 lon2: 38.613821719886
6test 228 line 38 azi2: 137.651668464815
6test 229 line 39 lat: -13.861956
6test 230 line 39 lon: 74.250572
6test 231 line 39 fb: 143.968262
6test 232 line 39 lat2: -13.861956131520  FAILED, KNOWN, expected -13.861956131519
6test 233 line 39 lon2: 74.250571564776
6test 234 line 39 azi2: 143.968262419705
6test 235 line 40 lat: 25.289202
6test 236 line 40 lon: 47.063579
6test 237 line 40 fb: 78.672533
6test 238 line 40 lat2: 25.289201968371
6test 239 line 40 lon2: 47.063578519727
6test 240 line 40 azi2: 78.672532588106
6test 241 line 41 lat: 49.498121
6test 242 line 41 lon: 131.993365
6test 243 line 41 fb: 157.425605
6test 244 line 41 lat2: 49.498121110507
6test 245 line 41 lon2: 131.993365399320
6test 246 line 41 azi2: 157.425605424890
6test 247 line 42 lat: -2.104242
6test 248 line 42 lon: 56.532079
6test 249 line 42 fb: 129.406955
6test 250 line 42 lat2: -2.104241718494
6test 251 line 42 lon2: 56.532079408825
6test 252 line 42 azi2: 129.406954892035
6test 253 line 43 lat: -39.997315
6test 254 line 43 lon: 49.004259
6test 255 line 43 fb: 135.432995
6test 256 line 43 lat2: -39.997315471629
6test 257 line 43 lon2: 49.004258662721
6test 258 line 43 azi2: 135.432994751523
6test 259 line 44 lat: 9.333272
6test 260 line 44 lon: 98.670857
6test 261 line 44 fb: 120.694280
6test 262 line 44 lat2: 9.333271992381
6test 263 line 44 lon2: 98.670857333200
6test 264 line 44 azi2: 120.694280236304
6test 265 line 45 lat: 38.653646
6test 266 line 45 lon: 136.060468
6test 267 line 45 fb: 152.489416
6test 268 line 45 lat2: 38.653646179484
6test 269 line 45 lon2: 136.060467518677
6test 270 line 45 azi2: 152.489415748331
6test 271 line 46 lat: -4.564995
6test 272 line 46 lon: 166.894968
6test 273 line 46 fb: 127.520036
6test 274 line 46 lat2: -4.564994956240
6test 275 line 46 lon2: 166.894968092836
6test 276 line 46 azi2: 127.520036113641
6test 277 line 47 lat: -38.522500
6test 278 line 47 lon: 178.679307
6test 279 line 47 fb: 176.468685
6test 280 line 47 lat2: -38.522500159620
6test 281 line 47 lon2: 178.679306959466
6test 282 line 47 azi2: 176.468684587438
6test 283 line 48 lat: 45.529796
6test 284 line 48 lon: 145.048738
6test 285 line 48 fb: 160.706227
6test 286 line 48 lat2: 45.529795503687  FAILED, KNOWN, expected 45.529795503688
6test 287 line 48 lon2: 145.048737846273
6test 288 line 48 azi2: 160.706226714169
6test 289 line 49 lat: -2.968925
6test 290 line 49 lon: 5.044083
6test 291 line 49 fb: 174.913528
6test 292 line 49 lat2: -2.968924563433
6test 293 line 49 lon2: 5.044082955485
6test 294 line 49 azi2: 174.913527615338
6test 295 line 50 lat: 1.618184
6test 296 line 50 lon: 163.262955
6test 297 line 50 fb: 161.097730
6test 298 line 50 lat2: 1.618184178387
6test 299 line 50 lon2: 163.262955108028
6test 300 line 50 azi2: 161.097729713868
6test 301 line 51 lat: 25.179740
6test 302 line 51 lon: 107.504992
6test 303 line 51 fb: 154.055552
6test 304 line 51 lat2: 25.179740339437
6test 305 line 51 lon2: 107.504991932892
6test 306 line 51 azi2: 154.055552232572
6test 307 line 52 lat: 57.391251
6test 308 line 52 lon: 89.082271
6test 309 line 52 fb: 101.276115
6test 310 line 52 lat2: 57.391251345244
6test 311 line 52 lon2: 89.082271206722
6test 312 line 52 azi2: 101.276114553753
6test 313 line 53 lat: -11.470673
6test 314 line 53 lon: 48.285095
6test 315 line 53 fb: 148.389696
6test 316 line 53 lat2: -11.470672507979
6test 317 line 53 lon2: 48.285094684225
6test 318 line 53 azi2: 148.389695684750
6test 319 line 54 lat: 27.356639
6test 320 line 54 lon: 84.391682
6test 321 line 54 fb: 104.661818
6test 322 line 54 lat2: 27.356639349123
6test 323 line 54 lon2: 84.391681754671
6test 324 line 54 azi2: 104.661818309238
6test 325 line 55 lat: -40.533598
6test 326 line 55 lon: 103.488381
6test 327 line 55 fb: 132.398259
6test 328 line 55 lat2: -40.533597900971
6test 329 line 55 lon2: 103.488381204009
6test 330 line 55 azi2: 132.398259207371
6test 331 line 56 lat: 52.337949
6test 332 line 56 lon: 149.908279
6test 333 line 56 fb: 162.333474
6test 334 line 56 lat2: 52.337949466457
6test 335 line 56 lon2: 149.908278798430
6test 336 line 56 azi2: 162.333474334205
6test 337 line 57 lat: -58.474076
6test 338 line 57 lon: 78.718606
6test 339 line 57 fb: 117.457565
6test 340 line 57 lat2: -58.474075605820
6test 341 line 57 lon2: 78.718605560533
6test 342 line 57 azi2: 117.457565115569
6test 343 line 58 lat: -35.840568
6test 344 line 58 lon: 4.157534
6test 345 line 58 fb: 174.451067
6test 346 line 58 lat2: -35.840568348239
6test 347 line 58 lon2: 4.157534199470
6test 348 line 58 azi2: 174.451066901814
6test 349 line 59 lat: 15.629163
6test 350 line 59 lon: 102.677417
6test 351 line 59 fb: 103.482103
6test 352 line 59 lat2: 15.629163409998
6test 353 line 59 lon2: 102.677417064290  FAILED, KNOWN, expected 102.677417064289
6test 354 line 59 azi2: 103.482102722183
6test 355 line 60 lat: -1.256180
6test 356 line 60 lon: 133.625255
6test 357 line 60 fb: 104.470489
6test 358 line 60 lat2: -1.256179633151
6test 359 line 60 lon2: 133.625254783633
6test 360 line 60 azi2: 104.470489013739
6test 361 line 61 lat: -40.558253
6test 362 line 61 lon: 112.897054
6test 363 line 61 fb: 90.226134
6test 364 line 61 lat2: -40.558252601871
6test 365 line 61 lon2: 112.897053867085
6test 366 line 61 azi2: 90.226134266467
6test 367 line 62 lat: 86.193596
6test 368 line 62 lon: 116.956880
6test 369 line 62 fb: 117.618329
6test 370 line 62 lat2: 86.193595821107
6test 371 line 62 lon2: 116.956880430711
6test 372 line 62 azi2: 117.618329340274
6test 373 line 63 lat: 6.874181
6test 374 line 63 lon: 54.891199
6test 375 line 63 fb: 90.820790
6test 376 line 63 lat2: 6.874181093562
6test 377 line 63 lon2: 54.891198619261
6test 378 line 63 azi2: 90.820789878786
6test 379 line 64 lat: -2.554657
6test 380 line 64 lon: 71.539549
6test 381 line 64 fb: 105.722921
6test 382 line 64 lat2: -2.554657243385
6test 383 line 64 lon2: 71.539549368441
6test 384 line 64 azi2: 105.722921401613
6test 385 line 65 lat: 1.329645
6test 386 line 65 lon: 138.134969
6test 387 line 65 fb: 150.465118
6test 388 line 65 lat2: 1.329645321136
6test 389 line 65 lon2: 138.134968538140
6test 390 line 65 azi2: 150.465118219879
6test 391 line 66 lat: -44.026427
6test 392 line 66 lon: 121.367591
6test 393 line 66 fb: 123.975227
6test 394 line 66 lat2: -44.026426573446
6test 395 line 66 lon2: 121.367591215510
6test 396 line 66 azi2: 123.975227063718
6test 397 line 67 lat: -3.399081
6test 398 line 67 lon: 138.655764
6test 399 line 67 fb: 98.994343
6test 400 line 67 lat2: -3.399080708673
6test 401 line 67 lon2: 138.655764270175
6test 402 line 67 azi2: 98.994343217447
6test 403 line 68 lat: -26.776985
6test 404 line 68 lon: 67.020055
6test 405 line 68 fb: 119.394665
6test 406 line 68 lat2: -26.776984673364
6test 407 line 68 lon2: 67.020054548341
6test 408 line 68 azi2: 119.394664651636
6test 409 line 69 lat: 52.057239
6test 410 line 69 lon: 151.887270
6test 411 line 69 fb: 161.537826
6test 412 line 69 lat2: 52.057239269050
6test 413 line 69 lon2: 151.887270484247
6test 414 line 69 azi2: 161.537826425477
6test 415 line 70 lat: 3.784724
6test 416 line 70 lon: 102.727745
6test 417 line 70 fb: 116.453155
6test 418 line 70 lat2: 3.784724165483
6test 419 line 70 lon2: 102.727744934481
6test 420 line 70 azi2: 116.453155405439
6test 421 line 71 lat: -40.409299
6test 422 line 71 lon: 86.033195
6test 423 line 71 fb: 121.080298
6test 424 line 71 lat2: -40.409298772797
6test 425 line 71 lon2: 86.033195335657
6test 426 line 71 azi2: 121.080297615268
6test 427 line 72 lat: 73.013460
6test 428 line 72 lon: 76.188125
6test 429 line 72 fb: 78.877769
6test 430 line 72 lat2: 73.013460186926
6test 431 line 72 lon2: 76.188125151657
6test 432 line 72 azi2: 78.877769459629
6test 433 line 73 lat: 52.870132
6test 434 line 73 lon: 51.020900
6test 435 line 73 fb: 102.113351
6test 436 line 73 lat2: 52.870131799667
6test 437 line 73 lon2: 51.020900069545
6test 438 line 73 azi2: 102.113351369331
6test 439 line 74 lat: 28.909632
6test 440 line 74 lon: 17.071526
6test 441 line 74 fb: 103.660711
6test 442 line 74 lat2: 28.909631785857
6test 443 line 74 lon2: 17.071526465331
6test 444 line 74 azi2: 103.660711362255
6test 445 line 75 lat: -58.257855
6test 446 line 75 lon: 15.812862
6test 447 line 75 fb: 169.606337
6test 448 line 75 lat2: -58.257854831091
6test 449 line 75 lon2: 15.812862089412
6test 450 line 75 azi2: 169.606337169070
6test 451 line 76 lat: -58.869445
6test 452 line 76 lon: 132.036795
6test 453 line 76 fb: 53.946549
6test 454 line 76 lat2: -58.869445004289
6test 455 line 76 lon2: 132.036794965086
6test 456 line 76 azi2: 53.946549037654
6test 457 line 77 lat: -45.547043
6test 458 line 77 lon: 77.540664
6test 459 line 77 fb: 126.917177
6test 460 line 77 lat2: -45.547042598505
6test 461 line 77 lon2: 77.540663933413
6test 462 line 77 azi2: 126.917177154676
6test 463 line 78 lat: 45.046385
6test 464 line 78 lon: 149.382429
6test 465 line 78 fb: 162.117474
6test 466 line 78 lat2: 45.046384823604
6test 467 line 78 lon2: 149.382428769460
6test 468 line 78 azi2: 162.117474447248
6test 469 line 79 lat: -74.853338
6test 470 line 79 lon: 96.072097
6test 471 line 79 fb: 85.425493
6test 472 line 79 lat2: -74.853338324199
6test 473 line 79 lon2: 96.072096720956  FAILED, KNOWN, expected 96.072096720955
6test 474 line 79 azi2: 85.425493305289
6test 475 line 80 lat: -13.205775
6test 476 line 80 lon: 57.532285
6test 477 line 80 fb: 122.358040
6test 478 line 80 lat2: -13.205775181752
6test 479 line 80 lon2: 57.532285422140
6test 480 line 80 azi2: 122.358040028964
6test 481 line 81 lat: -5.135864
6test 482 line 81 lon: 115.048833
6test 483 line 81 fb: 93.168400
6test 484 line 81 lat2: -5.135863872649
6test 485 line 81 lon2: 115.048832990097
6test 486 line 81 azi2: 93.168399576996
6test 487 line 82 lat: 13.355453
6test 488 line 82 lon: 19.253946
6test 489 line 82 fb: 143.568719
6test 490 line 82 lat2: 13.355452912310
6test 491 line 82 lon2: 19.253945880531
6test 492 line 82 azi2: 143.568718864193
6test 493 line 83 lat: 0.766426
6test 494 line 83 lon: 147.485817
6test 495 line 83 fb: 144.982274
6test 496 line 83 lat2: 0.766426443892
6test 497 line 83 lon2: 147.485816830606
6test 498 line 83 azi2: 144.982273873382
6test 499 line 84 lat: 10.228416
6test 500 line 84 lon: 159.204118
6test 501 line 84 fb: 173.111973
6test 502 line 84 lat2: 10.228416314659
6test 503 line 84 lon2: 159.204118025562
6test 504 line 84 azi2: 173.111973027488
6test 505 line 85 lat: 73.178089
6test 506 line 85 lon: 131.762700
6test 507 line 85 fb: 135.271161
6test 508 line 85 lat2: 73.178089048974
6test 509 line 85 lon2: 131.762699581941  FAILED, KNOWN, expected 131.762699581940
6test 510 line 85 azi2: 135.271161440271
6test 511 line 86 lat: -16.908717
6test 512 line 86 lon: 149.240494
6test 513 line 86 fb: 90.725082
6test 514 line 86 lat2: -16.908717231321
6test 515 line 86 lon2: 149.240493850337
6test 516 line 86 azi2: 90.725082091932
6test 517 line 87 lat: -23.440025
6test 518 line 87 lon: 98.819595
6test 519 line 87 fb: 154.388320
6test 520 line 87 lat2: -23.440025289757
6test 521 line 87 lon2: 98.819595131759
6test 522 line 87 azi2: 154.388319751570
6test 523 line 88 lat: -51.344465
6test 524 line 88 lon: 54.299399
6test 525 line 88 fb: 139.903236
6test 526 line 88 lat2: -51.344465279371
6test 527 line 88 lon2: 54.299399477396
6test 528 line 88 azi2: 139.903236261795
6test 529 line 89 lat: 33.922320
6test 530 line 89 lon: 143.463070
6test 531 line 89 fb: 132.788230
6test 532 line 89 lat2: 33.922319712554
6test 533 line 89 lon2: 143.463070326988
6test 534 line 89 azi2: 132.788229856713
6test 535 line 90 lat: -83.333068
6test 536 line 90 lon: 177.611925
6test 537 line 90 fb: 2.633769
6test 538 line 90 lat2: -83.333068057524
6test 539 line 90 lon2: 177.611924577958
6test 540 line 90 azi2: 2.633768744582
6test 541 line 91 lat: 20.587333
6test 542 line 91 lon: 164.201962
6test 543 line 91 fb: 166.991083
6test 544 line 91 lat2: 20.587333492522
6test 545 line 91 lon2: 164.201962479604
6test 546 line 91 azi2: 166.991083245940
6test 547 line 92 lat: 52.612815
6test 548 line 92 lon: 110.766184
6test 549 line 92 fb: 168.281486
6test 550 line 92 lat2: 52.612815386144
6test 551 line 92 lon2: 110.766184475279
6test 552 line 92 azi2: 168.281485715811
6test 553 line 93 lat: -41.681373
6test 554 line 93 lon: 82.150183
6test 555 line 93 fb: 107.012959
6test 556 line 93 lat2: -41.681372899642
6test 557 line 93 lon2: 82.150183233451
6test 558 line 93 azi2: 107.012959072514
6test 559 line 94 lat: 27.082807
6test 560 line 94 lon: 171.332531
6test 561 line 94 fb: 174.934340
6test 562 line 94 lat2: 27.082807052702
6test 563 line 94 lon2: 171.332530862401
6test 564 line 94 azi2: 174.934339881142
6test 565 line 95 lat: 57.992299
6test 566 line 95 lon: 15.128357
6test 567 line 95 fb: 62.342982
6test 568 line 95 lat2: 57.992299464191
6test 569 line 95 lon2: 15.128356773547
6test 570 line 95 azi2: 62.342982084737
6test 571 line 96 lat: -10.526000
6test 572 line 96 lon: 33.778702
6test 573 line 96 fb: 165.687804
6test 574 line 96 lat2: -10.526000344959
6test 575 line 96 lon2: 33.778701722506
6test 576 line 96 azi2: 165.687803859941
6test 577 line 97 lat: 25.802395
6test 578 line 97 lon: 98.502531
6test 579 line 97 fb: 97.837271
6test 580 line 97 lat2: 25.802394934787
6test 581 line 97 lon2: 98.502531199301
6test 582 line 97 azi2: 97.837270592496
6test 583 line 98 lat: 47.163255
6test 584 line 98 lon: 156.720176
6test 585 line 98 fb: 160.291022
6test 586 line 98 lat2: 47.163255465769
6test 587 line 98 lon2: 156.720176105542
6test 588 line 98 azi2: 160.291021678921
6test 589 line 99 lat: 47.932063
6test 590 line 99 lon: 35.094714
6test 591 line 99 fb: 137.545065
6test 592 line 99 lat2: 47.932062978964
6test 593 line 99 lon2: 35.094714092217
6test 594 line 99 azi2: 137.545065115425
6test 595 line 100 lat: -60.204340
6test 596 line 100 lon: 117.726218
6test 597 line 100 fb: 72.585011
6test 598 line 100 lat2: -60.204339807984
6test 599 line 100 lon2: 117.726217548610
6test 600 line 100 azi2: 72.585010656772
6test 601 line 101 lat: 35.247411
6test 602 line 101 lon: 59.471562
6test 603 line 101 fb: 81.179468
6test 604 line 101 lat2: 35.247410984329
6test 605 line 101 lon2: 59.471562388985
6test 606 line 101 azi2: 81.179468094302
6test 607 line 102 lat: 19.218268
6test 608 line 102 lon: 165.507915
6test 609 line 102 fb: 167.452074
6test 610 line 102 lat2: 19.218268047706
6test 611 line 102 lon2: 165.507915017643
6test 612 line 102 azi2: 167.452074301867
6test 613 line 103 lat: 55.428809
6test 614 line 103 lon: 121.956541
6test 615 line 103 fb: 154.501481
6test 616 line 103 lat2: 55.428809300888
6test 617 line 103 lon2: 121.956541206929
6test 618 line 103 azi2: 154.501481394521
6test 619 line 104 lat: 49.294374
6test 620 line 104 lon: 119.661420
6test 621 line 104 fb: 157.209489
6test 622 line 104 lat2: 49.294374468687
6test 623 line 104 lon2: 119.661419832789
6test 624 line 104 azi2: 157.209488754087
6test 625 line 105 lat: -32.534872
6test 626 line 105 lon: 152.280610
6test 627 line 105 fb: 45.281812
6test 628 line 105 lat2: -32.534872085863
6test 629 line 105 lon2: 152.280609797481
6test 630 line 105 azi2: 45.281812386148
6test 631 line 106 lat: -1.097899
6test 632 line 106 lon: 104.697360
6test 633 line 106 fb: 126.298489
6test 634 line 106 lat2: -1.097899218947
6test 635 line 106 lon2: 104.697359959629
6test 636 line 106 azi2: 126.298488917783
6test 637 line 107 lat: -18.034366
6test 638 line 107 lon: 28.460388
6test 639 line 107 fb: 129.520364
6test 640 line 107 lat2: -18.034366293950
6test 641 line 107 lon2: 28.460387638999
6test 642 line 107 azi2: 129.520363751001
6test 643 line 108 lat: 76.310833
6test 644 line 108 lon: 80.110525
6test 645 line 108 fb: 106.655922
6test 646 line 108 lat2: 76.310832995825
6test 647 line 108 lon2: 80.110524683625
6test 648 line 108 azi2: 106.655921818336
6test 649 line 109 lat: 39.838034
6test 650 line 109 lon: 42.989610
6test 651 line 109 fb: 69.695281
6test 652 line 109 lat2: 39.838033717901
6test 653 line 109 lon2: 42.989610477861
6test 654 line 109 azi2: 69.695281464222
6test 655 line 110 lat: -56.710166
6test 656 line 110 lon: 125.242287
6test 657 line 110 fb: 60.118756
6test 658 line 110 lat2: -56.710165877845
6test 659 line 110 lon2: 125.242287231675
6test 660 line 110 azi2: 60.118756013168
6test 661 line 111 lat: 55.796062
6test 662 line 111 lon: 59.736599
6test 663 line 111 fb: 73.536728
6test 664 line 111 lat2: 55.796061639165
6test 665 line 111 lon2: 59.736598787303
6test 666 line 111 azi2: 73.536727826063
6test 667 line 112 lat: -36.553675
6test 668 line 112 lon: 38.656806
6test 669 line 112 fb: 134.414837
6test 670 line 112 lat2: -36.553675319553
6test 671 line 112 lon2: 38.656806212281
6test 672 line 112 azi2: 134.414836606696
6test 673 line 113 lat: -36.798456
6test 674 line 113 lon: 163.588375
6test 675 line 113 fb: 147.324204
6test 676 line 113 lat2: -36.798455994877
6test 677 line 113 lon2: 163.588375017283
6test 678 line 113 azi2: 147.324204021436
6test 679 line 114 lat: -15.952937
6test 680 line 114 lon: 55.126807
6test 681 line 114 fb: 134.743426
6test 682 line 114 lat2: -15.952937085211
6test 683 line 114 lon2: 55.126807113658
6test 684 line 114 azi2: 134.743426025963
6test 685 line 115 lat: -34.573087
6test 686 line 115 lon: 69.304064
6test 687 line 115 fb: 111.515973
6test 688 line 115 lat2: -34.573086586710
6test 689 line 115 lon2: 69.304064202466
6test 690 line 115 azi2: 111.515973223076
6test 691 line 116 lat: 26.643499
6test 692 line 116 lon: 1.500481
6test 693 line 116 fb: 7.958966
6test 694 line 116 lat2: 26.643498959841
6test 695 line 116 lon2: 1.500480924882
6test 696 line 116 azi2: 7.958966071178
6test 697 line 117 lat: 60.891878
6test 698 line 117 lon: 91.543410
6test 699 line 117 fb: 92.273095
6test 700 line 117 lat2: 60.891878271763
6test 701 line 117 lon2: 91.543409983653
6test 702 line 117 azi2: 92.273095036246
6test 703 line 118 lat: 64.148187
6test 704 line 118 lon: 136.552579
6test 705 line 118 fb: 147.193229
6test 706 line 118 lat2: 64.148186913822
6test 707 line 118 lon2: 136.552579389353
6test 708 line 118 azi2: 147.193228706030
6test 709 line 119 lat: 62.311678
6test 710 line 119 lon: 39.238630
6test 711 line 119 fb: 53.785893
6test 712 line 119 lat2: 62.311677748693
6test 713 line 119 lon2: 39.238629619778
6test 714 line 119 azi2: 53.785893324444
6test 715 line 120 lat: 27.239733
6test 716 line 120 lon: 136.649227
6test 717 line 120 fb: 162.935700
6test 718 line 120 lat2: 27.239733033115
6test 719 line 120 lon2: 136.649227320518
6test 720 line 120 azi2: 162.935700444146
6test 721 line 121 lat: 6.562844
6test 722 line 121 lon: 170.159007
6test 723 line 121 fb: 174.851345
6test 724 line 121 lat2: 6.562844367534
6test 725 line 121 lon2: 170.159007094343
6test 726 line 121 azi2: 174.851345174583
6test 727 line 122 lat: -29.537259
6test 728 line 122 lon: 105.350044
6test 729 line 122 fb: 141.393876
6test 730 line 122 lat2: -29.537259231420
6test 731 line 122 lon2: 105.350044044462
6test 732 line 122 azi2: 141.393876478962
6test 733 line 123 lat: -66.447700
6test 734 line 123 lon: 83.741961
6test 735 line 123 fb: 129.422490
6test 736 line 123 lat2: -66.447699831143
6test 737 line 123 lon2: 83.741960628420
6test 738 line 123 azi2: 129.422490051758
6test 739 line 124 lat: 56.926818
6test 740 line 124 lon: 20.197117
6test 741 line 124 fb: 37.960006
6test 742 line 124 lat2: 56.926817599968
6test 743 line 124 lon2: 20.197117058896
6test 744 line 124 azi2: 37.960006049295
6test 745 line 125 lat: 55.018266
6test 746 line 125 lon: 83.735441
6test 747 line 125 fb: 130.766515
6test 748 line 125 lat2: 55.018265995959
6test 749 line 125 lon2: 83.735441278691
6test 750 line 125 azi2: 130.766514657995
6test 751 line 126 lat: -78.131054
6test 752 line 126 lon: 56.098176
6test 753 line 126 fb: 127.132203
6test 754 line 126 lat2: -78.131053729786
6test 755 line 126 lon2: 56.098176359326
6test 756 line 126 azi2: 127.132203471257
6test 757 line 127 lat: -18.223027
6test 758 line 127 lon: 86.221345
6test 759 line 127 fb: 114.875019
6test 760 line 127 lat2: -18.223027345294
6test 761 line 127 lon2: 86.221345156045
6test 762 line 127 azi2: 114.875019395396
6test 763 line 128 lat: -16.100413
6test 764 line 128 lon: 54.195260
6test 765 line 128 fb: 126.748474
6test 766 line 128 lat2: -16.100412777565
6test 767 line 128 lon2: 54.195259657284
6test 768 line 128 azi2: 126.748473963924
6test 769 line 129 lat: -15.192944
6test 770 line 129 lon: 85.057605
6test 771 line 129 fb: 133.468781
6test 772 line 129 lat2: -15.192944143354
6test 773 line 129 lon2: 85.057605312625
6test 774 line 129 azi2: 133.468780913302
6test 775 line 130 lat: -1.279757
6test 776 line 130 lon: 93.430943
6test 777 line 130 fb: 128.545662
6test 778 line 130 lat2: -1.279756550061
6test 779 line 130 lon2: 93.430943123745
6test 780 line 130 azi2: 128.545661704820
6test 781 line 131 lat: -29.465713
6test 782 line 131 lon: 79.050046
6test 783 line 131 fb: 109.482097
6test 784 line 131 lat2: -29.465712645249
6test 785 line 131 lon2: 79.050045796725
6test 786 line 131 azi2: 109.482097420926
6test 787 line 132 lat: 31.819596
6test 788 line 132 lon: 88.251997
6test 789 line 132 fb: 91.173935
6test 790 line 132 lat2: 31.819596255581
6test 791 line 132 lon2: 88.251997328019
6test 792 line 132 azi2: 91.173935030538
6test 793 line 133 lat: -63.260477
6test 794 line 133 lon: 96.535465
6test 795 line 133 fb: 84.208873
6test 796 line 133 lat2: -63.260477387265
6test 797 line 133 lon2: 96.535465277415
6test 798 line 133 azi2: 84.208873088521
6test 799 line 134 lat: 12.908849
6test 800 line 134 lon: 116.734308
6test 801 line 134 fb: 110.313866
6test 802 line 134 lat2: 12.908849199388
6test 803 line 134 lon2: 116.734308245854
6test 804 line 134 azi2: 110.313865884978
6test 805 line 135 lat: -73.345839
6test 806 line 135 lon: 99.753937
6test 807 line 135 fb: 89.074642
6test 808 line 135 lat2: -73.345839080078
6test 809 line 135 lon2: 99.753937450114
6test 810 line 135 azi2: 89.074641755279
6test 811 line 136 lat: -58.777033
6test 812 line 136 lon: 161.963990
6test 813 line 136 fb: 21.998889
6test 814 line 136 lat2: -58.777033293076
6test 815 line 136 lon2: 161.963989905489
6test 816 line 136 azi2: 21.998888971548
6test 817 line 137 lat: 5.093069
6test 818 line 137 lon: 53.687921
6test 819 line 137 fb: 124.015842
6test 820 line 137 lat2: 5.093068996651
6test 821 line 137 lon2: 53.687921438754
6test 822 line 137 azi2: 124.015842231205
6test 823 line 138 lat: 35.659489
6test 824 line 138 lon: 111.729315
6test 825 line 138 fb: 133.697281
6test 826 line 138 lat2: 35.659488664161
6test 827 line 138 lon2: 111.729315023485
6test 828 line 138 azi2: 133.697281357224
6test 829 line 139 lat: -24.330784
6test 830 line 139 lon: 71.666568
6test 831 line 139 fb: 106.278062
6test 832 line 139 lat2: -24.330783755994
6test 833 line 139 lon2: 71.666567863170
6test 834 line 139 azi2: 106.278062394907
6test 835 line 140 lat: -46.218742
6test 836 line 140 lon: 91.580078
6test 837 line 140 fb: 106.279111
6test 838 line 140 lat2: -46.218742288678
6test 839 line 140 lon2: 91.580077788700
6test 840 line 140 azi2: 106.279110700398
6test 841 line 141 lat: 50.143353
6test 842 line 141 lon: 101.322503
6test 843 line 141 fb: 154.314496
6test 844 line 141 lat2: 50.143352562968
6test 845 line 141 lon2: 101.322502529615
6test 846 line 141 azi2: 154.314496467352
6test 847 line 142 lat: -16.604376
6test 848 line 142 lon: 134.279201
6test 849 line 142 fb: 106.895990
6test 850 line 142 lat2: -16.604375537699
6test 851 line 142 lon2: 134.279201209117
6test 852 line 142 azi2: 106.895989785632
6test 853 line 143 lat: 54.031290
6test 854 line 143 lon: 144.862702
6test 855 line 143 fb: 152.937010
6test 856 line 143 lat2: 54.031289901242
6test 857 line 143 lon2: 144.862701667601
6test 858 line 143 azi2: 152.937009701639
6test 859 line 144 lat: 0.616911
6test 860 line 144 lon: 110.974662
6test 861 line 144 fb: 115.206118
6test 862 line 144 lat2: 0.616910921892
6test 863 line 144 lon2: 110.974662272005
6test 864 line 144 azi2: 115.206118431862
6test 865 line 145 lat: -6.243779
6test 866 line 145 lon: 175.658895
6test 867 line 145 fb: 177.520147
6test 868 line 145 lat2: -6.243779047728
6test 869 line 145 lon2: 175.658894820006
6test 870 line 145 azi2: 177.520147377315
6test 871 line 146 lat: -70.416699
6test 872 line 146 lon: 169.642468
6test 873 line 146 fb: 11.978943
6test 874 line 146 lat2: -70.416698815769
6test 875 line 146 lon2: 169.642468357274
6test 876 line 146 azi2: 11.978943348082
6test 877 line 147 lat: 19.558617
6test 878 line 147 lon: 88.645709
6test 879 line 147 fb: 113.578814
6test 880 line 147 lat2: 19.558616692495
6test 881 line 147 lon2: 88.645708539223
6test 882 line 147 azi2: 113.578814362497
6test 883 line 148 lat: -23.555114
6test 884 line 148 lon: 162.457529
6test 885 line 148 fb: 147.104331
6test 886 line 148 lat2: -23.555114207892
6test 887 line 148 lon2: 162.457529431664
6test 888 line 148 azi2: 147.104330772141
6test 889 line 149 lat: -51.275738
6test 890 line 149 lon: 103.747943
6test 891 line 149 fb: 115.235374
6test 892 line 149 lat2: -51.275737933996
6test 893 line 149 lon2: 103.747943009536
6test 894 line 149 azi2: 115.235373813929
6test 895 line 150 lat: 25.374602
6test 896 line 150 lon: 143.135783
6test 897 line 150 fb: 126.548735
6test 898 line 150 lat2: 25.374601552526
6test 899 line 150 lon2: 143.135783283239
6test 900 line 150 azi2: 126.548735117003
6test 901 line 151 lat: 23.967825
6test 902 line 151 lon: 153.611116
6test 903 line 151 fb: 149.714116
6test 904 line 151 lat2: 23.967824782385
6test 905 line 151 lon2: 153.611115762587
6test 906 line 151 azi2: 149.714116426025
6test 907 line 152 lat: -22.787507
6test 908 line 152 lon: 111.258647
6test 909 line 152 fb: 86.335100
6test 910 line 152 lat2: -22.787506689568
6test 911 line 152 lon2: 111.258646767306
6test 912 line 152 azi2: 86.335099650483
6test 913 line 153 lat: -59.789842
6test 914 line 153 lon: 114.054983
6test 915 line 153 fb: 75.612605
6test 916 line 153 lat2: -59.789841532294
6test 917 line 153 lon2: 114.054983422255
6test 918 line 153 azi2: 75.612605242726
6test 919 line 154 lat: -2.802505
6test 920 line 154 lon: 126.245955
6test 921 line 154 fb: 150.100576
6test 922 line 154 lat2: -2.802505438545
6test 923 line 154 lon2: 126.245955176418
6test 924 line 154 azi2: 150.100575968176
6test 925 line 155 lat: 35.735653
6test 926 line 155 lon: 102.768725
6test 927 line 155 fb: 99.024702
6test 928 line 155 lat2: 35.735653026165
6test 929 line 155 lon2: 102.768725495110
6test 930 line 155 azi2: 99.024701978369
6test 931 line 156 lat: 15.906682
6test 932 line 156 lon: 117.446654
6test 933 line 156 fb: 130.449965
6test 934 line 156 lat2: 15.906681603252
6test 935 line 156 lon2: 117.446653873860
6test 936 line 156 azi2: 130.449965412147
6test 937 line 157 lat: -54.375988
6test 938 line 157 lon: 33.243363
6test 939 line 157 fb: 144.361175
6test 940 line 157 lat2: -54.375987804166
6test 941 line 157 lon2: 33.243362594038
6test 942 line 157 azi2: 144.361175098783
6test 943 line 158 lat: 3.588251
6test 944 line 158 lon: 156.659583
6test 945 line 158 fb: 112.153293
6test 946 line 158 lat2: 3.588250783960
6test 947 line 158 lon2: 156.659583234995
6test 948 line 158 azi2: 112.153293017228
6test 949 line 159 lat: -51.719977
6test 950 line 159 lon: 134.141061
6test 951 line 159 fb: 129.170451
6test 952 line 159 lat2: -51.719977004790
6test 953 line 159 lon2: 134.141060992499
6test 954 line 159 azi2: 129.170451102958
6test 955 line 160 lat: 22.935153
6test 956 line 160 lon: 109.461291
6test 957 line 160 fb: 120.676556
6test 958 line 160 lat2: 22.935153219965
6test 959 line 160 lon2: 109.461291078917
6test 960 line 160 azi2: 120.676555897336
6test 961 line 161 lat: -5.314690
6test 962 line 161 lon: 70.995225
6test 963 line 161 fb: 129.681273
6test 964 line 161 lat2: -5.314689990173
6test 965 line 161 lon2: 70.995224692450
6test 966 line 161 azi2: 129.681272635794
6test 967 line 162 lat: 49.147134
6test 968 line 162 lon: 16.182514
6test 969 line 162 fb: 38.926644
6test 970 line 162 lat2: 49.147133873971
6test 971 line 162 lon2: 16.182514450690
6test 972 line 162 azi2: 38.926644196248
6test 973 line 163 lat: -55.079363
6test 974 line 163 lon: 93.170898
6test 975 line 163 fb: 97.017492
6test 976 line 163 lat2: -55.079363368717
6test 977 line 163 lon2: 93.170898482121
6test 978 line 163 azi2: 97.017491592293
6test 979 line 164 lat: 26.410771
6test 980 line 164 lon: 109.934003
6test 981 line 164 fb: 103.660846
6test 982 line 164 lat2: 26.410770923895
6test 983 line 164 lon2: 109.934003168641
6test 984 line 164 azi2: 103.660846029906
6test 985 line 165 lat: -2.539670
6test 986 line 165 lon: 138.682325
6test 987 line 165 fb: 100.016568
6test 988 line 165 lat2: -2.539669792389
6test 989 line 165 lon2: 138.682325493918
6test 990 line 165 azi2: 100.016568432752
6test 991 line 166 lat: 10.563299
6test 992 line 166 lon: 50.532119
6test 993 line 166 fb: 126.356066
6test 994 line 166 lat2: 10.563299452649
6test 995 line 166 lon2: 50.532119480076
6test 996 line 166 azi2: 126.356065708364
6test 997 line 167 lat: 51.443871
6test 998 line 167 lon: 88.799162
6test 999 line 167 fb: 145.239198
6test 1000 line 167 lat2: 51.443871023711
6test 1001 line 167 lon2: 88.799161779253
6test 1002 line 167 azi2: 145.239198135633
6test 1003 line 168 lat: -80.240756
6test 1004 line 168 lon: 170.591261
6test 1005 line 168 fb: 19.402427
6test 1006 line 168 lat2: -80.240756380896
6test 1007 line 168 lon2: 170.591260542730
6test 1008 line 168 azi2: 19.402427357239
6test 1009 line 169 lat: 51.976040
6test 1010 line 169 lon: 165.045244
6test 1011 line 169 fb: 167.962110
6test 1012 line 169 lat2: 51.976039799074
6test 1013 line 169 lon2: 165.045244285456
6test 1014 line 169 azi2: 167.962110268433
6test 1015 line 170 lat: 29.365655
6test 1016 line 170 lon: 91.354349
6test 1017 line 170 fb: 135.101279
6test 1018 line 170 lat2: 29.365654873524
6test 1019 line 170 lon2: 91.354349089561
6test 1020 line 170 azi2: 135.101278715212
6test 1021 line 171 lat: 61.745486
6test 1022 line 171 lon: 142.333199
6test 1023 line 171 fb: 139.666209
6test 1024 line 171 lat2: 61.745485817368
6test 1025 line 171 lon2: 142.333198773096
6test 1026 line 171 azi2: 139.666208757008
6test 1027 line 172 lat: 13.414523
6test 1028 line 172 lon: 39.322993
6test 1029 line 172 fb: 144.276516
6test 1030 line 172 lat2: 13.414522997032
6test 1031 line 172 lon2: 39.322992706733
6test 1032 line 172 azi2: 144.276515542083
6test 1033 line 173 lat: -49.831353
6test 1034 line 173 lon: 72.426738
6test 1035 line 173 fb: 126.251620
6test 1036 line 173 lat2: -49.831353332108
6test 1037 line 173 lon2: 72.426737728887
6test 1038 line 173 azi2: 126.251620412456
6test 1039 line 174 lat: 1.822589
6test 1040 line 174 lon: 53.589208
6test 1041 line 174 fb: 97.925176
6test 1042 line 174 lat2: 1.822589208021
6test 1043 line 174 lon2: 53.589207810481
6test 1044 line 174 azi2: 97.925176229124
6test 1045 line 175 lat: -7.987194
6test 1046 line 175 lon: 49.318809
6test 1047 line 175 fb: 128.386595
6test 1048 line 175 lat2: -7.987193900849
6test 1049 line 175 lon2: 49.318809304076
6test 1050 line 175 azi2: 128.386594768748
6test 1051 line 176 lat: -56.807375
6test 1052 line 176 lon: 4.521802
6test 1053 line 176 fb: 176.806063
6test 1054 line 176 lat2: -56.807375049864
6test 1055 line 176 lon2: 4.521801986353
6test 1056 line 176 azi2: 176.806062785470
6test 1057 line 177 lat: -25.969834
6test 1058 line 177 lon: 64.903749
6test 1059 line 177 fb: 124.103844
6test 1060 line 177 lat2: -25.969833883721
6test 1061 line 177 lon2: 64.903749477059
6test 1062 line 177 azi2: 124.103844353942
6test 1063 line 178 lat: 32.807360
6test 1064 line 178 lon: 65.107962
6test 1065 line 178 fb: 124.577990
6test 1066 line 178 lat2: 32.807359742667
6test 1067 line 178 lon2: 65.107961864983
6test 1068 line 178 azi2: 124.577990419073
6test 1069 line 179 lat: -21.552138
6test 1070 line 179 lon: 102.466022
6test 1071 line 179 fb: 109.640197
6test 1072 line 179 lat2: -21.552137872353
6test 1073 line 179 lon2: 102.466021945025
6test 1074 line 179 azi2: 109.640197455958
6test 1075 line 180 lat: -26.271741
6test 1076 line 180 lon: 158.321581
6test 1077 line 180 fb: 165.993649
6test 1078 line 180 lat2: -26.271741383677
6test 1079 line 180 lon2: 158.321581345077
6test 1080 line 180 azi2: 165.993649158304  FAILED, KNOWN, expected 165.993649158305
6test 1081 line 181 lat: 41.023069
6test 1082 line 181 lon: 155.562542
6test 1083 line 181 fb: 153.407414
6test 1084 line 181 lat2: 41.023069113496
6test 1085 line 181 lon2: 155.562542134179
6test 1086 line 181 azi2: 153.407413608014
6test 1087 line 182 lat: 16.445471
6test 1088 line 182 lon: 165.261461
6test 1089 line 182 fb: 165.424806
6test 1090 line 182 lat2: 16.445470954340
6test 1091 line 182 lon2: 165.261461448873
6test 1092 line 182 azi2: 165.424806257119
6test 1093 line 183 lat: -3.222107
6test 1094 line 183 lon: 84.129727
6test 1095 line 183 fb: 154.083851
6test 1096 line 183 lat2: -3.222107095788
6test 1097 line 183 lon2: 84.129726900596
6test 1098 line 183 azi2: 154.083851495688
6test 1099 line 184 lat: 7.811710
6test 1100 line 184 lon: 123.143308
6test 1101 line 184 fb: 123.998106
6test 1102 line 184 lat2: 7.811709739638
6test 1103 line 184 lon2: 123.143308309660
6test 1104 line 184 azi2: 123.998105582525
6test 1105 line 185 lat: -45.235922
6test 1106 line 185 lon: 129.419283
6test 1107 line 185 fb: 91.493406
6test 1108 line 185 lat2: -45.235922276879
6test 1109 line 185 lon2: 129.419282696458
6test 1110 line 185 azi2: 91.493405946969  FAILED, KNOWN, expected 91.493405946970
6test 1111 line 186 lat: -43.047563
6test 1112 line 186 lon: 121.565541
6test 1113 line 186 fb: 99.850543
6test 1114 line 186 lat2: -43.047563118772
6test 1115 line 186 lon2: 121.565540573788
6test 1116 line 186 azi2: 99.850542926816
6test 1117 line 187 lat: -22.881002
6test 1118 line 187 lon: 159.765030
6test 1119 line 187 fb: 60.474878
6test 1120 line 187 lat2: -22.881001889671
6test 1121 line 187 lon2: 159.765030106650
6test 1122 line 187 azi2: 60.474878214384
6test 1123 line 188 lat: -15.011946
6test 1124 line 188 lon: 55.594746
6test 1125 line 188 fb: 121.838839
6test 1126 line 188 lat2: -15.011946251300
6test 1127 line 188 lon2: 55.594746074667
6test 1128 line 188 azi2: 121.838839080255
6test 1129 line 189 lat: -29.011142
6test 1130 line 189 lon: 0.856639
6test 1131 line 189 fb: 178.744943
6test 1132 line 189 lat2: -29.011142183887
6test 1133 line 189 lon2: 0.856639457160
6test 1134 line 189 azi2: 178.744943180805
6test 1135 line 190 lat: -0.353001
6test 1136 line 190 lon: 48.401255
6test 1137 line 190 fb: 95.612551
6test 1138 line 190 lat2: -0.353000909367
6test 1139 line 190 lon2: 48.401254652487
6test 1140 line 190 azi2: 95.612551044908
6test 1141 line 191 lat: 18.843341
6test 1142 line 191 lon: 105.405456
6test 1143 line 191 fb: 145.215722
6test 1144 line 191 lat2: 18.843340962664
6test 1145 line 191 lon2: 105.405456105476
6test 1146 line 191 azi2: 145.215722323742
6test 1147 line 192 lat: 19.672225
6test 1148 line 192 lon: 64.132980
6test 1149 line 192 fb: 131.894863
6test 1150 line 192 lat2: 19.672224913225
6test 1151 line 192 lon2: 64.132979510420
6test 1152 line 192 azi2: 131.894863434272
6test 1153 line 193 lat: -44.315074
6test 1154 line 193 lon: 132.711860
6test 1155 line 193 fb: 57.236875
6test 1156 line 193 lat2: -44.315073617889
6test 1157 line 193 lon2: 132.711860436437
6test 1158 line 193 azi2: 57.236875169148
6test 1159 line 194 lat: 71.956294
6test 1160 line 194 lon: 23.707587
6test 1161 line 194 fb: 28.235947
6test 1162 line 194 lat2: 71.956293555096
6test 1163 line 194 lon2: 23.707587498943
6test 1164 line 194 azi2: 28.235946630177
6test 1165 line 195 lat: -1.372652
6test 1166 line 195 lon: 37.704231
6test 1167 line 195 fb: 92.737862
6test 1168 line 195 lat2: -1.372652195171
6test 1169 line 195 lon2: 37.704230798676
6test 1170 line 195 azi2: 92.737862264368
6test 1171 line 196 lat: 32.377148
6test 1172 line 196 lon: 148.638709
6test 1173 line 196 fb: 164.415210
6test 1174 line 196 lat2: 32.377147634362
6test 1175 line 196 lon2: 148.638709383249
6test 1176 line 196 azi2: 164.415210005459
6test 1177 line 197 lat: 77.876832
6test 1178 line 197 lon: 86.074591
6test 1179 line 197 fb: 93.017705
6test 1180 line 197 lat2: 77.876831887051
6test 1181 line 197 lon2: 86.074590642864
6test 1182 line 197 azi2: 93.017704501543
6test 1183 line 198 lat: -7.405195
6test 1184 line 198 lon: 11.962469
6test 1185 line 198 fb: 123.788484
6test 1186 line 198 lat2: -7.405194804958
6test 1187 line 198 lon2: 11.962468510681
6test 1188 line 198 azi2: 123.788484407208
6test 1189 line 199 lat: -75.001311
6test 1190 line 199 lon: 173.334144
6test 1191 line 199 fb: 8.916523
6test 1192 line 199 lat2: -75.001310556015
6test 1193 line 199 lon2: 173.334144385512
6test 1194 line 199 azi2: 8.916523271572
6test 1195 line 200 lat: -33.145967
6test 1196 line 200 lon: 32.349241
6test 1197 line 200 fb: 154.035798
6test 1198 line 200 lat2: -33.145966631435
6test 1199 line 200 lon2: 32.349240627001
6test 1200 line 200 azi2: 154.035798269631
6test 1201 line 201 lat: 32.938605
6test 1202 line 201 lon: 98.042857
6test 1203 line 201 fb: 124.954750
6test 1204 line 201 lat2: 32.938605083648
6test 1205 line 201 lon2: 98.042857137838
6test 1206 line 201 azi2: 124.954750401990
6test 1207 line 202 lat: 18.924315
6test 1208 line 202 lon: 20.712136
6test 1209 line 202 fb: 118.058457
6test 1210 line 202 lat2: 18.924314631117
6test 1211 line 202 lon2: 20.712135699713
6test 1212 line 202 azi2: 118.058457437327
6test 1213 line 203 lat: 34.281652
6test 1214 line 203 lon: 66.815398
6test 1215 line 203 fb: 147.693080
6test 1216 line 203 lat2: 34.281652047931
6test 1217 line 203 lon2: 66.815398066147
6test 1218 line 203 azi2: 147.693079659533
6test 1219 line 204 lat: -56.830635
6test 1220 line 204 lon: 2.137046
6test 1221 line 204 fb: 178.041562
6test 1222 line 204 lat2: -56.830634769513
6test 1223 line 204 lon2: 2.137046322217
6test 1224 line 204 azi2: 178.041562126305
6test 1225 line 205 lat: -68.481893
6test 1226 line 205 lon: 107.036720
6test 1227 line 205 fb: 152.384477
6test 1228 line 205 lat2: -68.481892540174
6test 1229 line 205 lon2: 107.036720123074
6test 1230 line 205 azi2: 152.384476595412
6test 1231 line 206 lat: -22.502042
6test 1232 line 206 lon: 171.827566
6test 1233 line 206 fb: 158.834328
6test 1234 line 206 lat2: -22.502042312255
6test 1235 line 206 lon2: 171.827566033608
6test 1236 line 206 azi2: 158.834327972407
6test 1237 line 207 lat: -4.504199
6test 1238 line 207 lon: 138.544338
6test 1239 line 207 fb: 123.633526
6test 1240 line 207 lat2: -4.504199404775
6test 1241 line 207 lon2: 138.544338028736
6test 1242 line 207 azi2: 123.633526406205
6test 1243 line 208 lat: -9.226343
6test 1244 line 208 lon: 120.310050
6test 1245 line 208 fb: 142.789186
6test 1246 line 208 lat2: -9.226343110712
6test 1247 line 208 lon2: 120.310050148004
6test 1248 line 208 azi2: 142.789186422068
6test 1249 line 209 lat: -51.684044
6test 1250 line 209 lon: 137.764140
6test 1251 line 209 fb: 56.844891
6test 1252 line 209 lat2: -51.684044075582
6test 1253 line 209 lon2: 137.764139808689
6test 1254 line 209 azi2: 56.844890846790
6test 1255 line 210 lat: 19.467357
6test 1256 line 210 lon: 93.870087
6test 1257 line 210 fb: 129.125491
6test 1258 line 210 lat2: 19.467357090193
6test 1259 line 210 lon2: 93.870087361293
6test 1260 line 210 azi2: 129.125490840370
6test 1261 line 211 lat: 33.594608
6test 1262 line 211 lon: 58.324143
6test 1263 line 211 fb: 101.975372
6test 1264 line 211 lat2: 33.594607695347
6test 1265 line 211 lon2: 58.324143410893
6test 1266 line 211 azi2: 101.975372004111
6test 1267 line 212 lat: -1.184701
6test 1268 line 212 lon: 92.834285
6test 1269 line 212 fb: 134.201097
6test 1270 line 212 lat2: -1.184701423910
6test 1271 line 212 lon2: 92.834285031504
6test 1272 line 212 azi2: 134.201097217000
6test 1273 line 213 lat: 5.878639
6test 1274 line 213 lon: 90.756173
6test 1275 line 213 fb: 156.936699
6test 1276 line 213 lat2: 5.878638801092
6test 1277 line 213 lon2: 90.756172727682
6test 1278 line 213 azi2: 156.936698928215
6test 1279 line 214 lat: 47.611646
6test 1280 line 214 lon: 131.482218
6test 1281 line 214 fb: 152.077667
6test 1282 line 214 lat2: 47.611646039058
6test 1283 line 214 lon2: 131.482217984255
6test 1284 line 214 azi2: 152.077667341138
6test 1285 line 215 lat: 13.906234
6test 1286 line 215 lon: 115.526238
6test 1287 line 215 fb: 130.769627
6test 1288 line 215 lat2: 13.906233945801
6test 1289 line 215 lon2: 115.526238064488
6test 1290 line 215 azi2: 130.769627488545
6test 1291 line 216 lat: 3.675485
6test 1292 line 216 lon: 80.781862
6test 1293 line 216 fb: 94.188426
6test 1294 line 216 lat2: 3.675485213596
6test 1295 line 216 lon2: 80.781861923838
6test 1296 line 216 azi2: 94.188426367881
6test 1297 line 217 lat: 68.665600
6test 1298 line 217 lon: 21.503123
6test 1299 line 217 fb: 107.667810
6test 1300 line 217 lat2: 68.665599857810
6test 1301 line 217 lon2: 21.503123449290
6test 1302 line 217 azi2: 107.667809564608
6test 1303 line 218 lat: -60.791732
6test 1304 line 218 lon: 82.476063
6test 1305 line 218 fb: 117.665953
6test 1306 line 218 lat2: -60.791732218314
6test 1307 line 218 lon2: 82.476062801971
6test 1308 line 218 azi2: 117.665952598924
6test 1309 line 219 lat: -33.122376
6test 1310 line 219 lon: 89.871476
6test 1311 line 219 fb: 124.068098
6test 1312 line 219 lat2: -33.122375734012
6test 1313 line 219 lon2: 89.871476211443
6test 1314 line 219 azi2: 124.068098444465
6test 1315 line 220 lat: -34.085934
6test 1316 line 220 lon: 117.886549
6test 1317 line 220 fb: 93.366647
6test 1318 line 220 lat2: -34.085934037207
6test 1319 line 220 lon2: 117.886548615401
6test 1320 line 220 azi2: 93.366647127153
6test 1321 line 221 lat: -43.746811
6test 1322 line 221 lon: 107.199939
6test 1323 line 221 fb: 101.218435
6test 1324 line 221 lat2: -43.746811413059
6test 1325 line 221 lon2: 107.199938541143
6test 1326 line 221 azi2: 101.218434581373
6test 1327 line 222 lat: -44.514857
6test 1328 line 222 lon: 19.560361
6test 1329 line 222 fb: 166.449925
6test 1330 line 222 lat2: -44.514857277517
6test 1331 line 222 lon2: 19.560360617266
6test 1332 line 222 azi2: 166.449925135617
6test 1333 line 223 lat: -18.049262
6test 1334 line 223 lon: 42.099193
6test 1335 line 223 fb: 158.127141
6test 1336 line 223 lat2: -18.049261796697
6test 1337 line 223 lon2: 42.099193394607
6test 1338 line 223 azi2: 158.127140901909
6test 1339 line 224 lat: 9.832902
6test 1340 line 224 lon: 51.448057
6test 1341 line 224 fb: 114.348703
6test 1342 line 224 lat2: 9.832901687662
6test 1343 line 224 lon2: 51.448057387281
6test 1344 line 224 azi2: 114.348702917675
6test 1345 line 225 lat: -57.516443
6test 1346 line 225 lon: 64.700933
6test 1347 line 225 fb: 137.459801
6test 1348 line 225 lat2: -57.516443280706
6test 1349 line 225 lon2: 64.700933124813
6test 1350 line 225 azi2: 137.459801078685
6test 1351 line 226 lat: -23.072600
6test 1352 line 226 lon: 95.392602
6test 1353 line 226 fb: 140.119143
6test 1354 line 226 lat2: -23.072599811854
6test 1355 line 226 lon2: 95.392601883769
6test 1356 line 226 azi2: 140.119143469104
6test 1357 line 227 lat: -45.117254
6test 1358 line 227 lon: 97.361647
6test 1359 line 227 fb: 97.339041
6test 1360 line 227 lat2: -45.117253614100
6test 1361 line 227 lon2: 97.361647352714
6test 1362 line 227 azi2: 97.339040559115
6test 1363 line 228 lat: -11.277328
6test 1364 line 228 lon: 19.602358
6test 1365 line 228 fb: 156.779730
6test 1366 line 228 lat2: -11.277328262947
6test 1367 line 228 lon2: 19.602358024471
6test 1368 line 228 azi2: 156.779729902321
6test 1369 line 229 lat: -4.823524
6test 1370 line 229 lon: 164.626842
6test 1371 line 229 fb: 151.314797
6test 1372 line 229 lat2: -4.823524348693
6test 1373 line 229 lon2: 164.626841855534
6test 1374 line 229 azi2: 151.314796841238
6test 1375 line 230 lat: 36.317088
6test 1376 line 230 lon: 89.326155
6test 1377 line 230 fb: 94.589052
6test 1378 line 230 lat2: 36.317087922282
6test 1379 line 230 lon2: 89.326155365943
6test 1380 line 230 azi2: 94.589051951235
6test 1381 line 231 lat: 3.975433
6test 1382 line 231 lon: 105.460359
6test 1383 line 231 fb: 126.257925
6test 1384 line 231 lat2: 3.975432760073
6test 1385 line 231 lon2: 105.460358584149
6test 1386 line 231 azi2: 126.257925455058
6test 1387 line 232 lat: 28.815984
6test 1388 line 232 lon: 89.807394
6test 1389 line 232 fb: 116.984375
6test 1390 line 232 lat2: 28.815983592511
6test 1391 line 232 lon2: 89.807393686834
6test 1392 line 232 azi2: 116.984374981602
6test 1393 line 233 lat: 66.161717
6test 1394 line 233 lon: 63.218655
6test 1395 line 233 fb: 88.869959
6test 1396 line 233 lat2: 66.161716765270
6test 1397 line 233 lon2: 63.218655052918
6test 1398 line 233 azi2: 88.869959091488
6test 1399 line 234 lat: 74.859972
6test 1400 line 234 lon: 53.523361
6test 1401 line 234 fb: 58.125008
6test 1402 line 234 lat2: 74.859971601090
6test 1403 line 234 lon2: 53.523360738831
6test 1404 line 234 azi2: 58.125008091802
6test 1405 line 235 lat: -0.265481
6test 1406 line 235 lon: 79.537677
6test 1407 line 235 fb: 112.945830
6test 1408 line 235 lat2: -0.265481234322
6test 1409 line 235 lon2: 79.537677388981
6test 1410 line 235 azi2: 112.945829781102
6test 1411 line 236 lat: -12.099598
6test 1412 line 236 lon: 155.371356
6test 1413 line 236 fb: 76.454292
6test 1414 line 236 lat2: -12.099598021004
6test 1415 line 236 lon2: 155.371356164845
6test 1416 line 236 azi2: 76.454291606612
6test 1417 line 237 lat: -6.746465
6test 1418 line 237 lon: 19.102484
6test 1419 line 237 fb: 149.342236
6test 1420 line 237 lat2: -6.746464854112
6test 1421 line 237 lon2: 19.102484309526
6test 1422 line 237 azi2: 149.342236428405
6test 1423 line 238 lat: 0.663830
6test 1424 line 238 lon: 101.295721
6test 1425 line 238 fb: 133.862626
6test 1426 line 238 lat2: 0.663830251510
6test 1427 line 238 lon2: 101.295720736944
6test 1428 line 238 azi2: 133.862626019473
6test 1429 line 239 lat: -61.764624
6test 1430 line 239 lon: 148.537522
6test 1431 line 239 fb: 149.298772
6test 1432 line 239 lat2: -61.764623993813
6test 1433 line 239 lon2: 148.537521922087
6test 1434 line 239 azi2: 149.298771734214
6test 1435 line 240 lat: 14.505122
6test 1436 line 240 lon: 111.665519
6test 1437 line 240 fb: 97.740222
6test 1438 line 240 lat2: 14.505121777043
6test 1439 line 240 lon2: 111.665518774379
6test 1440 line 240 azi2: 97.740221959573
6test 1441 line 241 lat: -24.713205
6test 1442 line 241 lon: 34.159384
6test 1443 line 241 fb: 125.866132
6test 1444 line 241 lat2: -24.713205327375
6test 1445 line 241 lon2: 34.159384140577
6test 1446 line 241 azi2: 125.866132443875
6test 1447 line 242 lat: 50.480262
6test 1448 line 242 lon: 42.263850
6test 1449 line 242 fb: 153.395659
6test 1450 line 242 lat2: 50.480261762893
6test 1451 line 242 lon2: 42.263849601327
6test 1452 line 242 azi2: 153.395658919028
6test 1453 line 243 lat: 11.787247
6test 1454 line 243 lon: 49.506460
6test 1455 line 243 fb: 120.836778
6test 1456 line 243 lat2: 11.787247309610
6test 1457 line 243 lon2: 49.506459509702
6test 1458 line 243 azi2: 120.836778496206
6test 1459 line 244 lat: -19.956674
6test 1460 line 244 lon: 14.599479
6test 1461 line 244 fb: 177.883855
6test 1462 line 244 lat2: -19.956673621927
6test 1463 line 244 lon2: 14.599479227718
6test 1464 line 244 azi2: 177.883855088778
6test 1465 line 245 lat: 0.738566
6test 1466 line 245 lon: 12.600972
6test 1467 line 245 fb: 176.085445
6test 1468 line 245 lat2: 0.738565517815
6test 1469 line 245 lon2: 12.600972006927
6test 1470 line 245 azi2: 176.085445031797
6test 1471 line 246 lat: 25.799128
6test 1472 line 246 lon: 9.800259
6test 1473 line 246 fb: 166.282764
6test 1474 line 246 lat2: 25.799128425384
6test 1475 line 246 lon2: 9.800259258495
6test 1476 line 246 azi2: 166.282764024264
6test 1477 line 247 lat: -3.897277
6test 1478 line 247 lon: 16.693319
6test 1479 line 247 fb: 168.780736
6test 1480 line 247 lat2: -3.897277132184
6test 1481 line 247 lon2: 16.693318601970
6test 1482 line 247 azi2: 168.780736094343
6test 1483 line 248 lat: 2.479585
6test 1484 line 248 lon: 72.317321
6test 1485 line 248 fb: 126.935932
6test 1486 line 248 lat2: 2.479585385319
6test 1487 line 248 lon2: 72.317321261259
6test 1488 line 248 azi2: 126.935932221711
6test 1489 line 249 lat: -0.836621
6test 1490 line 249 lon: 2.490193
6test 1491 line 249 fb: 150.640498
6test 1492 line 249 lat2: -0.836621274662
6test 1493 line 249 lon2: 2.490192836679
6test 1494 line 249 azi2: 150.640498065221
6test 1495 line 250 lat: -69.098227
6test 1496 line 250 lon: 43.929874
6test 1497 line 250 fb: 143.378404
6test 1498 line 250 lat2: -69.098226894675
6test 1499 line 250 lon2: 43.929873562507
6test 1500 line 250 azi2: 143.378403982035
6test 1501 line 251 lat: 19.156121
6test 1502 line 251 lon: 130.658473
6test 1503 line 251 fb: 136.204475
6test 1504 line 251 lat2: 19.156121137418
6test 1505 line 251 lon2: 130.658473280949
6test 1506 line 251 azi2: 136.204475163250
6test 1507 line 252 lat: 68.881949
6test 1508 line 252 lon: 79.375865
6test 1509 line 252 fb: 99.052732
6test 1510 line 252 lat2: 68.881948915820
6test 1511 line 252 lon2: 79.375865154434  FAILED, KNOWN, expected 79.375865154433
6test 1512 line 252 azi2: 99.052731550675
6test 1513 line 253 lat: -23.509016
6test 1514 line 253 lon: 122.232226
6test 1515 line 253 fb: 90.354604
6test 1516 line 253 lat2: -23.509015988874
6test 1517 line 253 lon2: 122.232226283491
6test 1518 line 253 azi2: 90.354603607380
6test 1519 line 254 lat: -64.950636
6test 1520 line 254 lon: 70.184354
6test 1521 line 254 fb: 122.478937
6test 1522 line 254 lat2: -64.950635804577
6test 1523 line 254 lon2: 70.184354384370
6test 1524 line 254 azi2: 122.478937039089
6test 1525 line 255 lat: 4.931109
6test 1526 line 255 lon: 176.100221
6test 1527 line 255 fb: 175.754221
6test 1528 line 255 lat2: 4.931108669549
6test 1529 line 255 lon2: 176.100220910178
6test 1530 line 255 azi2: 175.754221027085
6test 1531 line 256 lat: -35.503236
6test 1532 line 256 lon: 122.767107
6test 1533 line 256 fb: 94.201020
6test 1534 line 256 lat2: -35.503236005727
6test 1535 line 256 lon2: 122.767107174014
6test 1536 line 256 azi2: 94.201020059324
6test 1537 line 257 lat: 58.728016
6test 1538 line 257 lon: 76.607531
6test 1539 line 257 fb: 114.353509
6test 1540 line 257 lat2: 58.728016150448
6test 1541 line 257 lon2: 76.607530844045
6test 1542 line 257 azi2: 114.353508957613
6test 1543 line 258 lat: 13.725793
6test 1544 line 258 lon: 60.384503
6test 1545 line 258 fb: 102.783242
6test 1546 line 258 lat2: 13.725792757601
6test 1547 line 258 lon2: 60.384502867486
6test 1548 line 258 azi2: 102.783241874789
6test 1549 line 259 lat: 40.298524
6test 1550 line 259 lon: 59.957993
6test 1551 line 259 fb: 90.056366
6test 1552 line 259 lat2: 40.298523592677
6test 1553 line 259 lon2: 59.957993458231
6test 1554 line 259 azi2: 90.056365696933
6test 1555 line 260 lat: 21.526222
6test 1556 line 260 lon: 19.836420
6test 1557 line 260 fb: 89.081274
6test 1558 line 260 lat2: 21.526221960544
6test 1559 line 260 lon2: 19.836419824899
6test 1560 line 260 azi2: 89.081274273400
6test 1561 line 261 lat: -65.269872
6test 1562 line 261 lon: 134.049515
6test 1563 line 261 fb: 54.613515
6test 1564 line 261 lat2: -65.269872123888
6test 1565 line 261 lon2: 134.049514626723
6test 1566 line 261 azi2: 54.613514542799
6test 1567 line 262 lat: -47.687068
6test 1568 line 262 lon: 86.855941
6test 1569 line 262 fb: 115.133532
6test 1570 line 262 lat2: -47.687068378110
6test 1571 line 262 lon2: 86.855941174728
6test 1572 line 262 azi2: 115.133531572693
6test 1573 line 263 lat: -56.637273
6test 1574 line 263 lon: 158.001121
6test 1575 line 263 fb: 35.013276
6test 1576 line 263 lat2: -56.637272907294
6test 1577 line 263 lon2: 158.001120751267
6test 1578 line 263 azi2: 35.013276119319
6test 1579 line 264 lat: 6.880772
6test 1580 line 264 lon: 36.289125
6test 1581 line 264 fb: 144.499557
6test 1582 line 264 lat2: 6.880771895178
6test 1583 line 264 lon2: 36.289124705135
6test 1584 line 264 azi2: 144.499557452454
6test 1585 line 265 lat: 59.205527
6test 1586 line 265 lon: 115.787268
6test 1587 line 265 fb: 116.793619
6test 1588 line 265 lat2: 59.205526512430
6test 1589 line 265 lon2: 115.787267608171
6test 1590 line 265 azi2: 116.793618855456
6test 1591 line 266 lat: 29.463206
6test 1592 line 266 lon: 68.742710
6test 1593 line 266 fb: 113.906069
6test 1594 line 266 lat2: 29.463206450868
6test 1595 line 266 lon2: 68.742710218988
6test 1596 line 266 azi2: 113.906069374400
6test 1597 line 267 lat: 5.507960
6test 1598 line 267 lon: 2.913367
6test 1599 line 267 fb: 175.225892
6test 1600 line 267 lat2: 5.507959555355
6test 1601 line 267 lon2: 2.913367209347
6test 1602 line 267 azi2: 175.225891805562
6test 1603 line 268 lat: 32.568215
6test 1604 line 268 lon: 107.814340
6test 1605 line 268 fb: 126.321687
6test 1606 line 268 lat2: 32.568215067951
6test 1607 line 268 lon2: 107.814340389788
6test 1608 line 268 azi2: 126.321687264203
6test 1609 line 269 lat: 48.941036
6test 1610 line 269 lon: 170.309380
6test 1611 line 269 fb: 170.816057
6test 1612 line 269 lat2: 48.941036400994
6test 1613 line 269 lon2: 170.309379989564
6test 1614 line 269 azi2: 170.816056872564
6test 1615 line 270 lat: 32.657811
6test 1616 line 270 lon: 174.401372
6test 1617 line 270 fb: 173.967029
6test 1618 line 270 lat2: 32.657810935795
6test 1619 line 270 lon2: 174.401372292954
6test 1620 line 270 azi2: 173.967029189838
6test 1621 line 271 lat: -30.959342
6test 1622 line 271 lon: 144.596945
6test 1623 line 271 fb: 157.635539
6test 1624 line 271 lat2: -30.959341511189
6test 1625 line 271 lon2: 144.596944855700
6test 1626 line 271 azi2: 157.635538872114
6test 1627 line 272 lat: 52.180060
6test 1628 line 272 lon: 68.363538
6test 1629 line 272 fb: 82.619820
6test 1630 line 272 lat2: 52.180060488771
6test 1631 line 272 lon2: 68.363538073511
6test 1632 line 272 azi2: 82.619819936898
6test 1633 line 273 lat: -49.230655
6test 1634 line 273 lon: 119.085123
6test 1635 line 273 fb: 81.553785
6test 1636 line 273 lat2: -49.230654785601
6test 1637 line 273 lon2: 119.085122995371
6test 1638 line 273 azi2: 81.553785297210
6test 1639 line 274 lat: 12.315309
6test 1640 line 274 lon: 21.800337
6test 1641 line 274 fb: 86.572317
6test 1642 line 274 lat2: 12.315308710130
6test 1643 line 274 lon2: 21.800336803956
6test 1644 line 274 azi2: 86.572316548512
6test 1645 line 275 lat: 0.074875
6test 1646 line 275 lon: 122.092567
6test 1647 line 275 fb: 93.940324
6test 1648 line 275 lat2: 0.074874782626
6test 1649 line 275 lon2: 122.092567299352
6test 1650 line 275 azi2: 93.940323652996
6test 1651 line 276 lat: -32.420609
6test 1652 line 276 lon: 80.147417
6test 1653 line 276 fb: 123.183256
6test 1654 line 276 lat2: -32.420609134175
6test 1655 line 276 lon2: 80.147416945184
6test 1656 line 276 azi2: 123.183256201588
6test 1657 line 277 lat: 82.600418
6test 1658 line 277 lon: 34.418367
6test 1659 line 277 fb: 35.057122
6test 1660 line 277 lat2: 82.600418456713
6test 1661 line 277 lon2: 34.418367124569
6test 1662 line 277 azi2: 35.057122384192
6test 1663 line 278 lat: 26.274633
6test 1664 line 278 lon: 93.043032
6test 1665 line 278 fb: 114.480069
6test 1666 line 278 lat2: 26.274632977288
6test 1667 line 278 lon2: 93.043031668414
6test 1668 line 278 azi2: 114.480069066657
6test 1669 line 279 lat: 28.433986
6test 1670 line 279 lon: 132.962042
6test 1671 line 279 fb: 118.817242
6test 1672 line 279 lat2: 28.433985598740
6test 1673 line 279 lon2: 132.962041543078
6test 1674 line 279 azi2: 118.817241997246
6test 1675 line 280 lat: 32.426459
6test 1676 line 280 lon: 65.171889
6test 1677 line 280 fb: 113.230923
6test 1678 line 280 lat2: 32.426458512822
6test 1679 line 280 lon2: 65.171889395963
6test 1680 line 280 azi2: 113.230923394172
6test 1681 line 281 lat: 8.427284
6test 1682 line 281 lon: 20.342496
6test 1683 line 281 fb: 140.993359
6test 1684 line 281 lat2: 8.427284359102
6test 1685 line 281 lon2: 20.342496251702
6test 1686 line 281 azi2: 140.993359066103
6test 1687 line 282 lat: -16.412702
6test 1688 line 282 lon: 47.392542
6test 1689 line 282 fb: 167.389705
6test 1690 line 282 lat2: -16.412702228950
6test 1691 line 282 lon2: 47.392541669265
6test 1692 line 282 azi2: 167.389704666322
6test 1693 line 283 lat: -54.082376
6test 1694 line 283 lon: 159.985466
6test 1695 line 283 fb: 56.023710
6test 1696 line 283 lat2: -54.082375801659
6test 1697 line 283 lon2: 159.985465829683
6test 1698 line 283 azi2: 56.023710499162
6test 1699 line 284 lat: 38.704319
6test 1700 line 284 lon: 78.307551
6test 1701 line 284 fb: 106.582126
6test 1702 line 284 lat2: 38.704318557557
6test 1703 line 284 lon2: 78.307550831333
6test 1704 line 284 azi2: 106.582125725743
6test 1705 line 285 lat: 15.206275
6test 1706 line 285 lon: 59.878378
6test 1707 line 285 fb: 114.460428
6test 1708 line 285 lat2: 15.206274688849
6test 1709 line 285 lon2: 59.878378252292
6test 1710 line 285 azi2: 114.460428216582
6test 1711 line 286 lat: -62.789550
6test 1712 line 286 lon: 66.649185
6test 1713 line 286 fb: 119.232672
6test 1714 line 286 lat2: -62.789549909136
6test 1715 line 286 lon2: 66.649184622337
6test 1716 line 286 azi2: 119.232671643971
6test 1717 line 287 lat: 31.235252
6test 1718 line 287 lon: 19.933468
6test 1719 line 287 fb: 145.488470
6test 1720 line 287 lat2: 31.235252170087
6test 1721 line 287 lon2: 19.933467970517
6test 1722 line 287 azi2: 145.488469796544
6test 1723 line 288 lat: 11.983236
6test 1724 line 288 lon: 145.307369
6test 1725 line 288 fb: 151.192641
6test 1726 line 288 lat2: 11.983236088753
6test 1727 line 288 lon2: 145.307368849730
6test 1728 line 288 azi2: 151.192640854621
6test 1729 line 289 lat: 27.629694
6test 1730 line 289 lon: 16.148459
6test 1731 line 289 fb: 63.008012
6test 1732 line 289 lat2: 27.629693628283
6test 1733 line 289 lon2: 16.148459400244
6test 1734 line 289 azi2: 63.008012267521
6test 1735 line 290 lat: 34.077784
6test 1736 line 290 lon: 115.693210
6test 1737 line 290 fb: 112.252264
6test 1738 line 290 lat2: 34.077783768135
6test 1739 line 290 lon2: 115.693209573427
6test 1740 line 290 azi2: 112.252263721679
6test 1741 line 291 lat: 17.100340
6test 1742 line 291 lon: 26.538643
6test 1743 line 291 fb: 131.391925
6test 1744 line 291 lat2: 17.100339523444
6test 1745 line 291 lon2: 26.538642768875
6test 1746 line 291 azi2: 131.391925094902
6test 1747 line 292 lat: -8.128040
6test 1748 line 292 lon: 28.609615
6test 1749 line 292 fb: 144.189095
6test 1750 line 292 lat2: -8.128039572354
6test 1751 line 292 lon2: 28.609615412806
6test 1752 line 292 azi2: 144.189095481788
6test 1753 line 293 lat: 17.307082
6test 1754 line 293 lon: 150.748550
6test 1755 line 293 fb: 172.334611
6test 1756 line 293 lat2: 17.307081581668
6test 1757 line 293 lon2: 150.748549863580
6test 1758 line 293 azi2: 172.334611079260
6test 1759 line 294 lat: 4.135230
6test 1760 line 294 lon: 142.094814
6test 1761 line 294 fb: 170.513214
6test 1762 line 294 lat2: 4.135229575811
6test 1763 line 294 lon2: 142.094814225629
6test 1764 line 294 azi2: 170.513213518678
6test 1765 line 295 lat: -61.544041
6test 1766 line 295 lon: 167.154866
6test 1767 line 295 fb: 51.415676
6test 1768 line 295 lat2: -61.544040804472
6test 1769 line 295 lon2: 167.154866481812  FAILED, KNOWN, expected 167.154866481811
6test 1770 line 295 azi2: 51.415675504865  FAILED, KNOWN, expected 51.415675504866
6test 1771 line 296 lat: 27.782466
6test 1772 line 296 lon: 53.844550
6test 1773 line 296 fb: 78.357665
6test 1774 line 296 lat2: 27.782465760718
6test 1775 line 296 lon2: 53.844549799795
6test 1776 line 296 azi2: 78.357665271795
6test 1777 line 297 lat: -30.157337
6test 1778 line 297 lon: 14.759636
6test 1779 line 297 fb: 157.487063
6test 1780 line 297 lat2: -30.157336788088
6test 1781 line 297 lon2: 14.759635614931
6test 1782 line 297 azi2: 157.487063280783
6test 1783 line 298 lat: -16.819268
6test 1784 line 298 lon: 22.734618
6test 1785 line 298 fb: 167.761663
6test 1786 line 298 lat2: -16.819268371139
6test 1787 line 298 lon2: 22.734618221531
6test 1788 line 298 azi2: 167.761663436059
6test 1789 line 299 lat: 58.190743
6test 1790 line 299 lon: 15.576363
6test 1791 line 299 fb: 71.213972
6test 1792 line 299 lat2: 58.190742593673
6test 1793 line 299 lon2: 15.576363250416
6test 1794 line 299 azi2: 71.213972172079
6test 1795 line 300 lat: 57.214981
6test 1796 line 300 lon: 163.530752
6test 1797 line 300 fb: 162.056064
6test 1798 line 300 lat2: 57.214981133823
6test 1799 line 300 lon2: 163.530751680014
6test 1800 line 300 azi2: 162.056064225923
6test 1801 line 301 lat: 31.811818
6test 1802 line 301 lon: 81.663494
6test 1803 line 301 fb: 112.546404
6test 1804 line 301 lat2: 31.811817748936
6test 1805 line 301 lon2: 81.663494432962
6test 1806 line 301 azi2: 112.546403824977
6test 1807 line 302 lat: -11.315727
6test 1808 line 302 lon: 48.409490
6test 1809 line 302 fb: 121.434574
6test 1810 line 302 lat2: -11.315726799012
6test 1811 line 302 lon2: 48.409489590525
6test 1812 line 302 azi2: 121.434573764585
6test 1813 line 303 lat: 6.119956
6test 1814 line 303 lon: 5.687908
6test 1815 line 303 fb: 94.977171
6test 1816 line 303 lat2: 6.119956010623
6test 1817 line 303 lon2: 5.687908365969
6test 1818 line 303 azi2: 94.977170961146
6test 1819 line 304 lat: -13.455263
6test 1820 line 304 lon: 92.797729
6test 1821 line 304 fb: 125.067595
6test 1822 line 304 lat2: -13.455262906771
6test 1823 line 304 lon2: 92.797729354548
6test 1824 line 304 azi2: 125.067595131171
6test 1825 line 305 lat: -61.258454
6test 1826 line 305 lon: 32.464613
6test 1827 line 305 fb: 153.578300
6test 1828 line 305 lat2: -61.258454070259
6test 1829 line 305 lon2: 32.464613321886
6test 1830 line 305 azi2: 153.578299580216
6test 1831 line 306 lat: 76.656194
6test 1832 line 306 lon: 147.658262
6test 1833 line 306 fb: 154.870277
6test 1834 line 306 lat2: 76.656194303754
6test 1835 line 306 lon2: 147.658261698859
6test 1836 line 306 azi2: 154.870276891567
6test 1837 line 307 lat: 38.020470
6test 1838 line 307 lon: 22.502210
6test 1839 line 307 fb: 164.603876
6test 1840 line 307 lat2: 38.020470355438
6test 1841 line 307 lon2: 22.502210018002
6test 1842 line 307 azi2: 164.603876406614
6test 1843 line 308 lat: -28.475186
6test 1844 line 308 lon: 125.031589
6test 1845 line 308 fb: 71.946314
6test 1846 line 308 lat2: -28.475185707347
6test 1847 line 308 lon2: 125.031589334958
6test 1848 line 308 azi2: 71.946313988393
6test 1849 line 309 lat: 33.123700
6test 1850 line 309 lon: 47.796870
6test 1851 line 309 fb: 66.233041
6test 1852 line 309 lat2: 33.123699771125
6test 1853 line 309 lon2: 47.796870281285
6test 1854 line 309 azi2: 66.233040505915
6test 1855 line 310 lat: 36.967606
6test 1856 line 310 lon: 91.462107
6test 1857 line 310 fb: 113.555931
6test 1858 line 310 lat2: 36.967605507925
6test 1859 line 310 lon2: 91.462107367844
6test 1860 line 310 azi2: 113.555931272414
6test 1861 line 311 lat: -3.784112
6test 1862 line 311 lon: 75.465096
6test 1863 line 311 fb: 146.940895
6test 1864 line 311 lat2: -3.784112064078
6test 1865 line 311 lon2: 75.465096433718
6test 1866 line 311 azi2: 146.940895363525
6test 1867 line 312 lat: 10.772454
6test 1868 line 312 lon: 162.137695
6test 1869 line 312 fb: 176.774643
6test 1870 line 312 lat2: 10.772454234711  FAILED, KNOWN, expected 10.772454234710
6test 1871 line 312 lon2: 162.137694811372
6test 1872 line 312 azi2: 176.774642770857
6test 1873 line 313 lat: 23.928740
6test 1874 line 313 lon: 28.953169
6test 1875 line 313 fb: 143.614710
6test 1876 line 313 lat2: 23.928739648982
6test 1877 line 313 lon2: 28.953169497861
6test 1878 line 313 azi2: 143.614709768381
6test 1879 line 314 lat: 5.199377
6test 1880 line 314 lon: 162.802668
6test 1881 line 314 fb: 146.857520
6test 1882 line 314 lat2: 5.199376594428
6test 1883 line 314 lon2: 162.802668362269
6test 1884 line 314 azi2: 146.857519761344
6test 1885 line 315 lat: 6.285334
6test 1886 line 315 lon: 164.204548
6test 1887 line 315 fb: 159.451359
6test 1888 line 315 lat2: 6.285334322282
6test 1889 line 315 lon2: 164.204548022855
6test 1890 line 315 azi2: 159.451359223111
6test 1891 line 316 lat: -8.151874
6test 1892 line 316 lon: 43.923539
6test 1893 line 316 fb: 121.501273
6test 1894 line 316 lat2: -8.151873580306
6test 1895 line 316 lon2: 43.923539410568
6test 1896 line 316 azi2: 121.501272690158
6test 1897 line 317 lat: 20.145480
6test 1898 line 317 lon: 92.310645
6test 1899 line 317 fb: 97.369333
6test 1900 line 317 lat2: 20.145480383316
6test 1901 line 317 lon2: 92.310644735772
6test 1902 line 317 azi2: 97.369333245027
6test 1903 line 318 lat: 38.715579
6test 1904 line 318 lon: 89.141427
6test 1905 line 318 fb: 100.831087
6test 1906 line 318 lat2: 38.715578802658
6test 1907 line 318 lon2: 89.141426830360
6test 1908 line 318 azi2: 100.831086703170
6test 1909 line 319 lat: -25.760685
6test 1910 line 319 lon: 145.864001
6test 1911 line 319 fb: 142.714674
6test 1912 line 319 lat2: -25.760685020607
6test 1913 line 319 lon2: 145.864001048187
6test 1914 line 319 azi2: 142.714673928912
6test 1915 line 320 lat: 49.387283
6test 1916 line 320 lon: 28.917044
6test 1917 line 320 fb: 61.545235
6test 1918 line 320 lat2: 49.387283074155
6test 1919 line 320 lon2: 28.917043656753  FAILED, KNOWN, expected 28.917043656754
6test 1920 line 320 azi2: 61.545235148403
6test 1921 line 321 lat: 10.120685
6test 1922 line 321 lon: 2.869738
6test 1923 line 321 fb: 176.526916
6test 1924 line 321 lat2: 10.120685293027
6test 1925 line 321 lon2: 2.869737593886
6test 1926 line 321 azi2: 176.526915822865
6test 1927 line 322 lat: 2.463216
6test 1928 line 322 lon: 102.917600
6test 1929 line 322 fb: 170.609004
6test 1930 line 322 lat2: 2.463216066166
6test 1931 line 322 lon2: 102.917599852201
6test 1932 line 322 azi2: 170.609003610639
6test 1933 line 323 lat: 58.201294
6test 1934 line 323 lon: 155.022079
6test 1935 line 323 fb: 153.181269
6test 1936 line 323 lat2: 58.201293688923
6test 1937 line 323 lon2: 155.022079105501
6test 1938 line 323 azi2: 153.181268692773
6test 1939 line 324 lat: 3.089608
6test 1940 line 324 lon: 20.686800
6test 1941 line 324 fb: 144.857820
6test 1942 line 324 lat2: 3.089607756265
6test 1943 line 324 lon2: 20.686800266169
6test 1944 line 324 azi2: 144.857820265585
6test 1945 line 325 lat: 48.232274
6test 1946 line 325 lon: 18.567244
6test 1947 line 325 fb: 24.556438
6test 1948 line 325 lat2: 48.232274219515
6test 1949 line 325 lon2: 18.567244222293
6test 1950 line 325 azi2: 24.556437713520
6test 1951 line 326 lat: 30.265261
6test 1952 line 326 lon: 7.440738
6test 1953 line 326 fb: 142.022972
6test 1954 line 326 lat2: 30.265261486767
6test 1955 line 326 lon2: 7.440737656545
6test 1956 line 326 azi2: 142.022971576270
6test 1957 line 327 lat: -11.166197
6test 1958 line 327 lon: 176.728934
6test 1959 line 327 fb: 24.287273
6test 1960 line 327 lat2: -11.166197413148
6test 1961 line 327 lon2: 176.728933575636
6test 1962 line 327 azi2: 24.287272842989
6test 1963 line 328 lat: 84.645539
6test 1964 line 328 lon: 90.023922
6test 1965 line 328 fb: 92.786262
6test 1966 line 328 lat2: 84.645539196082
6test 1967 line 328 lon2: 90.023922499395
6test 1968 line 328 azi2: 92.786261566828  FAILED, KNOWN, expected 92.786261566827
6test 1969 line 329 lat: 61.618717
6test 1970 line 329 lon: 162.510959
6test 1971 line 329 fb: 160.923940
6test 1972 line 329 lat2: 61.618716728051
6test 1973 line 329 lon2: 162.510958917359
6test 1974 line 329 azi2: 160.923939760553
6test 1975 line 330 lat: 27.643242
6test 1976 line 330 lon: 45.376215
6test 1977 line 330 fb: 147.964522
6test 1978 line 330 lat2: 27.643242341173
6test 1979 line 330 lon2: 45.376215094118
6test 1980 line 330 azi2: 147.964522484664
6test 1981 line 331 lat: 2.218750
6test 1982 line 331 lon: 170.358342
6test 1983 line 331 fb: 141.658474
6test 1984 line 331 lat2: 2.218749985364
6test 1985 line 331 lon2: 170.358342078292
6test 1986 line 331 azi2: 141.658474129787
6test 1987 line 332 lat: 26.019142
6test 1988 line 332 lon: 32.534760
6test 1989 line 332 fb: 128.159784
6test 1990 line 332 lat2: 26.019142329663
6test 1991 line 332 lon2: 32.534760195963
6test 1992 line 332 azi2: 128.159784291645
6test 1993 line 333 lat: 10.049636
6test 1994 line 333 lon: 72.205347
6test 1995 line 333 fb: 143.602160
6test 1996 line 333 lat2: 10.049636247749
6test 1997 line 333 lon2: 72.205346955818
6test 1998 line 333 azi2: 143.602159725306
6test 1999 line 334 lat: -31.030497
6test 2000 line 334 lon: 91.539195
6test 2001 line 334 fb: 109.891398
6test 2002 line 334 lat2: -31.030496743715
6test 2003 line 334 lon2: 91.539195292896
6test 2004 line 334 azi2: 109.891398221790
6test 2005 line 335 lat: 30.113796
6test 2006 line 335 lon: 109.096982
6test 2007 line 335 fb: 146.779343
6test 2008 line 335 lat2: 30.113795853670  FAILED, KNOWN, expected 30.113795853671
6test 2009 line 335 lon2: 109.096981631502
6test 2010 line 335 azi2: 146.779343066541
6test 2011 line 336 lat: -73.967996
6test 2012 line 336 lon: 65.944243
6test 2013 line 336 fb: 120.592999
6test 2014 line 336 lat2: -73.967996185770
6test 2015 line 336 lon2: 65.944242524678
6test 2016 line 336 azi2: 120.592998665529
6test 2017 line 337 lat: 52.211150
6test 2018 line 337 lon: 168.054185
6test 2019 line 337 fb: 172.425992
6test 2020 line 337 lat2: 52.211149755494
6test 2021 line 337 lon2: 168.054184827868
6test 2022 line 337 azi2: 172.425991612467
6test 2023 line 338 lat: -64.497146
6test 2024 line 338 lon: 72.073419
6test 2025 line 338 fb: 114.249129
6test 2026 line 338 lat2: -64.497146189688
6test 2027 line 338 lon2: 72.073418936581
6test 2028 line 338 azi2: 114.249128850219
6test 2029 line 339 lat: -25.711399
6test 2030 line 339 lon: 6.036423
6test 2031 line 339 fb: 169.464098
6test 2032 line 339 lat2: -25.711398997503
6test 2033 line 339 lon2: 6.036423474639
6test 2034 line 339 azi2: 169.464098294263
6test 2035 line 340 lat: 33.904613
6test 2036 line 340 lon: 30.989094
6test 2037 line 340 fb: 124.896016
6test 2038 line 340 lat2: 33.904613360449
6test 2039 line 340 lon2: 30.989094387217
6test 2040 line 340 azi2: 124.896016003640
6test 2041 line 341 lat: -25.053080
6test 2042 line 341 lon: 137.078639
6test 2043 line 341 fb: 115.960750
6test 2044 line 341 lat2: -25.053079543516
6test 2045 line 341 lon2: 137.078638665495
6test 2046 line 341 azi2: 115.960750169086
6test 2047 line 342 lat: 10.298031
6test 2048 line 342 lon: 27.737374
6test 2049 line 342 fb: 142.265457
6test 2050 line 342 lat2: 10.298031202629
6test 2051 line 342 lon2: 27.737373649973
6test 2052 line 342 azi2: 142.265457288483
6test 2053 line 343 lat: -0.738692
6test 2054 line 343 lon: 150.933627
6test 2055 line 343 fb: 174.004688
6test 2056 line 343 lat2: -0.738692377457
6test 2057 line 343 lon2: 150.933627031610
6test 2058 line 343 azi2: 174.004687728765
6test 2059 line 344 lat: 50.619289
6test 2060 line 344 lon: 67.178203
6test 2061 line 344 fb: 105.177353
6test 2062 line 344 lat2: 50.619289349009
6test 2063 line 344 lon2: 67.178203328135
6test 2064 line 344 azi2: 105.177353051107
6test 2065 line 345 lat: -2.127739
6test 2066 line 345 lon: 38.604245
6test 2067 line 345 fb: 118.657849
6test 2068 line 345 lat2: -2.127739360728
6test 2069 line 345 lon2: 38.604245449983
6test 2070 line 345 azi2: 118.657849063154
6test 2071 line 346 lat: 37.188367
6test 2072 line 346 lon: 90.865255
6test 2073 line 346 fb: 104.826548
6test 2074 line 346 lat2: 37.188366752551
6test 2075 line 346 lon2: 90.865255121714
6test 2076 line 346 azi2: 104.826548310924
6test 2077 line 347 lat: 46.019257
6test 2078 line 347 lon: 20.402591
6test 2079 line 347 fb: 31.068588
6test 2080 line 347 lat2: 46.019256998097
6test 2081 line 347 lon2: 20.402590686048
6test 2082 line 347 azi2: 31.068587858373
6test 2083 line 348 lat: 9.023356
6test 2084 line 348 lon: 106.678645
6test 2085 line 348 fb: 141.375490
6test 2086 line 348 lat2: 9.023355647006
6test 2087 line 348 lon2: 106.678645473545
6test 2088 line 348 azi2: 141.375490245645
6test 2089 line 349 lat: -1.321473
6test 2090 line 349 lon: 67.418879
6test 2091 line 349 fb: 105.590913
6test 2092 line 349 lat2: -1.321473235187
6test 2093 line 349 lon2: 67.418878731595
6test 2094 line 349 azi2: 105.590912857546
6test 2095 line 350 lat: 7.459339
6test 2096 line 350 lon: 30.150648
6test 2097 line 350 fb: 109.667752
6test 2098 line 350 lat2: 7.459338626177
6test 2099 line 350 lon2: 30.150648477470
6test 2100 line 350 azi2: 109.667751753912
6test 2101 line 351 lat: 16.344755
6test 2102 line 351 lon: 146.829160
6test 2103 line 351 fb: 128.666192
6test 2104 line 351 lat2: 16.344755038185
6test 2105 line 351 lon2: 146.829159972334
6test 2106 line 351 azi2: 128.666191953616
6test 2107 line 352 lat: -55.785670
6test 2108 line 352 lon: 158.086173
6test 2109 line 352 fb: 33.903277
6test 2110 line 352 lat2: -55.785670347270
6test 2111 line 352 lon2: 158.086173376809
6test 2112 line 352 azi2: 33.903276835071
6test 2113 line 353 lat: -74.409604
6test 2114 line 353 lon: 111.280935
6test 2115 line 353 fb: 78.510830
6test 2116 line 353 lat2: -74.409603561050
6test 2117 line 353 lon2: 111.280934985965
6test 2118 line 353 azi2: 78.510830028461
6test 2119 line 354 lat: 9.922204
6test 2120 line 354 lon: 138.538334
6test 2121 line 354 fb: 125.268473
6test 2122 line 354 lat2: 9.922203731557
6test 2123 line 354 lon2: 138.538333703571
6test 2124 line 354 azi2: 125.268473410634
6test 2125 line 355 lat: -27.082389
6test 2126 line 355 lon: 91.425844
6test 2127 line 355 fb: 153.267616
6test 2128 line 355 lat2: -27.082389068808  FAILED, KNOWN, expected -27.082389068807
6test 2129 line 355 lon2: 91.425843733185
6test 2130 line 355 azi2: 153.267616113653
6test 2131 line 356 lat: 14.627508
6test 2132 line 356 lon: 74.629605
6test 2133 line 356 fb: 159.825211
6test 2134 line 356 lat2: 14.627507744773
6test 2135 line 356 lon2: 74.629604673488
6test 2136 line 356 azi2: 159.825210987464
6test 2137 line 357 lat: 46.941087
6test 2138 line 357 lon: 18.833436
6test 2139 line 357 fb: 63.924917
6test 2140 line 357 lat2: 46.941086934168  FAILED, KNOWN, expected 46.941086934169
6test 2141 line 357 lon2: 18.833435620675
6test 2142 line 357 azi2: 63.924916745148
6test 2143 line 358 lat: 42.371666
6test 2144 line 358 lon: 126.270074
6test 2145 line 358 fb: 117.352107
6test 2146 line 358 lat2: 42.371665615782
6test 2147 line 358 lon2: 126.270074354353
6test 2148 line 358 azi2: 117.352106840236
6test 2149 line 359 lat: 60.888684
6test 2150 line 359 lon: 106.363657
6test 2151 line 359 fb: 108.973271
6test 2152 line 359 lat2: 60.888683732870
6test 2153 line 359 lon2: 106.363656697522
6test 2154 line 359 azi2: 108.973271101790
6test 2155 line 360 lat: 53.972090
6test 2156 line 360 lon: 136.000658
6test 2157 line 360 fb: 138.361589
6test 2158 line 360 lat2: 53.972089572795
6test 2159 line 360 lon2: 136.000657911062
6test 2160 line 360 azi2: 138.361588598638
6test 2161 line 361 lat: 47.850867
6test 2162 line 361 lon: 25.277934
6test 2163 line 361 fb: 71.284668
6test 2164 line 361 lat2: 47.850866585267
6test 2165 line 361 lon2: 25.277933660114
6test 2166 line 361 azi2: 71.284667717290
6test 2167 line 362 lat: 64.280614
6test 2168 line 362 lon: 16.447697
6test 2169 line 362 fb: 35.692750
6test 2170 line 362 lat2: 64.280614171157
6test 2171 line 362 lon2: 16.447696559380
6test 2172 line 362 azi2: 35.692750218622
6test 2173 line 363 lat: -3.339044
6test 2174 line 363 lon: 91.646260
6test 2175 line 363 fb: 95.928001
6test 2176 line 363 lat2: -3.339044133285
6test 2177 line 363 lon2: 91.646260438368
6test 2178 line 363 azi2: 95.928000721064
6test 2179 line 364 lat: -46.029875
6test 2180 line 364 lon: 30.599197
6test 2181 line 364 fb: 146.810525
6test 2182 line 364 lat2: -46.029874698950
6test 2183 line 364 lon2: 30.599196661458
6test 2184 line 364 azi2: 146.810525207719
6test 2185 line 365 lat: 25.605076
6test 2186 line 365 lon: 14.382003
6test 2187 line 365 fb: 116.566847
6test 2188 line 365 lat2: 25.605076391429
6test 2189 line 365 lon2: 14.382002787798
6test 2190 line 365 azi2: 116.566847403824
6test 2191 line 366 lat: -15.052413
6test 2192 line 366 lon: 150.673460
6test 2193 line 366 fb: 64.906721
6test 2194 line 366 lat2: -15.052412502534
6test 2195 line 366 lon2: 150.673460237577
6test 2196 line 366 azi2: 64.906720897603
6test 2197 line 367 lat: -24.631882
6test 2198 line 367 lon: 170.403348
6test 2199 line 367 fb: 38.497784
6test 2200 line 367 lat2: -24.631881773331
6test 2201 line 367 lon2: 170.403348095216
6test 2202 line 367 azi2: 38.497783925432
6test 2203 line 368 lat: 84.347730
6test 2204 line 368 lon: 37.352130
6test 2205 line 368 fb: 38.599794
6test 2206 line 368 lat2: 84.347730272741
6test 2207 line 368 lon2: 37.352130023033
6test 2208 line 368 azi2: 38.599794179850
6test 2209 line 369 lat: 11.680773
6test 2210 line 369 lon: 170.552617
6test 2211 line 369 fb: 174.460436
6test 2212 line 369 lat2: 11.680772997529
6test 2213 line 369 lon2: 170.552617119135
6test 2214 line 369 azi2: 174.460435573783
6test 2215 line 370 lat: -4.129058
6test 2216 line 370 lon: 136.743627
6test 2217 line 370 fb: 142.147604
6test 2218 line 370 lat2: -4.129057873299
6test 2219 line 370 lon2: 136.743626644380
6test 2220 line 370 azi2: 142.147603954035
6test 2221 line 371 lat: 22.191782
6test 2222 line 371 lon: 164.962392
6test 2223 line 371 fb: 163.266967
6test 2224 line 371 lat2: 22.191782097783
6test 2225 line 371 lon2: 164.962391587580
6test 2226 line 371 azi2: 163.266967353376
6test 2227 line 372 lat: -20.517212
6test 2228 line 372 lon: 128.116444
6test 2229 line 372 fb: 110.769757
6test 2230 line 372 lat2: -20.517212185628
6test 2231 line 372 lon2: 128.116443546305
6test 2232 line 372 azi2: 110.769757212730
6test 2233 line 373 lat: -71.269219
6test 2234 line 373 lon: 117.744329
6test 2235 line 373 fb: 81.341006
6test 2236 line 373 lat2: -71.269218648518
6test 2237 line 373 lon2: 117.744328537214
6test 2238 line 373 azi2: 81.341005509003
6test 2239 line 374 lat: -28.381893
6test 2240 line 374 lon: 4.526029
6test 2241 line 374 fb: 176.348678
6test 2242 line 374 lat2: -28.381892766057
6test 2243 line 374 lon2: 4.526028955177
6test 2244 line 374 azi2: 176.348678015377
6test 2245 line 375 lat: -28.786090
6test 2246 line 375 lon: 25.937634
6test 2247 line 375 fb: 147.973102
6test 2248 line 375 lat2: -28.786089606638
6test 2249 line 375 lon2: 25.937634058027
6test 2250 line 375 azi2: 147.973102126478
6test 2251 line 376 lat: -37.872672
6test 2252 line 376 lon: 116.904193
6test 2253 line 376 fb: 88.568636
6test 2254 line 376 lat2: -37.872671755645
6test 2255 line 376 lon2: 116.904192578457
6test 2256 line 376 azi2: 88.568636418662
6test 2257 line 377 lat: -26.321447
6test 2258 line 377 lon: 85.206987
6test 2259 line 377 fb: 112.408109
6test 2260 line 377 lat2: -26.321446841940
6test 2261 line 377 lon2: 85.206986852001
6test 2262 line 377 azi2: 112.408108683681
6test 2263 line 378 lat: -54.824260
6test 2264 line 378 lon: 156.561574
6test 2265 line 378 fb: 45.534810
6test 2266 line 378 lat2: -54.824260467184
6test 2267 line 378 lon2: 156.561573965853
6test 2268 line 378 azi2: 45.534810497879  FAILED, KNOWN, expected 45.534810497878
6test 2269 line 379 lat: -16.423550
6test 2270 line 379 lon: 36.685134
6test 2271 line 379 fb: 149.426790
6test 2272 line 379 lat2: -16.423550298805
6test 2273 line 379 lon2: 36.685133578511
6test 2274 line 379 azi2: 149.426789575292
6test 2275 line 380 lat: -16.806591
6test 2276 line 380 lon: 149.738610
6test 2277 line 380 fb: 108.898472
6test 2278 line 380 lat2: -16.806590952462
6test 2279 line 380 lon2: 149.738610286185
6test 2280 line 380 azi2: 108.898472198507
6test 2281 line 381 lat: 61.200095
6test 2282 line 381 lon: 179.666196
6test 2283 line 381 fb: 179.746894
6test 2284 line 381 lat2: 61.200095175201
6test 2285 line 381 lon2: 179.666196014679
6test 2286 line 381 azi2: 179.746893753530
6test 2287 line 382 lat: 66.474418
6test 2288 line 382 lon: 1.552183
6test 2289 line 382 fb: 2.088868
6test 2290 line 382 lat2: 66.474418401288
6test 2291 line 382 lon2: 1.552183188407
6test 2292 line 382 azi2: 2.088868324926
6test 2293 line 383 lat: -75.177220
6test 2294 line 383 lon: 158.741597
6test 2295 line 383 fb: 24.127094
6test 2296 line 383 lat2: -75.177219719926
6test 2297 line 383 lon2: 158.741596988185
6test 2298 line 383 azi2: 24.127093846134
6test 2299 line 384 lat: 43.592977
6test 2300 line 384 lon: 90.684526
6test 2301 line 384 fb: 91.539242
6test 2302 line 384 lat2: 43.592976578444
6test 2303 line 384 lon2: 90.684525887486
6test 2304 line 384 azi2: 91.539242394540
6test 2305 line 385 lat: -5.075415
6test 2306 line 385 lon: 101.127103
6test 2307 line 385 fb: 107.948022
6test 2308 line 385 lat2: -5.075415464229
6test 2309 line 385 lon2: 101.127103351067
6test 2310 line 385 azi2: 107.948021613622
6test 2311 line 386 lat: 50.406166
6test 2312 line 386 lon: 135.501939
6test 2313 line 386 fb: 162.003144
6test 2314 line 386 lat2: 50.406165949083
6test 2315 line 386 lon2: 135.501938931444
6test 2316 line 386 azi2: 162.003144394969
6test 2317 line 387 lat: -17.207733
6test 2318 line 387 lon: 43.634692
6test 2319 line 387 fb: 136.506793
6test 2320 line 387 lat2: -17.207732564306
6test 2321 line 387 lon2: 43.634692466982
6test 2322 line 387 azi2: 136.506792603897
6test 2323 line 388 lat: -28.917723
6test 2324 line 388 lon: 163.486470
6test 2325 line 388 fb: 38.990274
6test 2326 line 388 lat2: -28.917723347931
6test 2327 line 388 lon2: 163.486470248682
6test 2328 line 388 azi2: 38.990273918754
6test 2329 line 389 lat: -32.592414
6test 2330 line 389 lon: 76.048812
6test 2331 line 389 fb: 98.024249
6test 2332 line 389 lat2: -32.592414472935
6test 2333 line 389 lon2: 76.048812057267
6test 2334 line 389 azi2: 98.024248734062
6test 2335 line 390 lat: 50.602735
6test 2336 line 390 lon: 49.792893
6test 2337 line 390 fb: 110.500761
6test 2338 line 390 lat2: 50.602735331532
6test 2339 line 390 lon2: 49.792893095354
6test 2340 line 390 azi2: 110.500760610103
6test 2341 line 391 lat: -4.912232
6test 2342 line 391 lon: 142.681744
6test 2343 line 391 fb: 119.428358
6test 2344 line 391 lat2: -4.912231564840
6test 2345 line 391 lon2: 142.681743549937
6test 2346 line 391 azi2: 119.428358444443
6test 2347 line 392 lat: -45.213515
6test 2348 line 392 lon: 131.987859
6test 2349 line 392 fb: 96.014100
6test 2350 line 392 lat2: -45.213514932524
6test 2351 line 392 lon2: 131.987859404857
6test 2352 line 392 azi2: 96.014100177112
6test 2353 line 393 lat: -27.151096
6test 2354 line 393 lon: 127.729463
6test 2355 line 393 fb: 85.960623
6test 2356 line 393 lat2: -27.151095883523
6test 2357 line 393 lon2: 127.729463064736
6test 2358 line 393 azi2: 85.960623495334
6test 2359 line 394 lat: 8.000358
6test 2360 line 394 lon: 144.233747
6test 2361 line 394 fb: 142.364017
6test 2362 line 394 lat2: 8.000357843774
6test 2363 line 394 lon2: 144.233746766535
6test 2364 line 394 azi2: 142.364016793767
6test 2365 line 395 lat: -6.431774
6test 2366 line 395 lon: 170.549196
6test 2367 line 395 fb: 122.180851
6test 2368 line 395 lat2: -6.431773707290
6test 2369 line 395 lon2: 170.549196384306
6test 2370 line 395 azi2: 122.180850600243
6test 2371 line 396 lat: 62.834146
6test 2372 line 396 lon: 171.218298
6test 2373 line 396 fb: 175.117433
6test 2374 line 396 lat2: 62.834146216572
6test 2375 line 396 lon2: 171.218297548713
6test 2376 line 396 azi2: 175.117432600362
6test 2377 line 397 lat: 22.902814
6test 2378 line 397 lon: 70.233438
6test 2379 line 397 fb: 120.935912
6test 2380 line 397 lat2: 22.902813652262
6test 2381 line 397 lon2: 70.233438162142
6test 2382 line 397 azi2: 120.935911762169
6test 2383 line 398 lat: 22.584853
6test 2384 line 398 lon: 31.616865
6test 2385 line 398 fb: 107.124038
6test 2386 line 398 lat2: 22.584853282541
6test 2387 line 398 lon2: 31.616864803984
6test 2388 line 398 azi2: 107.124038156545
6test 2389 line 399 lat: 31.269173
6test 2390 line 399 lon: 65.399306
6test 2391 line 399 fb: 151.892600
6test 2392 line 399 lat2: 31.269173344204
6test 2393 line 399 lon2: 65.399305777763
6test 2394 line 399 azi2: 151.892599739667
6test 2395 line 400 lat: 35.519614
6test 2396 line 400 lon: 143.165122
6test 2397 line 400 fb: 161.479891
6test 2398 line 400 lat2: 35.519613515115
6test 2399 line 400 lon2: 143.165121509798
6test 2400 line 400 azi2: 161.479891246031
6test 2401 line 401 lat: -53.741922
6test 2402 line 401 lon: 67.121402
6test 2403 line 401 fb: 130.871188
6test 2404 line 401 lat2: -53.741921506580
6test 2405 line 401 lon2: 67.121402135047
6test 2406 line 401 azi2: 130.871188003209
6test 2407 line 402 lat: 9.046227
6test 2408 line 402 lon: 35.933737
6test 2409 line 402 fb: 175.770789
6test 2410 line 402 lat2: 9.046227267580
6test 2411 line 402 lon2: 35.933736921417
6test 2412 line 402 azi2: 175.770788535406
6test 2413 line 403 lat: 75.917034
6test 2414 line 403 lon: 125.150808
6test 2415 line 403 fb: 135.354467
6test 2416 line 403 lat2: 75.917034235438
6test 2417 line 403 lon2: 125.150808062636
6test 2418 line 403 azi2: 135.354466840051
6test 2419 line 404 lat: -39.724826
6test 2420 line 404 lon: 77.372087
6test 2421 line 404 fb: 111.852577
6test 2422 line 404 lat2: -39.724825618504  FAILED, KNOWN, expected -39.724825618503
6test 2423 line 404 lon2: 77.372086855267
6test 2424 line 404 azi2: 111.852577362108
6test 2425 line 405 lat: 3.917212
6test 2426 line 405 lon: 142.621752
6test 2427 line 405 fb: 124.176952
6test 2428 line 405 lat2: 3.917212154431
6test 2429 line 405 lon2: 142.621751764236
6test 2430 line 405 azi2: 124.176952499321
6test 2431 line 406 lat: 60.230364
6test 2432 line 406 lon: 26.245689
6test 2433 line 406 fb: 48.509486
6test 2434 line 406 lat2: 60.230364486607
6test 2435 line 406 lon2: 26.245688508507
6test 2436 line 406 azi2: 48.509486474608
6test 2437 line 407 lat: 29.597322
6test 2438 line 407 lon: 29.129808
6test 2439 line 407 fb: 79.288539
6test 2440 line 407 lat2: 29.597322070518
6test 2441 line 407 lon2: 29.129807944898
6test 2442 line 407 azi2: 79.288538667829
6test 2443 line 408 lat: -62.913760
6test 2444 line 408 lon: 14.845859
6test 2445 line 408 fb: 165.794536
6test 2446 line 408 lat2: -62.913759669564
6test 2447 line 408 lon2: 14.845859018930
6test 2448 line 408 azi2: 165.794535940950
6test 2449 line 409 lat: 15.360446
6test 2450 line 409 lon: 161.450680
6test 2451 line 409 fb: 164.457024
6test 2452 line 409 lat2: 15.360445685187
6test 2453 line 409 lon2: 161.450680426049
6test 2454 line 409 azi2: 164.457024354600
6test 2455 line 410 lat: -58.330109
6test 2456 line 410 lon: 17.628134
6test 2457 line 410 fb: 161.349788
6test 2458 line 410 lat2: -58.330108507597
6test 2459 line 410 lon2: 17.628133627705
6test 2460 line 410 azi2: 161.349788081184
6test 2461 line 411 lat: -68.514277
6test 2462 line 411 lon: 19.958792
6test 2463 line 411 fb: 162.262811
6test 2464 line 411 lat2: -68.514276940652
6test 2465 line 411 lon2: 19.958792438281
6test 2466 line 411 azi2: 162.262811488702
6test 2467 line 412 lat: -23.686766
6test 2468 line 412 lon: 77.544158
6test 2469 line 412 fb: 97.517041
6test 2470 line 412 lat2: -23.686765736999
6test 2471 line 412 lon2: 77.544158137101
6test 2472 line 412 azi2: 97.517041033585
6test 2473 line 413 lat: -50.843575
6test 2474 line 413 lon: 118.404202
6test 2475 line 413 fb: 75.928950
6test 2476 line 413 lat2: -50.843574559525
6test 2477 line 413 lon2: 118.404202153051
6test 2478 line 413 azi2: 75.928950296488
6test 2479 line 414 lat: 44.438742
6test 2480 line 414 lon: 152.028260
6test 2481 line 414 fb: 156.092336
6test 2482 line 414 lat2: 44.438741945021
6test 2483 line 414 lon2: 152.028260148130
6test 2484 line 414 azi2: 156.092336139519
6test 2485 line 415 lat: 33.820395
6test 2486 line 415 lon: 178.008342
6test 2487 line 415 fb: 177.679586
6test 2488 line 415 lat2: 33.820395378014
6test 2489 line 415 lon2: 178.008341908011
6test 2490 line 415 azi2: 177.679585823345
6test 2491 line 416 lat: 27.506735
6test 2492 line 416 lon: 153.242452
6test 2493 line 416 fb: 150.262824
6test 2494 line 416 lat2: 27.506735286152
6test 2495 line 416 lon2: 153.242452449881
6test 2496 line 416 azi2: 150.262824421351
6test 2497 line 417 lat: -31.250437
6test 2498 line 417 lon: 179.014499
6test 2499 line 417 fb: 178.103046
6test 2500 line 417 lat2: -31.250436707468
6test 2501 line 417 lon2: 179.014498940190
6test 2502 line 417 azi2: 178.103045898455
6test 2503 line 418 lat: 40.341542
6test 2504 line 418 lon: 109.605984
6test 2505 line 418 fb: 105.401958
6test 2506 line 418 lat2: 40.341542234586
6test 2507 line 418 lon2: 109.605984313079
6test 2508 line 418 azi2: 105.401958406556
6test 2509 line 419 lat: 48.318632
6test 2510 line 419 lon: 92.282799
6test 2511 line 419 fb: 111.987482
6test 2512 line 419 lat2: 48.318632112439
6test 2513 line 419 lon2: 92.282799489208
6test 2514 line 419 azi2: 111.987482299261
6test 2515 line 420 lat: 0.675299
6test 2516 line 420 lon: 6.789301
6test 2517 line 420 fb: 164.921926
6test 2518 line 420 lat2: 0.675299289459
6test 2519 line 420 lon2: 6.789300798072
6test 2520 line 420 azi2: 164.921926385405
6test 2521 line 421 lat: 33.232812
6test 2522 line 421 lon: 170.163205
6test 2523 line 421 fb: 175.445424
6test 2524 line 421 lat2: 33.232811536179
6test 2525 line 421 lon2: 170.163205247232  FAILED, KNOWN, expected 170.163205247231
6test 2526 line 421 azi2: 175.445424087910
6test 2527 line 422 lat: 51.425532
6test 2528 line 422 lon: 167.128188
6test 2529 line 422 fb: 169.431307
6test 2530 line 422 lat2: 51.425532151818
6test 2531 line 422 lon2: 167.128188073883
6test 2532 line 422 azi2: 169.431306547043
6test 2533 line 423 lat: 72.043795
6test 2534 line 423 lon: 23.320161
6test 2535 line 423 fb: 85.002463
6test 2536 line 423 lat2: 72.043794732818
6test 2537 line 423 lon2: 23.320160820556
6test 2538 line 423 azi2: 85.002463342037
6test 2539 line 424 lat: 55.279253
6test 2540 line 424 lon: 148.483684
6test 2541 line 424 fb: 155.614243
6test 2542 line 424 lat2: 55.279252586695
6test 2543 line 424 lon2: 148.483684405588
6test 2544 line 424 azi2: 155.614243012977
6test 2545 line 425 lat: 50.054601
6test 2546 line 425 lon: 43.609545
6test 2547 line 425 fb: 100.758451
6test 2548 line 425 lat2: 50.054601019930
6test 2549 line 425 lon2: 43.609545475731
6test 2550 line 425 azi2: 100.758450815354
6test 2551 line 426 lat: 31.194436
6test 2552 line 426 lon: 31.458476
6test 2553 line 426 fb: 92.204244
6test 2554 line 426 lat2: 31.194436445411
6test 2555 line 426 lon2: 31.458476146984
6test 2556 line 426 azi2: 92.204244235305
6test 2557 line 427 lat: 57.758262
6test 2558 line 427 lon: 164.499274
6test 2559 line 427 fb: 162.877999
6test 2560 line 427 lat2: 57.758262113137
6test 2561 line 427 lon2: 164.499274258053
6test 2562 line 427 azi2: 162.877999232894
6test 2563 line 428 lat: 27.006898
6test 2564 line 428 lon: 173.173812
6test 2565 line 428 fb: 177.878074
6test 2566 line 428 lat2: 27.006897756516
6test 2567 line 428 lon2: 173.173811781657
6test 2568 line 428 azi2: 177.878073603766
6test 2569 line 429 lat: -62.917581
6test 2570 line 429 lon: 18.990464
6test 2571 line 429 fb: 169.629168
6test 2572 line 429 lat2: -62.917580953804
6test 2573 line 429 lon2: 18.990464058493
6test 2574 line 429 azi2: 169.629168390979
6test 2575 line 430 lat: -43.128167
6test 2576 line 430 lon: 61.680974
6test 2577 line 430 fb: 135.269008
6test 2578 line 430 lat2: -43.128166633902
6test 2579 line 430 lon2: 61.680974170546
6test 2580 line 430 azi2: 135.269008366092
6test 2581 line 431 lat: -49.314417
6test 2582 line 431 lon: 55.826072
6test 2583 line 431 fb: 131.974574
6test 2584 line 431 lat2: -49.314417365795
6test 2585 line 431 lon2: 55.826071541563
6test 2586 line 431 azi2: 131.974573587520
6test 2587 line 432 lat: -24.322411
6test 2588 line 432 lon: 103.867391
6test 2589 line 432 fb: 139.458674
6test 2590 line 432 lat2: -24.322411486444
6test 2591 line 432 lon2: 103.867391100271
6test 2592 line 432 azi2: 139.458674175181
6test 2593 line 433 lat: -19.557319
6test 2594 line 433 lon: 81.358495
6test 2595 line 433 fb: 134.029610
6test 2596 line 433 lat2: -19.557318635270
6test 2597 line 433 lon2: 81.358494523202
6test 2598 line 433 azi2: 134.029609915778
6test 2599 line 434 lat: 7.830115
6test 2600 line 434 lon: 5.114172
6test 2601 line 434 fb: 175.025641
6test 2602 line 434 lat2: 7.830115253087
6test 2603 line 434 lon2: 5.114172330857
6test 2604 line 434 azi2: 175.025640902819
6test 2605 line 435 lat: -65.834623
6test 2606 line 435 lon: 41.772796
6test 2607 line 435 fb: 143.178050
6test 2608 line 435 lat2: -65.834622858584
6test 2609 line 435 lon2: 41.772796000787
6test 2610 line 435 azi2: 143.178050120951
6test 2611 line 436 lat: -7.997604
6test 2612 line 436 lon: 31.723397
6test 2613 line 436 fb: 153.896388
6test 2614 line 436 lat2: -7.997604143032
6test 2615 line 436 lon2: 31.723396618974
6test 2616 line 436 azi2: 153.896387549518
6test 2617 line 437 lat: -22.173130
6test 2618 line 437 lon: 164.896770
6test 2619 line 437 fb: 152.675597
6test 2620 line 437 lat2: -22.173129586699
6test 2621 line 437 lon2: 164.896770399383
6test 2622 line 437 azi2: 152.675596916021
6test 2623 line 438 lat: 35.085786
6test 2624 line 438 lon: 173.892271
6test 2625 line 438 fb: 171.931231
6test 2626 line 438 lat2: 35.085785799083
6test 2627 line 438 lon2: 173.892270533009
6test 2628 line 438 azi2: 171.931230872910
6test 2629 line 439 lat: -25.378865
6test 2630 line 439 lon: 2.197740
6test 2631 line 439 fb: 178.756775
6test 2632 line 439 lat2: -25.378865450268
6test 2633 line 439 lon2: 2.197739985587
6test 2634 line 439 azi2: 178.756775063163
6test 2635 line 440 lat: -13.782608
6test 2636 line 440 lon: 143.084799
6test 2637 line 440 fb: 141.818572
6test 2638 line 440 lat2: -13.782608118540
6test 2639 line 440 lon2: 143.084798779239
6test 2640 line 440 azi2: 141.818572490275
6test 2641 line 441 lat: -16.657589
6test 2642 line 441 lon: 100.829440
6test 2643 line 441 fb: 94.804409
6test 2644 line 441 lat2: -16.657588778768
6test 2645 line 441 lon2: 100.829440071396
6test 2646 line 441 azi2: 94.804408628371
6test 2647 line 442 lat: 23.629666
6test 2648 line 442 lon: 148.675531
6test 2649 line 442 fb: 169.091767
6test 2650 line 442 lat2: 23.629665922502
6test 2651 line 442 lon2: 148.675530832608
6test 2652 line 442 azi2: 169.091766635020
6test 2653 line 443 lat: 4.022724
6test 2654 line 443 lon: 161.803702
6test 2655 line 443 fb: 141.272785
6test 2656 line 443 lat2: 4.022724409294
6test 2657 line 443 lon2: 161.803702045621
6test 2658 line 443 azi2: 141.272784545678
6test 2659 line 444 lat: 13.280168
6test 2660 line 444 lon: 20.120413
6test 2661 line 444 fb: 158.170551
6test 2662 line 444 lat2: 13.280167579164
6test 2663 line 444 lon2: 20.120413486875
6test 2664 line 444 azi2: 158.170551379189
6test 2665 line 445 lat: -47.521450
6test 2666 line 445 lon: 150.549196
6test 2667 line 445 fb: 44.718791
6test 2668 line 445 lat2: -47.521449956879
6test 2669 line 445 lon2: 150.549196046351
6test 2670 line 445 azi2: 44.718791294775
6test 2671 line 446 lat: 17.790615
6test 2672 line 446 lon: 141.461006
6test 2673 line 446 fb: 115.746784
6test 2674 line 446 lat2: 17.790615163216
6test 2675 line 446 lon2: 141.461005551791
6test 2676 line 446 azi2: 115.746784352318
6test 2677 line 447 lat: -26.519374
6test 2678 line 447 lon: 98.067906
6test 2679 line 447 fb: 113.253929
6test 2680 line 447 lat2: -26.519374288386
6test 2681 line 447 lon2: 98.067906321718
6test 2682 line 447 azi2: 113.253928642653
6test 2683 line 448 lat: -12.401139
6test 2684 line 448 lon: 73.327970
6test 2685 line 448 fb: 124.879499
6test 2686 line 448 lat2: -12.401138571717
6test 2687 line 448 lon2: 73.327969848986
6test 2688 line 448 azi2: 124.879499241464
6test 2689 line 449 lat: 61.619396
6test 2690 line 449 lon: 99.785406
6test 2691 line 449 fb: 107.998380
6test 2692 line 449 lat2: 61.619396375102
6test 2693 line 449 lon2: 99.785406498835
6test 2694 line 449 azi2: 107.998379654880
6test 2695 line 450 lat: 36.997252
6test 2696 line 450 lon: 56.015643
6test 2697 line 450 fb: 103.921663
6test 2698 line 450 lat2: 36.997252125041
6test 2699 line 450 lon2: 56.015642631106
6test 2700 line 450 azi2: 103.921662760483
6test 2701 line 451 lat: 37.824447
6test 2702 line 451 lon: 83.438440
6test 2703 line 451 fb: 89.229164
6test 2704 line 451 lat2: 37.824446788544
6test 2705 line 451 lon2: 83.438439603294
6test 2706 line 451 azi2: 89.229164462127
6test 2707 line 452 lat: 78.387864
6test 2708 line 452 lon: 118.814812
6test 2709 line 452 fb: 133.706108
6test 2710 line 452 lat2: 78.387863550790
6test 2711 line 452 lon2: 118.814812128945
6test 2712 line 452 azi2: 133.706108131229
6test 2713 line 453 lat: -21.219381
6test 2714 line 453 lon: 53.544400
6test 2715 line 453 fb: 108.462517
6test 2716 line 453 lat2: -21.219381398156
6test 2717 line 453 lon2: 53.544399883561
6test 2718 line 453 azi2: 108.462517491505
6test 2719 line 454 lat: 63.304502
6test 2720 line 454 lon: 132.034926
6test 2721 line 454 fb: 139.912627
6test 2722 line 454 lat2: 63.304502042590
6test 2723 line 454 lon2: 132.034925840674
6test 2724 line 454 azi2: 139.912627269623
6test 2725 line 455 lat: 13.515663
6test 2726 line 455 lon: 8.989766
6test 2727 line 455 fb: 35.949535
6test 2728 line 455 lat2: 13.515662875313
6test 2729 line 455 lon2: 8.989765670730
6test 2730 line 455 azi2: 35.949534634702
6test 2731 line 456 lat: -6.742624
6test 2732 line 456 lon: 4.531931
6test 2733 line 456 fb: 171.306863
6test 2734 line 456 lat2: -6.742624347861
6test 2735 line 456 lon2: 4.531931315168
6test 2736 line 456 azi2: 171.306863155411
6test 2737 line 457 lat: -24.910509
6test 2738 line 457 lon: 128.137682
6test 2739 line 457 fb: 121.711631
6test 2740 line 457 lat2: -24.910509138681
6test 2741 line 457 lon2: 128.137681811633
6test 2742 line 457 azi2: 121.711631340407
6test 2743 line 458 lat: -40.687591
6test 2744 line 458 lon: 76.389897
6test 2745 line 458 fb: 116.394433
6test 2746 line 458 lat2: -40.687590598372
6test 2747 line 458 lon2: 76.389897347637
6test 2748 line 458 azi2: 116.394432846311
6test 2749 line 459 lat: 50.593808
6test 2750 line 459 lon: 155.175630
6test 2751 line 459 fb: 149.533910
6test 2752 line 459 lat2: 50.593807692461
6test 2753 line 459 lon2: 155.175629862288
6test 2754 line 459 azi2: 149.533910451363
6test 2755 line 460 lat: 12.198222
6test 2756 line 460 lon: 165.839456
6test 2757 line 460 fb: 172.783459
6test 2758 line 460 lat2: 12.198221826512
6test 2759 line 460 lon2: 165.839456381799
6test 2760 line 460 azi2: 172.783459292833
6test 2761 line 461 lat: 34.436568
6test 2762 line 461 lon: 7.117338
6test 2763 line 461 fb: 169.786492
6test 2764 line 461 lat2: 34.436568298724
6test 2765 line 461 lon2: 7.117337693395
6test 2766 line 461 azi2: 169.786491850891
6test 2767 line 462 lat: -3.145255
6test 2768 line 462 lon: 30.502293
6test 2769 line 462 fb: 103.563749
6test 2770 line 462 lat2: -3.145254788627
6test 2771 line 462 lon2: 30.502293345016
6test 2772 line 462 azi2: 103.563748974525
6test 2773 line 463 lat: 16.264722
6test 2774 line 463 lon: 85.497207
6test 2775 line 463 fb: 116.933863
6test 2776 line 463 lat2: 16.264722156696
6test 2777 line 463 lon2: 85.497207496626
6test 2778 line 463 azi2: 116.933862512764  FAILED, KNOWN, expected 116.933862512763
6test 2779 line 464 lat: 1.433605
6test 2780 line 464 lon: 4.165940
6test 2781 line 464 fb: 170.272462
6test 2782 line 464 lat2: 1.433605151882
6test 2783 line 464 lon2: 4.165940219923
6test 2784 line 464 azi2: 170.272462365963
6test 2785 line 465 lat: -43.326676
6test 2786 line 465 lon: 153.148367
6test 2787 line 465 fb: 42.921394
6test 2788 line 465 lat2: -43.326676023438
6test 2789 line 465 lon2: 153.148366512832
6test 2790 line 465 azi2: 42.921393854868
6test 2791 line 466 lat: 20.405242
6test 2792 line 466 lon: 178.247549
6test 2793 line 466 fb: 178.801033
6test 2794 line 466 lat2: 20.405242225208
6test 2795 line 466 lon2: 178.247549230810
6test 2796 line 466 azi2: 178.801032702563
6test 2797 line 467 lat: -22.482832
6test 2798 line 467 lon: 140.761211
6test 2799 line 467 fb: 82.371737
6test 2800 line 467 lat2: -22.482831544520
6test 2801 line 467 lon2: 140.761210729739
6test 2802 line 467 azi2: 82.371736722715
6test 2803 line 468 lat: -41.151672
6test 2804 line 468 lon: 38.419124
6test 2805 line 468 fb: 148.221356
6test 2806 line 468 lat2: -41.151672070525
6test 2807 line 468 lon2: 38.419124284860
6test 2808 line 468 azi2: 148.221356053664
6test 2809 line 469 lat: -63.212817
6test 2810 line 469 lon: 15.714998
6test 2811 line 469 fb: 166.777356
6test 2812 line 469 lat2: -63.212816746477
6test 2813 line 469 lon2: 15.714998156904
6test 2814 line 469 azi2: 166.777356149473
6test 2815 line 470 lat: -33.892681
6test 2816 line 470 lon: 120.971496
6test 2817 line 470 fb: 170.404814
6test 2818 line 470 lat2: -33.892680517408
6test 2819 line 470 lon2: 120.971495805190
6test 2820 line 470 azi2: 170.404813772447
6test 2821 line 471 lat: -17.570093
6test 2822 line 471 lon: 137.259693
6test 2823 line 471 fb: 175.973637
6test 2824 line 471 lat2: -17.570092516031
6test 2825 line 471 lon2: 137.259693182063
6test 2826 line 471 azi2: 175.973637230107
6test 2827 line 472 lat: -24.221028
6test 2828 line 472 lon: 33.960052
6test 2829 line 472 fb: 130.753279
6test 2830 line 472 lat2: -24.221027716300
6test 2831 line 472 lon2: 33.960051796001
6test 2832 line 472 azi2: 130.753279335550
6test 2833 line 473 lat: -48.849133
6test 2834 line 473 lon: 176.601435
6test 2835 line 473 fb: 5.037779
6test 2836 line 473 lat2: -48.849132604777
6test 2837 line 473 lon2: 176.601435366477
6test 2838 line 473 azi2: 5.037779120578
6test 2839 line 474 lat: -50.620233
6test 2840 line 474 lon: 22.061011
6test 2841 line 474 fb: 159.730881
6test 2842 line 474 lat2: -50.620232529081
6test 2843 line 474 lon2: 22.061010504617
6test 2844 line 474 azi2: 159.730880799186
6test 2845 line 475 lat: -11.354875
6test 2846 line 475 lon: 76.258812
6test 2847 line 475 fb: 104.014357
6test 2848 line 475 lat2: -11.354875472483
6test 2849 line 475 lon2: 76.258812283705
6test 2850 line 475 azi2: 104.014356938495
6test 2851 line 476 lat: -19.640051
6test 2852 line 476 lon: 105.698979
6test 2853 line 476 fb: 156.650619
6test 2854 line 476 lat2: -19.640050782646
6test 2855 line 476 lon2: 105.698978700604
6test 2856 line 476 azi2: 156.650619021389
6test 2857 line 477 lat: 83.855267
6test 2858 line 477 lon: 112.674858
6test 2859 line 477 fb: 122.383784
6test 2860 line 477 lat2: 83.855266840098
6test 2861 line 477 lon2: 112.674858066810
6test 2862 line 477 azi2: 122.383784147681
6test 2863 line 478 lat: 48.296558
6test 2864 line 478 lon: 34.072463
6test 2865 line 478 fb: 61.415867
6test 2866 line 478 lat2: 48.296557545891
6test 2867 line 478 lon2: 34.072462542900
6test 2868 line 478 azi2: 61.415867309157
6test 2869 line 479 lat: 20.173772
6test 2870 line 479 lon: 12.682422
6test 2871 line 479 fb: 165.220898
6test 2872 line 479 lat2: 20.173772376863
6test 2873 line 479 lon2: 12.682422408956
6test 2874 line 479 azi2: 165.220897942891
6test 2875 line 480 lat: 47.501521
6test 2876 line 480 lon: 54.338775
6test 2877 line 480 fb: 80.572388
6test 2878 line 480 lat2: 47.501521345953
6test 2879 line 480 lon2: 54.338775236773
6test 2880 line 480 azi2: 80.572387690286
6test 2881 line 481 lat: -34.023172
6test 2882 line 481 lon: 174.310259
6test 2883 line 481 fb: 123.138509
6test 2884 line 481 lat2: -34.023171607796
6test 2885 line 481 lon2: 174.310258612178
6test 2886 line 481 azi2: 123.138509441522
6test 2887 line 482 lat: -31.540913
6test 2888 line 482 lon: 52.441924
6test 2889 line 482 fb: 155.194513
6test 2890 line 482 lat2: -31.540912691186
6test 2891 line 482 lon2: 52.441923606881  FAILED, KNOWN, expected 52.441923606882
6test 2892 line 482 azi2: 155.194512958367
6test 2893 line 483 lat: 64.121649
6test 2894 line 483 lon: 21.295234
6test 2895 line 483 fb: 51.966943
6test 2896 line 483 lat2: 64.121648788158
6test 2897 line 483 lon2: 21.295234110583
6test 2898 line 483 azi2: 51.966943039534
6test 2899 line 484 lat: -4.599613
6test 2900 line 484 lon: 107.727091
6test 2901 line 484 fb: 109.270070
6test 2902 line 484 lat2: -4.599612537190
6test 2903 line 484 lon2: 107.727090701893
6test 2904 line 484 azi2: 109.270070124629
6test 2905 line 485 lat: -16.799515
6test 2906 line 485 lon: 43.675397
6test 2907 line 485 fb: 144.940350
6test 2908 line 485 lat2: -16.799514501718
6test 2909 line 485 lon2: 43.675397103786  FAILED, KNOWN, expected 43.675397103785
6test 2910 line 485 azi2: 144.940350340820
6test 2911 line 486 lat: -16.337411
6test 2912 line 486 lon: 13.110283
6test 2913 line 486 fb: 167.467077
6test 2914 line 486 lat2: -16.337410785184
6test 2915 line 486 lon2: 13.110282576579
6test 2916 line 486 azi2: 167.467077049713
6test 2917 line 487 lat: -26.145379
6test 2918 line 487 lon: 9.977868
6test 2919 line 487 fb: 171.929335
6test 2920 line 487 lat2: -26.145378737931
6test 2921 line 487 lon2: 9.977868070750
6test 2922 line 487 azi2: 171.929335050809
6test 2923 line 488 lat: -3.245748
6test 2924 line 488 lon: 71.931981
6test 2925 line 488 fb: 124.120047
6test 2926 line 488 lat2: -3.245748416402
6test 2927 line 488 lon2: 71.931980979620
6test 2928 line 488 azi2: 124.120046609527
6test 2929 line 489 lat: 72.975644
6test 2930 line 489 lon: 36.459313
6test 2931 line 489 fb: 49.411324
6test 2932 line 489 lat2: 72.975644407376
6test 2933 line 489 lon2: 36.459312843012
6test 2934 line 489 azi2: 49.411324496539
6test 2935 line 490 lat: 50.342418
6test 2936 line 490 lon: 35.445910
6test 2937 line 490 fb: 43.087650
6test 2938 line 490 lat2: 50.342417843481
6test 2939 line 490 lon2: 35.445910446930
6test 2940 line 490 azi2: 43.087650398316
6test 2941 line 491 lat: -22.878804
6test 2942 line 491 lon: 69.376306
6test 2943 line 491 fb: 102.211558
6test 2944 line 491 lat2: -22.878804028267
6test 2945 line 491 lon2: 69.376306288000
6test 2946 line 491 azi2: 102.211557813582
6test 2947 line 492 lat: 21.254912
6test 2948 line 492 lon: 21.899215
6test 2949 line 492 fb: 92.966926
6test 2950 line 492 lat2: 21.254912121078
6test 2951 line 492 lon2: 21.899214754868
6test 2952 line 492 azi2: 92.966926161390
6test 2953 line 493 lat: 26.486641
6test 2954 line 493 lon: 19.097603
6test 2955 line 493 fb: 158.053447
6test 2956 line 493 lat2: 26.486640906235
6test 2957 line 493 lon2: 19.097602913800
6test 2958 line 493 azi2: 158.053446850267
6test 2959 line 494 lat: 43.041538
6test 2960 line 494 lon: 114.186950
6test 2961 line 494 fb: 155.795323
6test 2962 line 494 lat2: 43.041538374784
6test 2963 line 494 lon2: 114.186949886941
6test 2964 line 494 azi2: 155.795322500736
6test 2965 line 495 lat: -10.570764
6test 2966 line 495 lon: 107.625834
6test 2967 line 495 fb: 98.142401
6test 2968 line 495 lat2: -10.570763915882
6test 2969 line 495 lon2: 107.625834147204
6test 2970 line 495 azi2: 98.142400502747
6test 2971 line 496 lat: 12.624313
6test 2972 line 496 lon: 139.841077
6test 2973 line 496 fb: 148.385662
6test 2974 line 496 lat2: 12.624313141297
6test 2975 line 496 lon2: 139.841076840613
6test 2976 line 496 azi2: 148.385661923898
6test 2977 line 497 lat: -25.169999
6test 2978 line 497 lon: 33.175749
6test 2979 line 497 fb: 169.905377
6test 2980 line 497 lat2: -25.169998746665
6test 2981 line 497 lon2: 33.175749310362
6test 2982 line 497 azi2: 169.905376778384
6test 2983 line 498 lat: -41.360282
6test 2984 line 498 lon: 147.341948
6test 2985 line 498 fb: 136.551910
6test 2986 line 498 lat2: -41.360281944908
6test 2987 line 498 lon2: 147.341948469937
6test 2988 line 498 azi2: 136.551910060918
6test 2989 line 499 lat: 39.182099
6test 2990 line 499 lon: 150.590705
6test 2991 line 499 fb: 165.522951
6test 2992 line 499 lat2: 39.182099298590
6test 2993 line 499 lon2: 150.590705311219
6test 2994 line 499 azi2: 165.522950851635
6test 2995 line 500 lat: -57.494441
6test 2996 line 500 lon: 113.054057
6test 2997 line 500 fb: 130.988277
6test 2998 line 500 lat2: -57.494440629886
6test 2999 line 500 lon2: 113.054056725195
6test 3000 line 500 azi2: 130.988276746436
6test 3001 WGS84.KsOrder: 8
625 of 3001 testEllipsoidalGeodTest.py tests (0.8%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 3.127 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testEllipsoids.py
6testing testEllipsoids.py 23.02.07 (module pygeodesy.ellipsoids 22.11.02)
6test 1 ellipsoid: True
6test 2 TestEllipsoid: name='TestEllipsoid', a=1000, b=1000, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=1000, L=1570.79632679, R1=1000, R2=1000, R3=1000, Rbiaxial=1000, Rtriaxial=1000
6testWGS84(pygeodesy.ellipsoids, 22.11.02)
6test 3 R1: 6371008.7714
6test 4 R2: 6371007.2
6test 5 R3: 6371000.8
6test 6 A: 6367449.1
6test 7 L: 10001965.7
6test 8 Rrectifying: 6367449.1
6test 9 Rgeometric: 6367435.7
6test 10 Rgeocentric: 6378137.000
6test 11 Rgeocentric: 6367489.544
6test 12 Rgeocentric: 6356752.314
6test 13 Rlat: 6378137.000
6test 14 Rlat: 6367444.657
6test 15 Rlat: 6356752.314
6test 16 circle4.radius: 6378137.000
6test 17 circle4.radius: 4517590.879
6test 18 circle4.radius: 0.000
6test 19 distance2: 156903.472, 45.192
6test 20 distance2: 1569034.719, 45.192
6test 21 distance2: 1400742.676, 37.563
6test 22 distance2: 1179164.848, 18.896
6test 23 roc2: 6335439.327, 6378137.0
6test 24 roc2: 6367381.816, 6388838.29
6test 25 roc2: 6399593.626, 6399593.626
6test 26 rocBearing: 6335439.327
6test 27 rocBearing: 6378092.008
6test 28 rocBearing: 6399593.626
6test 29 rocGauss: 6356752.314
6test 30 rocGauss: 6378101.030
6test 31 rocGauss: 6399593.626
6test 32 rocMean: 6356716.465
6test 33 rocMean: 6378092.008
6test 34 rocMean: 6399593.626
6test 35 rocMeridional: 6335439.327
6test 36 rocMeridional: 6367381.816
6test 37 rocMeridional: 6399593.626
6test 38 rocPrimeVertical: 6378137.0
6test 39 rocPrimeVertical: 6388838.29
6test 40 rocPrimeVertical: 6399593.626
6testGRS80(pygeodesy.ellipsoids, 22.11.02)
6test 41 R1: 6371008.7714
6test 42 R2: 6371007.2
6test 43 R3: 6371000.8
6test 44 A: 6367449.1
6test 45 L: 10001965.7
6test 46 Rrectifying: 6367449.1
6test 47 Rgeometric: 6367435.7
6test 48 Rgeocentric: 6378137.000
6test 49 Rgeocentric: 6367489.544
6test 50 Rgeocentric: 6356752.314
6test 51 Rlat: 6378137.000
6test 52 Rlat: 6367444.657
6test 53 Rlat: 6356752.314
6test 54 circle4.radius: 6378137.000
6test 55 circle4.radius: 4517590.879
6test 56 circle4.radius: 0.000
6test 57 distance2: 156903.472, 45.192
6test 58 distance2: 1569034.719, 45.192
6test 59 distance2: 1400742.676, 37.563
6test 60 distance2: 1179164.848, 18.896
6test 61 roc2: 6335439.327, 6378137.0
6test 62 roc2: 6367381.816, 6388838.29
6test 63 roc2: 6399593.626, 6399593.626
6test 64 rocBearing: 6335439.327
6test 65 rocBearing: 6378092.008
6test 66 rocBearing: 6399593.626
6test 67 rocGauss: 6356752.314
6test 68 rocGauss: 6378101.030
6test 69 rocGauss: 6399593.626
6test 70 rocMean: 6356716.465
6test 71 rocMean: 6378092.008
6test 72 rocMean: 6399593.626
6test 73 rocMeridional: 6335439.327
6test 74 rocMeridional: 6367381.816
6test 75 rocMeridional: 6399593.626
6test 76 rocPrimeVertical: 6378137.0
6test 77 rocPrimeVertical: 6388838.29
6test 78 rocPrimeVertical: 6399593.626
6test<function Ellipsoid.__init__ at 0x101428160>(pygeodesy.ellipsoids, 22.11.02)
6test 79 a, b, None: 2.0
6test 80 a, None, f_: 500.0
6testWGS84(pygeodesy.ellipsoids, 22.11.02)
6test 81 WGS84.copy: True
6test 82 WGS84.copy: True
6test 83 WGS84.find: None
6test 84 WGS84.a2_b: 6399593.625758
6test 85 WGS84.b2_a: 6335439.327293
6test 86 WGS84.R2: 6371007.180918
6test 87 WGS84.c2: 40589732499315
6test 88 WGS84.es: 0.081819
6test 89 WGS84.f2: 0.003364
6test 90 WGS84.m2degrees: 90
6test 91 WGS84.degrees2m: 10018754
6test 92 WGS84.area: 5.101e+14
6test 93 WGS84.volume: 1.083e+21
6test 94 WGS84.ecef: <class 'pygeodesy.ecef.EcefKarney'>
6test 95 WGS84.ecef: WGS84
6test 96 WGS84: name='WGS84', a=6378137, b=6356752.3142451793, f_=298.257223563, f=0.0033528107, f2=0.0033640898, n=0.0016792204, e=0.0818191908, e2=0.00669438, e22=0.0067394967, e32=0.0033584313, A=6367449.1458234144, L=10001965.7293127216, R1=6371008.7714150595, R2=6371007.1809184738, R3=6371000.7900091587, Rbiaxial=6367453.6345163295, Rtriaxial=6372797.5559594007
6test 97 WGS84.: A=6367449.1458234144, e=0.0818191908, f_=298.2572235630, n=0.0016792204 (1.5612511284e-17)
6testKruegers(pygeodesy.ellipsoids, 22.11.02)
6test 98 WGS84.AlphaKs: 8.377318206245e-04, 7.608527773572e-07, 1.197645503242e-09, 2.429170680397e-12, 5.711818370428e-15, 1.47999793138e-17, 4.107624109371e-20, 1.210785038923e-22
6test 99 WGS84.BetaKs : 8.377321640579e-04, 5.90587015222e-08, 1.673482665344e-10, 2.164798110491e-13, 3.787930968626e-16, 7.236769021816e-19, 1.493479824778e-21, 3.259522545838e-24
6test 100 WGS84.AlphaKs: 8.377318206245e-04, 7.608527773572e-07, 1.197645503329e-09, 2.429170607201e-12, 5.711757677866e-15, 1.491117731258e-17
6test 101 WGS84.BetaKs : 8.377321640579e-04, 5.90587015222e-08, 1.673482665284e-10, 2.164798040063e-13, 3.787978046169e-16, 7.248748890694e-19
6test 102 WGS84.AlphaKs: 8.377318206304e-04, 7.608527714249e-07, 1.197638001561e-09, 2.443376194522e-12
6test 103 WGS84.BetaKs : 8.377321640601e-04, 5.905869567934e-08, 1.673488880355e-10, 2.167737763022e-13
6testProlate(pygeodesy.ellipsoids, 22.11.02)
6test 104 a [Radius_]: 6356752.314
6test 105 b [Radius_]: 6378137.000
6test 106 n [Float]: -0.002
6test 107 R1 [Radius]: 6363880.543
6test 108 R2 [Radius]: 6363878.941
6test 109 R3 [Radius]: 6363872.564
6test 110 Rbiaxial [Radius]: 6367453.635
6test 111 Rgeometric [Radius]: 6367435.680
6test 112 c2 [Meter2]: 40498955180263.188
6test 113 area [Meter2]: 508924880289508.500
6test 114 volume [Meter3]: 1079575530747445379072.000
6testAuxiliaryLats WGS84(pygeodesy.ellipsoids, 22.11.02)
6test 115 isEllipsoidal: True
6test 116 isOblate: True
6test 117 isProlate: False
6test 118 isSpherical: False
6test 119 auxAuthalic(-90): -90.0
6test 120 name: auxAuthalic
6test 121 inverse: lat (-90.0)
6test 122 auxConformal(-90): -90.0
6test 123 name: auxConformal
6test 124 inverse: lat (-90.0)
6test 125 auxGeocentric(-90): -90.0
6test 126 name: auxGeocentric
6test 127 inverse: lat (-90.0)
6test 128 auxIsometric(-90): -2178.287790219
6test 129 name: auxIsometric
6test 130 inverse: lat (-90.0)
6test 131 auxParametric(-90): -90.0
6test 132 name: auxParametric
6test 133 inverse: lat (-90.0)
6test 134 auxRectifying(-90): -90.0
6test 135 name: auxRectifying
6test 136 inverse: lat (-90.0)
6test 137 auxAuthalic(-60): -59.88878557
6test 138 name: auxAuthalic
6test 139 inverse: lat (-60.0)
6test 140 auxConformal(-60): -59.833216158
6test 141 name: auxConformal
6test 142 inverse: lat (-60.0)
6test 143 auxGeocentric(-60): -59.83307615
6test 144 name: auxGeocentric
6test 145 inverse: lat (-60.0)
6test 146 auxIsometric(-60): -75.123399226
6test 147 name: auxIsometric
6test 148 inverse: lat (-60.0)
6test 149 auxParametric(-60): -59.916607797
6test 150 name: auxParametric
6test 151 inverse: lat (-60.0)
6test 152 auxRectifying(-60): -59.874885594
6test 153 name: auxRectifying
6test 154 inverse: lat (-60.0)
6test 155 auxAuthalic(-30): -29.888997034
6test 156 name: auxAuthalic
6test 157 inverse: lat (-30.0)
6test 158 auxConformal(-30): -29.833682042
6test 159 name: auxConformal
6test 160 inverse: lat (-30.0)
6test 161 auxGeocentric(-30): -29.83363581
6test 162 name: auxGeocentric
6test 163 inverse: lat (-30.0)
6test 164 auxIsometric(-30): -31.281036776
6test 165 name: auxIsometric
6test 166 inverse: lat (-30.0)
6test 167 auxParametric(-30): -29.916747713
6test 168 name: auxParametric
6test 169 inverse: lat (-30.0)
6test 170 auxRectifying(-30): -29.875147936
6test 171 name: auxRectifying
6test 172 inverse: lat (-30.0)
6test 173 auxAuthalic(0): 0.0
6test 174 name: auxAuthalic
6test 175 inverse: lat (0.0)
6test 176 auxConformal(0): 0.0
6test 177 name: auxConformal
6test 178 inverse: lat (0.0)
6test 179 auxGeocentric(0): 0.0
6test 180 name: auxGeocentric
6test 181 inverse: lat (0.0)
6test 182 auxIsometric(0): 0.0
6test 183 name: auxIsometric
6test 184 inverse: lat (0.0)
6test 185 auxParametric(0): 0.0
6test 186 name: auxParametric
6test 187 inverse: lat (0.0)
6test 188 auxRectifying(0): 0.0
6test 189 name: auxRectifying
6test 190 inverse: lat (0.0)
6test 191 auxAuthalic(30): 29.888997034
6test 192 name: auxAuthalic
6test 193 inverse: lat (30.0)
6test 194 auxConformal(30): 29.833682042
6test 195 name: auxConformal
6test 196 inverse: lat (30.0)
6test 197 auxGeocentric(30): 29.83363581
6test 198 name: auxGeocentric
6test 199 inverse: lat (30.0)
6test 200 auxIsometric(30): 31.281036776
6test 201 name: auxIsometric
6test 202 inverse: lat (30.0)
6test 203 auxParametric(30): 29.916747713
6test 204 name: auxParametric
6test 205 inverse: lat (30.0)
6test 206 auxRectifying(30): 29.875147936
6test 207 name: auxRectifying
6test 208 inverse: lat (30.0)
6test 209 auxAuthalic(60): 59.88878557
6test 210 name: auxAuthalic
6test 211 inverse: lat (60.0)
6test 212 auxConformal(60): 59.833216158
6test 213 name: auxConformal
6test 214 inverse: lat (60.0)
6test 215 auxGeocentric(60): 59.83307615
6test 216 name: auxGeocentric
6test 217 inverse: lat (60.0)
6test 218 auxIsometric(60): 75.123399226
6test 219 name: auxIsometric
6test 220 inverse: lat (60.0)
6test 221 auxParametric(60): 59.916607797
6test 222 name: auxParametric
6test 223 inverse: lat (60.0)
6test 224 auxRectifying(60): 59.874885594
6test 225 name: auxRectifying
6test 226 inverse: lat (60.0)
6test 227 auxAuthalic(90): 90.0
6test 228 name: auxAuthalic
6test 229 inverse: lat (90.0)
6test 230 auxConformal(90): 90.0
6test 231 name: auxConformal
6test 232 inverse: lat (90.0)
6test 233 auxGeocentric(90): 90.0
6test 234 name: auxGeocentric
6test 235 inverse: lat (90.0)
6test 236 auxIsometric(90): 2178.287790219
6test 237 name: auxIsometric
6test 238 inverse: lat (90.0)
6test 239 auxParametric(90): 90.0
6test 240 name: auxParametric
6test 241 inverse: lat (90.0)
6test 242 auxRectifying(90): 90.0
6test 243 name: auxRectifying
6test 244 inverse: lat (90.0)
6testAuxiliaryLats Prolate(pygeodesy.ellipsoids, 22.11.02)
6test 245 isEllipsoidal: True
6test 246 isOblate: False
6test 247 isProlate: True
6test 248 isSpherical: False
6test 249 auxAuthalic(-90): -90.0
6test 250 name: auxAuthalic
6test 251 inverse: lat (-90.0)
6test 252 auxConformal(-90): -90.0
6test 253 name: auxConformal
6test 254 inverse: lat (-90.0)
6test 255 auxGeocentric(-90): -90.0
6test 256 name: auxGeocentric
6test 257 inverse: lat (-90.0)
6test 258 auxIsometric(-90): -2179.057490028
6test 259 name: auxIsometric
6test 260 inverse: lat (-90.0)
6test 261 auxParametric(-90): -90.0
6test 262 name: auxParametric
6test 263 inverse: lat (-90.0)
6test 264 auxRectifying(-90): -90.0
6test 265 name: auxRectifying
6test 266 inverse: lat (-90.0)
6test 267 auxAuthalic(-60): -60.110978127
6test 268 name: auxAuthalic
6test 269 inverse: lat (-60.0)
6test 270 auxConformal(-60): -60.16650401
6test 271 name: auxConformal
6test 272 inverse: lat (-60.0)
6test 273 auxGeocentric(-60): -60.16636419
6test 274 name: auxGeocentric
6test 275 inverse: lat (-60.0)
6test 276 auxIsometric(-60): -75.789978689
6test 277 name: auxIsometric
6test 278 inverse: lat (-60.0)
6test 279 auxParametric(-60): -60.083252287
6test 280 name: auxParametric
6test 281 inverse: lat (-60.0)
6test 282 auxRectifying(-60): -60.041947439
6test 283 name: auxRectifying
6test 284 inverse: lat (-60.0)
6test 285 auxAuthalic(-30): -30.11118952
6test 286 name: auxAuthalic
6test 287 inverse: lat (-30.0)
6test 288 auxConformal(-30): -30.166970897
6test 289 name: auxConformal
6test 290 inverse: lat (-30.0)
6test 291 auxGeocentric(-30): -30.16692385
6test 292 name: auxGeocentric
6test 293 inverse: lat (-30.0)
6test 294 auxIsometric(-30): -31.665887766
6test 295 name: auxIsometric
6test 296 inverse: lat (-30.0)
6test 297 auxParametric(-30): -30.083392203
6test 298 name: auxParametric
6test 299 inverse: lat (-30.0)
6test 300 auxRectifying(-30): -30.041931117
6test 301 name: auxRectifying
6test 302 inverse: lat (-30.0)
6test 303 auxAuthalic(0): 0.0
6test 304 name: auxAuthalic
6test 305 inverse: lat (0.0)
6test 306 auxConformal(0): 0.0
6test 307 name: auxConformal
6test 308 inverse: lat (0.0)
6test 309 auxGeocentric(0): 0.0
6test 310 name: auxGeocentric
6test 311 inverse: lat (0.0)
6test 312 auxIsometric(0): 0.0
6test 313 name: auxIsometric
6test 314 inverse: lat (0.0)
6test 315 auxParametric(0): 0.0
6test 316 name: auxParametric
6test 317 inverse: lat (0.0)
6test 318 auxRectifying(0): 0.0
6test 319 name: auxRectifying
6test 320 inverse: lat (0.0)
6test 321 auxAuthalic(30): 30.11118952
6test 322 name: auxAuthalic
6test 323 inverse: lat (30.0)
6test 324 auxConformal(30): 30.166970897
6test 325 name: auxConformal
6test 326 inverse: lat (30.0)
6test 327 auxGeocentric(30): 30.16692385
6test 328 name: auxGeocentric
6test 329 inverse: lat (30.0)
6test 330 auxIsometric(30): 31.665887766
6test 331 name: auxIsometric
6test 332 inverse: lat (30.0)
6test 333 auxParametric(30): 30.083392203
6test 334 name: auxParametric
6test 335 inverse: lat (30.0)
6test 336 auxRectifying(30): 30.041931117
6test 337 name: auxRectifying
6test 338 inverse: lat (30.0)
6test 339 auxAuthalic(60): 60.110978127
6test 340 name: auxAuthalic
6test 341 inverse: lat (60.0)
6test 342 auxConformal(60): 60.16650401
6test 343 name: auxConformal
6test 344 inverse: lat (60.0)
6test 345 auxGeocentric(60): 60.16636419
6test 346 name: auxGeocentric
6test 347 inverse: lat (60.0)
6test 348 auxIsometric(60): 75.789978689
6test 349 name: auxIsometric
6test 350 inverse: lat (60.0)
6test 351 auxParametric(60): 60.083252287
6test 352 name: auxParametric
6test 353 inverse: lat (60.0)
6test 354 auxRectifying(60): 60.041947439
6test 355 name: auxRectifying
6test 356 inverse: lat (60.0)
6test 357 auxAuthalic(90): 90.0
6test 358 name: auxAuthalic
6test 359 inverse: lat (90.0)
6test 360 auxConformal(90): 90.0
6test 361 name: auxConformal
6test 362 inverse: lat (90.0)
6test 363 auxGeocentric(90): 90.0
6test 364 name: auxGeocentric
6test 365 inverse: lat (90.0)
6test 366 auxIsometric(90): 2179.057490028
6test 367 name: auxIsometric
6test 368 inverse: lat (90.0)
6test 369 auxParametric(90): 90.0
6test 370 name: auxParametric
6test 371 inverse: lat (90.0)
6test 372 auxRectifying(90): 90.0
6test 373 name: auxRectifying
6test 374 inverse: lat (90.0)
6testAuxiliaryLats Sphere(pygeodesy.ellipsoids, 22.11.02)
6test 375 isEllipsoidal: False
6test 376 isOblate: False
6test 377 isProlate: False
6test 378 isSpherical: True
6test 379 auxAuthalic(-90): -90.0
6test 380 name: auxAuthalic
6test 381 inverse: lat (-90.0)
6test 382 auxConformal(-90): -90.0
6test 383 name: auxConformal
6test 384 inverse: lat (-90.0)
6test 385 auxGeocentric(-90): -90.0
6test 386 name: auxGeocentric
6test 387 inverse: lat (-90.0)
6test 388 auxIsometric(-90): -90.0
6test 389 name: auxIsometric
6test 390 inverse: lat (-90.0)
6test 391 auxParametric(-90): -90.0
6test 392 name: auxParametric
6test 393 inverse: lat (-90.0)
6test 394 auxRectifying(-90): -90.0
6test 395 name: auxRectifying
6test 396 inverse: lat (-90.0)
6test 397 auxAuthalic(-60): -60.0
6test 398 name: auxAuthalic
6test 399 inverse: lat (-60.0)
6test 400 auxConformal(-60): -60.0
6test 401 name: auxConformal
6test 402 inverse: lat (-60.0)
6test 403 auxGeocentric(-60): -60.0
6test 404 name: auxGeocentric
6test 405 inverse: lat (-60.0)
6test 406 auxIsometric(-60): -60.0
6test 407 name: auxIsometric
6test 408 inverse: lat (-60.0)
6test 409 auxParametric(-60): -60.0
6test 410 name: auxParametric
6test 411 inverse: lat (-60.0)
6test 412 auxRectifying(-60): -60.0
6test 413 name: auxRectifying
6test 414 inverse: lat (-60.0)
6test 415 auxAuthalic(-30): -30.0
6test 416 name: auxAuthalic
6test 417 inverse: lat (-30.0)
6test 418 auxConformal(-30): -30.0
6test 419 name: auxConformal
6test 420 inverse: lat (-30.0)
6test 421 auxGeocentric(-30): -30.0
6test 422 name: auxGeocentric
6test 423 inverse: lat (-30.0)
6test 424 auxIsometric(-30): -30.0
6test 425 name: auxIsometric
6test 426 inverse: lat (-30.0)
6test 427 auxParametric(-30): -30.0
6test 428 name: auxParametric
6test 429 inverse: lat (-30.0)
6test 430 auxRectifying(-30): -30.0
6test 431 name: auxRectifying
6test 432 inverse: lat (-30.0)
6test 433 auxAuthalic(0): 0.0
6test 434 name: auxAuthalic
6test 435 inverse: lat (0.0)
6test 436 auxConformal(0): 0.0
6test 437 name: auxConformal
6test 438 inverse: lat (0.0)
6test 439 auxGeocentric(0): 0.0
6test 440 name: auxGeocentric
6test 441 inverse: lat (0.0)
6test 442 auxIsometric(0): 0.0
6test 443 name: auxIsometric
6test 444 inverse: lat (0.0)
6test 445 auxParametric(0): 0.0
6test 446 name: auxParametric
6test 447 inverse: lat (0.0)
6test 448 auxRectifying(0): 0.0
6test 449 name: auxRectifying
6test 450 inverse: lat (0.0)
6test 451 auxAuthalic(30): 30.0
6test 452 name: auxAuthalic
6test 453 inverse: lat (30.0)
6test 454 auxConformal(30): 30.0
6test 455 name: auxConformal
6test 456 inverse: lat (30.0)
6test 457 auxGeocentric(30): 30.0
6test 458 name: auxGeocentric
6test 459 inverse: lat (30.0)
6test 460 auxIsometric(30): 30.0
6test 461 name: auxIsometric
6test 462 inverse: lat (30.0)
6test 463 auxParametric(30): 30.0
6test 464 name: auxParametric
6test 465 inverse: lat (30.0)
6test 466 auxRectifying(30): 30.0
6test 467 name: auxRectifying
6test 468 inverse: lat (30.0)
6test 469 auxAuthalic(60): 60.0
6test 470 name: auxAuthalic
6test 471 inverse: lat (60.0)
6test 472 auxConformal(60): 60.0
6test 473 name: auxConformal
6test 474 inverse: lat (60.0)
6test 475 auxGeocentric(60): 60.0
6test 476 name: auxGeocentric
6test 477 inverse: lat (60.0)
6test 478 auxIsometric(60): 60.0
6test 479 name: auxIsometric
6test 480 inverse: lat (60.0)
6test 481 auxParametric(60): 60.0
6test 482 name: auxParametric
6test 483 inverse: lat (60.0)
6test 484 auxRectifying(60): 60.0
6test 485 name: auxRectifying
6test 486 inverse: lat (60.0)
6test 487 auxAuthalic(90): 90.0
6test 488 name: auxAuthalic
6test 489 inverse: lat (90.0)
6test 490 auxConformal(90): 90.0
6test 491 name: auxConformal
6test 492 inverse: lat (90.0)
6test 493 auxGeocentric(90): 90.0
6test 494 name: auxGeocentric
6test 495 inverse: lat (90.0)
6test 496 auxIsometric(90): 90.0
6test 497 name: auxIsometric
6test 498 inverse: lat (90.0)
6test 499 auxParametric(90): 90.0
6test 500 name: auxParametric
6test 501 inverse: lat (90.0)
6test 502 auxRectifying(90): 90.0
6test 503 name: auxRectifying
6test 504 inverse: lat (90.0)
6testFlattenings(pygeodesy.ellipsoids, 22.11.02)
6test 505 _TOL: 1.4901161193847657e-09
6test 506 Airy1830.f_ - 1 / .f: 0.0
6test 507 Airy1830.f - 1 / .f_: 0.0
6test 508 AiryModified.f_ - 1 / .f: 0.0
6test 509 AiryModified.f - 1 / .f_: 0.0
6test 510 ATS1977.f_ - 1 / .f: 0.0
6test 511 ATS1977.f - 1 / .f_: 0.0
6test 512 Australia1966.f_ - 1 / .f: 0.0
6test 513 Australia1966.f - 1 / .f_: 0.0
6test 514 Bessel1841.f_ - 1 / .f: -3.6334313335828483e-10
6test 515 Bessel1841.f - 1 / .f_: -4.060120295523717e-15
6test 516 BesselModified.f_ - 1 / .f: 0.0
6test 517 BesselModified.f - 1 / .f_: 0.0
6test 518 CGCS2000.f_ - 1 / .f: 0.0
6test 519 CGCS2000.f - 1 / .f_: 0.0
6test 520 Clarke1866.f_ - 1 / .f: 1.0180656317970715e-10
6test 521 Clarke1866.f - 1 / .f_: 1.1700709845463564e-15
6test 522 Clarke1880.f_ - 1 / .f: -6.275513442233205e-11
6test 523 Clarke1880.f - 1 / .f_: -7.28583859910259e-16
6test 524 Clarke1880IGN.f_ - 1 / .f: 3.73063357983483e-10
6test 525 Clarke1880IGN.f - 1 / .f_: 4.3320382003830815e-15
6test 526 Clarke1880Mod.f_ - 1 / .f: 6.866684998385608e-11
6test 527 Clarke1880Mod.f - 1 / .f_: 7.971054372113429e-16
6test 528 CPM1799.f_ - 1 / .f: -4.774847184307873e-11
6test 529 CPM1799.f - 1 / .f_: -4.2674197509029455e-16
6test 530 Delambre1810.f_ - 1 / .f: 6.008349373587407e-11
6test 531 Delambre1810.f - 1 / .f_: 6.192962809237201e-16
6test 532 Engelis1985.f_ - 1 / .f: 3.171862772433087e-11
6test 533 Engelis1985.f - 1 / .f_: 3.5691935518222806e-16
6test 534 Everest1969.f_ - 1 / .f: -1.0334133548894897e-10
6test 535 Everest1969.f - 1 / .f_: -1.1418817280617333e-15
6test 536 Everest1975.f_ - 1 / .f: 2.1088908397359774e-11
6test 537 Everest1975.f - 1 / .f_: 2.3288662664988635e-16
6test 538 Fisher1968.f_ - 1 / .f: 6.394884621840902e-11
6test 539 Fisher1968.f - 1 / .f_: 7.186091999233923e-16
6test 540 GEM10C.f_ - 1 / .f: 3.501554601825774e-11
6test 541 GEM10C.f - 1 / .f_: 3.937822290467352e-16
6test 542 GRS67.f_ - 1 / .f: 0.0
6test 543 GRS67.f - 1 / .f_: 0.0
6test 544 GRS80.f_ - 1 / .f: 1.2579448593896814e-10
6test 545 GRS80.f - 1 / .f_: 1.4137996329210978e-15
6test 546 Helmert1906.f_ - 1 / .f: 1.944044925039634e-11
6test 547 Helmert1906.f - 1 / .f_: 2.185751579730777e-16
6test 548 IAU76.f_ - 1 / .f: 0.0
6test 549 IAU76.f - 1 / .f_: 0.0
6test 550 IERS1989.f_ - 1 / .f: 0.0
6test 551 IERS1989.f - 1 / .f_: 0.0
6test 552 IERS1992TOPEX.f_ - 1 / .f: -4.746425474877469e-11
6test 553 IERS1992TOPEX.f - 1 / .f_: -5.334274688628682e-16
6test 554 IERS2003.f_ - 1 / .f: -3.6777692002942786e-11
6test 555 IERS2003.f - 1 / .f_: -4.137315490204685e-16
6test 556 Intl1924.f_ - 1 / .f: 0.0
6test 557 Intl1924.f - 1 / .f_: 0.0
6test 558 Intl1967.f_ - 1 / .f: -1.3528733688872308e-11
6test 559 Intl1967.f - 1 / .f_: -1.5222198501696482e-16
6test 560 Krassovski1940.f_ - 1 / .f: -3.8767211663071066e-11
6test 561 Krassovski1940.f - 1 / .f_: -4.358492733391728e-16
6test 562 Krassowsky1940.f_ - 1 / .f: -3.8767211663071066e-11
6test 563 Krassowsky1940.f - 1 / .f_: -4.358492733391728e-16
6test 564 Maupertuis1738.f_ - 1 / .f: 1.5347723092418164e-11
6test 565 Maupertuis1738.f - 1 / .f_: 4.206704429243757e-16
6test 566 Mercury1960.f_ - 1 / .f: -4.803268893738277e-11
6test 567 Mercury1960.f - 1 / .f_: -5.39499001028787e-16
6test 568 Mercury1968Mod.f_ - 1 / .f: 6.394884621840902e-11
6test 569 Mercury1968Mod.f - 1 / .f_: 7.186091999233923e-16
6test 570 NWL1965.f_ - 1 / .f: 5.32054400537163e-11
6test 571 NWL1965.f - 1 / .f_: 5.980459183430042e-16
6test 572 OSU86F.f_ - 1 / .f: 1.460875864722766e-11
6test 573 OSU86F.f - 1 / .f_: 1.6436504934880247e-16
6test 574 OSU91A.f_ - 1 / .f: -2.2737367544323206e-12
6test 575 OSU91A.f - 1 / .f_: -2.5587171270657905e-17
6test 576 Plessis1817.f_ - 1 / .f: 4.2234660213580355e-11
6test 577 Plessis1817.f - 1 / .f_: 4.432218481120742e-16
6test 578 Prolate.f_ - 1 / .f: 0.0
6test 579 Prolate.f - 1 / .f_: 0.0
6test 580 PZ90.f_ - 1 / .f: 0.0
6test 581 PZ90.f - 1 / .f_: 0.0
6test 582 SGS85.f_ - 1 / .f: 1.659827830735594e-11
6test 583 SGS85.f - 1 / .f_: 1.8691645453650096e-16
6test 584 SoAmerican1969.f_ - 1 / .f: -5.6843418860808015e-11
6test 585 SoAmerican1969.f - 1 / .f_: -6.388119200284592e-16
6test 586 Struve1860.f_ - 1 / .f: 1.9042545318370685e-11
6test 587 Struve1860.f - 1 / .f_: 2.194425197110661e-16
6test 588 WGS60.f_ - 1 / .f: -5.076117304270156e-11
6test 589 WGS60.f - 1 / .f_: -5.702903427273753e-16
6test 590 WGS66.f_ - 1 / .f: 5.32054400537163e-11
6test 591 WGS66.f - 1 / .f_: 5.980459183430042e-16
6test 592 WGS72.f_ - 1 / .f: 0.0
6test 593 WGS72.f - 1 / .f_: 0.0
6test 594 WGS84.f_ - 1 / .f: 0.0
6test 595 WGS84.f - 1 / .f_: 0.0
6testEllipsoid2(pygeodesy.ellipsoids, 22.11.02)
6test 596 _2_Airy1830: a=6377563.396, b=6356256.9092373, f_=299.3249646, f=0.0033409, f2=0.003352, n=0.0016732, e=0.0816734, e2=0.0066705, e22=0.0067153, e32=0.0033464, A=6366914.6089252, L=10001126.0807165, R1=6370461.2337458, R2=6370459.6547081, R3=6370453.3099457, Rbiaxial=6366919.065224, Rtriaxial=6372243.4531769
6test 597 _2_AiryModified: a=6377340.189, b=6356034.4479385, f_=299.3249646, f=0.0033409, f2=0.003352, n=0.0016732, e=0.0816734, e2=0.0066705, e22=0.0067153, e32=0.0033464, A=6366691.7746199, L=10000776.0534082, R1=6370238.2753128, R2=6370236.6963304, R3=6370230.3517901, Rbiaxial=6366696.2307627, Rtriaxial=6372020.4323685
6test 598 _2_ATS1977: a=6378135, b=6356750.3049216, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367447.1411669, L=10001962.5804057, R1=6371006.7683072, R2=6371005.1778087, R3=6370998.7868918, Rbiaxial=6367451.6298652, Rtriaxial=6372795.5536365
6test 599 _2_Australia1966: a=6378160, b=6356774.7191953, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367471.8485323, L=10002001.3906444, R1=6371031.5730651, R2=6371029.9824858, R3=6371023.5912434, Rbiaxial=6367476.337459, Rtriaxial=6372820.4075472
6test 600 _2_Bessel1841: a=6377397.155, b=6356078.962818, f_=299.1528128, f=0.0033428, f2=0.003354, n=0.0016742, e=0.0816968, e2=0.0066744, e22=0.0067192, e32=0.0033484, A=6366742.5202339, L=10000855.7644324, R1=6370291.0909393, R2=6370289.5101266, R3=6370283.1582152, Rbiaxial=6366746.9815511, Rtriaxial=6372074.2933401
6test 601 _2_BesselModified: a=6377492.018, b=6356173.5087127, f_=299.1528128, f=0.0033428, f2=0.003354, n=0.0016742, e=0.0816968, e2=0.0066744, e22=0.0067192, e32=0.0033484, A=6366837.2247477, L=10001004.5259346, R1=6370385.8482376, R2=6370384.2674013, R3=6370377.9153955, Rbiaxial=6366841.6861312, Rtriaxial=6372169.0771633
6test 602 _2_CGCS2000: a=6378137, b=6356752.3141404, f_=298.2572221, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.145771, L=10001965.7292305, R1=6371008.7713801, R2=6371007.1808835, R3=6371000.7899741, Rbiaxial=6367453.634464, Rtriaxial=6372797.5559333
6test 603 _2_Clarke1866: a=6378206.4, b=6356583.8, f_=294.9786982, f=0.0033901, f2=0.0034016, n=0.0016979, e=0.0822719, e2=0.0067687, e22=0.0068148, e32=0.0033958, A=6367399.6891698, L=10001888.0429829, R1=6370998.8666667, R2=6370997.240633, R3=6370990.7065988, Rbiaxial=6367404.2783313, Rtriaxial=6372807.6279107
6test 604 _2_Clarke1880: a=6378249.145, b=6356514.8695498, f_=293.465, f=0.0034076, f2=0.0034192, n=0.0017067, e=0.0824834, e2=0.0068035, e22=0.0068501, e32=0.0034134, A=6367386.6439805, L=10001867.5516475, R1=6371004.3865166, R2=6371002.7436696, R3=6370996.1419165, Rbiaxial=6367391.2806777, Rtriaxial=6372822.5252608
6test 605 _2_Clarke1880IGN: a=6378249.2, b=6356515, f_=293.4660213, f=0.0034075, f2=0.0034192, n=0.0017067, e=0.0824833, e2=0.0068035, e22=0.0068501, e32=0.0034134, A=6367386.7366734, L=10001867.6972491, R1=6371004.4666667, R2=6371002.8238311, R3=6370996.2221239, Rbiaxial=6367391.3733383, Rtriaxial=6372822.5990751
6test 606 _2_Clarke1880Mod: a=6378249.145, b=6356514.9663955, f_=293.4663077, f=0.0034075, f2=0.0034192, n=0.0017067, e=0.0824832, e2=0.0068035, e22=0.0068501, e32=0.0034134, A=6367386.692362, L=10001867.627645, R1=6371004.4187985, R2=6371002.7759662, R3=6370996.174272, Rbiaxial=6367391.3290178, Rtriaxial=6372822.5494103
6test 607 _2_CPM1799: a=6375738.7, b=6356671.9255749, f_=334.39, f=0.0029905, f2=0.0029995, n=0.0014975, e=0.0772793, e2=0.0059721, e22=0.006008, e32=0.002995, A=6366208.8818478, L=10000017.5272156, R1=6369383.108525, R2=6369381.8434158, R3=6369376.7624702, Rbiaxial=6366212.4509032, Rtriaxial=6370977.3559758
6test 608 _2_Delambre1810: a=6376428, b=6355957.9261637, f_=311.5, f=0.0032103, f2=0.0032206, n=0.0016077, e=0.080064, e2=0.0064102, e22=0.0064516, e32=0.0032154, A=6366197.0768433, L=9999998.9839579, R1=6369604.6420546, R2=6369603.1841975, R3=6369597.3273907, Rbiaxial=6366201.1905982, Rtriaxial=6371316.6472228
6test 609 _2_Engelis1985: a=6378136.05, b=6356751.3227215, f_=298.2566, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818193, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1750797, L=10001964.2044721, R1=6371007.8075738, R2=6371006.2170709, R3=6370999.8261357, Rbiaxial=6367452.6637907, Rtriaxial=6372796.5956056
6test 610 _2_Everest1969: a=6377295.664, b=6356094.667915, f_=300.8017, f=0.0033244, f2=0.0033355, n=0.001665, e=0.081473, e2=0.0066378, e22=0.0066822, e32=0.00333, A=6366699.578395, L=10000788.3115495, R1=6370228.665305, R2=6370227.1017854, R3=6370220.8195162, Rbiaxial=6366703.9908249, Rtriaxial=6372002.028125
6test 611 _2_Everest1975: a=6377299.151, b=6356098.1451201, f_=300.8017255, f=0.0033244, f2=0.0033355, n=0.001665, e=0.081473, e2=0.0066378, e22=0.0066822, e32=0.00333, A=6366703.0604992, L=10000793.781226, R1=6370232.14904, R2=6370230.5855198, R3=6370224.3032483, Rbiaxial=6366707.4729308, Rtriaxial=6372005.5126788
6test 612 _2_Fisher1968: a=6378150, b=6356768.3372444, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367463.6560438, L=10001988.5219136, R1=6371022.7790815, R2=6371021.1890374, R3=6371014.7999503, Rbiaxial=6367468.1434575, Rtriaxial=6372811.3097928
6test 613 _2_GEM10C: a=6378137, b=6356752.3142478, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.1458247, L=10001965.7293148, R1=6371008.7714159, R2=6371007.1809194, R3=6371000.79001, Rbiaxial=6367453.6345177, Rtriaxial=6372797.5559601
6test 614 _2_GPES: a=6378135, b=6378135, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6378135, L=10018751.029802, R1=6378135, R2=6378135, R3=6378135, Rbiaxial=6378135, Rtriaxial=6378135
6test 615 _2_GRS67: a=6378160, b=6356774.5160907, f_=298.2471674, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818206, e2=0.0066946, e22=0.0067397, e32=0.0033585, A=6367471.7470653, L=10002001.2312605, R1=6371031.5053636, R2=6371029.9147541, R3=6371023.5233901, Rbiaxial=6367476.2360774, Rtriaxial=6372820.3568989
6test 616 _2_GRS80: a=6378137, b=6356752.3141403, f_=298.2572221, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.145771, L=10001965.7292305, R1=6371008.7713801, R2=6371007.1808835, R3=6371000.7899741, Rbiaxial=6367453.634464, Rtriaxial=6372797.5559333
6test 617 _2_Helmert1906: a=6378200, b=6356818.1696279, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367513.5722707, L=10002066.9301395, R1=6371072.7232093, R2=6371071.1331527, R3=6371064.7440156, Rbiaxial=6367518.0597196, Rtriaxial=6372861.2679414
6test 618 _2_IAU76: a=6378140, b=6356755.2881575, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367452.1327884, L=10001970.4212264, R1=6371011.7627192, R2=6371010.1722195, R3=6371003.7812975, Rbiaxial=6367456.6214902, Rtriaxial=6372800.5494507
6test 619 _2_IERS1989: a=6378136, b=6356751.3015688, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1394912, L=10001964.1485699, R1=6371007.7671896, R2=6371006.1766909, R3=6370999.785773, Rbiaxial=6367452.6281902, Rtriaxial=6372796.5527993
6test 620 _2_IERS1992TOPEX: a=6378136.3, b=6356751.6165922, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.4469964, L=10001964.6315978, R1=6371008.0721974, R2=6371006.481701, R3=6371000.0907924, Rbiaxial=6367452.9356888, Rtriaxial=6372796.8565454
6test 621 _2_IERS2003: a=6378136.6, b=6356751.8579716, f_=298.25642, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818193, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.7177106, L=10001965.0568346, R1=6371008.3526572, R2=6371006.7621522, R3=6371000.3712088, Rbiaxial=6367453.2064274, Rtriaxial=6372797.1419269
6test 622 _2_Intl1924: a=6378388, b=6356911.9461279, f_=297, f=0.003367, f2=0.0033784, n=0.0016863, e=0.0819919, e2=0.0067227, e22=0.0067682, e32=0.0033727, A=6367654.5000576, L=10002288.2989894, R1=6371229.315376, R2=6371227.7113344, R3=6371221.2658749, Rbiaxial=6367659.0270431, Rtriaxial=6373025.7712969
6test 623 _2_Intl1967: a=6378157.5, b=6356772.2, f_=298.2496154, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066946, e22=0.0067397, e32=0.0033585, A=6367469.3389445, L=10001997.4485931, R1=6371029.0666667, R2=6371027.4760839, R3=6371021.0848275, Rbiaxial=6367473.827881, Rtriaxial=6372817.9027631
6test 624 _2_Krassovski1940: a=6378245, b=6356863.0187731, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367558.496875, L=10002137.4975429, R1=6371117.6729243, R2=6371116.0828566, R3=6371109.6936744, Rbiaxial=6367562.9843555, Rtriaxial=6372906.2302752
6test 625 _2_Krassowsky1940: a=6378245, b=6356863.0187731, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367558.496875, L=10002137.4975429, R1=6371117.6729243, R2=6371116.0828566, R3=6371109.6936744, Rbiaxial=6367562.9843555, Rtriaxial=6372906.2302752
6test 626 _2_Maupertuis1738: a=6397300, b=6363806.2827225, f_=191, f=0.0052356, f2=0.0052632, n=0.0026247, e=0.1021949, e2=0.0104438, e22=0.010554, e32=0.0052493, A=6380564.1301184, L=10022566.6984692, R1=6386135.4275742, R2=6386131.5414485, R3=6386115.8862823, Rbiaxial=6380575.1188282, Rtriaxial=6388943.032185
6test 627 _2_Mercury1960: a=6378166, b=6356784.2836071, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367479.6292364, L=10002013.6125459, R1=6371038.7612024, R2=6371037.1711543, R3=6371030.7820512, Rbiaxial=6367484.1166614, Rtriaxial=6372827.2964004
6test 628 _2_Mercury1968Mod: a=6378150, b=6356768.3372444, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367463.6560438, L=10001988.5219136, R1=6371022.7790815, R2=6371021.1890374, R3=6371014.7999503, Rbiaxial=6367468.1434575, Rtriaxial=6372811.3097928
6test 629 _2_NWL1965: a=6378145, b=6356759.7694887, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367456.8736684, L=10001977.8681833, R1=6371016.5898296, R2=6371014.999254, R3=6371008.6080267, Rbiaxial=6367461.3625846, Rtriaxial=6372805.4201047
6test 630 _2_OSU86F: a=6378136.2, b=6356751.5169301, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.3471653, L=10001964.4747835, R1=6371007.97231, R2=6371006.3818136, R3=6370999.9909051, Rbiaxial=6367452.8358577, Rtriaxial=6372796.7566298
6test 631 _2_OSU91A: a=6378136.3, b=6356751.6165948, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.4469977, L=10001964.6315999, R1=6371008.0721983, R2=6371006.4817019, R3=6371000.0907932, Rbiaxial=6367452.9356902, Rtriaxial=6372796.8565461
6test 632 _2_Plessis1817: a=6376523, b=6355862.9332556, f_=308.64, f=0.00324, f2=0.0032506, n=0.0016226, e=0.0804335, e2=0.0064695, e22=0.0065117, e32=0.0032453, A=6366197.1571074, L=9999999.1100364, R1=6369636.3110852, R2=6369634.8260858, R3=6369628.8599967, Rbiaxial=6366201.3475801, Rtriaxial=6371364.2639336
6test 633 _2_Prolate: a=6356752.3142452, b=6378137, f_=-297.2572236, f=-0.0033641, f2=-0.0033528, n=-0.0016792, e=0.0820944, e2=-0.0067395, e22=-0.0066944, e32=-0.0033584, A=6367449.1458234, L=10035500.52045, R1=6363880.5428301, R2=6363878.9413583, R3=6363872.564402, Rbiaxial=6367453.6345163, Rtriaxial=6362105.2243883
6test 634 _2_PZ90: a=6378136, b=6356751.3617457, f_=298.2578393, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818191, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1695544, L=10001964.195793, R1=6371007.7872486, R2=6371006.1967588, R3=6370999.8058769, Rbiaxial=6367452.6582281, Rtriaxial=6372796.5678057
6test 635 _2_SGS85: a=6378136, b=6356751.3015688, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1394912, L=10001964.1485699, R1=6371007.7671896, R2=6371006.1766909, R3=6370999.785773, Rbiaxial=6367452.6281902, Rtriaxial=6372796.5527993
6test 636 _2_SoAmerican1969: a=6378160, b=6356774.7191953, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367471.8485323, L=10002001.3906444, R1=6371031.5730651, R2=6371029.9824858, R3=6371023.5912434, Rbiaxial=6367476.337459, Rtriaxial=6372820.4075472
6test 637 _2_Sphere: a=6371008.771415, b=6371008.771415, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371008.771415, L=10007557.1761167, R1=6371008.771415, R2=6371008.771415, R3=6371008.771415, Rbiaxial=6371008.771415, Rtriaxial=6371008.771415
6test 638 _2_SphereAuthalic: a=6371000, b=6371000, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371000, L=10007543.3980103, R1=6371000, R2=6371000, R3=6371000, Rbiaxial=6371000, Rtriaxial=6371000
6test 639 _2_SpherePopular: a=6378137, b=6378137, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6378137, L=10018754.1713946, R1=6378137, R2=6378137, R3=6378137, Rbiaxial=6378137, Rtriaxial=6378137
6test 640 _2_Struve1860: a=6378298.3, b=6356657.1426696, f_=294.73, f=0.0033929, f2=0.0034045, n=0.0016994, e=0.0823065, e2=0.0067744, e22=0.0068206, e32=0.0033987, A=6367482.3183255, L=10002017.8365571, R1=6371084.5808899, R2=6371082.9520899, R3=6371076.4069142, Rbiaxial=6367486.9153079, Rtriaxial=6372894.9002945
6test 641 _2_WGS60: a=6378165, b=6356783.2869594, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367478.6309119, L=10002012.0443814, R1=6371037.7623198, R2=6371036.172272, R3=6371029.7831699, Rbiaxial=6367483.1183362, Rtriaxial=6372826.2972374
6test 642 _2_WGS66: a=6378145, b=6356759.7694887, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367456.8736684, L=10001977.8681833, R1=6371016.5898296, R2=6371014.999254, R3=6371008.6080267, Rbiaxial=6367461.3625846, Rtriaxial=6372805.4201047
6test 643 _2_WGS72: a=6378135, b=6356750.5200161, f_=298.26, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818188, e2=0.0066943, e22=0.0067394, e32=0.0033584, A=6367447.2486238, L=10001962.7491986, R1=6371006.8400054, R2=6371005.2495389, R3=6370998.8587507, Rbiaxial=6367451.7372317, Rtriaxial=6372795.6072747
6test 644 _2_WGS84: a=6378137, b=6356752.3142452, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.1458234, L=10001965.7293127, R1=6371008.7714151, R2=6371007.1809185, R3=6371000.7900092, Rbiaxial=6367453.6345163, Rtriaxial=6372797.5559594
6testa_f2Tuple(pygeodesy.ellipsoids, 22.11.02)
6test 645 a_b_Airy1830: a=6377563.396, b=6356256.9092373, f_=299.3249646, f=0.0033409, f2=0.003352, n=0.0016732, e=0.0816734, e2=0.0066705, e22=0.0067153, e32=0.0033464, A=6366914.6089252, L=10001126.0807165, R1=6370461.2337458, R2=6370459.6547081, R3=6370453.3099457, Rbiaxial=6366919.065224, Rtriaxial=6372243.4531769
6test 646 a_b_AiryModified: a=6377340.189, b=6356034.4479385, f_=299.3249646, f=0.0033409, f2=0.003352, n=0.0016732, e=0.0816734, e2=0.0066705, e22=0.0067153, e32=0.0033464, A=6366691.7746199, L=10000776.0534082, R1=6370238.2753128, R2=6370236.6963304, R3=6370230.3517901, Rbiaxial=6366696.2307627, Rtriaxial=6372020.4323685
6test 647 a_b_ATS1977: a=6378135, b=6356750.3049216, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367447.1411669, L=10001962.5804057, R1=6371006.7683072, R2=6371005.1778087, R3=6370998.7868918, Rbiaxial=6367451.6298652, Rtriaxial=6372795.5536365
6test 648 a_b_Australia1966: a=6378160, b=6356774.7191953, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367471.8485323, L=10002001.3906444, R1=6371031.5730651, R2=6371029.9824858, R3=6371023.5912434, Rbiaxial=6367476.337459, Rtriaxial=6372820.4075472
6test 649 a_b_Bessel1841: a=6377397.155, b=6356078.962818, f_=299.1528128, f=0.0033428, f2=0.003354, n=0.0016742, e=0.0816968, e2=0.0066744, e22=0.0067192, e32=0.0033484, A=6366742.5202339, L=10000855.7644324, R1=6370291.0909393, R2=6370289.5101266, R3=6370283.1582152, Rbiaxial=6366746.9815511, Rtriaxial=6372074.2933401
6test 650 a_b_BesselModified: a=6377492.018, b=6356173.5087127, f_=299.1528128, f=0.0033428, f2=0.003354, n=0.0016742, e=0.0816968, e2=0.0066744, e22=0.0067192, e32=0.0033484, A=6366837.2247477, L=10001004.5259346, R1=6370385.8482376, R2=6370384.2674013, R3=6370377.9153955, Rbiaxial=6366841.6861312, Rtriaxial=6372169.0771633
6test 651 a_b_CGCS2000: a=6378137, b=6356752.3141404, f_=298.2572221, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.145771, L=10001965.7292305, R1=6371008.7713801, R2=6371007.1808835, R3=6371000.7899741, Rbiaxial=6367453.634464, Rtriaxial=6372797.5559333
6test 652 a_b_Clarke1866: a=6378206.4, b=6356583.8, f_=294.9786982, f=0.0033901, f2=0.0034016, n=0.0016979, e=0.0822719, e2=0.0067687, e22=0.0068148, e32=0.0033958, A=6367399.6891698, L=10001888.0429829, R1=6370998.8666667, R2=6370997.240633, R3=6370990.7065988, Rbiaxial=6367404.2783313, Rtriaxial=6372807.6279107
6test 653 a_b_Clarke1880: a=6378249.145, b=6356514.8695498, f_=293.465, f=0.0034076, f2=0.0034192, n=0.0017067, e=0.0824834, e2=0.0068035, e22=0.0068501, e32=0.0034134, A=6367386.6439805, L=10001867.5516475, R1=6371004.3865166, R2=6371002.7436696, R3=6370996.1419165, Rbiaxial=6367391.2806777, Rtriaxial=6372822.5252608
6test 654 a_b_Clarke1880IGN: a=6378249.2, b=6356515, f_=293.4660213, f=0.0034075, f2=0.0034192, n=0.0017067, e=0.0824833, e2=0.0068035, e22=0.0068501, e32=0.0034134, A=6367386.7366734, L=10001867.6972491, R1=6371004.4666667, R2=6371002.8238311, R3=6370996.2221239, Rbiaxial=6367391.3733383, Rtriaxial=6372822.5990751
6test 655 a_b_Clarke1880Mod: a=6378249.145, b=6356514.9663955, f_=293.4663077, f=0.0034075, f2=0.0034192, n=0.0017067, e=0.0824832, e2=0.0068035, e22=0.0068501, e32=0.0034134, A=6367386.692362, L=10001867.627645, R1=6371004.4187985, R2=6371002.7759662, R3=6370996.174272, Rbiaxial=6367391.3290178, Rtriaxial=6372822.5494103
6test 656 a_b_CPM1799: a=6375738.7, b=6356671.9255749, f_=334.39, f=0.0029905, f2=0.0029995, n=0.0014975, e=0.0772793, e2=0.0059721, e22=0.006008, e32=0.002995, A=6366208.8818478, L=10000017.5272156, R1=6369383.108525, R2=6369381.8434158, R3=6369376.7624702, Rbiaxial=6366212.4509032, Rtriaxial=6370977.3559758
6test 657 a_b_Delambre1810: a=6376428, b=6355957.9261637, f_=311.5, f=0.0032103, f2=0.0032206, n=0.0016077, e=0.080064, e2=0.0064102, e22=0.0064516, e32=0.0032154, A=6366197.0768433, L=9999998.9839579, R1=6369604.6420546, R2=6369603.1841975, R3=6369597.3273907, Rbiaxial=6366201.1905982, Rtriaxial=6371316.6472228
6test 658 a_b_Engelis1985: a=6378136.05, b=6356751.3227215, f_=298.2566, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818193, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1750797, L=10001964.2044721, R1=6371007.8075738, R2=6371006.2170709, R3=6370999.8261357, Rbiaxial=6367452.6637907, Rtriaxial=6372796.5956056
6test 659 a_b_Everest1969: a=6377295.664, b=6356094.667915, f_=300.8017, f=0.0033244, f2=0.0033355, n=0.001665, e=0.081473, e2=0.0066378, e22=0.0066822, e32=0.00333, A=6366699.578395, L=10000788.3115495, R1=6370228.665305, R2=6370227.1017854, R3=6370220.8195162, Rbiaxial=6366703.9908249, Rtriaxial=6372002.028125
6test 660 a_b_Everest1975: a=6377299.151, b=6356098.1451201, f_=300.8017255, f=0.0033244, f2=0.0033355, n=0.001665, e=0.081473, e2=0.0066378, e22=0.0066822, e32=0.00333, A=6366703.0604992, L=10000793.781226, R1=6370232.14904, R2=6370230.5855198, R3=6370224.3032483, Rbiaxial=6366707.4729308, Rtriaxial=6372005.5126788
6test 661 a_b_Fisher1968: a=6378150, b=6356768.3372444, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367463.6560438, L=10001988.5219136, R1=6371022.7790815, R2=6371021.1890374, R3=6371014.7999503, Rbiaxial=6367468.1434575, Rtriaxial=6372811.3097928
6test 662 a_b_GEM10C: a=6378137, b=6356752.3142478, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.1458247, L=10001965.7293148, R1=6371008.7714159, R2=6371007.1809194, R3=6371000.79001, Rbiaxial=6367453.6345177, Rtriaxial=6372797.5559601
6test 663 a_b_GPES: a=6378135, b=6378135, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6378135, L=10018751.029802, R1=6378135, R2=6378135, R3=6378135, Rbiaxial=6378135, Rtriaxial=6378135
6test 664 a_b_GRS67: a=6378160, b=6356774.5160907, f_=298.2471674, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818206, e2=0.0066946, e22=0.0067397, e32=0.0033585, A=6367471.7470653, L=10002001.2312605, R1=6371031.5053636, R2=6371029.9147541, R3=6371023.5233901, Rbiaxial=6367476.2360774, Rtriaxial=6372820.3568989
6test 665 a_b_GRS80: a=6378137, b=6356752.3141403, f_=298.2572221, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.145771, L=10001965.7292305, R1=6371008.7713801, R2=6371007.1808835, R3=6371000.7899741, Rbiaxial=6367453.634464, Rtriaxial=6372797.5559333
6test 666 a_b_Helmert1906: a=6378200, b=6356818.1696279, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367513.5722707, L=10002066.9301395, R1=6371072.7232093, R2=6371071.1331527, R3=6371064.7440156, Rbiaxial=6367518.0597196, Rtriaxial=6372861.2679414
6test 667 a_b_IAU76: a=6378140, b=6356755.2881575, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367452.1327884, L=10001970.4212264, R1=6371011.7627192, R2=6371010.1722195, R3=6371003.7812975, Rbiaxial=6367456.6214902, Rtriaxial=6372800.5494507
6test 668 a_b_IERS1989: a=6378136, b=6356751.3015688, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1394912, L=10001964.1485699, R1=6371007.7671896, R2=6371006.1766909, R3=6370999.785773, Rbiaxial=6367452.6281902, Rtriaxial=6372796.5527993
6test 669 a_b_IERS1992TOPEX: a=6378136.3, b=6356751.6165922, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.4469964, L=10001964.6315978, R1=6371008.0721974, R2=6371006.481701, R3=6371000.0907924, Rbiaxial=6367452.9356888, Rtriaxial=6372796.8565454
6test 670 a_b_IERS2003: a=6378136.6, b=6356751.8579716, f_=298.25642, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818193, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.7177106, L=10001965.0568346, R1=6371008.3526572, R2=6371006.7621522, R3=6371000.3712088, Rbiaxial=6367453.2064274, Rtriaxial=6372797.1419269
6test 671 a_b_Intl1924: a=6378388, b=6356911.9461279, f_=297, f=0.003367, f2=0.0033784, n=0.0016863, e=0.0819919, e2=0.0067227, e22=0.0067682, e32=0.0033727, A=6367654.5000576, L=10002288.2989894, R1=6371229.315376, R2=6371227.7113344, R3=6371221.2658749, Rbiaxial=6367659.0270431, Rtriaxial=6373025.7712969
6test 672 a_b_Intl1967: a=6378157.5, b=6356772.2, f_=298.2496154, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066946, e22=0.0067397, e32=0.0033585, A=6367469.3389445, L=10001997.4485931, R1=6371029.0666667, R2=6371027.4760839, R3=6371021.0848275, Rbiaxial=6367473.827881, Rtriaxial=6372817.9027631
6test 673 a_b_Krassovski1940: a=6378245, b=6356863.0187731, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367558.496875, L=10002137.4975429, R1=6371117.6729243, R2=6371116.0828566, R3=6371109.6936744, Rbiaxial=6367562.9843555, Rtriaxial=6372906.2302752
6test 674 a_b_Krassowsky1940: a=6378245, b=6356863.0187731, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367558.496875, L=10002137.4975429, R1=6371117.6729243, R2=6371116.0828566, R3=6371109.6936744, Rbiaxial=6367562.9843555, Rtriaxial=6372906.2302752
6test 675 a_b_Maupertuis1738: a=6397300, b=6363806.2827225, f_=191, f=0.0052356, f2=0.0052632, n=0.0026247, e=0.1021949, e2=0.0104438, e22=0.010554, e32=0.0052493, A=6380564.1301184, L=10022566.6984692, R1=6386135.4275742, R2=6386131.5414485, R3=6386115.8862823, Rbiaxial=6380575.1188282, Rtriaxial=6388943.032185
6test 676 a_b_Mercury1960: a=6378166, b=6356784.2836071, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367479.6292364, L=10002013.6125459, R1=6371038.7612024, R2=6371037.1711543, R3=6371030.7820512, Rbiaxial=6367484.1166614, Rtriaxial=6372827.2964004
6test 677 a_b_Mercury1968Mod: a=6378150, b=6356768.3372444, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367463.6560438, L=10001988.5219136, R1=6371022.7790815, R2=6371021.1890374, R3=6371014.7999503, Rbiaxial=6367468.1434575, Rtriaxial=6372811.3097928
6test 678 a_b_NWL1965: a=6378145, b=6356759.7694887, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367456.8736684, L=10001977.8681833, R1=6371016.5898296, R2=6371014.999254, R3=6371008.6080267, Rbiaxial=6367461.3625846, Rtriaxial=6372805.4201047
6test 679 a_b_OSU86F: a=6378136.2, b=6356751.5169301, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.3471653, L=10001964.4747835, R1=6371007.97231, R2=6371006.3818136, R3=6370999.9909051, Rbiaxial=6367452.8358577, Rtriaxial=6372796.7566298
6test 680 a_b_OSU91A: a=6378136.3, b=6356751.6165948, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.4469977, L=10001964.6315999, R1=6371008.0721983, R2=6371006.4817019, R3=6371000.0907932, Rbiaxial=6367452.9356902, Rtriaxial=6372796.8565461
6test 681 a_b_Plessis1817: a=6376523, b=6355862.9332556, f_=308.64, f=0.00324, f2=0.0032506, n=0.0016226, e=0.0804335, e2=0.0064695, e22=0.0065117, e32=0.0032453, A=6366197.1571074, L=9999999.1100364, R1=6369636.3110852, R2=6369634.8260858, R3=6369628.8599967, Rbiaxial=6366201.3475801, Rtriaxial=6371364.2639336
6test 682 a_b_Prolate: a=6356752.3142452, b=6378137, f_=-297.2572236, f=-0.0033641, f2=-0.0033528, n=-0.0016792, e=0.0820944, e2=-0.0067395, e22=-0.0066944, e32=-0.0033584, A=6367449.1458234, L=10035500.52045, R1=6363880.5428301, R2=6363878.9413583, R3=6363872.564402, Rbiaxial=6367453.6345163, Rtriaxial=6362105.2243883
6test 683 a_b_PZ90: a=6378136, b=6356751.3617457, f_=298.2578393, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818191, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1695544, L=10001964.195793, R1=6371007.7872486, R2=6371006.1967588, R3=6370999.8058769, Rbiaxial=6367452.6582281, Rtriaxial=6372796.5678057
6test 684 a_b_SGS85: a=6378136, b=6356751.3015688, f_=298.257, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367448.1394912, L=10001964.1485699, R1=6371007.7671896, R2=6371006.1766909, R3=6370999.785773, Rbiaxial=6367452.6281902, Rtriaxial=6372796.5527993
6test 685 a_b_SoAmerican1969: a=6378160, b=6356774.7191953, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367471.8485323, L=10002001.3906444, R1=6371031.5730651, R2=6371029.9824858, R3=6371023.5912434, Rbiaxial=6367476.337459, Rtriaxial=6372820.4075472
6test 686 a_b_Sphere: a=6371008.771415, b=6371008.771415, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371008.771415, L=10007557.1761167, R1=6371008.771415, R2=6371008.771415, R3=6371008.771415, Rbiaxial=6371008.771415, Rtriaxial=6371008.771415
6test 687 a_b_SphereAuthalic: a=6371000, b=6371000, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371000, L=10007543.3980103, R1=6371000, R2=6371000, R3=6371000, Rbiaxial=6371000, Rtriaxial=6371000
6test 688 a_b_SpherePopular: a=6378137, b=6378137, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6378137, L=10018754.1713946, R1=6378137, R2=6378137, R3=6378137, Rbiaxial=6378137, Rtriaxial=6378137
6test 689 a_b_Struve1860: a=6378298.3, b=6356657.1426696, f_=294.73, f=0.0033929, f2=0.0034045, n=0.0016994, e=0.0823065, e2=0.0067744, e22=0.0068206, e32=0.0033987, A=6367482.3183255, L=10002017.8365571, R1=6371084.5808899, R2=6371082.9520899, R3=6371076.4069142, Rbiaxial=6367486.9153079, Rtriaxial=6372894.9002945
6test 690 a_b_WGS60: a=6378165, b=6356783.2869594, f_=298.3, f=0.0033523, f2=0.0033636, n=0.001679, e=0.0818133, e2=0.0066934, e22=0.0067385, e32=0.0033579, A=6367478.6309119, L=10002012.0443814, R1=6371037.7623198, R2=6371036.172272, R3=6371029.7831699, Rbiaxial=6367483.1183362, Rtriaxial=6372826.2972374
6test 691 a_b_WGS66: a=6378145, b=6356759.7694887, f_=298.25, f=0.0033529, f2=0.0033642, n=0.0016793, e=0.0818202, e2=0.0066945, e22=0.0067397, e32=0.0033585, A=6367456.8736684, L=10001977.8681833, R1=6371016.5898296, R2=6371014.999254, R3=6371008.6080267, Rbiaxial=6367461.3625846, Rtriaxial=6372805.4201047
6test 692 a_b_WGS72: a=6378135, b=6356750.5200161, f_=298.26, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818188, e2=0.0066943, e22=0.0067394, e32=0.0033584, A=6367447.2486238, L=10001962.7491986, R1=6371006.8400054, R2=6371005.2495389, R3=6370998.8587507, Rbiaxial=6367451.7372317, Rtriaxial=6372795.6072747
6test 693 a_b_WGS84: a=6378137, b=6356752.3142452, f_=298.2572236, f=0.0033528, f2=0.0033641, n=0.0016792, e=0.0818192, e2=0.0066944, e22=0.0067395, e32=0.0033584, A=6367449.1458234, L=10001965.7293127, R1=6371008.7714151, R2=6371007.1809185, R3=6371000.7900092, Rbiaxial=6367453.6345163, Rtriaxial=6372797.5559594
6test 694 _a_f_ellipsoid: a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594
6test 695 _toEllipsoid2: a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594
6testFunctions(pygeodesy.ellipsoids, 22.11.02)
6test 696 a_b2f_(Airy1830): 299.32496460
6test 697 a_b2f2(Airy1830): 0.00335205
6test 698 a_b2n(Airy1830): 0.00167322
6test 699 b_f2a(Airy1830): 6377563.396
6test 700 b_f_2a(Airy1830): 6377563.396
6test 701 f_2f(Airy1830): 0.00334085
6test 702 e2f(Airy1830): 0.00334085
6test 703 n2e2(Airy1830): 0.00667054
6test 704 n2f(Airy1830): 0.00334085
6test 705 a_b2f_(AiryModified): 299.32496460
6test 706 a_b2f2(AiryModified): 0.00335205
6test 707 a_b2n(AiryModified): 0.00167322
6test 708 b_f2a(AiryModified): 6377340.189
6test 709 b_f_2a(AiryModified): 6377340.189
6test 710 f_2f(AiryModified): 0.00334085
6test 711 e2f(AiryModified): 0.00334085
6test 712 n2e2(AiryModified): 0.00667054
6test 713 n2f(AiryModified): 0.00334085
6test 714 a_b2f_(ATS1977): 298.25700000
6test 715 a_b2f2(ATS1977): 0.00336409
6test 716 a_b2n(ATS1977): 0.00167922
6test 717 b_f2a(ATS1977): 6378135.000
6test 718 b_f_2a(ATS1977): 6378135.000
6test 719 f_2f(ATS1977): 0.00335281
6test 720 e2f(ATS1977): 0.00335281
6test 721 n2e2(ATS1977): 0.00669438
6test 722 n2f(ATS1977): 0.00335281
6test 723 a_b2f_(Australia1966): 298.25000000
6test 724 a_b2f2(Australia1966): 0.00336417
6test 725 a_b2n(Australia1966): 0.00167926
6test 726 b_f2a(Australia1966): 6378160.000
6test 727 b_f_2a(Australia1966): 6378160.000
6test 728 f_2f(Australia1966): 0.00335289
6test 729 e2f(Australia1966): 0.00335289
6test 730 n2e2(Australia1966): 0.00669454
6test 731 n2f(Australia1966): 0.00335289
6test 732 a_b2f_(Bessel1841): 299.15281280
6test 733 a_b2f2(Bessel1841): 0.00335398
6test 734 a_b2n(Bessel1841): 0.00167418
6test 735 b_f2a(Bessel1841): 6377397.155
6test 736 b_f_2a(Bessel1841): 6377397.155
6test 737 f_2f(Bessel1841): 0.00334277
6test 738 e2f(Bessel1841): 0.00334277
6test 739 n2e2(Bessel1841): 0.00667437
6test 740 n2f(Bessel1841): 0.00334277
6test 741 a_b2f_(BesselModified): 299.15281280
6test 742 a_b2f2(BesselModified): 0.00335398
6test 743 a_b2n(BesselModified): 0.00167418
6test 744 b_f2a(BesselModified): 6377492.018
6test 745 b_f_2a(BesselModified): 6377492.018
6test 746 f_2f(BesselModified): 0.00334277
6test 747 e2f(BesselModified): 0.00334277
6test 748 n2e2(BesselModified): 0.00667437
6test 749 n2f(BesselModified): 0.00334277
6test 750 a_b2f_(CGCS2000): 298.25722210
6test 751 a_b2f2(CGCS2000): 0.00336409
6test 752 a_b2n(CGCS2000): 0.00167922
6test 753 b_f2a(CGCS2000): 6378137.000
6test 754 b_f_2a(CGCS2000): 6378137.000
6test 755 f_2f(CGCS2000): 0.00335281
6test 756 e2f(CGCS2000): 0.00335281
6test 757 n2e2(CGCS2000): 0.00669438
6test 758 n2f(CGCS2000): 0.00335281
6test 759 a_b2f_(Clarke1866): 294.97869821
6test 760 a_b2f2(Clarke1866): 0.00340161
6test 761 a_b2n(Clarke1866): 0.00169792
6test 762 b_f2a(Clarke1866): 6378206.400
6test 763 b_f_2a(Clarke1866): 6378206.400
6test 764 f_2f(Clarke1866): 0.00339008
6test 765 e2f(Clarke1866): 0.00339008
6test 766 n2e2(Clarke1866): 0.00676866
6test 767 n2f(Clarke1866): 0.00339008
6test 768 a_b2f_(Clarke1880): 293.46500000
6test 769 a_b2f2(Clarke1880): 0.00341921
6test 770 a_b2n(Clarke1880): 0.00170669
6test 771 b_f2a(Clarke1880): 6378249.145
6test 772 b_f_2a(Clarke1880): 6378249.145
6test 773 f_2f(Clarke1880): 0.00340756
6test 774 e2f(Clarke1880): 0.00340756
6test 775 n2e2(Clarke1880): 0.00680351
6test 776 n2f(Clarke1880): 0.00340756
6test 777 a_b2f_(Clarke1880IGN): 293.46602129
6test 778 a_b2f2(Clarke1880IGN): 0.00341920
6test 779 a_b2n(Clarke1880IGN): 0.00170668
6test 780 b_f2a(Clarke1880IGN): 6378249.200
6test 781 b_f_2a(Clarke1880IGN): 6378249.200
6test 782 f_2f(Clarke1880IGN): 0.00340755
6test 783 e2f(Clarke1880IGN): 0.00340755
6test 784 n2e2(Clarke1880IGN): 0.00680349
6test 785 n2f(Clarke1880IGN): 0.00340755
6test 786 a_b2f_(Clarke1880Mod): 293.46630766
6test 787 a_b2f2(Clarke1880Mod): 0.00341920
6test 788 a_b2n(Clarke1880Mod): 0.00170668
6test 789 b_f2a(Clarke1880Mod): 6378249.145
6test 790 b_f_2a(Clarke1880Mod): 6378249.145
6test 791 f_2f(Clarke1880Mod): 0.00340755
6test 792 e2f(Clarke1880Mod): 0.00340755
6test 793 n2e2(Clarke1880Mod): 0.00680348
6test 794 n2f(Clarke1880Mod): 0.00340755
6test 795 a_b2f_(CPM1799): 334.39000000
6test 796 a_b2f2(CPM1799): 0.00299949
6test 797 a_b2n(CPM1799): 0.00149750
6test 798 b_f2a(CPM1799): 6375738.700
6test 799 b_f_2a(CPM1799): 6375738.700
6test 800 f_2f(CPM1799): 0.00299052
6test 801 e2f(CPM1799): 0.00299052
6test 802 n2e2(CPM1799): 0.00597210
6test 803 n2f(CPM1799): 0.00299052
6test 804 a_b2f_(Delambre1810): 311.50000000
6test 805 a_b2f2(Delambre1810): 0.00322061
6test 806 a_b2n(Delambre1810): 0.00160772
6test 807 b_f2a(Delambre1810): 6376428.000
6test 808 b_f_2a(Delambre1810): 6376428.000
6test 809 f_2f(Delambre1810): 0.00321027
6test 810 e2f(Delambre1810): 0.00321027
6test 811 n2e2(Delambre1810): 0.00641024
6test 812 n2f(Delambre1810): 0.00321027
6test 813 a_b2f_(Engelis1985): 298.25660000
6test 814 a_b2f2(Engelis1985): 0.00336410
6test 815 a_b2n(Engelis1985): 0.00167922
6test 816 b_f2a(Engelis1985): 6378136.050
6test 817 b_f_2a(Engelis1985): 6378136.050
6test 818 f_2f(Engelis1985): 0.00335282
6test 819 e2f(Engelis1985): 0.00335282
6test 820 n2e2(Engelis1985): 0.00669439
6test 821 n2f(Engelis1985): 0.00335282
6test 822 a_b2f_(Everest1969): 300.80170000
6test 823 a_b2f2(Everest1969): 0.00333554
6test 824 a_b2n(Everest1969): 0.00166499
6test 825 b_f2a(Everest1969): 6377295.664
6test 826 b_f_2a(Everest1969): 6377295.664
6test 827 f_2f(Everest1969): 0.00332445
6test 828 e2f(Everest1969): 0.00332445
6test 829 n2e2(Everest1969): 0.00663785
6test 830 n2f(Everest1969): 0.00332445
6test 831 a_b2f_(Everest1975): 300.80172550
6test 832 a_b2f2(Everest1975): 0.00333554
6test 833 a_b2n(Everest1975): 0.00166499
6test 834 b_f2a(Everest1975): 6377299.151
6test 835 b_f_2a(Everest1975): 6377299.151
6test 836 f_2f(Everest1975): 0.00332445
6test 837 e2f(Everest1975): 0.00332445
6test 838 n2e2(Everest1975): 0.00663785
6test 839 n2f(Everest1975): 0.00332445
6test 840 a_b2f_(Fisher1968): 298.30000000
6test 841 a_b2f2(Fisher1968): 0.00336361
6test 842 a_b2n(Fisher1968): 0.00167898
6test 843 b_f2a(Fisher1968): 6378150.000
6test 844 b_f_2a(Fisher1968): 6378150.000
6test 845 f_2f(Fisher1968): 0.00335233
6test 846 e2f(Fisher1968): 0.00335233
6test 847 n2e2(Fisher1968): 0.00669342
6test 848 n2f(Fisher1968): 0.00335233
6test 849 a_b2f_(GEM10C): 298.25722360
6test 850 a_b2f2(GEM10C): 0.00336409
6test 851 a_b2n(GEM10C): 0.00167922
6test 852 b_f2a(GEM10C): 6378137.000
6test 853 b_f_2a(GEM10C): 6378137.000
6test 854 f_2f(GEM10C): 0.00335281
6test 855 e2f(GEM10C): 0.00335281
6test 856 n2e2(GEM10C): 0.00669438
6test 857 n2f(GEM10C): 0.00335281
6test 858 a_b2f_(GPES): 0.00000000
6test 859 a_b2f2(GPES): 0.00000000
6test 860 a_b2n(GPES): 0.00000000
6test 861 b_f2a(GPES): 6378135.000
6test 862 b_f_2a(GPES): 6378135.000
6test 863 f_2f(GPES): 0.00000000
6test 864 e2f(GPES): 0.00000000
6test 865 n2e2(GPES): 0.00000000
6test 866 n2f(GPES): 0.00000000
6test 867 a_b2f_(GRS67): 298.24716743
6test 868 a_b2f2(GRS67): 0.00336420
6test 869 a_b2n(GRS67): 0.00167928
6test 870 b_f2a(GRS67): 6378160.000
6test 871 b_f_2a(GRS67): 6378160.000
6test 872 f_2f(GRS67): 0.00335292
6test 873 e2f(GRS67): 0.00335292
6test 874 n2e2(GRS67): 0.00669461
6test 875 n2f(GRS67): 0.00335292
6test 876 a_b2f_(GRS80): 298.25722210
6test 877 a_b2f2(GRS80): 0.00336409
6test 878 a_b2n(GRS80): 0.00167922
6test 879 b_f2a(GRS80): 6378137.000
6test 880 b_f_2a(GRS80): 6378137.000
6test 881 f_2f(GRS80): 0.00335281
6test 882 e2f(GRS80): 0.00335281
6test 883 n2e2(GRS80): 0.00669438
6test 884 n2f(GRS80): 0.00335281
6test 885 a_b2f_(Helmert1906): 298.30000000
6test 886 a_b2f2(Helmert1906): 0.00336361
6test 887 a_b2n(Helmert1906): 0.00167898
6test 888 b_f2a(Helmert1906): 6378200.000
6test 889 b_f_2a(Helmert1906): 6378200.000
6test 890 f_2f(Helmert1906): 0.00335233
6test 891 e2f(Helmert1906): 0.00335233
6test 892 n2e2(Helmert1906): 0.00669342
6test 893 n2f(Helmert1906): 0.00335233
6test 894 a_b2f_(IAU76): 298.25700000
6test 895 a_b2f2(IAU76): 0.00336409
6test 896 a_b2n(IAU76): 0.00167922
6test 897 b_f2a(IAU76): 6378140.000
6test 898 b_f_2a(IAU76): 6378140.000
6test 899 f_2f(IAU76): 0.00335281
6test 900 e2f(IAU76): 0.00335281
6test 901 n2e2(IAU76): 0.00669438
6test 902 n2f(IAU76): 0.00335281
6test 903 a_b2f_(IERS1989): 298.25700000
6test 904 a_b2f2(IERS1989): 0.00336409
6test 905 a_b2n(IERS1989): 0.00167922
6test 906 b_f2a(IERS1989): 6378136.000
6test 907 b_f_2a(IERS1989): 6378136.000
6test 908 f_2f(IERS1989): 0.00335281
6test 909 e2f(IERS1989): 0.00335281
6test 910 n2e2(IERS1989): 0.00669438
6test 911 n2f(IERS1989): 0.00335281
6test 912 a_b2f_(IERS1992TOPEX): 298.25722356
6test 913 a_b2f2(IERS1992TOPEX): 0.00336409
6test 914 a_b2n(IERS1992TOPEX): 0.00167922
6test 915 b_f2a(IERS1992TOPEX): 6378136.300
6test 916 b_f_2a(IERS1992TOPEX): 6378136.300
6test 917 f_2f(IERS1992TOPEX): 0.00335281
6test 918 e2f(IERS1992TOPEX): 0.00335281
6test 919 n2e2(IERS1992TOPEX): 0.00669438
6test 920 n2f(IERS1992TOPEX): 0.00335281
6test 921 a_b2f_(IERS2003): 298.25642000
6test 922 a_b2f2(IERS2003): 0.00336410
6test 923 a_b2n(IERS2003): 0.00167922
6test 924 b_f2a(IERS2003): 6378136.600
6test 925 b_f_2a(IERS2003): 6378136.600
6test 926 f_2f(IERS2003): 0.00335282
6test 927 e2f(IERS2003): 0.00335282
6test 928 n2e2(IERS2003): 0.00669440
6test 929 n2f(IERS2003): 0.00335282
6test 930 a_b2f_(Intl1924): 297.00000000
6test 931 a_b2f2(Intl1924): 0.00337838
6test 932 a_b2n(Intl1924): 0.00168634
6test 933 b_f2a(Intl1924): 6378388.000
6test 934 b_f_2a(Intl1924): 6378388.000
6test 935 f_2f(Intl1924): 0.00336700
6test 936 e2f(Intl1924): 0.00336700
6test 937 n2e2(Intl1924): 0.00672267
6test 938 n2f(Intl1924): 0.00336700
6test 939 a_b2f_(Intl1967): 298.24961539
6test 940 a_b2f2(Intl1967): 0.00336418
6test 941 a_b2n(Intl1967): 0.00167926
6test 942 b_f2a(Intl1967): 6378157.500
6test 943 b_f_2a(Intl1967): 6378157.500
6test 944 f_2f(Intl1967): 0.00335290
6test 945 e2f(Intl1967): 0.00335290
6test 946 n2e2(Intl1967): 0.00669455
6test 947 n2f(Intl1967): 0.00335290
6test 948 a_b2f_(Krassovski1940): 298.30000000
6test 949 a_b2f2(Krassovski1940): 0.00336361
6test 950 a_b2n(Krassovski1940): 0.00167898
6test 951 b_f2a(Krassovski1940): 6378245.000
6test 952 b_f_2a(Krassovski1940): 6378245.000
6test 953 f_2f(Krassovski1940): 0.00335233
6test 954 e2f(Krassovski1940): 0.00335233
6test 955 n2e2(Krassovski1940): 0.00669342
6test 956 n2f(Krassovski1940): 0.00335233
6test 957 a_b2f_(Krassowsky1940): 298.30000000
6test 958 a_b2f2(Krassowsky1940): 0.00336361
6test 959 a_b2n(Krassowsky1940): 0.00167898
6test 960 b_f2a(Krassowsky1940): 6378245.000
6test 961 b_f_2a(Krassowsky1940): 6378245.000
6test 962 f_2f(Krassowsky1940): 0.00335233
6test 963 e2f(Krassowsky1940): 0.00335233
6test 964 n2e2(Krassowsky1940): 0.00669342
6test 965 n2f(Krassowsky1940): 0.00335233
6test 966 a_b2f_(Maupertuis1738): 191.00000000
6test 967 a_b2f2(Maupertuis1738): 0.00526316
6test 968 a_b2n(Maupertuis1738): 0.00262467
6test 969 b_f2a(Maupertuis1738): 6397300.000
6test 970 b_f_2a(Maupertuis1738): 6397300.000
6test 971 f_2f(Maupertuis1738): 0.00523560
6test 972 e2f(Maupertuis1738): 0.00523560
6test 973 n2e2(Maupertuis1738): 0.01044379
6test 974 n2f(Maupertuis1738): 0.00523560
6test 975 a_b2f_(Mercury1960): 298.30000000
6test 976 a_b2f2(Mercury1960): 0.00336361
6test 977 a_b2n(Mercury1960): 0.00167898
6test 978 b_f2a(Mercury1960): 6378166.000
6test 979 b_f_2a(Mercury1960): 6378166.000
6test 980 f_2f(Mercury1960): 0.00335233
6test 981 e2f(Mercury1960): 0.00335233
6test 982 n2e2(Mercury1960): 0.00669342
6test 983 n2f(Mercury1960): 0.00335233
6test 984 a_b2f_(Mercury1968Mod): 298.30000000
6test 985 a_b2f2(Mercury1968Mod): 0.00336361
6test 986 a_b2n(Mercury1968Mod): 0.00167898
6test 987 b_f2a(Mercury1968Mod): 6378150.000
6test 988 b_f_2a(Mercury1968Mod): 6378150.000
6test 989 f_2f(Mercury1968Mod): 0.00335233
6test 990 e2f(Mercury1968Mod): 0.00335233
6test 991 n2e2(Mercury1968Mod): 0.00669342
6test 992 n2f(Mercury1968Mod): 0.00335233
6test 993 a_b2f_(NWL1965): 298.25000000
6test 994 a_b2f2(NWL1965): 0.00336417
6test 995 a_b2n(NWL1965): 0.00167926
6test 996 b_f2a(NWL1965): 6378145.000
6test 997 b_f_2a(NWL1965): 6378145.000
6test 998 f_2f(NWL1965): 0.00335289
6test 999 e2f(NWL1965): 0.00335289
6test 1000 n2e2(NWL1965): 0.00669454
6test 1001 n2f(NWL1965): 0.00335289
6test 1002 a_b2f_(OSU86F): 298.25722360
6test 1003 a_b2f2(OSU86F): 0.00336409
6test 1004 a_b2n(OSU86F): 0.00167922
6test 1005 b_f2a(OSU86F): 6378136.200
6test 1006 b_f_2a(OSU86F): 6378136.200
6test 1007 f_2f(OSU86F): 0.00335281
6test 1008 e2f(OSU86F): 0.00335281
6test 1009 n2e2(OSU86F): 0.00669438
6test 1010 n2f(OSU86F): 0.00335281
6test 1011 a_b2f_(OSU91A): 298.25722360
6test 1012 a_b2f2(OSU91A): 0.00336409
6test 1013 a_b2n(OSU91A): 0.00167922
6test 1014 b_f2a(OSU91A): 6378136.300
6test 1015 b_f_2a(OSU91A): 6378136.300
6test 1016 f_2f(OSU91A): 0.00335281
6test 1017 e2f(OSU91A): 0.00335281
6test 1018 n2e2(OSU91A): 0.00669438
6test 1019 n2f(OSU91A): 0.00335281
6test 1020 a_b2f_(Plessis1817): 308.64000000
6test 1021 a_b2f2(Plessis1817): 0.00325055
6test 1022 a_b2n(Plessis1817): 0.00162264
6test 1023 b_f2a(Plessis1817): 6376523.000
6test 1024 b_f_2a(Plessis1817): 6376523.000
6test 1025 f_2f(Plessis1817): 0.00324002
6test 1026 e2f(Plessis1817): 0.00324002
6test 1027 n2e2(Plessis1817): 0.00646954
6test 1028 n2f(Plessis1817): 0.00324002
6test 1029 a_b2f_(Prolate): -297.25722356
6test 1030 a_b2f2(Prolate): -0.00335281
6test 1031 a_b2n(Prolate): -0.00167922
6test 1032 b_f2a(Prolate): 6356752.314
6test 1033 b_f_2a(Prolate): 6356752.314
6test 1034 f_2f(Prolate): -0.00336409
6test 1035 e2f(Prolate): 0.00337545  FAILED, KNOWN, expected -0.00336409
6test 1036 n2e2(Prolate): -0.00673950
6test 1037 n2f(Prolate): -0.00336409
6test 1038 a_b2f_(PZ90): 298.25783930
6test 1039 a_b2f2(PZ90): 0.00336408
6test 1040 a_b2n(PZ90): 0.00167922
6test 1041 b_f2a(PZ90): 6378136.000
6test 1042 b_f_2a(PZ90): 6378136.000
6test 1043 f_2f(PZ90): 0.00335280
6test 1044 e2f(PZ90): 0.00335280
6test 1045 n2e2(PZ90): 0.00669437
6test 1046 n2f(PZ90): 0.00335280
6test 1047 a_b2f_(SGS85): 298.25700000
6test 1048 a_b2f2(SGS85): 0.00336409
6test 1049 a_b2n(SGS85): 0.00167922
6test 1050 b_f2a(SGS85): 6378136.000
6test 1051 b_f_2a(SGS85): 6378136.000
6test 1052 f_2f(SGS85): 0.00335281
6test 1053 e2f(SGS85): 0.00335281
6test 1054 n2e2(SGS85): 0.00669438
6test 1055 n2f(SGS85): 0.00335281
6test 1056 a_b2f_(SoAmerican1969): 298.25000000
6test 1057 a_b2f2(SoAmerican1969): 0.00336417
6test 1058 a_b2n(SoAmerican1969): 0.00167926
6test 1059 b_f2a(SoAmerican1969): 6378160.000
6test 1060 b_f_2a(SoAmerican1969): 6378160.000
6test 1061 f_2f(SoAmerican1969): 0.00335289
6test 1062 e2f(SoAmerican1969): 0.00335289
6test 1063 n2e2(SoAmerican1969): 0.00669454
6test 1064 n2f(SoAmerican1969): 0.00335289
6test 1065 a_b2f_(Sphere): 0.00000000
6test 1066 a_b2f2(Sphere): 0.00000000
6test 1067 a_b2n(Sphere): 0.00000000
6test 1068 b_f2a(Sphere): 6371008.771
6test 1069 b_f_2a(Sphere): 6371008.771
6test 1070 f_2f(Sphere): 0.00000000
6test 1071 e2f(Sphere): 0.00000000
6test 1072 n2e2(Sphere): 0.00000000
6test 1073 n2f(Sphere): 0.00000000
6test 1074 a_b2f_(SphereAuthalic): 0.00000000
6test 1075 a_b2f2(SphereAuthalic): 0.00000000
6test 1076 a_b2n(SphereAuthalic): 0.00000000
6test 1077 b_f2a(SphereAuthalic): 6371000.000
6test 1078 b_f_2a(SphereAuthalic): 6371000.000
6test 1079 f_2f(SphereAuthalic): 0.00000000
6test 1080 e2f(SphereAuthalic): 0.00000000
6test 1081 n2e2(SphereAuthalic): 0.00000000
6test 1082 n2f(SphereAuthalic): 0.00000000
6test 1083 a_b2f_(SpherePopular): 0.00000000
6test 1084 a_b2f2(SpherePopular): 0.00000000
6test 1085 a_b2n(SpherePopular): 0.00000000
6test 1086 b_f2a(SpherePopular): 6378137.000
6test 1087 b_f_2a(SpherePopular): 6378137.000
6test 1088 f_2f(SpherePopular): 0.00000000
6test 1089 e2f(SpherePopular): 0.00000000
6test 1090 n2e2(SpherePopular): 0.00000000
6test 1091 n2f(SpherePopular): 0.00000000
6test 1092 a_b2f_(Struve1860): 294.73000000
6test 1093 a_b2f2(Struve1860): 0.00340449
6test 1094 a_b2n(Struve1860): 0.00169935
6test 1095 b_f2a(Struve1860): 6378298.300
6test 1096 b_f_2a(Struve1860): 6378298.300
6test 1097 f_2f(Struve1860): 0.00339294
6test 1098 e2f(Struve1860): 0.00339294
6test 1099 n2e2(Struve1860): 0.00677436
6test 1100 n2f(Struve1860): 0.00339294
6test 1101 a_b2f_(WGS60): 298.30000000
6test 1102 a_b2f2(WGS60): 0.00336361
6test 1103 a_b2n(WGS60): 0.00167898
6test 1104 b_f2a(WGS60): 6378165.000
6test 1105 b_f_2a(WGS60): 6378165.000
6test 1106 f_2f(WGS60): 0.00335233
6test 1107 e2f(WGS60): 0.00335233
6test 1108 n2e2(WGS60): 0.00669342
6test 1109 n2f(WGS60): 0.00335233
6test 1110 a_b2f_(WGS66): 298.25000000
6test 1111 a_b2f2(WGS66): 0.00336417
6test 1112 a_b2n(WGS66): 0.00167926
6test 1113 b_f2a(WGS66): 6378145.000
6test 1114 b_f_2a(WGS66): 6378145.000
6test 1115 f_2f(WGS66): 0.00335289
6test 1116 e2f(WGS66): 0.00335289
6test 1117 n2e2(WGS66): 0.00669454
6test 1118 n2f(WGS66): 0.00335289
6test 1119 a_b2f_(WGS72): 298.26000000
6test 1120 a_b2f2(WGS72): 0.00336406
6test 1121 a_b2n(WGS72): 0.00167920
6test 1122 b_f2a(WGS72): 6378135.000
6test 1123 b_f_2a(WGS72): 6378135.000
6test 1124 f_2f(WGS72): 0.00335278
6test 1125 e2f(WGS72): 0.00335278
6test 1126 n2e2(WGS72): 0.00669432
6test 1127 n2f(WGS72): 0.00335278
6test 1128 a_b2f_(WGS84): 298.25722356
6test 1129 a_b2f2(WGS84): 0.00336409
6test 1130 a_b2n(WGS84): 0.00167922
6test 1131 b_f2a(WGS84): 6378137.000
6test 1132 b_f_2a(WGS84): 6378137.000
6test 1133 f_2f(WGS84): 0.00335281
6test 1134 e2f(WGS84): 0.00335281
6test 1135 n2e2(WGS84): 0.00669438
6test 1136 n2f(WGS84): 0.00335281
6test 1137 total: 49
6testWGS84(pygeodesy.ellipsoids, 22.11.02)
6test 1138 roc1_ 0: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1139 roc1_ 0: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1140 roc1_ 5: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1141 roc1_ 5: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1142 roc1_ 10: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1143 roc1_ 10: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1144 roc1_ 15: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1145 roc1_ 15: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1146 roc1_ 20: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1147 roc1_ 20: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1148 roc1_ 25: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1149 roc1_ 25: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1150 roc1_ 30: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1151 roc1_ 30: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1152 roc1_ 35: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1153 roc1_ 35: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1154 roc1_ 40: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1155 roc1_ 40: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1156 roc1_ 45: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1157 roc1_ 45: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1158 roc1_ 50: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1159 roc1_ 50: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1160 roc1_ 55: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1161 roc1_ 55: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1162 roc1_ 60: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1163 roc1_ 60: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1164 roc1_ 65: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1165 roc1_ 65: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1166 roc1_ 70: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1167 roc1_ 70: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1168 roc1_ 75: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1169 roc1_ 75: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1170 roc1_ 80: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1171 roc1_ 80: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1172 roc1_ 85: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1173 roc1_ 85: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1174 roc1_ 90: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1175 roc1_ 90: 0.0  FAILED, KNOWN, expected 1.863e-09
6testProlate(pygeodesy.ellipsoids, 22.11.02)
6test 1176 roc1_ 0: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1177 roc1_ 0: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1178 roc1_ 5: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1179 roc1_ 5: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1180 roc1_ 10: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1181 roc1_ 10: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1182 roc1_ 15: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1183 roc1_ 15: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1184 roc1_ 20: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1185 roc1_ 20: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1186 roc1_ 25: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1187 roc1_ 25: 9.313225746154785e-10  FAILED, KNOWN, expected 1.863e-09
6test 1188 roc1_ 30: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1189 roc1_ 30: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1190 roc1_ 35: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1191 roc1_ 35: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1192 roc1_ 40: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1193 roc1_ 40: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1194 roc1_ 45: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1195 roc1_ 45: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1196 roc1_ 50: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1197 roc1_ 50: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1198 roc1_ 55: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1199 roc1_ 55: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1200 roc1_ 60: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1201 roc1_ 60: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1202 roc1_ 65: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1203 roc1_ 65: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1204 roc1_ 70: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1205 roc1_ 70: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1206 roc1_ 75: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1207 roc1_ 75: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1208 roc1_ 80: 1.862645149230957e-09  FAILED, KNOWN, expected 1.863e-09
6test 1209 roc1_ 80: 1.862645149230957e-09  FAILED, KNOWN, expected 1.863e-09
6test 1210 roc1_ 85: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1211 roc1_ 85: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1212 roc1_ 90: 0.0  FAILED, KNOWN, expected 1.863e-09
6test 1213 roc1_ 90: 0.0  FAILED, KNOWN, expected 1.863e-09
6testSphereAuthalic(pygeodesy.ellipsoids, 22.11.02)
6test 1214 roc1_ 0: 0.0
6test 1215 roc1_ 0: 0.0
6test 1216 roc1_ 5: 0.0
6test 1217 roc1_ 5: 0.0
6test 1218 roc1_ 10: 0.0
6test 1219 roc1_ 10: 0.0
6test 1220 roc1_ 15: 0.0
6test 1221 roc1_ 15: 0.0
6test 1222 roc1_ 20: 0.0
6test 1223 roc1_ 20: 0.0
6test 1224 roc1_ 25: 0.0
6test 1225 roc1_ 25: 0.0
6test 1226 roc1_ 30: 0.0
6test 1227 roc1_ 30: 0.0
6test 1228 roc1_ 35: 0.0
6test 1229 roc1_ 35: 0.0
6test 1230 roc1_ 40: 0.0
6test 1231 roc1_ 40: 0.0
6test 1232 roc1_ 45: 0.0
6test 1233 roc1_ 45: 0.0
6test 1234 roc1_ 50: 0.0
6test 1235 roc1_ 50: 0.0
6test 1236 roc1_ 55: 0.0
6test 1237 roc1_ 55: 0.0
6test 1238 roc1_ 60: 0.0
6test 1239 roc1_ 60: 0.0
6test 1240 roc1_ 65: 0.0
6test 1241 roc1_ 65: 0.0
6test 1242 roc1_ 70: 0.0
6test 1243 roc1_ 70: 0.0
6test 1244 roc1_ 75: 0.0
6test 1245 roc1_ 75: 0.0
6test 1246 roc1_ 80: 0.0
6test 1247 roc1_ 80: 0.0
6test 1248 roc1_ 85: 0.0
6test 1249 roc1_ 85: 0.0
6test 1250 roc1_ 90: 0.0
6test 1251 roc1_ 90: 0.0
6testcircle4(pygeodesy.ellipsoids, 22.11.02)
6testWGS84(pygeodesy.ellipsoids, 22.11.02)
6test 1252 circle4 0: 6378137.000000
6test 1253 circle4 0: 6378137.000000
6test 1254 circle4 10: 6377497.402124
6test 1255 circle4 10: 6377497.402124
6test 1256 circle4 20: 6375653.951276
6test 1257 circle4 20: 6375653.951276
6test 1258 circle4 30: 6372824.420294
6test 1259 circle4 30: 6372824.420294
6test 1260 circle4 40: 6369344.863240
6test 1261 circle4 40: 6369344.863240
6test 1262 circle4 50: 6365631.517537
6test 1263 circle4 50: 6365631.517537
6test 1264 circle4 60: 6362132.224397
6test 1265 circle4 60: 6362132.224397
6test 1266 circle4 70: 6359272.455642
6test 1267 circle4 70: 6359272.455642
6test 1268 circle4 80: 6357402.413808
6test 1269 circle4 80: 6357402.413808
6test 1270 circle4 90: 6356752.314245
6test 1271 circle4 90: 6356752.314245
6testSphere(pygeodesy.ellipsoids, 22.11.02)
6test 1272 circle4 0: 6371008.771415
6test 1273 circle4 0: 6371008.771415
6test 1274 circle4 10: 6371008.771415
6test 1275 circle4 10: 6371008.771415
6test 1276 circle4 20: 6371008.771415
6test 1277 circle4 20: 6371008.771415
6test 1278 circle4 30: 6371008.771415
6test 1279 circle4 30: 6371008.771415
6test 1280 circle4 40: 6371008.771415
6test 1281 circle4 40: 6371008.771415
6test 1282 circle4 50: 6371008.771415
6test 1283 circle4 50: 6371008.771415
6test 1284 circle4 60: 6371008.771415
6test 1285 circle4 60: 6371008.771415
6test 1286 circle4 70: 6371008.771415
6test 1287 circle4 70: 6371008.771415
6test 1288 circle4 80: 6371008.771415
6test 1289 circle4 80: 6371008.771415
6test 1290 circle4 90: 6371008.771415
6test 1291 circle4 90: 6371008.771415
677 of 1291 testEllipsoids.py tests (6.0%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 131.799 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testElliptic.py
6testing testElliptic.py 22.10.16
6test 1 eps4: 8.881784197e-16
6test 2 RC, RF(0.020, ...): 3.914361830671
6test 3 RC, RF(0.030, ...): 6.584789484624
6test 4 RC, RF(0.040, ...): 5.493061443341
6test 5 RC, RF(0.050, ...): 4.812118250596
6test 6 RC, RF(0.060, ...): 4.335073632453
6test 7 RC, RF(0.070, ...): 3.976827306120
6test 8 RC, RF(0.080, ...): 3.694989719259
6test 9 RC, RF(0.090, ...): 3.465735902800
6test 10 RC, RF(0.100, ...): 3.274501502373
6test 11 RC, RF(0.110, ...): 3.111812518574
6test 12 RC, RF(0.120, ...): 2.971203516685
6test 13 RC, RF(0.130, ...): 2.848090500183
6test 14 RC, RF(0.140, ...): 2.739120555165
6test 15 RC, RF(0.150, ...): 2.641776814832
6test 16 RC, RF(0.160, ...): 2.554128118830
6test 17 RC, RF(0.170, ...): 2.474664615473
6test 18 RC, RF(0.180, ...): 2.402186472893
6test 19 RC, RF(0.190, ...): 2.335726540516
6test 20 RC, RF(0.200, ...): 2.274495360058
6test 21 RC, RF(0.210, ...): 2.217841271926
6test 22 RC, RF(0.220, ...): 2.165220951174
6test 23 RC, RF(0.230, ...): 2.116177296054
6test 24 RC, RF(0.240, ...): 2.070322594382
6test 25 RC, RF(0.250, ...): 2.027325540541
6test 26 RC, RF(0.260, ...): 1.986901103492
6test 27 RC, RF(0.270, ...): 1.948802534199
6test 28 RC, RF(0.280, ...): 1.912814998209
6test 29 RC, RF(0.290, ...): 1.878750456745
6test 30 RC, RF(0.300, ...): 1.846443516895
6test 31 RC, RF(0.310, ...): 1.815748041271
6test 32 RC, RF(0.320, ...): 1.786534358134
6test 33 RC, RF(0.330, ...): 1.758686950216
6test 34 RC, RF(0.340, ...): 1.732102528083
6test 35 RC, RF(0.350, ...): 1.706688414643
6test 36 RC, RF(0.360, ...): 1.682361183106
6test 37 RC, RF(0.370, ...): 1.659045502693
6test 38 RC, RF(0.380, ...): 1.636673155658
6test 39 RC, RF(0.390, ...): 1.615182196359
6test 40 RC, RF(0.400, ...): 1.594516228743
6test 41 RC, RF(0.410, ...): 1.574623783019
6test 42 RC, RF(0.420, ...): 1.555457775830
6test 43 RC, RF(0.430, ...): 1.536975041007
6test 44 RC, RF(0.440, ...): 1.519135920258
6test 45 RC, RF(0.450, ...): 1.501903904951
6test 46 RC, RF(0.460, ...): 1.485245321610
6test 47 RC, RF(0.470, ...): 1.469129054970
6test 48 RC, RF(0.480, ...): 1.453526303390
6test 49 RC, RF(0.490, ...): 1.438410362259
6test 50 RC, RF(0.500, ...): 1.423756431678
6test 51 RC, RF(0.510, ...): 1.409541445271
6test 52 RC, RF(0.520, ...): 1.395743917431
6test 53 RC, RF(0.530, ...): 1.382343806706
6test 54 RC, RF(0.540, ...): 1.369322393343
6test 55 RC, RF(0.550, ...): 1.356662169284
6test 56 RC, RF(0.560, ...): 1.344346739158
6test 57 RC, RF(0.570, ...): 1.332360730978
6test 58 RC, RF(0.580, ...): 1.320689715446
6test 59 RC, RF(0.590, ...): 1.309320132904
6test 60 RC, RF(0.600, ...): 1.298239227085
6test 61 RC, RF(0.610, ...): 1.287434984930
6test 62 RC, RF(0.620, ...): 1.276896081822
6test 63 RC, RF(0.630, ...): 1.266611831682
6test 64 RC, RF(0.640, ...): 1.256572141405
6test 65 RC, RF(0.650, ...): 1.246767469214
6test 66 RC, RF(0.660, ...): 1.237188786540
6test 67 RC, RF(0.670, ...): 1.227827543058
6test 68 RC, RF(0.680, ...): 1.218675634611
6test 69 RC, RF(0.690, ...): 1.209725373708
6test 70 RC, RF(0.700, ...): 1.200969462383
6test 71 RC, RF(0.710, ...): 1.192400967179
6test 72 RC, RF(0.720, ...): 1.184013296070
6test 73 RC, RF(0.730, ...): 1.175800177139
6test 74 RC, RF(0.740, ...): 1.167755638871
6test 75 RC, RF(0.750, ...): 1.159873991901
6test 76 RC, RF(0.760, ...): 1.152149812097
6test 77 RC, RF(0.770, ...): 1.144577924881
6test 78 RC, RF(0.780, ...): 1.137153390647
6test 79 RC, RF(0.790, ...): 1.129871491226
6test 80 RC, RF(0.800, ...): 1.122727717281
6test 81 RC, RF(0.810, ...): 1.115717756571
6test 82 RC, RF(0.820, ...): 1.108837483013
6test 83 RC, RF(0.830, ...): 1.102082946473
6test 84 RC, RF(0.840, ...): 1.095450363236
6test 85 RC, RF(0.850, ...): 1.088936107101
6test 86 RC, RF(0.860, ...): 1.082536701044
6test 87 RC, RF(0.870, ...): 1.076248809425
6test 88 RC, RF(0.880, ...): 1.070069230678
6test 89 RC, RF(0.890, ...): 1.063994890459
6test 90 RC, RF(0.900, ...): 1.058022835225
6test 91 RC, RF(0.910, ...): 1.052150226192
6test 92 RC, RF(0.920, ...): 1.046374333669
6test 93 RC, RF(0.930, ...): 1.040692531726
6test 94 RC, RF(0.940, ...): 1.035102293176
6test 95 RC, RF(0.950, ...): 1.029601184852
6test 96 RC, RF(0.960, ...): 1.024186863158
6test 97 RC, RF(0.970, ...): 1.018857069872
6test 98 RC, RF(0.980, ...): 1.013609628192
6test 99 RC, RF(0.990, ...): 1.008442438994
6test 100 RD, RJ(0.010, ...): 8.120132781711
6test 101 RD, RJ(0.020, ...): 7.119021204087
6test 102 RD, RJ(0.030, ...): 6.544107485563
6test 103 RD, RJ(0.040, ...): 6.142532079666
6test 104 RD, RJ(0.050, ...): 5.835358486352
6test 105 RD, RJ(0.060, ...): 5.587552234737
6test 106 RD, RJ(0.070, ...): 5.380489023690
6test 107 RD, RJ(0.080, ...): 5.203088814832
6test 108 RD, RJ(0.090, ...): 5.048227960523
6test 109 RD, RJ(0.100, ...): 4.911057935480
6test 110 RD, RJ(0.110, ...): 4.788131254930
6test 111 RD, RJ(0.120, ...): 4.676910208210
6test 112 RD, RJ(0.130, ...): 4.575473423301
6test 113 RD, RJ(0.140, ...): 4.482331804788
6test 114 RD, RJ(0.150, ...): 4.396308333326
6test 115 RD, RJ(0.160, ...): 4.316456874863
6test 116 RD, RJ(0.170, ...): 4.242005741804
6test 117 RD, RJ(0.180, ...): 4.172317477477
6test 118 RD, RJ(0.190, ...): 4.106859576449
6test 119 RD, RJ(0.200, ...): 4.045182759349
6test 120 RD, RJ(0.210, ...): 3.986904580308
6test 121 RD, RJ(0.220, ...): 3.931696871490
6test 122 RD, RJ(0.230, ...): 3.879275996390
6test 123 RD, RJ(0.240, ...): 3.829395191121
6test 124 RD, RJ(0.250, ...): 3.781838479725
6test 125 RD, RJ(0.260, ...): 3.736415791191
6test 126 RD, RJ(0.270, ...): 3.692959004641
6test 127 RD, RJ(0.280, ...): 3.651318719062
6test 128 RD, RJ(0.290, ...): 3.611361594199
6test 129 RD, RJ(0.300, ...): 3.572968145771
6test 130 RD, RJ(0.310, ...): 3.536030905108
6test 131 RD, RJ(0.320, ...): 3.500452873386
6test 132 RD, RJ(0.330, ...): 3.466146215741
6test 133 RD, RJ(0.340, ...): 3.433031152013
6test 134 RD, RJ(0.350, ...): 3.401035009727
6test 135 RD, RJ(0.360, ...): 3.370091411694
6test 136 RD, RJ(0.370, ...): 3.340139575961
6test 137 RD, RJ(0.380, ...): 3.311123710009
6test 138 RD, RJ(0.390, ...): 3.282992484411
6test 139 RD, RJ(0.400, ...): 3.255698573796
6test 140 RD, RJ(0.410, ...): 3.229198255060
6test 141 RD, RJ(0.420, ...): 3.203451054514
6test 142 RD, RJ(0.430, ...): 3.178419436977
6test 143 RD, RJ(0.440, ...): 3.154068531006
6test 144 RD, RJ(0.450, ...): 3.130365885345
6test 145 RD, RJ(0.460, ...): 3.107281252437
6test 146 RD, RJ(0.470, ...): 3.084786395490
6test 147 RD, RJ(0.480, ...): 3.062854916088
6test 148 RD, RJ(0.490, ...): 3.041462099793
6test 149 RD, RJ(0.500, ...): 3.020584777522
6test 150 RD, RJ(0.510, ...): 3.000201200833
6test 151 RD, RJ(0.520, ...): 2.980290929460
6test 152 RD, RJ(0.530, ...): 2.960834729701
6test 153 RD, RJ(0.540, ...): 2.941814482427
6test 154 RD, RJ(0.550, ...): 2.923213099639
6test 155 RD, RJ(0.560, ...): 2.905014448642
6test 156 RD, RJ(0.570, ...): 2.887203283023
6test 157 RD, RJ(0.580, ...): 2.869765179714
6test 158 RD, RJ(0.590, ...): 2.852686481504
6test 159 RD, RJ(0.600, ...): 2.835954244454
6test 160 RD, RJ(0.610, ...): 2.819556189720
6test 161 RD, RJ(0.620, ...): 2.803480659351
6test 162 RD, RJ(0.630, ...): 2.787716575666
6test 163 RD, RJ(0.640, ...): 2.772253403892
6test 164 RD, RJ(0.650, ...): 2.757081117726
6test 165 RD, RJ(0.660, ...): 2.742190167580
6test 166 RD, RJ(0.670, ...): 2.727571451237
6test 167 RD, RJ(0.680, ...): 2.713216286727
6test 168 RD, RJ(0.690, ...): 2.699116387203
6test 169 RD, RJ(0.700, ...): 2.685263837661
6test 170 RD, RJ(0.710, ...): 2.671651073335
6test 171 RD, RJ(0.720, ...): 2.658270859623
6test 172 RD, RJ(0.730, ...): 2.645116273430
6test 173 RD, RJ(0.740, ...): 2.632180685789
6test 174 RD, RJ(0.750, ...): 2.619457745678
6test 175 RD, RJ(0.760, ...): 2.606941364924
6test 176 RD, RJ(0.770, ...): 2.594625704104
6test 177 RD, RJ(0.780, ...): 2.582505159384
6test 178 RD, RJ(0.790, ...): 2.570574350197
6test 179 RD, RJ(0.800, ...): 2.558828107720
6test 180 RD, RJ(0.810, ...): 2.547261464073
6test 181 RD, RJ(0.820, ...): 2.535869642198
6test 182 RD, RJ(0.830, ...): 2.524648046356
6test 183 RD, RJ(0.840, ...): 2.513592253209
6test 184 RD, RJ(0.850, ...): 2.502698003435
6test 185 RD, RJ(0.860, ...): 2.491961193848
6test 186 RD, RJ(0.870, ...): 2.481377869975
6test 187 RD, RJ(0.880, ...): 2.470944219069
6test 188 RD, RJ(0.890, ...): 2.460656563526
6test 189 RD, RJ(0.900, ...): 2.450511354674
6test 190 RD, RJ(0.910, ...): 2.440505166909
6test 191 RD, RJ(0.920, ...): 2.430634692166
6test 192 RD, RJ(0.930, ...): 2.420896734686
6test 193 RD, RJ(0.940, ...): 2.411288206073
6test 194 RD, RJ(0.950, ...): 2.401806120619
6test 195 RD, RJ(0.960, ...): 2.392447590873
6test 196 RD, RJ(0.970, ...): 2.383209823448
6test 197 RD, RJ(0.980, ...): 2.374090115050
6test 198 RD, RJ(0.990, ...): 2.365085848706
6test 199 eps4: 8.881784197e-16
6test 200 k2: 0.1000000
6test 201 kp2: 0.9000000
6test 202 eps: 0.0263340
6test 203 cD: 0.816837118
6test 204 cE: 1.530757637
6test 205 cG: 1.530757637
6test 206 cH: 0.795604230
6test 207 cK: 1.612441349
6test 208 cKE: 0.081683712
6test 209 cPi: 1.612441349
6test 210 fE(phi): 0.348372822
6test 211 fDelta(sn, cn): 0.994133906
6test 212 fD(sn, cn, dn): 0.013885234
6test 213 fE(sn, cn, dn): 0.348372822
6test 214 fEd(PI_2): 0.027415224
6test 215 fEinv(PI_2): 1.612999420
6test 216 fF(sn, cn, dn): 0.349761345
6test 217 fG(sn, cn, dn): 0.348372822
6test 218 fH(sn, cn, dn): 0.335876111
6test 219 fPi(sn, cn, dn): 0.349761345
6test 220 fPi(sn, None, dn): invokation Elliptic.fPi(0, None, 1): invalid
6test 221 fPi(sn, dn, None): invokation Elliptic.fH(0, 1, None): invalid
6test 222 deltaD(sn, cn, dn): -0.3223642
6test 223 deltaE(sn, cn, dn): 0.0084191
6test 224 deltaEinv(sn, cn): -0.0082518
6test 225 deltaF(sn, cn, dn): -0.0083379
6test 226 deltaG(sn, cn, dn): 0.0084191
6test 227 deltaH(sn, cn, dn): 0.3140691
6test 228 deltaPi(sn, cn, dn): -0.0083379
6test 229 deltaPi(sn, None, dn): invokation Elliptic.deltaPi(0, None, 1): invalid
6test 230 deltaPi(sn, dn, None): invokation Elliptic.deltaPi(0, 1, None): invalid
6test 231 RF(1,   2, 0): 1.3110287771461
6test 232 RF(0.5, 1, 0): 1.8540746773014
6test 233 RF(2,   3, 4): 0.58408284167715
6test 234 RC(0,  1/4): 3.1415926535898
6test 235 RC(9/4,  2): 0.69314718055995
6test 236 RC(1/4, -2): 0.23104906018665
6test 237 RJ(0, 1, 2, 3): 0.77688623778582
6test 238 RJ(2, 3, 4, 5): 0.14297579667157
6test 239 RD(0, 2, 1): 1.7972103521034
6test 240 RD(2, 3, 4): 0.16510527294261
6test 241 RG(0, 16, 16): 3.1415926535898
6test 242 RG(2,  3,  4): 1.7255030280692
6test 243 RG(0,  0.0796, 4): 1.0284758090288
6test 244 reset: 4
6test 245 sncndn(x): 0.0, 1.0, 1.0
6test 246 sncndn(x): 1.0, 0.0, 1.0
6test 247 sncndn(x): 0.0, 1.0, 1.0
6test 248 sncndn(x): 0.917152336, 0.398536815, 0.398536815
6test 249 sncndn(x): <class 'pygeodesy.elliptic.Elliptic3Tuple'>

6test 250 copy(Elliptic): (<class 'pygeodesy.elliptic.Elliptic'>, True)
6test 251 Elliptic.copy(): (<class 'pygeodesy.elliptic.Elliptic'>, True)
6test 252 k2 alpha2 kp2 alphap2: (0.0, 0.0, 0.0, 0.0)
6test 253 k2 alpha2 kp2 alphap2: (0.25, 0.25, 0.25, 0.25)
6test 254 k2 alpha2 kp2 alphap2: (0.5, 0.5, 0.5, 0.5)
6test 255 k2 alpha2 kp2 alphap2: (0.75, 0.75, 0.75, 0.75)
6all 255 testElliptic.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 169.513 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testEpsg.py
6testing testEpsg.py 21.02.11
6test 1 Epsg: Epsg(32661)
6test 2 0 N: (0, 'N')
6test 3 1 N: (1, 'N')
6test 4 2 N: (2, 'N')
6test 5 3 N: (3, 'N')
6test 6 4 N: (4, 'N')
6test 7 5 N: (5, 'N')
6test 8 6 N: (6, 'N')
6test 9 7 N: (7, 'N')
6test 10 8 N: (8, 'N')
6test 11 9 N: (9, 'N')
6test 12 10 N: (10, 'N')
6test 13 11 N: (11, 'N')
6test 14 12 N: (12, 'N')
6test 15 13 N: (13, 'N')
6test 16 14 N: (14, 'N')
6test 17 15 N: (15, 'N')
6test 18 16 N: (16, 'N')
6test 19 17 N: (17, 'N')
6test 20 18 N: (18, 'N')
6test 21 19 N: (19, 'N')
6test 22 20 N: (20, 'N')
6test 23 21 N: (21, 'N')
6test 24 22 N: (22, 'N')
6test 25 23 N: (23, 'N')
6test 26 24 N: (24, 'N')
6test 27 25 N: (25, 'N')
6test 28 26 N: (26, 'N')
6test 29 27 N: (27, 'N')
6test 30 28 N: (28, 'N')
6test 31 29 N: (29, 'N')
6test 32 30 N: (30, 'N')
6test 33 31 N: (31, 'N')
6test 34 32 N: (32, 'N')
6test 35 33 N: (33, 'N')
6test 36 34 N: (34, 'N')
6test 37 35 N: (35, 'N')
6test 38 36 N: (36, 'N')
6test 39 37 N: (37, 'N')
6test 40 38 N: (38, 'N')
6test 41 39 N: (39, 'N')
6test 42 40 N: (40, 'N')
6test 43 41 N: (41, 'N')
6test 44 42 N: (42, 'N')
6test 45 43 N: (43, 'N')
6test 46 44 N: (44, 'N')
6test 47 45 N: (45, 'N')
6test 48 46 N: (46, 'N')
6test 49 47 N: (47, 'N')
6test 50 48 N: (48, 'N')
6test 51 49 N: (49, 'N')
6test 52 50 N: (50, 'N')
6test 53 51 N: (51, 'N')
6test 54 52 N: (52, 'N')
6test 55 53 N: (53, 'N')
6test 56 54 N: (54, 'N')
6test 57 55 N: (55, 'N')
6test 58 56 N: (56, 'N')
6test 59 57 N: (57, 'N')
6test 60 58 N: (58, 'N')
6test 61 59 N: (59, 'N')
6test 62 60 N: (60, 'N')
6test 63 Epsg: Epsg(32761)
6test 64 0 S: (0, 'S')
6test 65 1 S: (1, 'S')
6test 66 2 S: (2, 'S')
6test 67 3 S: (3, 'S')
6test 68 4 S: (4, 'S')
6test 69 5 S: (5, 'S')
6test 70 6 S: (6, 'S')
6test 71 7 S: (7, 'S')
6test 72 8 S: (8, 'S')
6test 73 9 S: (9, 'S')
6test 74 10 S: (10, 'S')
6test 75 11 S: (11, 'S')
6test 76 12 S: (12, 'S')
6test 77 13 S: (13, 'S')
6test 78 14 S: (14, 'S')
6test 79 15 S: (15, 'S')
6test 80 16 S: (16, 'S')
6test 81 17 S: (17, 'S')
6test 82 18 S: (18, 'S')
6test 83 19 S: (19, 'S')
6test 84 20 S: (20, 'S')
6test 85 21 S: (21, 'S')
6test 86 22 S: (22, 'S')
6test 87 23 S: (23, 'S')
6test 88 24 S: (24, 'S')
6test 89 25 S: (25, 'S')
6test 90 26 S: (26, 'S')
6test 91 27 S: (27, 'S')
6test 92 28 S: (28, 'S')
6test 93 29 S: (29, 'S')
6test 94 30 S: (30, 'S')
6test 95 31 S: (31, 'S')
6test 96 32 S: (32, 'S')
6test 97 33 S: (33, 'S')
6test 98 34 S: (34, 'S')
6test 99 35 S: (35, 'S')
6test 100 36 S: (36, 'S')
6test 101 37 S: (37, 'S')
6test 102 38 S: (38, 'S')
6test 103 39 S: (39, 'S')
6test 104 40 S: (40, 'S')
6test 105 41 S: (41, 'S')
6test 106 42 S: (42, 'S')
6test 107 43 S: (43, 'S')
6test 108 44 S: (44, 'S')
6test 109 45 S: (45, 'S')
6test 110 46 S: (46, 'S')
6test 111 47 S: (47, 'S')
6test 112 48 S: (48, 'S')
6test 113 49 S: (49, 'S')
6test 114 50 S: (50, 'S')
6test 115 51 S: (51, 'S')
6test 116 52 S: (52, 'S')
6test 117 53 S: (53, 'S')
6test 118 54 S: (54, 'S')
6test 119 55 S: (55, 'S')
6test 120 56 S: (56, 'S')
6test 121 57 S: (57, 'S')
6test 122 58 S: (58, 'S')
6test 123 59 S: (59, 'S')
6test 124 60 S: (60, 'S')
6test 125 Ups: Epsg(32761)
6test 126 Ups: 00A S
6test 127 copy(Epsg): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 128 Epsg.copy(): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 129 Ups: Epsg(32761)
6test 130 Ups: 00B S
6test 131 copy(Epsg): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 132 Epsg.copy(): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 133 Ups: Epsg(32661)
6test 134 Ups: 00Y N
6test 135 copy(Epsg): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 136 Epsg.copy(): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 137 Ups: Epsg(32661)
6test 138 Ups: 00Z N
6test 139 copy(Epsg): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 140 Epsg.copy(): (<class 'pygeodesy.epsg.Epsg'>, True)
6test 141 TMcoord 1: 38W N
6test 142 TMcoord 2: 34P N
6test 143 TMcoord 3: 43Q N
6test 144 TMcoord 4: 35Q N
6test 145 TMcoord 5: 37N N
6test 146 TMcoord 6: 34W N
6test 147 TMcoord 7: 40V N
6test 148 TMcoord 8: 34P N
6test 149 TMcoord 9: 41S N
6test 150 TMcoord 10: 41X N
6test 151 TMcoord 11: 43X N
6test 152 TMcoord 12: 44Q N
6test 153 TMcoord 13: 44R N
6test 154 TMcoord 14: 39U N
6test 155 TMcoord 15: 44P N
6test 156 TMcoord 16: 39R N
6test 157 TMcoord 17: 41W N
6test 158 TMcoord 18: 45U N
6test 159 TMcoord 19: 32R N
6test 160 TMcoord 20: 44X N
6test 161 TMcoord 21: 35T N
6test 162 TMcoord 22: 32T N
6test 163 TMcoord 23: 31T N
6test 164 TMcoord 24: 35N N
6test 165 TMcoord 25: 45P N
6test 166 TMcoord 26: 33V N
6test 167 TMcoord 27: 41Q N
6test 168 TMcoord 28: 40X N
6test 169 TMcoord 29: 33P N
6test 170 TMcoord 30: 40S N
6test 171 TMcoord 31: 37T N
6test 172 TMcoord 32: 33X N
6test 173 TMcoord 33: 41U N
6test 174 TMcoord 34: 43Q N
6test 175 TMcoord 35: 42S N
6test 176 TMcoord 36: 33S N
6test 177 TMcoord 37: 35X N
6test 178 TMcoord 38: 38N N
6test 179 TMcoord 39: 44P N
6test 180 TMcoord 40: 33U N
6test 181 TMcoord 41: 37W N
6test 182 TMcoord 42: 36T N
6test 183 TMcoord 43: 36Q N
6test 184 TMcoord 44: 34S N
6test 185 TMcoord 45: 37S N
6test 186 TMcoord 46: 34N N
6test 187 TMcoord 47: 34T N
6test 188 TMcoord 48: 43Q N
6test 189 TMcoord 49: 32N N
6test 190 TMcoord 50: 31Q N
6test 191 TMcoord 51: 45R N
6test 192 TMcoord 52: 45R N
6test 193 TMcoord 53: 34W N
6test 194 TMcoord 54: 44V N
6test 195 TMcoord 55: 44S N
6test 196 TMcoord 56: 39R N
6test 197 TMcoord 57: 00Z N
6test 198 TMcoord 58: 36R N
6test 199 TMcoord 59: 41V N
6test 200 TMcoord 60: 42N N
6test 201 TMcoord 61: 43S N
6test 202 TMcoord 62: 34N N
6test 203 TMcoord 63: 34U N
6test 204 TMcoord 64: 38V N
6test 205 TMcoord 65: 34Q N
6test 206 TMcoord 66: 38P N
6test 207 TMcoord 67: 42S N
6test 208 TMcoord 68: 44S N
6test 209 TMcoord 69: 31Q N
6test 210 TMcoord 70: 40W N
6test 211 TMcoord 71: 35X N
6test 212 TMcoord 72: 32T N
6test 213 TMcoord 73: 45U N
6test 214 TMcoord 74: 40Q N
6test 215 TMcoord 75: 31T N
6test 216 TMcoord 76: 44R N
6test 217 TMcoord 77: 34U N
6test 218 TMcoord 78: 38P N
6test 219 TMcoord 79: 38Q N
6test 220 TMcoord 80: 45N N
6test 221 TMcoord 81: 31S N
6test 222 TMcoord 82: 41U N
6test 223 TMcoord 83: 40V N
6test 224 TMcoord 84: 43X N
6test 225 TMcoord 85: 35N N
6test 226 TMcoord 86: 44P N
6test 227 TMcoord 87: 41N N
6test 228 TMcoord 88: 38Q N
6test 229 TMcoord 89: 43X N
6test 230 TMcoord 90: 36V N
6test 231 TMcoord 91: 34Q N
6test 232 TMcoord 92: 35W N
6test 233 TMcoord 93: 45U N
6test 234 TMcoord 94: 40R N
6test 235 TMcoord 95: 36R N
6test 236 TMcoord 96: 35S N
6test 237 TMcoord 97: 41R N
6test 238 TMcoord 98: 39Q N
6test 239 TMcoord 99: 37T N
6test 240 TMcoord 100: 42P N
6test 241 TMcoord 101: 35T N
6test 242 TMcoord 102: 34Q N
6test 243 TMcoord 103: 41T N
6test 244 TMcoord 104: 43R N
6test 245 TMcoord 105: 34Q N
6test 246 TMcoord 106: 45P N
6test 247 TMcoord 107: 31P N
6test 248 TMcoord 108: 44V N
6test 249 TMcoord 109: 42X N
6test 250 TMcoord 110: 33R N
6test 251 TMcoord 111: 37W N
6test 252 TMcoord 112: 31S N
6test 253 TMcoord 113: 42N N
6test 254 TMcoord 114: 39N N
6test 255 TMcoord 115: 39T N
6test 256 TMcoord 116: 39P N
6test 257 TMcoord 117: 34U N
6test 258 TMcoord 118: 41P N
6test 259 TMcoord 119: 37R N
6test 260 TMcoord 120: 44Q N
6test 261 TMcoord 121: 32V N
6test 262 TMcoord 122: 41R N
6test 263 TMcoord 123: 36T N
6test 264 TMcoord 124: 42U N
6test 265 TMcoord 125: 42U N
6test 266 TMcoord 126: 39T N
6test 267 TMcoord 127: 32T N
6test 268 TMcoord 128: 32Q N
6test 269 TMcoord 129: 38P N
6test 270 TMcoord 130: 34Q N
6test 271 TMcoord 131: 36V N
6test 272 TMcoord 132: 36T N
6test 273 TMcoord 133: 43T N
6test 274 TMcoord 134: 41W N
6test 275 TMcoord 135: 32V N
6test 276 TMcoord 136: 39X N
6test 277 TMcoord 137: 32U N
6test 278 TMcoord 138: 37X N
6test 279 TMcoord 139: 35N N
6test 280 TMcoord 140: 36P N
6test 281 TMcoord 141: 31S N
6test 282 TMcoord 142: 36N N
6test 283 TMcoord 143: 42S N
6test 284 TMcoord 144: 44N N
6test 285 TMcoord 145: 44P N
6test 286 TMcoord 146: 39U N
6test 287 TMcoord 147: 45Q N
6test 288 TMcoord 148: 41W N
6test 289 TMcoord 149: 41N N
6test 290 TMcoord 150: 32S N
6test 291 TMcoord 151: 32N N
6test 292 TMcoord 152: 32T N
6test 293 TMcoord 153: 38R N
6test 294 TMcoord 154: 32V N
6test 295 TMcoord 155: 37Q N
6test 296 TMcoord 156: 44N N
6test 297 TMcoord 157: 34W N
6test 298 TMcoord 158: 45N N
6test 299 TMcoord 159: 42S N
6test 300 TMcoord 160: 40T N
6test 301 TMcoord 161: 31U N
6test 302 TMcoord 162: 45Q N
6test 303 TMcoord 163: 40U N
6test 304 TMcoord 164: 45T N
6test 305 TMcoord 165: 40R N
6test 306 TMcoord 166: 31V N
6test 307 TMcoord 167: 45P N
6test 308 TMcoord 168: 43W N
6test 309 TMcoord 169: 43U N
6test 310 TMcoord 170: 44V N
6test 311 TMcoord 171: 40P N
6test 312 TMcoord 172: 36Q N
6test 313 TMcoord 173: 42Q N
6test 314 TMcoord 174: 41Q N
6test 315 TMcoord 175: 32S N
6test 316 TMcoord 176: 39P N
6test 317 TMcoord 177: 39Q N
6test 318 TMcoord 178: 39T N
6test 319 TMcoord 179: 34U N
6test 320 TMcoord 180: 32W N
6test 321 TMcoord 181: 41U N
6test 322 TMcoord 182: 31Q N
6test 323 TMcoord 183: 40N N
6test 324 TMcoord 184: 40T N
6test 325 TMcoord 185: 38P N
6test 326 TMcoord 186: 44P N
6test 327 TMcoord 187: 40N N
6test 328 TMcoord 188: 44V N
6test 329 TMcoord 189: 41V N
6test 330 TMcoord 190: 43Q N
6test 331 TMcoord 191: 43X N
6test 332 TMcoord 192: 39N N
6test 333 TMcoord 193: 38T N
6test 334 TMcoord 194: 32R N
6test 335 TMcoord 195: 37S N
6test 336 TMcoord 196: 44W N
6test 337 TMcoord 197: 43V N
6test 338 TMcoord 198: 35T N
6test 339 TMcoord 199: 44W N
6test 340 TMcoord 200: 44X N
6test 341 TMcoord 201: 33Q N
6test 342 TMcoord 202: 40W N
6test 343 TMcoord 203: 43S N
6test 344 TMcoord 204: 32U N
6test 345 TMcoord 205: 33V N
6test 346 TMcoord 206: 34R N
6test 347 TMcoord 207: 39S N
6test 348 TMcoord 208: 43W N
6test 349 TMcoord 209: 39T N
6test 350 TMcoord 210: 31W N
6test 351 TMcoord 211: 45R N
6test 352 TMcoord 212: 34W N
6test 353 TMcoord 213: 32T N
6test 354 TMcoord 214: 31P N
6test 355 TMcoord 215: 44V N
6test 356 TMcoord 216: 45U N
6test 357 TMcoord 217: 43R N
6test 358 TMcoord 218: 31N N
6test 359 TMcoord 219: 43T N
6test 360 TMcoord 220: 45R N
6test 361 TMcoord 221: 39N N
6test 362 TMcoord 222: 37S N
6test 363 TMcoord 223: 31R N
6test 364 TMcoord 224: 38Q N
6test 365 TMcoord 225: 40V N
6test 366 TMcoord 226: 45N N
6test 367 TMcoord 227: 44R N
6test 368 TMcoord 228: 43P N
6test 369 TMcoord 229: 42P N
6test 370 TMcoord 230: 45S N
6test 371 TMcoord 231: 42N N
6test 372 TMcoord 232: 38S N
6test 373 TMcoord 233: 32T N
6test 374 TMcoord 234: 41T N
6test 375 TMcoord 235: 34S N
6test 376 TMcoord 236: 40R N
6test 377 TMcoord 237: 35V N
6test 378 TMcoord 238: 38N N
6test 379 TMcoord 239: 40V N
6test 380 TMcoord 240: 36R N
6test 381 TMcoord 241: 37W N
6test 382 TMcoord 242: 45R N
6test 383 TMcoord 243: 37V N
6test 384 TMcoord 244: 33P N
6test 385 TMcoord 245: 32U N
6test 386 TMcoord 246: 38T N
6test 387 TMcoord 247: 37N N
6test 388 TMcoord 248: 36R N
6test 389 TMcoord 249: 44R N
6test 390 TMcoord 250: 44Q N
6test 391 TMcoord 251: 45R N
6test 392 TMcoord 252: 34N N
6test 393 TMcoord 253: 43S N
6test 394 TMcoord 254: 40Q N
6test 395 TMcoord 255: 33T N
6test 396 TMcoord 256: 44P N
6test 397 TMcoord 257: 39N N
6test 398 TMcoord 258: 40Q N
6all 398 testEpsg.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 56.655 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testErrors.py
6testing testErrors.py 22.09.17 (module pygeodesy.errors 23.03.09)
6test 1 AssertionError: name ('value'): test1 txt
6test 2 AssertionError: 'name=value' MISSING: test2 txt
6test 3 AttributeError: name ('value'): test1 txt
6test 4 AttributeError: 'name=value' MISSING: test2 txt
6test 5 IndexError: name ('value'): test1 txt
6test 6 IndexError: 'name=value' MISSING: test2 txt
6test 7 LimitError: name ('value'): test1 txt
6test 8 LimitError: 'name=value' MISSING: test2 txt
6test 9 NameError: name ('value'): test1 txt
6test 10 NameError: 'name=value' MISSING: test2 txt
6test 11 ParseError: name ('value'): test1 txt
6test 12 ParseError: 'name=value' MISSING: test2 txt
6test 13 TypeError: type(name) ('value'): test1 txt
6test 14 TypeError: 'name=value' MISSING: test2 txt
6test 15 ClipError: name ('value'): test1 txt
6test 16 ClipError: 'name=value' MISSING: test2 txt
6test 17 CrossError: name ('value'): test1 txt
6test 18 CrossError: 'name=value' MISSING: test2 txt
6test 19 CSSError: name ('value'): test1 txt
6test 20 CSSError: 'name=value' MISSING: test2 txt
6test 21 EcefError: name ('value'): test1 txt
6test 22 EcefError: 'name=value' MISSING: test2 txt
6test 23 EllipticError: name ('value'): test1 txt
6test 24 EllipticError: 'name=value' MISSING: test2 txt
6test 25 EPSGError: name ('value'): test1 txt
6test 26 EPSGError: 'name=value' MISSING: test2 txt
6test 27 ETMError: name ('value'): test1 txt
6test 28 ETMError: 'name=value' MISSING: test2 txt
6test 29 FrechetError: name ('value'): test1 txt
6test 30 FrechetError: 'name=value' MISSING: test2 txt
6test 31 GARSError: name ('value'): test1 txt
6test 32 GARSError: 'name=value' MISSING: test2 txt
6test 33 GeohashError: name ('value'): test1 txt
6test 34 GeohashError: 'name=value' MISSING: test2 txt
6test 35 GeoidError: name ('value'): test1 txt
6test 36 GeoidError: 'name=value' MISSING: test2 txt
6test 37 HausdorffError: name ('value'): test1 txt
6test 38 HausdorffError: 'name=value' MISSING: test2 txt
6test 39 HeightError: name ('value'): test1 txt
6test 40 HeightError: 'name=value' MISSING: test2 txt
6test 41 LazyImportError: name ('value'): test1 txt
6test 42 LazyImportError: 'name=value' MISSING: test2 txt
6test 43 LCCError: name ('value'): test1 txt
6test 44 LCCError: 'name=value' MISSING: test2 txt
6test 45 MGRSError: name ('value'): test1 txt
6test 46 MGRSError: 'name=value' MISSING: test2 txt
6test 47 OSGRError: name ('value'): test1 txt
6test 48 OSGRError: 'name=value' MISSING: test2 txt
6test 49 PGMError: name ('value'): test1 txt
6test 50 PGMError: 'name=value' MISSING: test2 txt
6test 51 PointsError: name ('value'): test1 txt
6test 52 PointsError: 'name=value' MISSING: test2 txt
6test 53 SciPyError: name ('value'): test1 txt
6test 54 SciPyError: 'name=value' MISSING: test2 txt
6test 55 SciPyWarning: name ('value'): test1 txt
6test 56 SciPyWarning: 'name=value' MISSING: test2 txt
6test 57 TRFError: name ('value'): test1 txt
6test 58 TRFError: 'name=value' MISSING: test2 txt
6test 59 UnitError: name ('value'): test1 txt
6test 60 UnitError: 'name=value' MISSING: test2 txt
6test 61 UPSError: name ('value'): test1 txt
6test 62 UPSError: 'name=value' MISSING: test2 txt
6test 63 UTMError: name ('value'): test1 txt
6test 64 UTMError: 'name=value' MISSING: test2 txt
6test 65 UTMUPSError: name ('value'): test1 txt
6test 66 UTMUPSError: 'name=value' MISSING: test2 txt
6test 67 VectorError: name ('value'): test1 txt
6test 68 VectorError: 'name=value' MISSING: test2 txt
6test 69 VincentyError: name ('value'): test1 txt
6test 70 VincentyError: 'name=value' MISSING: test2 txt
6test 71 WebMercatorError: name ('value'): test1 txt
6test 72 WebMercatorError: 'name=value' MISSING: test2 txt
6test 73 WGRSError: name ('value'): test1 txt
6test 74 WGRSError: 'name=value' MISSING: test2 txt
6test 75 _InvalidError: zero (1): invalid
6test 76 _InvalidError: ValueError('zero (1): invalid')
6test 77 _InvalidError: one (2) or zero (1): outside
6test 78 _InvalidError: ValueError('one (2) or zero (1): outside')
6test 79 _InvalidError: one (2) or zero (1): outside
6test 80 _InvalidError: RangeError('one (2) or zero (1): outside')
6test 81 _IsnotError: _None (None): not an int or float
6test 82 _IsnotError: TypeError('_None (None): not an int or float')
6test 83 _IsnotError: _None (None): not a scalar
6test 84 _IsnotError: TypeError('_None (None): not a scalar')
6test 85 _IsnotError: _None (None): not a scalar
6test 86 _IsnotError: LimitError('_None (None): not a scalar')
6test 87 LenError: LenError(a, b, c, d) len 1 vs 2 vs 3 vs 4: invalid
6test 88 crosserrors: True
6test 89 crosserrors: False
6test 90 limiterrors: True
6test 91 limiterrors: False
6test 92 rangerrors: True
6test 93 rangerrors: False
6test 94 exception_chaining: False
6test 95 exception_chaining: None
6test 96 exception_chaining: None
6test 97 _xkwds_get: test1
6test 98 _xkwds_get: test2
6test 99 _xkwds_get: _xkwds_get(): no name=default kwargs
6test 100 _xkwds_get: _xkwds_get(n1='d1', n2='d2'): multiple name=default kwargs
6test 101 _xkwds_pop: test1
6test 102 _xkwds_pop: test2
6test 103 _xkwds_pop: _xkwds_pop(): no name=default kwargs
6test 104 _xkwds_pop: _xkwds_pop(n1='d1', n2='d2'): multiple name=default kwargs
6all 104 testErrors.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 1.152 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testEtm.py
6testing testEtm.py 22.05.14 (module pygeodesy.etm 22.10.12)
6testExactTransverseMercator(pygeodesy.etm, 22.10.12)
6test 1 name: test
6test 2 toStr: datum='WGS84', extendp=True, k0=0.9996, lon0=0.0, name='test'
6test 3 easting: -59401.921148
6test 4 northing: 4472390.031129
6test 5 gamma: -0.453697
6test 6 scale: 0.999643
6test 7 lat: 40.400000
6test 8 lon: -3.700000
6test 9 gamma: -0.453697
6test 10 scale: 0.999643
6test 11 easting: -59401.921148
6test 12 northing: 4472390.031129
6test 13 gamma: -0.453697
6test 14 scale: 0.999643
6test 15 easting: 25495.511523
6test 16 northing: 4461098.320889
6test 17 gamma: 0.194038
6test 18 scale: 0.999608
6test 19 lat: 40.300000
6test 20 lon: -74.700000
6test 21 gamma: 0.194038
6test 22 scale: 0.999608
6test 23 easting: 25495.511523
6test 24 northing: 4461098.320889
6test 25 gamma: 0.194038
6test 26 scale: 0.999608
6test 27 lat: -2.00000000
6test 28 lon: 88.00000000
6test 29 gamma: 67.63332900
6test 30 scale: 26.33699547
6test 31 easting: 29735142.37835701  FAILED, KNOWN, expected 29735142.37835703
6test 32 northing: 4235043.60793303  FAILED, KNOWN, expected 4235043.60793304
6test 33 gamma: 67.63332900
6test 34 scale: 26.33699547
6test 35 copy(ExactTransverseMercator): (<class 'pygeodesy.etm.ExactTransverseMercator'>, True)
6test 36 ExactTransverseMercator.copy(): (<class 'pygeodesy.etm.ExactTransverseMercator'>, True)
6testExactTransverseMercator(pygeodesy.etm, 22.10.12)
6test 37 name: test
6test 38 toStr: datum='WGS84', extendp=False, k0=0.9996, lon0=0.0, name='test'
6test 39 easting: -59401.921148
6test 40 northing: 4472390.031129
6test 41 gamma: -0.453697
6test 42 scale: 0.999643
6test 43 lat: 40.400000
6test 44 lon: -3.700000
6test 45 gamma: -0.453697
6test 46 scale: 0.999643
6test 47 easting: -59401.921148
6test 48 northing: 4472390.031129
6test 49 gamma: -0.453697
6test 50 scale: 0.999643
6test 51 easting: 25495.511523
6test 52 northing: 4461098.320889
6test 53 gamma: 0.194038
6test 54 scale: 0.999608
6test 55 lat: 40.300000
6test 56 lon: -74.700000
6test 57 gamma: 0.194038
6test 58 scale: 0.999608
6test 59 easting: 25495.511523
6test 60 northing: 4461098.320889
6test 61 gamma: 0.194038
6test 62 scale: 0.999608
6test 63 lat: -2.00000000
6test 64 lon: 88.00000000
6test 65 gamma: 67.63332900
6test 66 scale: 26.33699547
6test 67 easting: 0.000
6test 68 northing: -9997964.943
6test 69 gamma: 120.000
6test 70 scale: 1.000
6test 71 lat: -90.000
6test 72 lon: 0.000
6test 73 gamma: 0.000
6test 74 scale: 1.000
6test 75 copy(ExactTransverseMercator): (<class 'pygeodesy.etm.ExactTransverseMercator'>, True)
6test 76 ExactTransverseMercator.copy(): (<class 'pygeodesy.etm.ExactTransverseMercator'>, True)
6testLatLon(pygeodesy.etm, 22.10.12)
6test 77 toEtm8: 45 S -20297797 5336899
6test 78 name: test
6test 79 toUtm: 45 S -20297797 5336899
6test 80 name: test
6test 81 toETM5: 45 S -20297797 5336899
6test 82 copy(Etm): (<class 'pygeodesy.etm.Etm'>, True)
6test 83 .name: test
6test 84 Etm.copy(): (<class 'pygeodesy.etm.Etm'>, True)
6test 85 .name: test
6test 86 parse: 31 N 448251 5411932
6test 87 name: parse
6test 88 parse: 31 N 448251 5411932
6test 89 name: parse
6testLatLon(pygeodesy.etm, 22.10.12)
6test 90 toEtm8: 45 S -20297797 5336899
6test 91 name: test
6test 92 toUtm: 45 S -20297797 5336899
6test 93 name: test
6test 94 toETM5: 45 S -20297797 5336899
6test 95 copy(Etm): (<class 'pygeodesy.etm.Etm'>, True)
6test 96 .name: test
6test 97 Etm.copy(): (<class 'pygeodesy.etm.Etm'>, True)
6test 98 .name: test
6test 99 parse: 31 N 448251 5411932
6test 100 name: parse
6test 101 parse: 31 N 448251 5411932
6test 102 name: parse
62 of 102 testEtm.py tests (2.0%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 63.482 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testEtmTMcoords.py
6testing testEtmTMcoords.py 22.10.04 (module pygeodesy.etm 22.10.12)
6test 1 line 1 toEtm8.easting: 1548706.791619
6test 2 line 1 toEtm8.northing: 8451449.198772
6test 3 line 1 toEtm8.gamma: 43.922790
6test 4 line 1 toEtm8.scale: 1.029060
6test 5 line 1 toEtm8.lat: 70.579277
6test 6 line 1 toEtm8.lon: 45.599420
6test 7 line 2 toEtm8.easting: 2624150.740929
6test 8 line 2 toEtm8.northing: 1204434.041605
6test 9 line 2 toEtm8.gamma: 4.292619
6test 10 line 2 toEtm8.scale: 1.086051
6test 11 line 2 toEtm8.lat: 10.018894
6test 12 line 2 toEtm8.lon: 23.313324
6test 13 line 3 toEtm8.easting: 9855841.232935
6test 14 line 3 toEtm8.northing: 6145496.115155
6test 15 line 3 toEtm8.gamma: 53.348315
6test 16 line 3 toEtm8.scale: 2.445098
6test 17 line 3 toEtm8.lat: 19.479896
6test 18 line 3 toEtm8.lon: 75.662049
6test 19 line 4 toEtm8.easting: 3206390.691996
6test 20 line 4 toEtm8.northing: 2650745.400406
6test 21 line 4 toEtm8.gamma: 11.666950
6test 22 line 4 toEtm8.scale: 1.129359
6test 23 line 4 toEtm8.lat: 21.072465
6test 24 line 4 toEtm8.lon: 29.828684
6test 25 line 5 toEtm8.easting: 4328154.083501
6test 26 line 5 toEtm8.northing: 749647.623690
6test 27 line 5 toEtm8.gamma: 4.024317
6test 28 line 5 toEtm8.scale: 1.240829
6test 29 line 5 toEtm8.lat: 5.458957
6test 30 line 5 toEtm8.lon: 36.385237
6test 31 line 6 toEtm8.easting: 847598.266514
6test 32 line 6 toEtm8.northing: 7947180.962440
6test 33 line 6 toEtm8.gamma: 21.639091
6test 34 line 6 toEtm8.scale: 1.008399
6test 35 line 6 toEtm8.lat: 70.175454
6test 36 line 6 toEtm8.lon: 22.865350
6test 37 line 7 toEtm8.easting: 2727657.337974
6test 38 line 7 toEtm8.northing: 8283916.696410
6test 39 line 7 toEtm8.gamma: 55.690909
6test 40 line 7 toEtm8.scale: 1.091942
6test 41 line 7 toEtm8.lat: 61.965605
6test 42 line 7 toEtm8.lon: 58.931371
6test 43 line 8 toEtm8.easting: 2331001.751890
6test 44 line 8 toEtm8.northing: 1313608.224751
6test 45 line 8 toEtm8.gamma: 4.214690
6test 46 line 8 toEtm8.scale: 1.067599
6test 47 line 8 toEtm8.lat: 11.116050
6test 48 line 8 toEtm8.lon: 20.901069
6test 49 line 9 toEtm8.easting: 6035557.239480
6test 50 line 9 toEtm8.northing: 5791770.791879
6test 51 line 9 toEtm8.gamma: 43.698170
6test 52 line 9 toEtm8.scale: 1.481260
6test 53 line 9 toEtm8.lat: 32.210543
6test 54 line 9 toEtm8.lon: 60.705849
6test 55 line 10 toEtm8.easting: 1064553.125852
6test 56 line 10 toEtm8.northing: 9417273.737208
6test 57 line 10 toEtm8.gamma: 61.100380
6test 58 line 10 toEtm8.scale: 1.013475
6test 59 line 10 toEtm8.lat: 79.187451
6test 60 line 10 toEtm8.lon: 61.532382
6test 61 line 11 toEtm8.easting: 1400137.116164
6test 62 line 11 toEtm8.northing: 9616907.017686
6test 63 line 11 toEtm8.gamma: 74.527087
6test 64 line 11 toEtm8.scale: 1.023640
6test 65 line 11 toEtm8.lat: 77.103759
6test 66 line 11 toEtm8.lon: 74.899105
6test 67 line 12 toEtm8.easting: 9860691.016626
6test 68 line 12 toEtm8.northing: 7433039.143328
6test 69 line 12 toEtm8.gamma: 65.357693
6test 70 line 12 toEtm8.scale: 2.438973
6test 71 line 12 toEtm8.lat: 21.889514
6test 72 line 12 toEtm8.lon: 80.019886
6test 73 line 13 toEtm8.easting: 8076501.833695
6test 74 line 13 toEtm8.northing: 8561614.174782
6test 75 line 13 toEtm8.gamma: 75.073393
6test 76 line 13 toEtm8.scale: 1.906202
6test 77 line 13 toEtm8.lat: 30.536296
6test 78 line 13 toEtm8.lon: 82.186178
6test 79 line 14 toEtm8.easting: 3335099.866623
6test 80 line 14 toEtm8.northing: 6740519.084015
6test 81 line 14 toEtm8.gamma: 40.611821
6test 82 line 14 toEtm8.scale: 1.139021
6test 83 line 14 toEtm8.lat: 49.990485
6test 84 line 14 toEtm8.lon: 48.203179
6test 85 line 15 toEtm8.easting: 12051574.928500
6test 86 line 15 toEtm8.northing: 6587213.051951
6test 87 line 15 toEtm8.gamma: 59.033237
6test 88 line 15 toEtm8.scale: 3.357469
6test 89 line 15 toEtm8.lat: 14.486312
6test 90 line 15 toEtm8.lon: 80.905137
6test 91 line 16 toEtm8.easting: 5387578.735298
6test 92 line 16 toEtm8.northing: 4111216.907168
6test 93 line 16 toEtm8.gamma: 27.574337
6test 94 line 16 toEtm8.scale: 1.379357
6test 95 line 16 toEtm8.lat: 25.936824
6test 96 line 16 toEtm8.lon: 49.913598
6test 97 line 17 toEtm8.easting: 2622214.380233
6test 98 line 17 toEtm8.northing: 8678923.984567
6test 99 line 17 toEtm8.gamma: 61.697275
6test 100 line 17 toEtm8.scale: 1.084810
6test 101 line 17 toEtm8.lat: 64.402196
6test 102 line 17 toEtm8.lon: 64.091395
6test 103 line 18 toEtm8.easting: 5068474.169633
6test 104 line 18 toEtm8.northing: 9492066.993709
6test 105 line 18 toEtm8.gamma: 83.156740
6test 106 line 18 toEtm8.scale: 1.329990
6test 107 line 18 toEtm8.lat: 48.451354
6test 108 line 18 toEtm8.lon: 84.856198
6test 109 line 19 toEtm8.easting: 738062.047779
6test 110 line 19 toEtm8.northing: 3031007.074116
6test 111 line 19 toEtm8.gamma: 3.416802
6test 112 line 19 toEtm8.scale: 1.006332
6test 113 line 19 toEtm8.lat: 27.203895
6test 114 line 19 toEtm8.lon: 7.440229
6test 115 line 20 toEtm8.easting: 1944413.834565
6test 116 line 20 toEtm8.northing: 9613299.224493
6test 117 line 20 toEtm8.gamma: 78.462831
6test 118 line 20 toEtm8.scale: 1.046134
6test 119 line 20 toEtm8.lat: 72.509000
6test 120 line 20 toEtm8.lon: 78.982283
6test 121 line 21 toEtm8.easting: 2114521.418406
6test 122 line 21 toEtm8.northing: 4954077.440098
6test 123 line 21 toEtm8.gamma: 17.571878
6test 124 line 21 toEtm8.scale: 1.055093
6test 125 line 21 toEtm8.lat: 41.824954
6test 126 line 21 toEtm8.lon: 25.392744
6test 127 line 22 toEtm8.easting: 620365.905090
6test 128 line 22 toEtm8.northing: 4755542.026562
6test 129 line 22 toEtm8.gamma: 5.152022
6test 130 line 22 toEtm8.scale: 1.004338
6test 131 line 22 toEtm8.lat: 42.701376
6test 132 line 22 toEtm8.lon: 7.572738
6test 133 line 23 toEtm8.easting: 263004.770989
6test 134 line 23 toEtm8.northing: 4493669.762451
6test 135 line 23 toEtm8.gamma: 2.020523
6test 136 line 23 toEtm8.scale: 1.000452
6test 137 line 23 toEtm8.lat: 40.552052
6test 138 line 23 toEtm8.lon: 3.106056
6test 139 line 24 toEtm8.easting: 3217221.739462
6test 140 line 24 toEtm8.northing: 437776.119161
6test 141 line 24 toEtm8.gamma: 1.848169
6test 142 line 24 toEtm8.scale: 1.130558
6test 143 line 24 toEtm8.lat: 3.501242
6test 144 line 24 toEtm8.lon: 27.806507
6test 145 line 25 toEtm8.easting: 14661142.444961
6test 146 line 25 toEtm8.northing: 7476100.824185
6test 147 line 25 toEtm8.gamma: 68.376669
6test 148 line 25 toEtm8.scale: 4.896650
6test 149 line 25 toEtm8.lat: 10.148715
6test 150 line 25 toEtm8.lon: 85.373768
6test 151 line 26 toEtm8.easting: 967777.158554
6test 152 line 26 toEtm8.northing: 6615684.266592
6test 153 line 26 toEtm8.gamma: 14.410044
6test 154 line 26 toEtm8.scale: 1.011100
6test 155 line 26 toEtm8.lat: 58.582623
6test 156 line 26 toEtm8.lon: 16.755558
6test 157 line 27 toEtm8.easting: 7558840.728461
6test 158 line 27 toEtm8.northing: 4144728.130764
6test 159 line 27 toEtm8.gamma: 32.557264
6test 160 line 27 toEtm8.scale: 1.791490
6test 161 line 27 toEtm8.lat: 19.793004
6test 162 line 27 toEtm8.lon: 61.746763
6test 163 line 28 toEtm8.easting: 1056008.314161
6test 164 line 28 toEtm8.northing: 9290799.692669
6test 165 line 28 toEtm8.gamma: 55.843278
6test 166 line 28 toEtm8.scale: 1.013253
6test 167 line 28 toEtm8.lat: 78.666776
6test 168 line 28 toEtm8.lon: 56.365355
6test 169 line 29 toEtm8.easting: 1943965.134687
6test 170 line 29 toEtm8.northing: 1389972.228690
6test 171 line 29 toEtm8.gamma: 3.774869
6test 172 line 29 toEtm8.scale: 1.046724
6test 173 line 29 toEtm8.lat: 11.998788
6test 174 line 29 toEtm8.lon: 17.597873
6test 175 line 30 toEtm8.easting: 5803077.072902
6test 176 line 30 toEtm8.northing: 5649957.943659
6test 177 line 30 toEtm8.gamma: 41.717943
6test 178 line 30 toEtm8.scale: 1.442572
6test 179 line 30 toEtm8.lat: 32.540378
6test 180 line 30 toEtm8.lon: 58.764613
6test 181 line 31 toEtm8.easting: 2928716.986009
6test 182 line 31 toEtm8.northing: 5731835.058317
6test 183 line 31 toEtm8.gamma: 28.538550
6test 184 line 31 toEtm8.scale: 1.106780
6test 185 line 31 toEtm8.lat: 45.160356
6test 186 line 31 toEtm8.lon: 37.465285
6test 187 line 32 toEtm8.easting: 326141.975756
6test 188 line 32 toEtm8.northing: 8881325.164543
6test 189 line 32 toEtm8.gamma: 16.111415
6test 190 line 32 toEtm8.scale: 1.000900
6test 191 line 32 toEtm8.lat: 79.584190
6test 192 line 32 toEtm8.lon: 16.367006
6test 193 line 33 toEtm8.easting: 3933015.267450
6test 194 line 33 toEtm8.northing: 7932373.909512
6test 195 line 33 toEtm8.gamma: 58.577424
6test 196 line 33 toEtm8.scale: 1.194811
6test 197 line 33 toEtm8.lat: 52.470664
6test 198 line 33 toEtm8.lon: 64.125580
6test 199 line 34 toEtm8.easting: 8598926.983213
6test 200 line 34 toEtm8.northing: 6214135.167503
6test 201 line 34 toEtm8.gamma: 52.612878
6test 202 line 34 toEtm8.scale: 2.051367
6test 203 line 34 toEtm8.lat: 23.702673
6test 204 line 34 toEtm8.lon: 72.630363
6test 205 line 35 toEtm8.easting: 6620553.333772
6test 206 line 35 toEtm8.northing: 6540527.122948
6test 207 line 35 toEtm8.gamma: 52.350140
6test 208 line 35 toEtm8.scale: 1.586614
6test 209 line 35 toEtm8.lat: 32.603520
6test 210 line 35 toEtm8.lon: 67.280123
6test 211 line 36 toEtm8.easting: 1515136.758292
6test 212 line 36 toEtm8.northing: 3858996.087537
6test 213 line 36 toEtm8.gamma: 9.225127
6test 214 line 36 toEtm8.scale: 1.028029
6test 215 line 36 toEtm8.lat: 33.776224
6test 216 line 36 toEtm8.lon: 16.280993
6test 217 line 37 toEtm8.easting: 479854.373445
6test 218 line 37 toEtm8.northing: 8980501.389896
6test 219 line 37 toEtm8.gamma: 25.021222
6test 220 line 37 toEtm8.scale: 1.002415
6test 221 line 37 toEtm8.lat: 79.932747
6test 222 line 37 toEtm8.lon: 25.363622
6test 223 line 38 toEtm8.easting: 5243446.564940
6test 224 line 38 toEtm8.northing: 140657.213960
6test 225 line 38 toEtm8.gamma: 0.862817
6test 226 line 38 toEtm8.scale: 1.360358
6test 227 line 38 toEtm8.lat: 0.935056
6test 228 line 38 toEtm8.lon: 42.538824
6test 229 line 39 toEtm8.easting: 12806457.923218
6test 230 line 39 toEtm8.northing: 7170118.684675
6test 231 line 39 toEtm8.gamma: 64.708921
6test 232 line 39 toEtm8.scale: 3.740588
6test 233 line 39 toEtm8.lat: 13.490862
6test 234 line 39 toEtm8.lon: 83.178380
6test 235 line 40 toEtm8.easting: 1202993.459158
6test 236 line 40 toEtm8.northing: 5557316.053599
6test 237 line 40 toEtm8.gamma: 12.579061
6test 238 line 40 toEtm8.scale: 1.017426
6test 239 line 40 toEtm8.lat: 48.979057
6test 240 line 40 toEtm8.lon: 16.474542
6test 241 line 41 toEtm8.easting: 1729088.710196
6test 242 line 41 toEtm8.northing: 7770874.289954
6test 243 line 41 toEtm8.gamma: 36.021783
6test 244 line 41 toEtm8.scale: 1.036397
6test 245 line 41 toEtm8.lat: 65.036016
6test 246 line 41 toEtm8.lon: 38.729091
6test 247 line 42 toEtm8.easting: 2437301.517425
6test 248 line 42 toEtm8.northing: 5539327.748318
6test 249 line 42 toEtm8.gamma: 23.461879
6test 250 line 42 toEtm8.scale: 1.073459
6test 251 line 42 toEtm8.lat: 45.510091
6test 252 line 42 toEtm8.lon: 31.303729
6test 253 line 43 toEtm8.easting: 3647186.135066
6test 254 line 43 toEtm8.northing: 2086412.330983
6test 255 line 43 toEtm8.gamma: 10.023991
6test 256 line 43 toEtm8.scale: 1.168707
6test 257 line 43 toEtm8.lat: 16.058010
6test 258 line 43 toEtm8.lon: 32.520026
6test 259 line 44 toEtm8.easting: 1818497.243556
6test 260 line 44 toEtm8.northing: 4275471.745057
6test 261 line 44 toEtm8.gamma: 12.499656
6test 262 line 44 toEtm8.scale: 1.040604
6test 263 line 44 toEtm8.lat: 36.845200
6test 264 line 44 toEtm8.lon: 20.282283
6test 265 line 45 toEtm8.easting: 3751304.113783
6test 266 line 45 toEtm8.northing: 5130454.001592
6test 267 line 45 toEtm8.gamma: 28.959707
6test 268 line 45 toEtm8.scale: 1.177681
6test 269 line 45 toEtm8.lat: 37.865481
6test 270 line 45 toEtm8.lon: 41.990402
6test 271 line 46 toEtm8.easting: 2616733.138544
6test 272 line 46 toEtm8.northing: 394644.463815
6test 273 line 46 toEtm8.gamma: 1.390425
6test 274 line 46 toEtm8.scale: 1.085595
6test 275 line 46 toEtm8.lat: 3.287272
6test 276 line 46 toEtm8.lon: 22.917604
6test 277 line 47 toEtm8.easting: 1756506.573942
6test 278 line 47 toEtm8.northing: 5570393.986394
6test 279 line 47 toEtm8.gamma: 17.897894
6test 280 line 47 toEtm8.scale: 1.037732
6test 281 line 47 toEtm8.lat: 47.813686
6test 282 line 47 toEtm8.lon: 23.545092
6test 283 line 48 toEtm8.easting: 8752461.894711
6test 284 line 48 toEtm8.northing: 6087728.152284
6test 285 line 48 toEtm8.gamma: 51.628465
6test 286 line 48 toEtm8.scale: 2.095465
6test 287 line 48 toEtm8.lat: 22.836853
6test 288 line 48 toEtm8.lon: 72.604385
6test 289 line 49 toEtm8.easting: 1309272.216432
6test 290 line 49 toEtm8.northing: 59520.028899
6test 291 line 49 toEtm8.gamma: 0.109069
6test 292 line 49 toEtm8.scale: 1.020897
6test 293 line 49 toEtm8.lat: 0.527262
6test 294 line 49 toEtm8.lon: 11.684209
6test 295 line 50 toEtm8.easting: 328652.277129
6test 296 line 50 toEtm8.northing: 2233043.958874
6test 297 line 50 toEtm8.gamma: 1.084863
6test 298 line 50 toEtm8.scale: 1.000935
6test 299 line 50 toEtm8.lat: 20.166742
6test 300 line 50 toEtm8.lon: 3.143948
6test 301 line 51 toEtm8.easting: 8637959.716447
6test 302 line 51 toEtm8.northing: 9190635.156031
6test 303 line 51 toEtm8.gamma: 81.802563
6test 304 line 51 toEtm8.scale: 2.054329
6test 305 line 51 toEtm8.lat: 28.604629
6test 306 line 51 toEtm8.lon: 85.988721
6test 307 line 52 toEtm8.easting: 8548521.455147
6test 308 line 52 toEtm8.northing: 9172410.943282
6test 309 line 52 toEtm8.gamma: 81.583928
6test 310 line 52 toEtm8.scale: 2.029641
6test 311 line 52 toEtm8.lat: 28.984048
6test 312 line 52 toEtm8.lon: 85.833448
6test 313 line 53 toEtm8.easting: 796987.281104
6test 314 line 53 toEtm8.northing: 7677446.357675
6test 315 line 53 toEtm8.gamma: 18.084472
6test 316 line 53 toEtm8.scale: 1.007381
6test 317 line 53 toEtm8.lat: 68.071020
6test 318 line 53 toEtm8.lon: 19.392823
6test 319 line 54 toEtm8.easting: 3291036.496762
6test 320 line 54 toEtm8.northing: 9513199.600666
6test 321 line 54 toEtm8.gamma: 80.890254
6test 322 line 54 toEtm8.scale: 1.134826
6test 323 line 54 toEtm8.lat: 61.416576
6test 324 line 54 toEtm8.lon: 81.981611
6test 325 line 55 toEtm8.easting: 7087225.330906
6test 326 line 55 toEtm8.northing: 8382823.855822
6test 327 line 55 toEtm8.gamma: 72.253756
6test 328 line 55 toEtm8.scale: 1.678070
6test 329 line 55 toEtm8.lat: 35.074753
6test 330 line 55 toEtm8.lon: 79.496003
6test 331 line 56 toEtm8.easting: 5090358.125724
6test 332 line 56 toEtm8.northing: 4318294.133489
6test 333 line 56 toEtm8.gamma: 28.266280
6test 334 line 56 toEtm8.scale: 1.336264
6test 335 line 56 toEtm8.lat: 28.078790
6test 336 line 56 toEtm8.lon: 48.684350
6test skipped (1): line 57 toEtm8.'84.986930137199 2.067177857261 20163.0752214330146 9438635.9888499043815 2.059277291707588222 .99960496589466017622'
6test 337 line 58 toEtm8.easting: 3447670.550785
6test 338 line 58 toEtm8.northing: 3680238.888223
6test 339 line 58 toEtm8.gamma: 17.934948
6test 340 line 58 toEtm8.scale: 1.149831
6test 341 line 58 toEtm8.lat: 28.473948
6test 342 line 58 toEtm8.lon: 34.127306
6test 343 line 59 toEtm8.easting: 3396522.906798
6test 344 line 59 toEtm8.northing: 8093659.687593
6test 345 line 59 toEtm8.gamma: 57.747117
6test 346 line 59 toEtm8.scale: 1.144006
6test 347 line 59 toEtm8.lat: 56.629354
6test 348 line 59 toEtm8.lon: 62.196474
6test 349 line 60 toEtm8.easting: 11249894.100784
6test 350 line 60 toEtm8.northing: 1619226.506299
6test 351 line 60 toEtm8.gamma: 14.210358
6test 352 line 60 toEtm8.scale: 3.048347
6test 353 line 60 toEtm8.lat: 4.747762
6test 354 line 60 toEtm8.lon: 70.932555
6test 355 line 61 toEtm8.easting: 6808805.230950
6test 356 line 61 toEtm8.northing: 8044779.777369
6test 357 line 61 toEtm8.gamma: 68.242008
6test 358 line 61 toEtm8.scale: 1.621464
6test 359 line 61 toEtm8.lat: 35.882113
6test 360 line 61 toEtm8.lon: 76.741849
6test 361 line 62 toEtm8.easting: 2306021.556506
6test 362 line 62 toEtm8.northing: 757191.592866
6test 363 line 62 toEtm8.gamma: 2.385686
6test 364 line 62 toEtm8.scale: 1.066159
6test 365 line 62 toEtm8.lat: 6.420705
6test 366 line 62 toEtm8.lon: 20.416028
6test 367 line 63 toEtm8.easting: 1547406.313862
6test 368 line 63 toEtm8.northing: 6048712.751824
6test 369 line 63 toEtm8.gamma: 18.474372
6test 370 line 63 toEtm8.scale: 1.029123
6test 371 line 63 toEtm8.lat: 52.335248
6test 372 line 63 toEtm8.lon: 22.879294
6test 373 line 64 toEtm8.easting: 2430467.650383
6test 374 line 64 toEtm8.northing: 7557167.613972
6test 375 line 64 toEtm8.gamma: 42.110021
6test 376 line 64 toEtm8.scale: 1.072759
6test 377 line 64 toEtm8.lat: 59.846391
6test 378 line 64 toEtm8.lon: 46.262536
6test 379 line 65 toEtm8.easting: 2334053.905830
6test 380 line 65 toEtm8.northing: 1948076.966582
6test 381 line 65 toEtm8.gamma: 6.353185
6test 382 line 65 toEtm8.scale: 1.067733
6test 383 line 65 toEtm8.lat: 16.461790
6test 384 line 65 toEtm8.lon: 21.433269
6test 385 line 66 toEtm8.easting: 5564175.186737
6test 386 line 66 toEtm8.northing: 1836851.660412
6test 387 line 66 toEtm8.gamma: 11.870682
6test 388 line 66 toEtm8.scale: 1.408265
6test 389 line 66 toEtm8.lat: 11.707905
6test 390 line 66 toEtm8.lon: 45.827075
6test 391 line 67 toEtm8.easting: 6118505.590359
6test 392 line 67 toEtm8.northing: 7631684.552421
6test 393 line 67 toEtm8.gamma: 62.477323
6test 394 line 67 toEtm8.scale: 1.493420
6test 395 line 67 toEtm8.lat: 38.519075
6test 396 line 67 toEtm8.lon: 71.935918
6test 397 line 68 toEtm8.easting: 7365359.294665
6test 398 line 68 toEtm8.northing: 8818194.451531
6test 399 line 68 toEtm8.gamma: 77.207042
6test 400 line 68 toEtm8.scale: 1.737639
6test 401 line 68 toEtm8.lat: 34.264007
6test 402 line 68 toEtm8.lon: 82.647878
6test 403 line 69 toEtm8.easting: 36187.342415
6test 404 line 69 toEtm8.northing: 2142565.324802
6test 405 line 69 toEtm8.gamma: 0.114334
6test 406 line 69 toEtm8.scale: 0.999616
6test 407 line 69 toEtm8.lat: 19.376880
6test 408 line 69 toEtm8.lon: 0.344605
6test 409 line 70 toEtm8.easting: 2380328.546851
6test 410 line 70 toEtm8.northing: 8440109.872384
6test 411 line 70 toEtm8.gamma: 55.076067
6test 412 line 70 toEtm8.scale: 1.069658
6test 413 line 70 toEtm8.lat: 65.075805
6test 414 line 70 toEtm8.lon: 57.653438
6test 415 line 71 toEtm8.easting: 582511.608826
6test 416 line 71 toEtm8.northing: 8876047.217071
6test 417 line 71 toEtm8.gamma: 27.133300
6test 418 line 71 toEtm8.scale: 1.003749
6test 419 line 71 toEtm8.lat: 78.691870
6test 420 line 71 toEtm8.lon: 27.591736
6test 421 line 72 toEtm8.easting: 899441.350477
6test 422 line 72 toEtm8.northing: 4582046.430516
6test 423 line 72 toEtm8.gamma: 7.031211
6test 424 line 72 toEtm8.scale: 1.009573
6test 425 line 72 toEtm8.lat: 40.893022
6test 426 line 72 toEtm8.lon: 10.668804
6test 427 line 73 toEtm8.easting: 5022485.124337
6test 428 line 73 toEtm8.northing: 9741774.933721
6test 429 line 73 toEtm8.gamma: 86.505947
6test 430 line 73 toEtm8.scale: 1.323700
6test 431 line 73 toEtm8.lat: 48.914279
6test 432 line 73 toEtm8.lon: 87.359268
6test 433 line 74 toEtm8.easting: 6701004.587204
6test 434 line 74 toEtm8.northing: 2954368.258231
6test 435 line 74 toEtm8.gamma: 21.560153
6test 436 line 74 toEtm8.scale: 1.608554
6test 437 line 74 toEtm8.lat: 16.208377
6test 438 line 74 toEtm8.lon: 54.494282
6test 439 line 75 toEtm8.easting: 454986.218897
6test 440 line 75 toEtm8.northing: 4885087.887884
6test 441 line 75 toEtm8.gamma: 3.945648
6test 442 line 75 toEtm8.scale: 1.002147
6test 443 line 75 toEtm8.lat: 43.977936
6test 444 line 75 toEtm8.lon: 5.672541
6test 445 line 76 toEtm8.easting: 8903956.140311
6test 446 line 76 toEtm8.northing: 8470608.577482
6test 447 line 76 toEtm8.gamma: 74.723116
6test 448 line 76 toEtm8.scale: 2.131311
6test 449 line 76 toEtm8.lat: 26.850861
6test 450 line 76 toEtm8.lon: 82.834480
6test 451 line 77 toEtm8.easting: 1547627.594741
6test 452 line 77 toEtm8.northing: 6036584.538347
6test 453 line 77 toEtm8.gamma: 18.407629
6test 454 line 77 toEtm8.scale: 1.029132
6test 455 line 77 toEtm8.lat: 52.234165
6test 456 line 77 toEtm8.lon: 22.827655
6test 457 line 78 toEtm8.easting: 5221488.778597
6test 458 line 78 toEtm8.northing: 1762592.044392
6test 459 line 78 toEtm8.gamma: 10.927880
6test 460 line 78 toEtm8.scale: 1.356721
6test 461 line 78 toEtm8.lat: 11.674646
6test 462 line 78 toEtm8.lon: 43.500147
6test 463 line 79 toEtm8.easting: 4880570.297161
6test 464 line 79 toEtm8.northing: 3325433.988867
6test 465 line 79 toEtm8.gamma: 20.469862
6test 466 line 79 toEtm8.scale: 1.308476
6test 467 line 79 toEtm8.lat: 22.492753
6test 468 line 79 toEtm8.lon: 44.179153
6test 469 line 80 toEtm8.easting: 23930680.082694
6test 470 line 80 toEtm8.northing: 7491462.099038
6test 471 line 80 toEtm8.gamma: 75.937628
6test 472 line 80 toEtm8.scale: 15.556365
6test 473 line 80 toEtm8.lat: 0.910999
6test 474 line 80 toEtm8.lon: 88.548823
6test 475 line 81 toEtm8.easting: 71519.450458
6test 476 line 81 toEtm8.northing: 3654740.444852
6test 477 line 81 toEtm8.gamma: 0.417448
6test 478 line 81 toEtm8.scale: 0.999663
6test 479 line 81 toEtm8.lat: 33.028802
6test 480 line 81 toEtm8.lon: 0.765843
6test 481 line 82 toEtm8.easting: 4152797.795220
6test 482 line 82 toEtm8.northing: 7823098.502751
6test 483 line 82 toEtm8.gamma: 58.238901
6test 484 line 82 toEtm8.scale: 1.218052
6test 485 line 82 toEtm8.lat: 50.649195
6test 486 line 82 toEtm8.lon: 64.389076
6test 487 line 83 toEtm8.easting: 2926725.707639
6test 488 line 83 toEtm8.northing: 7904918.072844
6test 489 line 83 toEtm8.gamma: 51.592748
6test 490 line 83 toEtm8.scale: 1.106206
6test 491 line 83 toEtm8.lat: 58.820640
6test 492 line 83 toEtm8.lon: 55.841048
6test 493 line 84 toEtm8.easting: 1325509.113869
6test 494 line 84 toEtm8.northing: 9675214.948213
6test 495 line 84 toEtm8.gamma: 76.116213
6test 496 line 84 toEtm8.scale: 1.021136
6test 497 line 84 toEtm8.lat: 77.865762
6test 498 line 84 toEtm8.lon: 76.414618
6test 499 line 85 toEtm8.easting: 3045296.448926
6test 500 line 85 toEtm8.northing: 542153.443280
6test 501 line 85 toEtm8.gamma: 2.185095
6test 502 line 85 toEtm8.scale: 1.116664
6test 503 line 85 toEtm8.lat: 4.389639
6test 504 line 85 toEtm8.lon: 26.458976
6test 505 line 86 toEtm8.easting: 11843870.887518
6test 506 line 86 toEtm8.northing: 5912803.073343
6test 507 line 86 toEtm8.gamma: 52.814259
6test 508 line 86 toEtm8.scale: 3.267256
6test 509 line 86 toEtm8.lat: 13.924448
6test 510 line 86 toEtm8.lon: 79.017873
6test 511 line 87 toEtm8.easting: 8891099.704936
6test 512 line 87 toEtm8.northing: 162160.142227
6test 513 line 87 toEtm8.gamma: 1.312094
6test 514 line 87 toEtm8.scale: 2.157363
6test 515 line 87 toEtm8.lat: 0.679713
6test 516 line 87 toEtm8.lon: 62.036792
6test 517 line 88 toEtm8.easting: 4784814.214449
6test 518 line 88 toEtm8.northing: 2984497.432580
6test 519 line 88 toEtm8.gamma: 17.946545
6test 520 line 88 toEtm8.scale: 1.296116
6test 521 line 88 toEtm8.lat: 20.478281
6test 522 line 88 toEtm8.lon: 42.678234
6test 523 line 89 toEtm8.easting: 1772074.682154
6test 524 line 89 toEtm8.northing: 9491552.560143
6test 525 line 89 toEtm8.gamma: 73.634830
6test 526 line 89 toEtm8.scale: 1.038202
6test 527 line 89 toEtm8.lat: 73.695703
6test 528 line 89 toEtm8.lon: 74.259097
6test 529 line 90 toEtm8.easting: 1907649.782106
6test 530 line 90 toEtm8.northing: 6994232.429379
6test 531 line 90 toEtm8.gamma: 29.718929
6test 532 line 90 toEtm8.scale: 1.044503
6test 533 line 90 toEtm8.lat: 58.569370
6test 534 line 90 toEtm8.lon: 33.777549
6test 535 line 91 toEtm8.easting: 2084423.818962
6test 536 line 91 toEtm8.northing: 2211816.035619
6test 537 line 91 toEtm8.gamma: 6.556448
6test 538 line 91 toEtm8.scale: 1.053793
6test 539 line 91 toEtm8.lat: 18.933881
6test 540 line 91 toEtm8.lon: 19.492695
6test 541 line 92 toEtm8.easting: 1064373.671729
6test 542 line 92 toEtm8.northing: 7812482.547461
6test 543 line 92 toEtm8.gamma: 24.874124
6test 544 line 92 toEtm8.scale: 1.013490
6test 545 line 92 toEtm8.lat: 68.317934
6test 546 line 92 toEtm8.lon: 26.515687
6test 547 line 93 toEtm8.easting: 4770385.479297
6test 548 line 93 toEtm8.northing: 9734318.902980
6test 549 line 93 toEtm8.gamma: 86.273119
6test 550 line 93 toEtm8.scale: 1.290553
6test 551 line 93 toEtm8.lat: 50.641941
6test 552 line 93 toEtm8.lon: 87.111557
6test 553 line 94 toEtm8.easting: 6398096.677297
6test 554 line 94 toEtm8.northing: 4410894.752104
6test 555 line 94 toEtm8.gamma: 32.558023
6test 556 line 94 toEtm8.scale: 1.548004
6test 557 line 94 toEtm8.lat: 24.411298
6test 558 line 94 toEtm8.lon: 56.881823
6test 559 line 95 toEtm8.easting: 3138623.300415
6test 560 line 95 toEtm8.northing: 3082960.600798
6test 561 line 95 toEtm8.gamma: 13.557672
6test 562 line 95 toEtm8.scale: 1.123724
6test 563 line 95 toEtm8.lat: 24.571871
6test 564 line 95 toEtm8.lon: 30.073097
6test 565 line 96 toEtm8.easting: 2748325.794651
6test 566 line 96 toEtm8.northing: 4202811.912668
6test 567 line 96 toEtm8.gamma: 17.578706
6test 568 line 96 toEtm8.scale: 1.094102
6test 569 line 96 toEtm8.lat: 34.202576
6test 570 line 96 toEtm8.lon: 29.383166
6test 571 line 97 toEtm8.easting: 6677830.630367
6test 572 line 97 toEtm8.northing: 5350071.837395
6test 573 line 97 toEtm8.gamma: 41.306641
6test 574 line 97 toEtm8.scale: 1.599774
6test 575 line 97 toEtm8.lat: 27.756285
6test 576 line 97 toEtm8.lon: 61.881905
6test 577 line 98 toEtm8.easting: 5941536.667431
6test 578 line 98 toEtm8.northing: 3293112.175140
6test 579 line 98 toEtm8.gamma: 22.752845
6test 580 line 98 toEtm8.scale: 1.468473
6test 581 line 98 toEtm8.lat: 19.742270
6test 582 line 98 toEtm8.lon: 50.957821
6test 583 line 99 toEtm8.easting: 3152481.792567
6test 584 line 99 toEtm8.northing: 5903048.837978
6test 585 line 99 toEtm8.gamma: 31.494606
6test 586 line 99 toEtm8.scale: 1.124085
6test 587 line 99 toEtm8.lat: 45.453582
6test 588 line 99 toEtm8.lon: 40.659833
6test 589 line 100 toEtm8.easting: 10460475.897730
6test 590 line 100 toEtm8.northing: 2553463.624391
6test 591 line 100 toEtm8.gamma: 21.965869
6test 592 line 100 toEtm8.scale: 2.700296
6test 593 line 100 toEtm8.lat: 8.322144
6test 594 line 100 toEtm8.lon: 69.488157
6test 595 line 101 toEtm8.easting: 1964010.778021
6test 596 line 101 toEtm8.northing: 5634042.923056
6test 597 line 101 toEtm8.gamma: 20.117800
6test 598 line 101 toEtm8.scale: 1.047344
6test 599 line 101 toEtm8.lat: 47.749831
6test 600 line 101 toEtm8.lon: 26.322002
6test 601 line 102 toEtm8.easting: 2065306.424934
6test 602 line 102 toEtm8.northing: 2135008.468651
6test 603 line 102 toEtm8.gamma: 6.258981
6test 604 line 102 toEtm8.scale: 1.052800
6test 605 line 102 toEtm8.lat: 18.297493
6test 606 line 102 toEtm8.lon: 19.244669
6test 607 line 103 toEtm8.easting: 5127738.132976
6test 608 line 103 toEtm8.northing: 6793804.304411
6test 609 line 103 toEtm8.gamma: 50.557915
6test 610 line 103 toEtm8.scale: 1.339412
6test 611 line 103 toEtm8.lat: 40.834541
6test 612 line 103 toEtm8.lon: 61.650750
6test 613 line 104 toEtm8.easting: 8385525.148166
6test 614 line 104 toEtm8.northing: 6924932.344306
6test 615 line 104 toEtm8.gamma: 59.087561
6test 616 line 104 toEtm8.scale: 1.990364
6test 617 line 104 toEtm8.lat: 26.273247
6test 618 line 104 toEtm8.lon: 74.926694
6test 619 line 105 toEtm8.easting: 2297510.791909
6test 620 line 105 toEtm8.northing: 2805666.962834
6test 621 line 105 toEtm8.gamma: 9.301553
6test 622 line 105 toEtm8.scale: 1.065508
6test 623 line 105 toEtm8.lat: 23.698347
6test 624 line 105 toEtm8.lon: 22.155657
6test 625 line 106 toEtm8.easting: 13749544.917635
6test 626 line 106 toEtm8.northing: 8288728.384650
6test 627 line 106 toEtm8.gamma: 75.033970
6test 628 line 106 toEtm8.scale: 4.270588
6test 629 line 106 toEtm8.lat: 12.364113
6test 630 line 106 toEtm8.lon: 86.348578
6test 631 line 107 toEtm8.easting: 317518.455546
6test 632 line 107 toEtm8.northing: 1097517.583745
6test 633 line 107 toEtm8.gamma: 0.499004
6test 634 line 107 toEtm8.scale: 1.000848
6test 635 line 107 toEtm8.lat: 9.916091
6test 636 line 107 toEtm8.lon: 2.895277
6test 637 line 108 toEtm8.easting: 3856035.184888
6test 638 line 108 toEtm8.northing: 9141364.450290
6test 639 line 108 toEtm8.gamma: 75.972763
6test 640 line 108 toEtm8.scale: 1.186786
6test 641 line 108 toEtm8.lat: 56.553876
6test 642 line 108 toEtm8.lon: 78.215077
6test 643 line 109 toEtm8.easting: 1457484.942823
6test 644 line 109 toEtm8.northing: 9385297.101973
6test 645 line 109 toEtm8.gamma: 66.784662
6test 646 line 109 toEtm8.scale: 1.025660
6test 647 line 109 toEtm8.lat: 75.957631
6test 648 line 109 toEtm8.lon: 67.407383
6test 649 line 110 toEtm8.easting: 1304934.901841
6test 650 line 110 toEtm8.northing: 3604655.155715
6test 651 line 110 toEtm8.gamma: 7.343989
6test 652 line 110 toEtm8.scale: 1.020672
6test 653 line 110 toEtm8.lat: 31.826531
6test 654 line 110 toEtm8.lon: 13.731050
6test 655 line 111 toEtm8.easting: 1399093.491792
6test 656 line 111 toEtm8.northing: 8314607.120342
6test 657 line 111 toEtm8.gamma: 38.630161
6test 658 line 111 toEtm8.scale: 1.023625
6test 659 line 111 toEtm8.lat: 70.542985
6test 660 line 111 toEtm8.lon: 40.282055
6test 661 line 112 toEtm8.easting: 356983.618540
6test 662 line 112 toEtm8.northing: 4282309.048994
6test 663 line 112 toEtm8.gamma: 2.561485
6test 664 line 112 toEtm8.scale: 1.001170
6test 665 line 112 toEtm8.lat: 38.617487
6test 666 line 112 toEtm8.lon: 4.099838
6test 667 line 113 toEtm8.easting: 9952911.325091
6test 668 line 113 toEtm8.northing: 1510288.212229
6test 669 line 113 toEtm8.gamma: 12.752154
6test 670 line 113 toEtm8.scale: 2.511357
6test 671 line 113 toEtm8.lat: 5.389447
6test 672 line 113 toEtm8.lon: 66.729612
6test 673 line 114 toEtm8.easting: 6367592.504007
6test 674 line 114 toEtm8.northing: 1200437.077672
6test 675 line 114 toEtm8.gamma: 8.338041
6test 676 line 114 toEtm8.scale: 1.546210
6test 677 line 114 toEtm8.lat: 6.995168
6test 678 line 114 toEtm8.lon: 50.014763
6test 679 line 115 toEtm8.easting: 4391263.676460
6test 680 line 115 toEtm8.northing: 6325455.989408
6test 681 line 115 toEtm8.gamma: 42.653541
6test 682 line 115 toEtm8.scale: 1.245560
6test 683 line 115 toEtm8.lat: 42.321894
6test 684 line 115 toEtm8.lon: 53.784040
6test 685 line 116 toEtm8.easting: 6209880.527527
6test 686 line 116 toEtm8.northing: 2154754.449747
6test 687 line 116 toEtm8.gamma: 14.919512
6test 688 line 116 toEtm8.scale: 1.516560
6test 689 line 116 toEtm8.lat: 12.698515
6test 690 line 116 toEtm8.lon: 50.242047
6test 691 line 117 toEtm8.easting: 1507053.688772
6test 692 line 117 toEtm8.northing: 6261383.513280
6test 693 line 117 toEtm8.gamma: 19.280373
6test 694 line 117 toEtm8.scale: 1.027584
6test 695 line 117 toEtm8.lat: 54.207636
6test 696 line 117 toEtm8.lon: 23.325731
6test 697 line 118 toEtm8.easting: 8332725.003777
6test 698 line 118 toEtm8.northing: 3002712.329753
6test 699 line 118 toEtm8.gamma: 24.059212
6test 700 line 118 toEtm8.scale: 1.990450
6test 701 line 118 toEtm8.lat: 13.224787
6test 702 line 118 toEtm8.lon: 62.426698
6test 703 line 119 toEtm8.easting: 3958910.085235
6test 704 line 119 toEtm8.northing: 3462284.926102
6test 705 line 119 toEtm8.gamma: 18.546398
6test 706 line 119 toEtm8.scale: 1.199351
6test 707 line 119 toEtm8.lat: 25.650282
6test 708 line 119 toEtm8.lon: 37.710391
6test 709 line 120 toEtm8.easting: 10452892.282083
6test 710 line 120 toEtm8.northing: 8000059.605114
6test 711 line 120 toEtm8.gamma: 71.075240
6test 712 line 120 toEtm8.scale: 2.650111
6test 713 line 120 toEtm8.lat: 20.684773
6test 714 line 120 toEtm8.lon: 82.849734
6test 715 line 121 toEtm8.easting: 496148.253731
6test 716 line 121 toEtm8.northing: 6388503.365043
6test 717 line 121 toEtm8.gamma: 6.970955
6test 718 line 121 toEtm8.scale: 1.002620
6test 719 line 121 toEtm8.lat: 57.367533
6test 720 line 121 toEtm8.lon: 8.260866
6test 721 line 122 toEtm8.easting: 7375792.085850
6test 722 line 122 toEtm8.northing: 5544624.072155
6test 723 line 122 toEtm8.gamma: 44.510851
6test 724 line 122 toEtm8.scale: 1.745898
6test 725 line 122 toEtm8.lat: 25.958757
6test 726 line 122 toEtm8.lon: 65.760477
6test 727 line 123 toEtm8.easting: 2826258.041979
6test 728 line 123 toEtm8.northing: 5167759.816959
6test 729 line 123 toEtm8.gamma: 23.783897
6test 730 line 123 toEtm8.scale: 1.099415
6test 731 line 123 toEtm8.lat: 41.395848
6test 732 line 123 toEtm8.lon: 33.661790
6test 733 line 124 toEtm8.easting: 3958563.378851
6test 734 line 124 toEtm8.northing: 8499923.231243
6test 735 line 124 toEtm8.gamma: 66.570945
6test 736 line 124 toEtm8.scale: 1.197296
6test 737 line 124 toEtm8.lat: 54.266617
6test 738 line 124 toEtm8.lon: 70.602199
6test 739 line 125 toEtm8.easting: 4408189.533462
6test 740 line 125 toEtm8.northing: 8046312.003642
6test 741 line 125 toEtm8.gamma: 62.216959
6test 742 line 125 toEtm8.scale: 1.246750
6test 743 line 125 toEtm8.lat: 49.840393
6test 744 line 125 toEtm8.lon: 68.036728
6test 745 line 126 toEtm8.easting: 3629225.627512
6test 746 line 126 toEtm8.northing: 6371258.454645
6test 747 line 126 toEtm8.gamma: 38.881675
6test 748 line 126 toEtm8.scale: 1.165511
6test 749 line 126 toEtm8.lat: 46.306035
6test 750 line 126 toEtm8.lon: 48.085828
6test 751 line 127 toEtm8.easting: 602838.450710
6test 752 line 127 toEtm8.northing: 4851370.637205
6test 753 line 127 toEtm8.gamma: 5.160395
6test 754 line 127 toEtm8.scale: 1.004073
6test 755 line 127 toEtm8.lat: 43.570988
6test 756 line 127 toEtm8.lon: 7.464494
6test 757 line 128 toEtm8.easting: 764616.665051
6test 758 line 128 toEtm8.northing: 2164299.337945
6test 759 line 128 toEtm8.gamma: 2.429300
6test 760 line 128 toEtm8.scale: 1.006835
6test 761 line 128 toEtm8.lat: 19.427290
6test 762 line 128 toEtm8.lon: 7.268247
6test 763 line 129 toEtm8.easting: 5048953.021931
6test 764 line 129 toEtm8.northing: 1885974.057398
6test 765 line 129 toEtm8.gamma: 11.459804
6test 766 line 129 toEtm8.scale: 1.332207
6test 767 line 129 toEtm8.lat: 12.713794
6test 768 line 129 toEtm8.lon: 42.507018
6test 769 line 130 toEtm8.easting: 2293996.601155
6test 770 line 130 toEtm8.northing: 2392408.644221
6test 771 line 130 toEtm8.gamma: 7.791838
6test 772 line 130 toEtm8.scale: 1.065348
6test 773 line 130 toEtm8.lat: 20.238782
6test 774 line 130 toEtm8.lon: 21.566068
6test 775 line 131 toEtm8.easting: 1530603.839418
6test 776 line 131 toEtm8.northing: 7287841.459898
6test 777 line 131 toEtm8.gamma: 27.502921
6test 778 line 131 toEtm8.scale: 1.028416
6test 779 line 131 toEtm8.lat: 62.367847
6test 780 line 131 toEtm8.lon: 30.438849
6test 781 line 132 toEtm8.easting: 2660000.093152
6test 782 line 132 toEtm8.northing: 5161982.213248
6test 783 line 132 toEtm8.gamma: 22.629836
6test 784 line 132 toEtm8.scale: 1.087851
6test 785 line 132 toEtm8.lat: 41.891569
6test 786 line 132 toEtm8.lon: 31.959547
6test 787 line 133 toEtm8.easting: 5037478.329414
6test 788 line 133 toEtm8.northing: 8768172.379908
6test 789 line 133 toEtm8.gamma: 73.511182
6test 790 line 133 toEtm8.scale: 1.325919
6test 791 line 133 toEtm8.lat: 47.664248
6test 792 line 133 toEtm8.lon: 77.630062
6test 793 line 134 toEtm8.easting: 2289650.957799
6test 794 line 134 toEtm8.northing: 8784328.593607
6test 795 line 134 toEtm8.gamma: 60.786067
6test 796 line 134 toEtm8.scale: 1.064346
6test 797 line 134 toEtm8.lat: 67.259559
6test 798 line 134 toEtm8.lon: 62.715293
6test 799 line 135 toEtm8.easting: 647913.889744
6test 800 line 135 toEtm8.northing: 6742382.228217
6test 801 line 135 toEtm8.gamma: 10.252667
6test 802 line 135 toEtm8.scale: 1.004748
6test 803 line 135 toEtm8.lat: 60.295381
6test 804 line 135 toEtm8.lon: 11.763097
6test 805 line 136 toEtm8.easting: 1118372.698566
6test 806 line 136 toEtm8.northing: 9040627.942263
6test 807 line 136 toEtm8.gamma: 48.936803
6test 808 line 136 toEtm8.scale: 1.014920
6test 809 line 136 toEtm8.lat: 76.878914
6test 810 line 136 toEtm8.lon: 49.685773
6test 811 line 137 toEtm8.easting: 440696.510070
6test 812 line 137 toEtm8.northing: 5500355.826297
6test 813 line 137 toEtm8.gamma: 4.636104
6test 814 line 137 toEtm8.scale: 1.001986
6test 815 line 137 toEtm8.lat: 49.495349
6test 816 line 137 toEtm8.lon: 6.087551
6test 817 line 138 toEtm8.easting: 601728.149727
6test 818 line 138 toEtm8.northing: 9095352.048149
6test 819 line 138 toEtm8.gamma: 33.435771
6test 820 line 138 toEtm8.scale: 1.004027
6test 821 line 138 toEtm8.lat: 80.297265
6test 822 line 138 toEtm8.lon: 33.816372
6test 823 line 139 toEtm8.easting: 3481444.777827
6test 824 line 139 toEtm8.northing: 291665.708749
6test 825 line 139 toEtm8.gamma: 1.314726
6test 826 line 139 toEtm8.scale: 1.153534
6test 827 line 139 toEtm8.lat: 2.286437
6test 828 line 139 toEtm8.lon: 29.855149
6test 829 line 140 toEtm8.easting: 3515304.901524
6test 830 line 140 toEtm8.northing: 1443981.882918
6test 831 line 140 toEtm8.gamma: 6.641638
6test 832 line 140 toEtm8.scale: 1.156509
6test 833 line 140 toEtm8.lat: 11.264457
6test 834 line 140 toEtm8.lon: 30.743907
6test 835 line 141 toEtm8.easting: 160012.186959
6test 836 line 141 toEtm8.northing: 3922609.253231
6test 837 line 141 toEtm8.gamma: 1.022225
6test 838 line 141 toEtm8.scale: 0.999916
6test 839 line 141 toEtm8.lat: 35.434073
6test 840 line 141 toEtm8.lon: 1.762795
6test 841 line 142 toEtm8.easting: 4163744.245622
6test 842 line 142 toEtm8.northing: 936884.674804
6test 843 line 142 toEtm8.gamma: 4.892559
6test 844 line 142 toEtm8.scale: 1.222164
6test 845 line 142 toEtm8.lat: 6.923695
6test 846 line 142 toEtm8.lon: 35.289456
6test 847 line 143 toEtm8.easting: 6155200.017926
6test 848 line 143 toEtm8.northing: 6926306.628390
6test 849 line 143 toEtm8.gamma: 55.103258
6test 850 line 143 toEtm8.scale: 1.500556
6test 851 line 143 toEtm8.lat: 36.129672
6test 852 line 143 toEtm8.lon: 67.533176
6test 853 line 144 toEtm8.easting: 16263383.285440
6test 854 line 144 toEtm8.northing: 3591296.731341
6test 855 line 144 toEtm8.gamma: 36.040254
6test 856 line 144 toEtm8.scale: 6.589288
6test 857 line 144 toEtm8.lat: 4.406529
6test 858 line 144 toEtm8.lon: 81.965734
6test 859 line 145 toEtm8.easting: 14220995.515398
6test 860 line 145 toEtm8.northing: 5100587.457503
6test 861 line 145 toEtm8.gamma: 47.314258
6test 862 line 145 toEtm8.scale: 4.693202
6test 863 line 145 toEtm8.lat: 8.474589
6test 864 line 145 toEtm8.lon: 81.129945
6test 865 line 146 toEtm8.easting: 3173034.802372
6test 866 line 146 toEtm8.northing: 7263421.942957
6test 867 line 146 toEtm8.gamma: 45.215808
6test 868 line 146 toEtm8.scale: 1.125410
6test 869 line 146 toEtm8.lat: 53.907276
6test 870 line 146 toEtm8.lon: 51.252904
6test 871 line 147 toEtm8.easting: 10253274.092204
6test 872 line 147 toEtm8.northing: 8867574.299792
6test 873 line 147 toEtm8.gamma: 79.198250
6test 874 line 147 toEtm8.scale: 2.572372
6test 875 line 147 toEtm8.lat: 22.120545
6test 876 line 147 toEtm8.lon: 85.756782
6test 877 line 148 toEtm8.easting: 2415561.483230
6test 878 line 148 toEtm8.northing: 8813225.217097
6test 879 line 148 toEtm8.gamma: 62.548978
6test 880 line 148 toEtm8.scale: 1.071748
6test 881 line 148 toEtm8.lat: 66.444100
6test 882 line 148 toEtm8.lon: 64.532960
6test 883 line 149 toEtm8.easting: 9589179.293295
6test 884 line 149 toEtm8.northing: 1777680.784143
6test 885 line 149 toEtm8.gamma: 14.838483
6test 886 line 149 toEtm8.scale: 2.380716
6test 887 line 149 toEtm8.lat: 6.670965
6test 888 line 149 toEtm8.lon: 65.660408
6test 889 line 150 toEtm8.easting: 727939.438391
6test 890 line 150 toEtm8.northing: 3684363.236810
6test 891 line 150 toEtm8.gamma: 4.266227
6test 892 line 150 toEtm8.scale: 1.006140
6test 893 line 150 toEtm8.lat: 33.054057
6test 894 line 150 toEtm8.lon: 7.787458
6test 895 line 151 toEtm8.easting: 1250765.991085
6test 896 line 151 toEtm8.northing: 792869.242719
6test 897 line 151 toEtm8.gamma: 1.396497
6test 898 line 151 toEtm8.scale: 1.019026
6test 899 line 151 toEtm8.lat: 7.035525
6test 900 line 151 toEtm8.lon: 11.253707
6test 901 line 152 toEtm8.easting: 710421.705887
6test 902 line 152 toEtm8.northing: 5019406.075928
6test 903 line 152 toEtm8.gamma: 6.393949
6test 904 line 152 toEtm8.scale: 1.005812
6test 905 line 152 toEtm8.lat: 44.971340
6test 906 line 152 toEtm8.lon: 9.009304
6test 907 line 153 toEtm8.easting: 4600995.074643
6test 908 line 153 toEtm8.northing: 4505712.084593
6test 909 line 153 toEtm8.gamma: 27.997458
6test 910 line 153 toEtm8.scale: 1.271841
6test 911 line 153 toEtm8.lat: 30.821397
6test 912 line 153 toEtm8.lon: 45.970577
6test 913 line 154 toEtm8.easting: 557642.627782
6test 914 line 154 toEtm8.northing: 7006911.251644
6test 915 line 154 toEtm8.gamma: 9.769903
6test 916 line 154 toEtm8.scale: 1.003411
6test 917 line 154 toEtm8.lat: 62.763886
6test 918 line 154 toEtm8.lon: 10.960144
6test 919 line 155 toEtm8.easting: 4635062.294291
6test 920 line 155 toEtm8.northing: 2702556.153311
6test 921 line 155 toEtm8.gamma: 15.779547
6test 922 line 155 toEtm8.scale: 1.277178
6test 923 line 155 toEtm8.lat: 18.888611
6test 924 line 155 toEtm8.lon: 41.009871
6test 925 line 156 toEtm8.easting: 14554962.255919
6test 926 line 156 toEtm8.northing: 4716639.908572
6test 927 line 156 toEtm8.gamma: 44.192751
6test 928 line 156 toEtm8.scale: 4.960020
6test 929 line 156 toEtm8.lat: 7.524119
6test 930 line 156 toEtm8.lon: 81.050715
6test 931 line 157 toEtm8.easting: 882126.661736
6test 932 line 157 toEtm8.northing: 7947612.369506
6test 933 line 157 toEtm8.gamma: 22.429487
6test 934 line 157 toEtm8.scale: 1.009132
6test 935 line 157 toEtm8.lat: 70.063902
6test 936 line 157 toEtm8.lon: 23.705255
6test 937 line 158 toEtm8.easting: 20262021.645983
6test 938 line 158 toEtm8.northing: 8113827.820796
6test 939 line 158 toEtm8.gamma: 76.936057
6test 940 line 158 toEtm8.scale: 10.349092
6test 941 line 158 toEtm8.lat: 3.556526
6test 942 line 158 toEtm8.lon: 88.363529
6test 943 line 159 toEtm8.easting: 6500508.399850
6test 944 line 159 toEtm8.northing: 6956476.342368
6test 945 line 159 toEtm8.gamma: 56.237116
6test 946 line 159 toEtm8.scale: 1.563162
6test 947 line 159 toEtm8.lat: 34.551257
6test 948 line 159 toEtm8.lon: 69.111091
6test 949 line 160 toEtm8.easting: 3884036.641314
6test 950 line 160 toEtm8.northing: 6890167.411733
6test 951 line 160 toEtm8.gamma: 45.760130
6test 952 line 160 toEtm8.scale: 1.190167
6test 953 line 160 toEtm8.lat: 47.929051
6test 954 line 160 toEtm8.lon: 54.103418
6test 955 line 161 toEtm8.easting: 217855.546078
6test 956 line 161 toEtm8.northing: 6184108.122568
6test 957 line 161 toEtm8.gamma: 2.870993
6test 958 line 161 toEtm8.scale: 1.000182
6test 959 line 161 toEtm8.lat: 55.753536
6test 960 line 161 toEtm8.lon: 3.471798
6test 961 line 162 toEtm8.easting: 11384139.290402
6test 962 line 162 toEtm8.northing: 8893889.949556
6test 963 line 162 toEtm8.gamma: 79.774854
6test 964 line 162 toEtm8.scale: 3.024672
6test 965 line 162 toEtm8.lat: 18.530847
6test 966 line 162 toEtm8.lon: 86.555312
6test 967 line 163 toEtm8.easting: 3469855.989805
6test 968 line 163 toEtm8.northing: 7723193.799228
6test 969 line 163 toEtm8.gamma: 53.114700
6test 970 line 163 toEtm8.scale: 1.150540
6test 971 line 163 toEtm8.lat: 54.510125
6test 972 line 163 toEtm8.lon: 58.556056
6test 973 line 164 toEtm8.easting: 5926165.994939
6test 974 line 164 toEtm8.northing: 9385463.732747
6test 975 line 164 toEtm8.gamma: 82.506981
6test 976 line 164 toEtm8.scale: 1.459758
6test 977 line 164 toEtm8.lat: 42.864162
6test 978 line 164 toEtm8.lon: 84.866326
6test 979 line 165 toEtm8.easting: 5798639.662224
6test 980 line 165 toEtm8.northing: 5305387.640916
6test 981 line 165 toEtm8.gamma: 38.617257
6test 982 line 165 toEtm8.scale: 1.442263
6test 983 line 165 toEtm8.lat: 30.911943
6test 984 line 165 toEtm8.lon: 57.114102
6test 985 line 166 toEtm8.easting: 9464.934388
6test 986 line 166 toEtm8.northing: 6489121.624944
6test 987 line 166 toEtm8.gamma: 0.138696
6test 988 line 166 toEtm8.scale: 0.999601
6test 989 line 166 toEtm8.lat: 58.542493
6test 990 line 166 toEtm8.lon: 0.162593
6test 991 line 167 toEtm8.easting: 12575834.275614
6test 992 line 167 toEtm8.northing: 8356610.895486
6test 993 line 167 toEtm8.gamma: 75.235223
6test 994 line 167 toEtm8.scale: 3.599442
6test 995 line 167 toEtm8.lat: 15.022689
6test 996 line 167 toEtm8.lon: 85.792615
6test 997 line 168 toEtm8.easting: 2719653.543469
6test 998 line 168 toEtm8.northing: 9362389.163495
6test 999 line 168 toEtm8.gamma: 76.049670
6test 1000 line 168 toEtm8.scale: 1.091315
6test 1001 line 168 toEtm8.lat: 65.692275
6test 1002 line 168 toEtm8.lon: 77.241377
6test 1003 line 169 toEtm8.easting: 4845341.924698
6test 1004 line 169 toEtm8.northing: 8710522.326901
6test 1005 line 169 toEtm8.gamma: 72.320942
6test 1006 line 169 toEtm8.scale: 1.300382
6test 1007 line 169 toEtm8.lat: 48.806211
6test 1008 line 169 toEtm8.lon: 76.486365
6test 1009 line 170 toEtm8.easting: 3935261.522763
6test 1010 line 170 toEtm8.northing: 9454271.649062
6test 1011 line 170 toEtm8.gamma: 81.162334
6test 1012 line 170 toEtm8.scale: 1.194767
6test 1013 line 170 toEtm8.lat: 56.436025
6test 1014 line 170 toEtm8.lon: 82.611568
6test 1015 line 171 toEtm8.easting: 7074299.823000
6test 1016 line 171 toEtm8.northing: 1648736.065055
6test 1017 line 171 toEtm8.gamma: 12.145925
6test 1018 line 171 toEtm8.scale: 1.687551
6test 1019 line 171 toEtm8.lat: 8.766053
6test 1020 line 171 toEtm8.lon: 54.367539
6test 1021 line 172 toEtm8.easting: 3689072.579308
6test 1022 line 172 toEtm8.northing: 2230802.665211
6test 1023 line 172 toEtm8.gamma: 10.856248
6test 1024 line 172 toEtm8.scale: 1.172689
6test 1025 line 172 toEtm8.lat: 17.095495
6test 1026 line 172 toEtm8.lon: 33.059128
6test 1027 line 173 toEtm8.easting: 8102565.885587
6test 1028 line 173 toEtm8.northing: 5167396.617580
6test 1029 line 173 toEtm8.gamma: 42.324886
6test 1030 line 173 toEtm8.scale: 1.921927
6test 1031 line 173 toEtm8.lat: 22.142861
6test 1032 line 173 toEtm8.lon: 67.200684
6test 1033 line 174 toEtm8.easting: 8181271.353564
6test 1034 line 174 toEtm8.northing: 4425436.547185
6test 1035 line 174 toEtm8.gamma: 35.900845
6test 1036 line 174 toEtm8.scale: 1.945017
6test 1037 line 174 toEtm8.lat: 19.222623
6test 1038 line 174 toEtm8.lon: 65.180785
6test 1039 line 175 toEtm8.easting: 767067.394003
6test 1040 line 175 toEtm8.northing: 3701745.857296
6test 1041 line 175 toEtm8.gamma: 4.519201
6test 1042 line 175 toEtm8.scale: 1.006863
6test 1043 line 175 toEtm8.lat: 33.182474
6test 1044 line 175 toEtm8.lon: 8.216952
6test 1045 line 176 toEtm8.easting: 6688114.168572
6test 1046 line 176 toEtm8.northing: 2052857.299639
6test 1047 line 176 toEtm8.gamma: 14.766191
6test 1048 line 176 toEtm8.scale: 1.607200
6test 1049 line 176 toEtm8.lat: 11.417963
6test 1050 line 176 toEtm8.lon: 52.808691
6test 1051 line 177 toEtm8.easting: 5608408.773761
6test 1052 line 177 toEtm8.northing: 3859055.659110
6test 1053 line 177 toEtm8.gamma: 26.244151
6test 1054 line 177 toEtm8.scale: 1.413463
6test 1055 line 177 toEtm8.lat: 23.836688
6test 1056 line 177 toEtm8.lon: 50.500180
6test 1057 line 178 toEtm8.easting: 3836942.765275
6test 1058 line 178 toEtm8.northing: 6415467.634326
6test 1059 line 178 toEtm8.gamma: 40.575885
6test 1060 line 178 toEtm8.scale: 1.185615
6test 1061 line 178 toEtm8.lat: 45.550020
6test 1062 line 178 toEtm8.lon: 50.148036
6test 1063 line 179 toEtm8.easting: 1298730.366025
6test 1064 line 179 toEtm8.northing: 6021453.000792
6test 1065 line 179 toEtm8.gamma: 15.613320
6test 1066 line 179 toEtm8.scale: 1.020367
6test 1067 line 179 toEtm8.lat: 52.746079
6test 1068 line 179 toEtm8.lon: 19.343926
6test 1069 line 180 toEtm8.easting: 416934.289208
6test 1070 line 180 toEtm8.northing: 7295683.451705
6test 1071 line 180 toEtm8.gamma: 8.238232
6test 1072 line 180 toEtm8.scale: 1.001729
6test 1073 line 180 toEtm8.lat: 65.513348
6test 1074 line 180 toEtm8.lon: 9.039529
6test 1075 line 181 toEtm8.easting: 4336076.850889
6test 1076 line 181 toEtm8.northing: 7617975.722779
6test 1077 line 181 toEtm8.gamma: 56.537088
6test 1078 line 181 toEtm8.scale: 1.238582
6test 1079 line 181 toEtm8.lat: 48.709795
6test 1080 line 181 toEtm8.lon: 63.554005
6test 1081 line 182 toEtm8.easting: 168047.336980
6test 1082 line 182 toEtm8.northing: 2185000.046530
6test 1083 line 182 toEtm8.gamma: 0.542187
6test 1084 line 182 toEtm8.scale: 0.999949
6test 1085 line 182 toEtm8.lat: 19.753509
6test 1086 line 182 toEtm8.lon: 1.603846
6test 1087 line 183 toEtm8.easting: 8276281.328790
6test 1088 line 183 toEtm8.northing: 263444.350545
6test 1089 line 183 toEtm8.gamma: 2.071435
6test 1090 line 183 toEtm8.scale: 1.980314
6test 1091 line 183 toEtm8.lat: 1.202816
6test 1092 line 183 toEtm8.lon: 59.377276
6test 1093 line 184 toEtm8.easting: 4772573.810710
6test 1094 line 184 toEtm8.northing: 6765710.336002
6test 1095 line 184 toEtm8.gamma: 48.857561
6test 1096 line 184 toEtm8.scale: 1.291911
6test 1097 line 184 toEtm8.lat: 42.564975
6test 1098 line 184 toEtm8.lon: 59.356947
6test 1099 line 185 toEtm8.easting: 5427755.074639
6test 1100 line 185 toEtm8.northing: 1556055.820924
6test 1101 line 185 toEtm8.gamma: 9.862178
6test 1102 line 185 toEtm8.scale: 1.387394
6test 1103 line 185 toEtm8.lat: 10.090572
6test 1104 line 185 toEtm8.lon: 44.604132
6test 1105 line 186 toEtm8.easting: 11588458.616041
6test 1106 line 186 toEtm8.northing: 5707993.922613
6test 1107 line 186 toEtm8.gamma: 50.784827
6test 1108 line 186 toEtm8.scale: 3.149567
6test 1109 line 186 toEtm8.lat: 14.133028
6test 1110 line 186 toEtm8.lon: 78.097533
6test 1111 line 187 toEtm8.easting: 7152433.802688
6test 1112 line 187 toEtm8.northing: 761390.695844
6test 1113 line 187 toEtm8.gamma: 5.607350
6test 1114 line 187 toEtm8.scale: 1.705261
6test 1115 line 187 toEtm8.lat: 4.031123
6test 1116 line 187 toEtm8.lon: 54.048782
6test 1117 line 188 toEtm8.easting: 3105651.390901
6test 1118 line 188 toEtm8.northing: 9426026.169064
6test 1119 line 188 toEtm8.gamma: 78.750206
6test 1120 line 188 toEtm8.scale: 1.119737
6test 1121 line 188 toEtm8.lat: 62.746603
6test 1122 line 188 toEtm8.lon: 79.968641
6test 1123 line 189 toEtm8.easting: 2959009.639022
6test 1124 line 189 toEtm8.northing: 8339242.269282
6test 1125 line 189 toEtm8.gamma: 58.460865
6test 1126 line 189 toEtm8.scale: 1.108554
6test 1127 line 189 toEtm8.lat: 60.626429
6test 1128 line 189 toEtm8.lon: 61.851551
6test 1129 line 190 toEtm8.easting: 8640472.267145
6test 1130 line 190 toEtm8.northing: 6230320.417931
6test 1131 line 190 toEtm8.gamma: 52.816810
6test 1132 line 190 toEtm8.scale: 2.062973
6test 1133 line 190 toEtm8.lat: 23.600626
6test 1134 line 190 toEtm8.lon: 72.811634
6test 1135 line 191 toEtm8.easting: 811352.108932
6test 1136 line 191 toEtm8.northing: 9816129.813481
6test 1137 line 191 toEtm8.gamma: 77.299184
6test 1138 line 191 toEtm8.scale: 1.007651
6test 1139 line 191 toEtm8.lat: 82.572236
6test 1140 line 191 toEtm8.lon: 77.402323
6test 1141 line 192 toEtm8.easting: 6521874.973458
6test 1142 line 192 toEtm8.northing: 1053612.479744
6test 1143 line 192 toEtm8.gamma: 7.407328
6test 1144 line 192 toEtm8.scale: 1.575529
6test 1145 line 192 toEtm8.lat: 6.030051
6test 1146 line 192 toEtm8.lon: 50.783505
6test 1147 line 193 toEtm8.easting: 3477983.997875
6test 1148 line 193 toEtm8.northing: 5651613.325947
6test 1149 line 193 toEtm8.gamma: 31.530673
6test 1150 line 193 toEtm8.scale: 1.151875
6test 1151 line 193 toEtm8.lat: 42.411523
6test 1152 line 193 toEtm8.lon: 42.258009
6test 1153 line 194 toEtm8.easting: 629892.822243
6test 1154 line 194 toEtm8.northing: 3283914.910451
6test 1155 line 194 toEtm8.gamma: 3.210482
6test 1156 line 194 toEtm8.scale: 1.004499
6test 1157 line 194 toEtm8.lat: 29.526120
6test 1158 line 194 toEtm8.lon: 6.493069
6test 1159 line 195 toEtm8.easting: 3381879.687227
6test 1160 line 195 toEtm8.northing: 5103629.325665
6test 1161 line 195 toEtm8.gamma: 26.748108
6test 1162 line 195 toEtm8.scale: 1.143559
6test 1163 line 195 toEtm8.lat: 39.021853
6test 1164 line 195 toEtm8.lon: 38.641779
6test 1165 line 196 toEtm8.easting: 2815986.534177
6test 1166 line 196 toEtm8.northing: 9387029.120718
6test 1167 line 196 toEtm8.gamma: 76.967262
6test 1168 line 196 toEtm8.scale: 1.098032
6test 1169 line 196 toEtm8.lat: 64.971850
6test 1170 line 196 toEtm8.lon: 78.151893
6test 1171 line 197 toEtm8.easting: 3398195.889603
6test 1172 line 197 toEtm8.northing: 9138936.031490
6test 1173 line 197 toEtm8.gamma: 74.477499
6test 1174 line 197 toEtm8.scale: 1.144009
6test 1175 line 197 toEtm8.lat: 59.961819
6test 1176 line 197 toEtm8.lon: 76.473422
6test 1177 line 198 toEtm8.easting: 2421734.754637
6test 1178 line 198 toEtm8.northing: 5002372.094991
6test 1179 line 198 toEtm8.gamma: 20.017082
6test 1180 line 198 toEtm8.scale: 1.072592
6test 1181 line 198 toEtm8.lat: 41.374040
6test 1182 line 198 toEtm8.lon: 28.848343
6test 1183 line 199 toEtm8.easting: 2360869.895525
6test 1184 line 199 toEtm8.northing: 9553298.449536
6test 1185 line 199 toEtm8.gamma: 78.848205
6test 1186 line 199 toEtm8.scale: 1.068453
6test 1187 line 199 toEtm8.lat: 68.946087
6test 1188 line 199 toEtm8.lon: 79.574523
6test 1189 line 200 toEtm8.easting: 1196539.972194
6test 1190 line 200 toEtm8.northing: 9861920.836230
6test 1191 line 200 toEtm8.gamma: 83.437668
6test 1192 line 200 toEtm8.scale: 1.017137
6test 1193 line 200 toEtm8.lat: 79.275096
6test 1194 line 200 toEtm8.lon: 83.551272
6test 1195 line 201 toEtm8.easting: 1327758.704795
6test 1196 line 201 toEtm8.northing: 2375509.241683
6test 1197 line 201 toEtm8.gamma: 4.617572
6test 1198 line 201 toEtm8.scale: 1.021465
6test 1199 line 201 toEtm8.lat: 21.000252
6test 1200 line 201 toEtm8.lon: 12.697444
6test 1201 line 202 toEtm8.easting: 2070860.327644
6test 1202 line 202 toEtm8.northing: 8604500.719581
6test 1203 line 202 toEtm8.gamma: 54.722761
6test 1204 line 202 toEtm8.scale: 1.052469
6test 1205 line 202 toEtm8.lat: 68.015227
6test 1206 line 202 toEtm8.lon: 56.732419
6test 1207 line 203 toEtm8.easting: 6564776.654864
6test 1208 line 203 toEtm8.northing: 8171207.177379
6test 1209 line 203 toEtm8.gamma: 69.237523
6test 1210 line 203 toEtm8.scale: 1.573894
6test 1211 line 203 toEtm8.lat: 37.423675
6test 1212 line 203 toEtm8.lon: 76.947359
6test 1213 line 204 toEtm8.easting: 592653.553821
6test 1214 line 204 toEtm8.northing: 6125529.810052
6test 1215 line 204 toEtm8.gamma: 7.600785
6test 1216 line 204 toEtm8.scale: 1.003912
6test 1217 line 204 toEtm8.lat: 54.922707
6test 1218 line 204 toEtm8.lon: 9.260818
6test 1219 line 205 toEtm8.easting: 693459.671821
6test 1220 line 205 toEtm8.northing: 6943779.991032
6test 1221 line 205 toEtm8.gamma: 11.787587
6test 1222 line 205 toEtm8.scale: 1.005496
6test 1223 line 205 toEtm8.lat: 61.982810
6test 1224 line 205 toEtm8.lon: 13.299659
6test 1225 line 206 toEtm8.easting: 1838956.187625
6test 1226 line 206 toEtm8.northing: 3511959.612381
6test 1227 line 206 toEtm8.gamma: 9.844313
6test 1228 line 206 toEtm8.scale: 1.041603
6test 1229 line 206 toEtm8.lat: 30.324214
6test 1230 line 206 toEtm8.lon: 18.959769
6test 1231 line 207 toEtm8.easting: 4460690.884597
6test 1232 line 207 toEtm8.northing: 5541873.235403
6test 1233 line 207 toEtm8.gamma: 35.768613
6test 1234 line 207 toEtm8.scale: 1.254179
6test 1235 line 207 toEtm8.lat: 37.629667
6test 1236 line 207 toEtm8.lon: 49.649131
6test 1237 line 208 toEtm8.easting: 2311168.998941
6test 1238 line 208 toEtm8.northing: 9480561.869119
6test 1239 line 208 toEtm8.gamma: 76.828257
6test 1240 line 208 toEtm8.scale: 1.065556
6test 1241 line 208 toEtm8.lat: 69.225574
6test 1242 line 208 toEtm8.lon: 77.656135
6test 1243 line 209 toEtm8.easting: 4111775.114451
6test 1244 line 209 toEtm8.northing: 6509014.348792
6test 1245 line 209 toEtm8.gamma: 43.052130
6test 1246 line 209 toEtm8.scale: 1.214125
6test 1247 line 209 toEtm8.lat: 44.698478
6test 1248 line 209 toEtm8.lon: 52.979304
6test 1249 line 210 toEtm8.easting: 75358.261962
6test 1250 line 210 toEtm8.northing: 7711258.662251
6test 1251 line 210 toEtm8.gamma: 1.806297
6test 1252 line 210 toEtm8.scale: 0.999669
6test 1253 line 210 toEtm8.lat: 69.499594
6test 1254 line 210 toEtm8.lon: 1.928336
6test 1255 line 211 toEtm8.easting: 8781885.229116
6test 1256 line 211 toEtm8.northing: 9184776.452211
6test 1257 line 211 toEtm8.gamma: 81.795539
6test 1258 line 211 toEtm8.scale: 2.094908
6test 1259 line 211 toEtm8.lat: 27.981364
6test 1260 line 211 toEtm8.lon: 86.061113
6test 1261 line 212 toEtm8.easting: 954378.415174
6test 1262 line 212 toEtm8.northing: 7449110.669807
6test 1263 line 212 toEtm8.gamma: 19.380657
6test 1264 line 212 toEtm8.scale: 1.010768
6test 1265 line 212 toEtm8.lat: 65.699839
6test 1266 line 212 toEtm8.lon: 21.104725
6test 1267 line 213 toEtm8.easting: 720971.793706
6test 1268 line 213 toEtm8.northing: 5265195.121555
6test 1269 line 213 toEtm8.gamma: 7.002995
6test 1270 line 213 toEtm8.scale: 1.005995
6test 1271 line 213 toEtm8.lat: 47.143648
6test 1272 line 213 toEtm8.lon: 9.512189
6test 1273 line 214 toEtm8.easting: 561561.493937
6test 1274 line 214 toEtm8.northing: 989910.236221
6test 1275 line 214 toEtm8.gamma: 0.793118
6test 1276 line 214 toEtm8.scale: 1.003505
6test 1277 line 214 toEtm8.lat: 8.920167
6test 1278 line 214 toEtm8.lon: 5.101513
6test 1279 line 215 toEtm8.easting: 3446829.634468
6test 1280 line 215 toEtm8.northing: 9232868.155664
6test 1281 line 215 toEtm8.gamma: 76.279075
6test 1282 line 215 toEtm8.scale: 1.148263
6test 1283 line 215 toEtm8.lat: 59.778971
6test 1284 line 215 toEtm8.lon: 78.080322
6test 1285 line 216 toEtm8.easting: 4048307.545909
6test 1286 line 216 toEtm8.northing: 9800416.422998
6test 1287 line 216 toEtm8.gamma: 86.843918
6test 1288 line 216 toEtm8.scale: 1.206495
6test 1289 line 216 toEtm8.lat: 55.865310
6test 1290 line 216 toEtm8.lon: 87.384288
6test 1291 line 217 toEtm8.easting: 8973188.480293
6test 1292 line 217 toEtm8.northing: 7042230.087021
6test 1293 line 217 toEtm8.gamma: 60.872456
6test 1294 line 217 toEtm8.scale: 2.156098
6test 1295 line 217 toEtm8.lat: 24.310973
6test 1296 line 217 toEtm8.lon: 76.823777
6test 1297 line 218 toEtm8.easting: 126314.191618
6test 1298 line 218 toEtm8.northing: 396006.687921
6test 1299 line 218 toEtm8.gamma: 0.071065
6test 1300 line 218 toEtm8.scale: 0.999798
6test 1301 line 218 toEtm8.lat: 3.582041
6test 1302 line 218 toEtm8.lon: 1.137286
6test 1303 line 219 toEtm8.easting: 5247652.345647
6test 1304 line 219 toEtm8.northing: 8670513.359752
6test 1305 line 219 toEtm8.gamma: 72.700498
6test 1306 line 219 toEtm8.scale: 1.355272
6test 1307 line 219 toEtm8.lat: 46.124233
6test 1308 line 219 toEtm8.lon: 77.313118
6test 1309 line 220 toEtm8.easting: 8103656.838119
6test 1310 line 220 toEtm8.northing: 9469794.014737
6test 1311 line 220 toEtm8.gamma: 84.490673
6test 1312 line 220 toEtm8.scale: 1.912164
6test 1313 line 220 toEtm8.lat: 31.171391
6test 1314 line 220 toEtm8.lon: 87.104504
6test 1315 line 221 toEtm8.easting: 6300112.758236
6test 1316 line 221 toEtm8.northing: 93835.917364
6test 1317 line 221 toEtm8.gamma: 0.644805
6test 1318 line 221 toEtm8.scale: 1.534073
6test 1319 line 221 toEtm8.lat: 0.553171
6test 1320 line 221 toEtm8.lon: 49.117104
6test 1321 line 222 toEtm8.easting: 3894813.593782
6test 1322 line 222 toEtm8.northing: 4833832.341027
6test 1323 line 222 toEtm8.gamma: 27.453298
6test 1324 line 222 toEtm8.scale: 1.192135
6test 1325 line 222 toEtm8.lat: 35.361587
6test 1326 line 222 toEtm8.lon: 41.860599
6test 1327 line 223 toEtm8.easting: 402511.346712
6test 1328 line 223 toEtm8.northing: 3520621.561911
6test 1329 line 223 toEtm8.gamma: 2.238474
6test 1330 line 223 toEtm8.scale: 1.001599
6test 1331 line 223 toEtm8.lat: 31.750314
6test 1332 line 223 toEtm8.lon: 4.248167
6test 1333 line 224 toEtm8.easting: 5357378.503148
6test 1334 line 224 toEtm8.northing: 2772997.602234
6test 1335 line 224 toEtm8.gamma: 17.823560
6test 1336 line 224 toEtm8.scale: 1.376031
6test 1337 line 224 toEtm8.lat: 17.924336
6test 1338 line 224 toEtm8.lon: 46.096402
6test 1339 line 225 toEtm8.easting: 2807553.985866
6test 1340 line 225 toEtm8.northing: 8177847.980275
6test 1341 line 225 toEtm8.gamma: 54.680045
6test 1342 line 225 toEtm8.scale: 1.097531
6test 1343 line 225 toEtm8.lat: 60.931488
6test 1344 line 225 toEtm8.lon: 58.221214
6test 1345 line 226 toEtm8.easting: 18289045.166501
6test 1346 line 226 toEtm8.northing: 7792942.339604
6test 1347 line 226 toEtm8.gamma: 73.216494
6test 1348 line 226 toEtm8.scale: 8.098009
6test 1349 line 226 toEtm8.lat: 5.358151
6test 1350 line 226 toEtm8.lon: 87.556213
6test 1351 line 227 toEtm8.easting: 8376822.459538
6test 1352 line 227 toEtm8.northing: 8128174.623878
6test 1353 line 227 toEtm8.gamma: 70.920117
6test 1354 line 227 toEtm8.scale: 1.984873
6test 1355 line 227 toEtm8.lat: 28.616673
6test 1356 line 227 toEtm8.lon: 80.452426
6test 1357 line 228 toEtm8.easting: 11898068.353272
6test 1358 line 228 toEtm8.northing: 4772439.493697
6test 1359 line 228 toEtm8.gamma: 42.613968
6test 1360 line 228 toEtm8.scale: 3.314412
6test 1361 line 228 toEtm8.lat: 11.709763
6test 1362 line 228 toEtm8.lon: 76.760295
6test 1363 line 229 toEtm8.easting: 10550946.939050
6test 1364 line 229 toEtm8.northing: 3851968.815295
6test 1365 line 229 toEtm8.gamma: 33.383025
6test 1366 line 229 toEtm8.scale: 2.724754
6test 1367 line 229 toEtm8.lat: 12.009498
6test 1368 line 229 toEtm8.lon: 71.782351
6test 1369 line 230 toEtm8.easting: 6828299.123607
6test 1370 line 230 toEtm8.northing: 9394803.227463
6test 1371 line 230 toEtm8.gamma: 83.181386
6test 1372 line 230 toEtm8.scale: 1.624359
6test 1373 line 230 toEtm8.lat: 37.629784
6test 1374 line 230 toEtm8.lon: 85.795687
6test 1375 line 231 toEtm8.easting: 11162550.334022
6test 1376 line 231 toEtm8.northing: 2640267.279593
6test 1377 line 231 toEtm8.gamma: 23.145404
6test 1378 line 231 toEtm8.scale: 2.998408
6test 1379 line 231 toEtm8.lat: 7.721128
6test 1380 line 231 toEtm8.lon: 71.662731
6test 1381 line 232 toEtm8.easting: 4411584.447941
6test 1382 line 232 toEtm8.northing: 4956173.694407
6test 1383 line 232 toEtm8.gamma: 30.713919
6test 1384 line 232 toEtm8.scale: 1.248736
6test 1385 line 232 toEtm8.lat: 34.295026
6test 1386 line 232 toEtm8.lon: 46.442191
6test 1387 line 233 toEtm8.easting: 672108.897905
6test 1388 line 233 toEtm8.northing: 4751554.657054
6test 1389 line 233 toEtm8.gamma: 5.569178
6test 1390 line 233 toEtm8.scale: 1.005162
6test 1391 line 233 toEtm8.lat: 42.622496
6test 1392 line 233 toEtm8.lon: 8.193605
6test 1393 line 234 toEtm8.easting: 5022964.290579
6test 1394 line 234 toEtm8.northing: 6860418.199502
6test 1395 line 234 toEtm8.gamma: 50.862230
6test 1396 line 234 toEtm8.scale: 1.324925
6test 1397 line 234 toEtm8.lat: 41.667780
6test 1398 line 234 toEtm8.lon: 61.518288
6test 1399 line 235 toEtm8.easting: 1669655.595207
6test 1400 line 235 toEtm8.northing: 4152086.537021
6test 1401 line 235 toEtm8.gamma: 11.110237
6test 1402 line 235 toEtm8.scale: 1.034138
6test 1403 line 235 toEtm8.lat: 36.060369
6test 1404 line 235 toEtm8.lon: 18.444112
6test 1405 line 236 toEtm8.easting: 6055876.729655
6test 1406 line 236 toEtm8.northing: 4896837.552619
6test 1407 line 236 toEtm8.gamma: 35.799747
6test 1408 line 236 toEtm8.scale: 1.485967
6test 1409 line 236 toEtm8.lat: 27.948091
6test 1410 line 236 toEtm8.lon: 56.816429
6test 1411 line 237 toEtm8.easting: 1209214.164379
6test 1412 line 237 toEtm8.northing: 7266409.859178
6test 1413 line 237 toEtm8.gamma: 22.319633
6test 1414 line 237 toEtm8.scale: 1.017554
6test 1415 line 237 toEtm8.lat: 63.386030
6test 1416 line 237 toEtm8.lon: 24.662716
6test 1417 line 238 toEtm8.easting: 5154564.559584
6test 1418 line 238 toEtm8.northing: 698118.349975
6test 1419 line 238 toEtm8.gamma: 4.242360
6test 1420 line 238 toEtm8.scale: 1.347481
6test 1421 line 238 toEtm8.lat: 4.680922
6test 1422 line 238 toEtm8.lon: 42.114426
6test 1423 line 239 toEtm8.easting: 2695149.806543
6test 1424 line 239 toEtm8.northing: 8208197.765605
6test 1425 line 239 toEtm8.gamma: 54.178615
6test 1426 line 239 toEtm8.scale: 1.089730
6test 1427 line 239 toEtm8.lat: 61.826625
6test 1428 line 239 toEtm8.lon: 57.525096
6test 1429 line 240 toEtm8.easting: 3394792.327820
6test 1430 line 240 toEtm8.northing: 3217583.415552
6test 1431 line 240 toEtm8.gamma: 15.165863
6test 1432 line 240 toEtm8.scale: 1.145285
6test 1433 line 240 toEtm8.lat: 25.104353
6test 1434 line 240 toEtm8.lon: 32.528660
6test 1435 line 241 toEtm8.easting: 1429160.966985
6test 1436 line 241 toEtm8.northing: 8212685.362032
6test 1437 line 241 toEtm8.gamma: 37.484904
6test 1438 line 241 toEtm8.scale: 1.024676
6test 1439 line 241 toEtm8.lat: 69.678351
6test 1440 line 241 toEtm8.lon: 39.275513
6test 1441 line 242 toEtm8.easting: 8343387.998065
6test 1442 line 242 toEtm8.northing: 8885196.954578
6test 1443 line 242 toEtm8.gamma: 78.561937
6test 1444 line 242 toEtm8.scale: 1.974733
6test 1445 line 242 toEtm8.lat: 29.671384
6test 1446 line 242 toEtm8.lon: 84.196595
6test 1447 line 243 toEtm8.easting: 1990722.928606
6test 1448 line 243 toEtm8.northing: 7569202.065162
6test 1449 line 243 toEtm8.gamma: 37.075276
6test 1450 line 243 toEtm8.scale: 1.048486
6test 1451 line 243 toEtm8.lat: 62.300208
6test 1452 line 243 toEtm8.lon: 40.474051
6test 1453 line 244 toEtm8.easting: 1554980.099559
6test 1454 line 244 toEtm8.northing: 1449423.919586
6test 1455 line 244 toEtm8.gamma: 3.188328
6test 1456 line 244 toEtm8.scale: 1.029664
6test 1457 line 244 toEtm8.lat: 12.721776
6test 1458 line 244 toEtm8.lon: 14.190003
6test 1459 line 245 toEtm8.easting: 785205.450196
6test 1460 line 245 toEtm8.northing: 5575158.423096
6test 1461 line 245 toEtm8.gamma: 8.388417
6test 1462 line 245 toEtm8.scale: 1.007181
6test 1463 line 245 toEtm8.lat: 49.811296
6test 1464 line 245 toEtm8.lon: 10.925011
6test 1465 line 246 toEtm8.easting: 3310405.988313
6test 1466 line 246 toEtm8.northing: 5955022.233881
6test 1467 line 246 toEtm8.gamma: 33.007587
6test 1468 line 246 toEtm8.scale: 1.137141
6test 1469 line 246 toEtm8.lat: 45.132680
6test 1470 line 246 toEtm8.lon: 42.478624
6test 1471 line 247 toEtm8.easting: 4733460.960666
6test 1472 line 247 toEtm8.northing: 129034.889816
6test 1473 line 247 toEtm8.gamma: 0.737551
6test 1474 line 247 toEtm8.scale: 1.290439
6test 1475 line 247 toEtm8.lat: 0.904279
6test 1476 line 247 toEtm8.lon: 39.078412
6test 1477 line 248 toEtm8.easting: 3322708.343909
6test 1478 line 248 toEtm8.northing: 3864738.078742
6test 1479 line 248 toEtm8.gamma: 18.472566
6test 1480 line 248 toEtm8.scale: 1.138838
6test 1481 line 248 toEtm8.lat: 30.163605
6test 1482 line 248 toEtm8.lon: 33.577996
6test 1483 line 249 toEtm8.easting: 8672864.417204
6test 1484 line 249 toEtm8.northing: 8333465.983444
6test 1485 line 249 toEtm8.gamma: 73.206273
6test 1486 line 249 toEtm8.scale: 2.065441
6test 1487 line 249 toEtm8.lat: 27.643244
6test 1488 line 249 toEtm8.lon: 81.892859
6test 1489 line 250 toEtm8.easting: 11126818.231196
6test 1490 line 250 toEtm8.northing: 7618712.174991
6test 1491 line 250 toEtm8.gamma: 67.887173
6test 1492 line 250 toEtm8.scale: 2.922417
6test 1493 line 250 toEtm8.lat: 18.201208
6test 1494 line 250 toEtm8.lon: 82.434618
6test 1495 line 251 toEtm8.easting: 8650100.981797
6test 1496 line 251 toEtm8.northing: 9975084.168997
6test 1497 line 251 toEtm8.gamma: 89.767446
6test 1498 line 251 toEtm8.scale: 2.057289
6test 1499 line 251 toEtm8.lat: 28.804576
6test 1500 line 251 toEtm8.lon: 89.886072
6test 1501 line 252 toEtm8.easting: 2212701.180192
6test 1502 line 252 toEtm8.northing: 650348.100229
6test 1503 line 252 toEtm8.gamma: 1.970441
6test 1504 line 252 toEtm8.scale: 1.060830
6test 1505 line 252 toEtm8.lat: 5.542998
6test 1506 line 252 toEtm8.lon: 19.589578
6test 1507 line 253 toEtm8.easting: 6890222.326618
6test 1508 line 253 toEtm8.northing: 7506813.499547
6test 1509 line 253 toEtm8.gamma: 62.684825
6test 1510 line 253 toEtm8.scale: 1.638488
6test 1511 line 253 toEtm8.lat: 34.237147
6test 1512 line 253 toEtm8.lon: 73.678164
6test 1513 line 254 toEtm8.easting: 6692260.067325
6test 1514 line 254 toEtm8.northing: 4244174.008110
6test 1515 line 254 toEtm8.gamma: 31.812920
6test 1516 line 254 toEtm8.scale: 1.604640
6test 1517 line 254 toEtm8.lat: 22.704949
6test 1518 line 254 toEtm8.lon: 57.877010
6test 1519 line 255 toEtm8.easting: 1225564.137190
6test 1520 line 255 toEtm8.northing: 4778923.924144
6test 1521 line 255 toEtm8.gamma: 10.083419
6test 1522 line 255 toEtm8.scale: 1.018134
6test 1523 line 255 toEtm8.lat: 42.192424
6test 1524 line 255 toEtm8.lon: 14.828196
6test 1525 line 256 toEtm8.easting: 12341116.154950
6test 1526 line 256 toEtm8.northing: 5081855.521966
6test 1527 line 256 toEtm8.gamma: 45.712546
6test 1528 line 256 toEtm8.scale: 3.535170
6test 1529 line 256 toEtm8.lat: 11.481151
6test 1530 line 256 toEtm8.lon: 78.189236
6test 1531 line 257 toEtm8.easting: 6673845.021771
6test 1532 line 257 toEtm8.northing: 1177587.190565
6test 1533 line 257 toEtm8.gamma: 8.389141
6test 1534 line 257 toEtm8.scale: 1.605171
6test 1535 line 257 toEtm8.lat: 6.609626
6test 1536 line 257 toEtm8.lon: 51.735783
6test 1537 line 258 toEtm8.easting: 6966354.690417
6test 1538 line 258 toEtm8.northing: 3641802.005093
6test 1539 line 258 toEtm8.gamma: 27.409636
6test 1540 line 258 toEtm8.scale: 1.661469
6test 1541 line 258 toEtm8.lat: 19.059369
6test 1542 line 258 toEtm8.lon: 57.526439
6test 1543 max forward error: 3.166497e-08
6test 1544 max reverse error: 1.207923e-13
6test 1545 Etm.scale0: 0.9996
6test 1546 Etm.datum: WGS84
6test 1547 Etm.datum.ellipsoid.KsOrder: 8
6test 1548 WGS84.KsOrder: 8
6all 1548 testEtmTMcoords.py tests passed, 1 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 1.284 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testExactTMcoords.py
6testing testExactTMcoords.py 22.10.04 (module pygeodesy.etm 22.10.12)
6test 1 line 1 _ExactTM.easting: 1548706.791619
6test 2 line 1 _ExactTM.northing: 8451449.198772
6test 3 line 1 _ExactTM.gamma: 43.922790
6test 4 line 1 _ExactTM.scale: 1.029060
6test 5 line 1 _ExactTM.lat: 70.579277
6test 6 line 1 _ExactTM.lon: 45.599420
6test 7 line 2 _ExactTM.easting: 2624150.740929
6test 8 line 2 _ExactTM.northing: 1204434.041605
6test 9 line 2 _ExactTM.gamma: 4.292619
6test 10 line 2 _ExactTM.scale: 1.086051
6test 11 line 2 _ExactTM.lat: 10.018894
6test 12 line 2 _ExactTM.lon: 23.313324
6test 13 line 3 _ExactTM.easting: 9855841.232935
6test 14 line 3 _ExactTM.northing: 6145496.115155
6test 15 line 3 _ExactTM.gamma: 53.348315
6test 16 line 3 _ExactTM.scale: 2.445098
6test 17 line 3 _ExactTM.lat: 19.479896
6test 18 line 3 _ExactTM.lon: 75.662049
6test 19 line 4 _ExactTM.easting: 3206390.691996
6test 20 line 4 _ExactTM.northing: 2650745.400406
6test 21 line 4 _ExactTM.gamma: 11.666950
6test 22 line 4 _ExactTM.scale: 1.129359
6test 23 line 4 _ExactTM.lat: 21.072465
6test 24 line 4 _ExactTM.lon: 29.828684
6test 25 line 5 _ExactTM.easting: 4328154.083501
6test 26 line 5 _ExactTM.northing: 749647.623690
6test 27 line 5 _ExactTM.gamma: 4.024317
6test 28 line 5 _ExactTM.scale: 1.240829
6test 29 line 5 _ExactTM.lat: 5.458957
6test 30 line 5 _ExactTM.lon: 36.385237
6test 31 line 6 _ExactTM.easting: 847598.266514
6test 32 line 6 _ExactTM.northing: 7947180.962440
6test 33 line 6 _ExactTM.gamma: 21.639091
6test 34 line 6 _ExactTM.scale: 1.008399
6test 35 line 6 _ExactTM.lat: 70.175454
6test 36 line 6 _ExactTM.lon: 22.865350
6test 37 line 7 _ExactTM.easting: 2727657.337974
6test 38 line 7 _ExactTM.northing: 8283916.696410
6test 39 line 7 _ExactTM.gamma: 55.690909
6test 40 line 7 _ExactTM.scale: 1.091942
6test 41 line 7 _ExactTM.lat: 61.965605
6test 42 line 7 _ExactTM.lon: 58.931371
6test 43 line 8 _ExactTM.easting: 2331001.751890
6test 44 line 8 _ExactTM.northing: 1313608.224751
6test 45 line 8 _ExactTM.gamma: 4.214690
6test 46 line 8 _ExactTM.scale: 1.067599
6test 47 line 8 _ExactTM.lat: 11.116050
6test 48 line 8 _ExactTM.lon: 20.901069
6test 49 line 9 _ExactTM.easting: 6035557.239480
6test 50 line 9 _ExactTM.northing: 5791770.791879
6test 51 line 9 _ExactTM.gamma: 43.698170
6test 52 line 9 _ExactTM.scale: 1.481260
6test 53 line 9 _ExactTM.lat: 32.210543
6test 54 line 9 _ExactTM.lon: 60.705849
6test 55 line 10 _ExactTM.easting: 1064553.125852
6test 56 line 10 _ExactTM.northing: 9417273.737208
6test 57 line 10 _ExactTM.gamma: 61.100380
6test 58 line 10 _ExactTM.scale: 1.013475
6test 59 line 10 _ExactTM.lat: 79.187451
6test 60 line 10 _ExactTM.lon: 61.532382
6test 61 line 11 _ExactTM.easting: 1400137.116164
6test 62 line 11 _ExactTM.northing: 9616907.017686
6test 63 line 11 _ExactTM.gamma: 74.527087
6test 64 line 11 _ExactTM.scale: 1.023640
6test 65 line 11 _ExactTM.lat: 77.103759
6test 66 line 11 _ExactTM.lon: 74.899105
6test 67 line 12 _ExactTM.easting: 9860691.016626
6test 68 line 12 _ExactTM.northing: 7433039.143328
6test 69 line 12 _ExactTM.gamma: 65.357693
6test 70 line 12 _ExactTM.scale: 2.438973
6test 71 line 12 _ExactTM.lat: 21.889514
6test 72 line 12 _ExactTM.lon: 80.019886
6test 73 line 13 _ExactTM.easting: 8076501.833695
6test 74 line 13 _ExactTM.northing: 8561614.174782
6test 75 line 13 _ExactTM.gamma: 75.073393
6test 76 line 13 _ExactTM.scale: 1.906202
6test 77 line 13 _ExactTM.lat: 30.536296
6test 78 line 13 _ExactTM.lon: 82.186178
6test 79 line 14 _ExactTM.easting: 3335099.866623
6test 80 line 14 _ExactTM.northing: 6740519.084015
6test 81 line 14 _ExactTM.gamma: 40.611821
6test 82 line 14 _ExactTM.scale: 1.139021
6test 83 line 14 _ExactTM.lat: 49.990485
6test 84 line 14 _ExactTM.lon: 48.203179
6test 85 line 15 _ExactTM.easting: 12051574.928500
6test 86 line 15 _ExactTM.northing: 6587213.051951
6test 87 line 15 _ExactTM.gamma: 59.033237
6test 88 line 15 _ExactTM.scale: 3.357469
6test 89 line 15 _ExactTM.lat: 14.486312
6test 90 line 15 _ExactTM.lon: 80.905137
6test 91 line 16 _ExactTM.easting: 5387578.735298
6test 92 line 16 _ExactTM.northing: 4111216.907168
6test 93 line 16 _ExactTM.gamma: 27.574337
6test 94 line 16 _ExactTM.scale: 1.379357
6test 95 line 16 _ExactTM.lat: 25.936824
6test 96 line 16 _ExactTM.lon: 49.913598
6test 97 line 17 _ExactTM.easting: 2622214.380233
6test 98 line 17 _ExactTM.northing: 8678923.984567
6test 99 line 17 _ExactTM.gamma: 61.697275
6test 100 line 17 _ExactTM.scale: 1.084810
6test 101 line 17 _ExactTM.lat: 64.402196
6test 102 line 17 _ExactTM.lon: 64.091395
6test 103 line 18 _ExactTM.easting: 5068474.169633
6test 104 line 18 _ExactTM.northing: 9492066.993709
6test 105 line 18 _ExactTM.gamma: 83.156740
6test 106 line 18 _ExactTM.scale: 1.329990
6test 107 line 18 _ExactTM.lat: 48.451354
6test 108 line 18 _ExactTM.lon: 84.856198
6test 109 line 19 _ExactTM.easting: 738062.047779
6test 110 line 19 _ExactTM.northing: 3031007.074116
6test 111 line 19 _ExactTM.gamma: 3.416802
6test 112 line 19 _ExactTM.scale: 1.006332
6test 113 line 19 _ExactTM.lat: 27.203895
6test 114 line 19 _ExactTM.lon: 7.440229
6test 115 line 20 _ExactTM.easting: 1944413.834565
6test 116 line 20 _ExactTM.northing: 9613299.224493
6test 117 line 20 _ExactTM.gamma: 78.462831
6test 118 line 20 _ExactTM.scale: 1.046134
6test 119 line 20 _ExactTM.lat: 72.509000
6test 120 line 20 _ExactTM.lon: 78.982283
6test 121 line 21 _ExactTM.easting: 2114521.418406
6test 122 line 21 _ExactTM.northing: 4954077.440098
6test 123 line 21 _ExactTM.gamma: 17.571878
6test 124 line 21 _ExactTM.scale: 1.055093
6test 125 line 21 _ExactTM.lat: 41.824954
6test 126 line 21 _ExactTM.lon: 25.392744
6test 127 line 22 _ExactTM.easting: 620365.905090
6test 128 line 22 _ExactTM.northing: 4755542.026562
6test 129 line 22 _ExactTM.gamma: 5.152022
6test 130 line 22 _ExactTM.scale: 1.004338
6test 131 line 22 _ExactTM.lat: 42.701376
6test 132 line 22 _ExactTM.lon: 7.572738
6test 133 line 23 _ExactTM.easting: 263004.770989
6test 134 line 23 _ExactTM.northing: 4493669.762451
6test 135 line 23 _ExactTM.gamma: 2.020523
6test 136 line 23 _ExactTM.scale: 1.000452
6test 137 line 23 _ExactTM.lat: 40.552052
6test 138 line 23 _ExactTM.lon: 3.106056
6test 139 line 24 _ExactTM.easting: 3217221.739462
6test 140 line 24 _ExactTM.northing: 437776.119161
6test 141 line 24 _ExactTM.gamma: 1.848169
6test 142 line 24 _ExactTM.scale: 1.130558
6test 143 line 24 _ExactTM.lat: 3.501242
6test 144 line 24 _ExactTM.lon: 27.806507
6test 145 line 25 _ExactTM.easting: 14661142.444961
6test 146 line 25 _ExactTM.northing: 7476100.824185
6test 147 line 25 _ExactTM.gamma: 68.376669
6test 148 line 25 _ExactTM.scale: 4.896650
6test 149 line 25 _ExactTM.lat: 10.148715
6test 150 line 25 _ExactTM.lon: 85.373768
6test 151 line 26 _ExactTM.easting: 967777.158554
6test 152 line 26 _ExactTM.northing: 6615684.266592
6test 153 line 26 _ExactTM.gamma: 14.410044
6test 154 line 26 _ExactTM.scale: 1.011100
6test 155 line 26 _ExactTM.lat: 58.582623
6test 156 line 26 _ExactTM.lon: 16.755558
6test 157 line 27 _ExactTM.easting: 7558840.728461
6test 158 line 27 _ExactTM.northing: 4144728.130764
6test 159 line 27 _ExactTM.gamma: 32.557264
6test 160 line 27 _ExactTM.scale: 1.791490
6test 161 line 27 _ExactTM.lat: 19.793004
6test 162 line 27 _ExactTM.lon: 61.746763
6test 163 line 28 _ExactTM.easting: 1056008.314161
6test 164 line 28 _ExactTM.northing: 9290799.692669
6test 165 line 28 _ExactTM.gamma: 55.843278
6test 166 line 28 _ExactTM.scale: 1.013253
6test 167 line 28 _ExactTM.lat: 78.666776
6test 168 line 28 _ExactTM.lon: 56.365355
6test 169 line 29 _ExactTM.easting: 1943965.134687
6test 170 line 29 _ExactTM.northing: 1389972.228690
6test 171 line 29 _ExactTM.gamma: 3.774869
6test 172 line 29 _ExactTM.scale: 1.046724
6test 173 line 29 _ExactTM.lat: 11.998788
6test 174 line 29 _ExactTM.lon: 17.597873
6test 175 line 30 _ExactTM.easting: 5803077.072902
6test 176 line 30 _ExactTM.northing: 5649957.943659
6test 177 line 30 _ExactTM.gamma: 41.717943
6test 178 line 30 _ExactTM.scale: 1.442572
6test 179 line 30 _ExactTM.lat: 32.540378
6test 180 line 30 _ExactTM.lon: 58.764613
6test 181 line 31 _ExactTM.easting: 2928716.986009
6test 182 line 31 _ExactTM.northing: 5731835.058317
6test 183 line 31 _ExactTM.gamma: 28.538550
6test 184 line 31 _ExactTM.scale: 1.106780
6test 185 line 31 _ExactTM.lat: 45.160356
6test 186 line 31 _ExactTM.lon: 37.465285
6test 187 line 32 _ExactTM.easting: 326141.975756
6test 188 line 32 _ExactTM.northing: 8881325.164543
6test 189 line 32 _ExactTM.gamma: 16.111415
6test 190 line 32 _ExactTM.scale: 1.000900
6test 191 line 32 _ExactTM.lat: 79.584190
6test 192 line 32 _ExactTM.lon: 16.367006
6test 193 line 33 _ExactTM.easting: 3933015.267450
6test 194 line 33 _ExactTM.northing: 7932373.909512
6test 195 line 33 _ExactTM.gamma: 58.577424
6test 196 line 33 _ExactTM.scale: 1.194811
6test 197 line 33 _ExactTM.lat: 52.470664
6test 198 line 33 _ExactTM.lon: 64.125580
6test 199 line 34 _ExactTM.easting: 8598926.983213
6test 200 line 34 _ExactTM.northing: 6214135.167503
6test 201 line 34 _ExactTM.gamma: 52.612878
6test 202 line 34 _ExactTM.scale: 2.051367
6test 203 line 34 _ExactTM.lat: 23.702673
6test 204 line 34 _ExactTM.lon: 72.630363
6test 205 line 35 _ExactTM.easting: 6620553.333772
6test 206 line 35 _ExactTM.northing: 6540527.122948
6test 207 line 35 _ExactTM.gamma: 52.350140
6test 208 line 35 _ExactTM.scale: 1.586614
6test 209 line 35 _ExactTM.lat: 32.603520
6test 210 line 35 _ExactTM.lon: 67.280123
6test 211 line 36 _ExactTM.easting: 1515136.758292
6test 212 line 36 _ExactTM.northing: 3858996.087537
6test 213 line 36 _ExactTM.gamma: 9.225127
6test 214 line 36 _ExactTM.scale: 1.028029
6test 215 line 36 _ExactTM.lat: 33.776224
6test 216 line 36 _ExactTM.lon: 16.280993
6test 217 line 37 _ExactTM.easting: 479854.373445
6test 218 line 37 _ExactTM.northing: 8980501.389896
6test 219 line 37 _ExactTM.gamma: 25.021222
6test 220 line 37 _ExactTM.scale: 1.002415
6test 221 line 37 _ExactTM.lat: 79.932747
6test 222 line 37 _ExactTM.lon: 25.363622
6test 223 line 38 _ExactTM.easting: 5243446.564940
6test 224 line 38 _ExactTM.northing: 140657.213960
6test 225 line 38 _ExactTM.gamma: 0.862817
6test 226 line 38 _ExactTM.scale: 1.360358
6test 227 line 38 _ExactTM.lat: 0.935056
6test 228 line 38 _ExactTM.lon: 42.538824
6test 229 line 39 _ExactTM.easting: 12806457.923218
6test 230 line 39 _ExactTM.northing: 7170118.684675
6test 231 line 39 _ExactTM.gamma: 64.708921
6test 232 line 39 _ExactTM.scale: 3.740588
6test 233 line 39 _ExactTM.lat: 13.490862
6test 234 line 39 _ExactTM.lon: 83.178380
6test 235 line 40 _ExactTM.easting: 1202993.459158
6test 236 line 40 _ExactTM.northing: 5557316.053599
6test 237 line 40 _ExactTM.gamma: 12.579061
6test 238 line 40 _ExactTM.scale: 1.017426
6test 239 line 40 _ExactTM.lat: 48.979057
6test 240 line 40 _ExactTM.lon: 16.474542
6test 241 line 41 _ExactTM.easting: 1729088.710196
6test 242 line 41 _ExactTM.northing: 7770874.289954
6test 243 line 41 _ExactTM.gamma: 36.021783
6test 244 line 41 _ExactTM.scale: 1.036397
6test 245 line 41 _ExactTM.lat: 65.036016
6test 246 line 41 _ExactTM.lon: 38.729091
6test 247 line 42 _ExactTM.easting: 2437301.517425
6test 248 line 42 _ExactTM.northing: 5539327.748318
6test 249 line 42 _ExactTM.gamma: 23.461879
6test 250 line 42 _ExactTM.scale: 1.073459
6test 251 line 42 _ExactTM.lat: 45.510091
6test 252 line 42 _ExactTM.lon: 31.303729
6test 253 line 43 _ExactTM.easting: 3647186.135066
6test 254 line 43 _ExactTM.northing: 2086412.330983
6test 255 line 43 _ExactTM.gamma: 10.023991
6test 256 line 43 _ExactTM.scale: 1.168707
6test 257 line 43 _ExactTM.lat: 16.058010
6test 258 line 43 _ExactTM.lon: 32.520026
6test 259 line 44 _ExactTM.easting: 1818497.243556
6test 260 line 44 _ExactTM.northing: 4275471.745057
6test 261 line 44 _ExactTM.gamma: 12.499656
6test 262 line 44 _ExactTM.scale: 1.040604
6test 263 line 44 _ExactTM.lat: 36.845200
6test 264 line 44 _ExactTM.lon: 20.282283
6test 265 line 45 _ExactTM.easting: 3751304.113783
6test 266 line 45 _ExactTM.northing: 5130454.001592
6test 267 line 45 _ExactTM.gamma: 28.959707
6test 268 line 45 _ExactTM.scale: 1.177681
6test 269 line 45 _ExactTM.lat: 37.865481
6test 270 line 45 _ExactTM.lon: 41.990402
6test 271 line 46 _ExactTM.easting: 2616733.138544
6test 272 line 46 _ExactTM.northing: 394644.463815
6test 273 line 46 _ExactTM.gamma: 1.390425
6test 274 line 46 _ExactTM.scale: 1.085595
6test 275 line 46 _ExactTM.lat: 3.287272
6test 276 line 46 _ExactTM.lon: 22.917604
6test 277 line 47 _ExactTM.easting: 1756506.573942
6test 278 line 47 _ExactTM.northing: 5570393.986394
6test 279 line 47 _ExactTM.gamma: 17.897894
6test 280 line 47 _ExactTM.scale: 1.037732
6test 281 line 47 _ExactTM.lat: 47.813686
6test 282 line 47 _ExactTM.lon: 23.545092
6test 283 line 48 _ExactTM.easting: 8752461.894711
6test 284 line 48 _ExactTM.northing: 6087728.152284
6test 285 line 48 _ExactTM.gamma: 51.628465
6test 286 line 48 _ExactTM.scale: 2.095465
6test 287 line 48 _ExactTM.lat: 22.836853
6test 288 line 48 _ExactTM.lon: 72.604385
6test 289 line 49 _ExactTM.easting: 1309272.216432
6test 290 line 49 _ExactTM.northing: 59520.028899
6test 291 line 49 _ExactTM.gamma: 0.109069
6test 292 line 49 _ExactTM.scale: 1.020897
6test 293 line 49 _ExactTM.lat: 0.527262
6test 294 line 49 _ExactTM.lon: 11.684209
6test 295 line 50 _ExactTM.easting: 328652.277129
6test 296 line 50 _ExactTM.northing: 2233043.958874
6test 297 line 50 _ExactTM.gamma: 1.084863
6test 298 line 50 _ExactTM.scale: 1.000935
6test 299 line 50 _ExactTM.lat: 20.166742
6test 300 line 50 _ExactTM.lon: 3.143948
6test 301 line 51 _ExactTM.easting: 8637959.716447
6test 302 line 51 _ExactTM.northing: 9190635.156031
6test 303 line 51 _ExactTM.gamma: 81.802563
6test 304 line 51 _ExactTM.scale: 2.054329
6test 305 line 51 _ExactTM.lat: 28.604629
6test 306 line 51 _ExactTM.lon: 85.988721
6test 307 line 52 _ExactTM.easting: 8548521.455147
6test 308 line 52 _ExactTM.northing: 9172410.943282
6test 309 line 52 _ExactTM.gamma: 81.583928
6test 310 line 52 _ExactTM.scale: 2.029641
6test 311 line 52 _ExactTM.lat: 28.984048
6test 312 line 52 _ExactTM.lon: 85.833448
6test 313 line 53 _ExactTM.easting: 796987.281104
6test 314 line 53 _ExactTM.northing: 7677446.357675
6test 315 line 53 _ExactTM.gamma: 18.084472
6test 316 line 53 _ExactTM.scale: 1.007381
6test 317 line 53 _ExactTM.lat: 68.071020
6test 318 line 53 _ExactTM.lon: 19.392823
6test 319 line 54 _ExactTM.easting: 3291036.496762
6test 320 line 54 _ExactTM.northing: 9513199.600666
6test 321 line 54 _ExactTM.gamma: 80.890254
6test 322 line 54 _ExactTM.scale: 1.134826
6test 323 line 54 _ExactTM.lat: 61.416576
6test 324 line 54 _ExactTM.lon: 81.981611
6test 325 line 55 _ExactTM.easting: 7087225.330906
6test 326 line 55 _ExactTM.northing: 8382823.855822
6test 327 line 55 _ExactTM.gamma: 72.253756
6test 328 line 55 _ExactTM.scale: 1.678070
6test 329 line 55 _ExactTM.lat: 35.074753
6test 330 line 55 _ExactTM.lon: 79.496003
6test 331 line 56 _ExactTM.easting: 5090358.125724
6test 332 line 56 _ExactTM.northing: 4318294.133489
6test 333 line 56 _ExactTM.gamma: 28.266280
6test 334 line 56 _ExactTM.scale: 1.336264
6test 335 line 56 _ExactTM.lat: 28.078790
6test 336 line 56 _ExactTM.lon: 48.684350
6test skipped (1): line 57 _ExactTM.'84.986930137199 2.067177857261 20163.0752214330146 9438635.9888499043815 2.059277291707588222 .99960496589466017622'
6test 337 line 58 _ExactTM.easting: 3447670.550785
6test 338 line 58 _ExactTM.northing: 3680238.888223
6test 339 line 58 _ExactTM.gamma: 17.934948
6test 340 line 58 _ExactTM.scale: 1.149831
6test 341 line 58 _ExactTM.lat: 28.473948
6test 342 line 58 _ExactTM.lon: 34.127306
6test 343 line 59 _ExactTM.easting: 3396522.906798
6test 344 line 59 _ExactTM.northing: 8093659.687593
6test 345 line 59 _ExactTM.gamma: 57.747117
6test 346 line 59 _ExactTM.scale: 1.144006
6test 347 line 59 _ExactTM.lat: 56.629354
6test 348 line 59 _ExactTM.lon: 62.196474
6test 349 line 60 _ExactTM.easting: 11249894.100784
6test 350 line 60 _ExactTM.northing: 1619226.506299
6test 351 line 60 _ExactTM.gamma: 14.210358
6test 352 line 60 _ExactTM.scale: 3.048347
6test 353 line 60 _ExactTM.lat: 4.747762
6test 354 line 60 _ExactTM.lon: 70.932555
6test 355 line 61 _ExactTM.easting: 6808805.230950
6test 356 line 61 _ExactTM.northing: 8044779.777369
6test 357 line 61 _ExactTM.gamma: 68.242008
6test 358 line 61 _ExactTM.scale: 1.621464
6test 359 line 61 _ExactTM.lat: 35.882113
6test 360 line 61 _ExactTM.lon: 76.741849
6test 361 line 62 _ExactTM.easting: 2306021.556506
6test 362 line 62 _ExactTM.northing: 757191.592866
6test 363 line 62 _ExactTM.gamma: 2.385686
6test 364 line 62 _ExactTM.scale: 1.066159
6test 365 line 62 _ExactTM.lat: 6.420705
6test 366 line 62 _ExactTM.lon: 20.416028
6test 367 line 63 _ExactTM.easting: 1547406.313862
6test 368 line 63 _ExactTM.northing: 6048712.751824
6test 369 line 63 _ExactTM.gamma: 18.474372
6test 370 line 63 _ExactTM.scale: 1.029123
6test 371 line 63 _ExactTM.lat: 52.335248
6test 372 line 63 _ExactTM.lon: 22.879294
6test 373 line 64 _ExactTM.easting: 2430467.650383
6test 374 line 64 _ExactTM.northing: 7557167.613972
6test 375 line 64 _ExactTM.gamma: 42.110021
6test 376 line 64 _ExactTM.scale: 1.072759
6test 377 line 64 _ExactTM.lat: 59.846391
6test 378 line 64 _ExactTM.lon: 46.262536
6test 379 line 65 _ExactTM.easting: 2334053.905830
6test 380 line 65 _ExactTM.northing: 1948076.966582
6test 381 line 65 _ExactTM.gamma: 6.353185
6test 382 line 65 _ExactTM.scale: 1.067733
6test 383 line 65 _ExactTM.lat: 16.461790
6test 384 line 65 _ExactTM.lon: 21.433269
6test 385 line 66 _ExactTM.easting: 5564175.186737
6test 386 line 66 _ExactTM.northing: 1836851.660412
6test 387 line 66 _ExactTM.gamma: 11.870682
6test 388 line 66 _ExactTM.scale: 1.408265
6test 389 line 66 _ExactTM.lat: 11.707905
6test 390 line 66 _ExactTM.lon: 45.827075
6test 391 line 67 _ExactTM.easting: 6118505.590359
6test 392 line 67 _ExactTM.northing: 7631684.552421
6test 393 line 67 _ExactTM.gamma: 62.477323
6test 394 line 67 _ExactTM.scale: 1.493420
6test 395 line 67 _ExactTM.lat: 38.519075
6test 396 line 67 _ExactTM.lon: 71.935918
6test 397 line 68 _ExactTM.easting: 7365359.294665
6test 398 line 68 _ExactTM.northing: 8818194.451531
6test 399 line 68 _ExactTM.gamma: 77.207042
6test 400 line 68 _ExactTM.scale: 1.737639
6test 401 line 68 _ExactTM.lat: 34.264007
6test 402 line 68 _ExactTM.lon: 82.647878
6test 403 line 69 _ExactTM.easting: 36187.342415
6test 404 line 69 _ExactTM.northing: 2142565.324802
6test 405 line 69 _ExactTM.gamma: 0.114334
6test 406 line 69 _ExactTM.scale: 0.999616
6test 407 line 69 _ExactTM.lat: 19.376880
6test 408 line 69 _ExactTM.lon: 0.344605
6test 409 line 70 _ExactTM.easting: 2380328.546851
6test 410 line 70 _ExactTM.northing: 8440109.872384
6test 411 line 70 _ExactTM.gamma: 55.076067
6test 412 line 70 _ExactTM.scale: 1.069658
6test 413 line 70 _ExactTM.lat: 65.075805
6test 414 line 70 _ExactTM.lon: 57.653438
6test 415 line 71 _ExactTM.easting: 582511.608826
6test 416 line 71 _ExactTM.northing: 8876047.217071
6test 417 line 71 _ExactTM.gamma: 27.133300
6test 418 line 71 _ExactTM.scale: 1.003749
6test 419 line 71 _ExactTM.lat: 78.691870
6test 420 line 71 _ExactTM.lon: 27.591736
6test 421 line 72 _ExactTM.easting: 899441.350477
6test 422 line 72 _ExactTM.northing: 4582046.430516
6test 423 line 72 _ExactTM.gamma: 7.031211
6test 424 line 72 _ExactTM.scale: 1.009573
6test 425 line 72 _ExactTM.lat: 40.893022
6test 426 line 72 _ExactTM.lon: 10.668804
6test 427 line 73 _ExactTM.easting: 5022485.124337
6test 428 line 73 _ExactTM.northing: 9741774.933721
6test 429 line 73 _ExactTM.gamma: 86.505947
6test 430 line 73 _ExactTM.scale: 1.323700
6test 431 line 73 _ExactTM.lat: 48.914279
6test 432 line 73 _ExactTM.lon: 87.359268
6test 433 line 74 _ExactTM.easting: 6701004.587204
6test 434 line 74 _ExactTM.northing: 2954368.258231
6test 435 line 74 _ExactTM.gamma: 21.560153
6test 436 line 74 _ExactTM.scale: 1.608554
6test 437 line 74 _ExactTM.lat: 16.208377
6test 438 line 74 _ExactTM.lon: 54.494282
6test 439 line 75 _ExactTM.easting: 454986.218897
6test 440 line 75 _ExactTM.northing: 4885087.887884
6test 441 line 75 _ExactTM.gamma: 3.945648
6test 442 line 75 _ExactTM.scale: 1.002147
6test 443 line 75 _ExactTM.lat: 43.977936
6test 444 line 75 _ExactTM.lon: 5.672541
6test 445 line 76 _ExactTM.easting: 8903956.140311
6test 446 line 76 _ExactTM.northing: 8470608.577482
6test 447 line 76 _ExactTM.gamma: 74.723116
6test 448 line 76 _ExactTM.scale: 2.131311
6test 449 line 76 _ExactTM.lat: 26.850861
6test 450 line 76 _ExactTM.lon: 82.834480
6test 451 line 77 _ExactTM.easting: 1547627.594741
6test 452 line 77 _ExactTM.northing: 6036584.538347
6test 453 line 77 _ExactTM.gamma: 18.407629
6test 454 line 77 _ExactTM.scale: 1.029132
6test 455 line 77 _ExactTM.lat: 52.234165
6test 456 line 77 _ExactTM.lon: 22.827655
6test 457 line 78 _ExactTM.easting: 5221488.778597
6test 458 line 78 _ExactTM.northing: 1762592.044392
6test 459 line 78 _ExactTM.gamma: 10.927880
6test 460 line 78 _ExactTM.scale: 1.356721
6test 461 line 78 _ExactTM.lat: 11.674646
6test 462 line 78 _ExactTM.lon: 43.500147
6test 463 line 79 _ExactTM.easting: 4880570.297161
6test 464 line 79 _ExactTM.northing: 3325433.988867
6test 465 line 79 _ExactTM.gamma: 20.469862
6test 466 line 79 _ExactTM.scale: 1.308476
6test 467 line 79 _ExactTM.lat: 22.492753
6test 468 line 79 _ExactTM.lon: 44.179153
6test 469 line 80 _ExactTM.easting: 23930680.082694
6test 470 line 80 _ExactTM.northing: 7491462.099038
6test 471 line 80 _ExactTM.gamma: 75.937628
6test 472 line 80 _ExactTM.scale: 15.556365
6test 473 line 80 _ExactTM.lat: 0.910999
6test 474 line 80 _ExactTM.lon: 88.548823
6test 475 line 81 _ExactTM.easting: 71519.450458
6test 476 line 81 _ExactTM.northing: 3654740.444852
6test 477 line 81 _ExactTM.gamma: 0.417448
6test 478 line 81 _ExactTM.scale: 0.999663
6test 479 line 81 _ExactTM.lat: 33.028802
6test 480 line 81 _ExactTM.lon: 0.765843
6test 481 line 82 _ExactTM.easting: 4152797.795220
6test 482 line 82 _ExactTM.northing: 7823098.502751
6test 483 line 82 _ExactTM.gamma: 58.238901
6test 484 line 82 _ExactTM.scale: 1.218052
6test 485 line 82 _ExactTM.lat: 50.649195
6test 486 line 82 _ExactTM.lon: 64.389076
6test 487 line 83 _ExactTM.easting: 2926725.707639
6test 488 line 83 _ExactTM.northing: 7904918.072844
6test 489 line 83 _ExactTM.gamma: 51.592748
6test 490 line 83 _ExactTM.scale: 1.106206
6test 491 line 83 _ExactTM.lat: 58.820640
6test 492 line 83 _ExactTM.lon: 55.841048
6test 493 line 84 _ExactTM.easting: 1325509.113869
6test 494 line 84 _ExactTM.northing: 9675214.948213
6test 495 line 84 _ExactTM.gamma: 76.116213
6test 496 line 84 _ExactTM.scale: 1.021136
6test 497 line 84 _ExactTM.lat: 77.865762
6test 498 line 84 _ExactTM.lon: 76.414618
6test 499 line 85 _ExactTM.easting: 3045296.448926
6test 500 line 85 _ExactTM.northing: 542153.443280
6test 501 line 85 _ExactTM.gamma: 2.185095
6test 502 line 85 _ExactTM.scale: 1.116664
6test 503 line 85 _ExactTM.lat: 4.389639
6test 504 line 85 _ExactTM.lon: 26.458976
6test 505 line 86 _ExactTM.easting: 11843870.887518
6test 506 line 86 _ExactTM.northing: 5912803.073343
6test 507 line 86 _ExactTM.gamma: 52.814259
6test 508 line 86 _ExactTM.scale: 3.267256
6test 509 line 86 _ExactTM.lat: 13.924448
6test 510 line 86 _ExactTM.lon: 79.017873
6test 511 line 87 _ExactTM.easting: 8891099.704936
6test 512 line 87 _ExactTM.northing: 162160.142227
6test 513 line 87 _ExactTM.gamma: 1.312094
6test 514 line 87 _ExactTM.scale: 2.157363
6test 515 line 87 _ExactTM.lat: 0.679713
6test 516 line 87 _ExactTM.lon: 62.036792
6test 517 line 88 _ExactTM.easting: 4784814.214449
6test 518 line 88 _ExactTM.northing: 2984497.432580
6test 519 line 88 _ExactTM.gamma: 17.946545
6test 520 line 88 _ExactTM.scale: 1.296116
6test 521 line 88 _ExactTM.lat: 20.478281
6test 522 line 88 _ExactTM.lon: 42.678234
6test 523 line 89 _ExactTM.easting: 1772074.682154
6test 524 line 89 _ExactTM.northing: 9491552.560143
6test 525 line 89 _ExactTM.gamma: 73.634830
6test 526 line 89 _ExactTM.scale: 1.038202
6test 527 line 89 _ExactTM.lat: 73.695703
6test 528 line 89 _ExactTM.lon: 74.259097
6test 529 line 90 _ExactTM.easting: 1907649.782106
6test 530 line 90 _ExactTM.northing: 6994232.429379
6test 531 line 90 _ExactTM.gamma: 29.718929
6test 532 line 90 _ExactTM.scale: 1.044503
6test 533 line 90 _ExactTM.lat: 58.569370
6test 534 line 90 _ExactTM.lon: 33.777549
6test 535 line 91 _ExactTM.easting: 2084423.818962
6test 536 line 91 _ExactTM.northing: 2211816.035619
6test 537 line 91 _ExactTM.gamma: 6.556448
6test 538 line 91 _ExactTM.scale: 1.053793
6test 539 line 91 _ExactTM.lat: 18.933881
6test 540 line 91 _ExactTM.lon: 19.492695
6test 541 line 92 _ExactTM.easting: 1064373.671729
6test 542 line 92 _ExactTM.northing: 7812482.547461
6test 543 line 92 _ExactTM.gamma: 24.874124
6test 544 line 92 _ExactTM.scale: 1.013490
6test 545 line 92 _ExactTM.lat: 68.317934
6test 546 line 92 _ExactTM.lon: 26.515687
6test 547 line 93 _ExactTM.easting: 4770385.479297
6test 548 line 93 _ExactTM.northing: 9734318.902980
6test 549 line 93 _ExactTM.gamma: 86.273119
6test 550 line 93 _ExactTM.scale: 1.290553
6test 551 line 93 _ExactTM.lat: 50.641941
6test 552 line 93 _ExactTM.lon: 87.111557
6test 553 line 94 _ExactTM.easting: 6398096.677297
6test 554 line 94 _ExactTM.northing: 4410894.752104
6test 555 line 94 _ExactTM.gamma: 32.558023
6test 556 line 94 _ExactTM.scale: 1.548004
6test 557 line 94 _ExactTM.lat: 24.411298
6test 558 line 94 _ExactTM.lon: 56.881823
6test 559 line 95 _ExactTM.easting: 3138623.300415
6test 560 line 95 _ExactTM.northing: 3082960.600798
6test 561 line 95 _ExactTM.gamma: 13.557672
6test 562 line 95 _ExactTM.scale: 1.123724
6test 563 line 95 _ExactTM.lat: 24.571871
6test 564 line 95 _ExactTM.lon: 30.073097
6test 565 line 96 _ExactTM.easting: 2748325.794651
6test 566 line 96 _ExactTM.northing: 4202811.912668
6test 567 line 96 _ExactTM.gamma: 17.578706
6test 568 line 96 _ExactTM.scale: 1.094102
6test 569 line 96 _ExactTM.lat: 34.202576
6test 570 line 96 _ExactTM.lon: 29.383166
6test 571 line 97 _ExactTM.easting: 6677830.630367
6test 572 line 97 _ExactTM.northing: 5350071.837395
6test 573 line 97 _ExactTM.gamma: 41.306641
6test 574 line 97 _ExactTM.scale: 1.599774
6test 575 line 97 _ExactTM.lat: 27.756285
6test 576 line 97 _ExactTM.lon: 61.881905
6test 577 line 98 _ExactTM.easting: 5941536.667431
6test 578 line 98 _ExactTM.northing: 3293112.175140
6test 579 line 98 _ExactTM.gamma: 22.752845
6test 580 line 98 _ExactTM.scale: 1.468473
6test 581 line 98 _ExactTM.lat: 19.742270
6test 582 line 98 _ExactTM.lon: 50.957821
6test 583 line 99 _ExactTM.easting: 3152481.792567
6test 584 line 99 _ExactTM.northing: 5903048.837978
6test 585 line 99 _ExactTM.gamma: 31.494606
6test 586 line 99 _ExactTM.scale: 1.124085
6test 587 line 99 _ExactTM.lat: 45.453582
6test 588 line 99 _ExactTM.lon: 40.659833
6test 589 line 100 _ExactTM.easting: 10460475.897730
6test 590 line 100 _ExactTM.northing: 2553463.624391
6test 591 line 100 _ExactTM.gamma: 21.965869
6test 592 line 100 _ExactTM.scale: 2.700296
6test 593 line 100 _ExactTM.lat: 8.322144
6test 594 line 100 _ExactTM.lon: 69.488157
6test 595 line 101 _ExactTM.easting: 1964010.778021
6test 596 line 101 _ExactTM.northing: 5634042.923056
6test 597 line 101 _ExactTM.gamma: 20.117800
6test 598 line 101 _ExactTM.scale: 1.047344
6test 599 line 101 _ExactTM.lat: 47.749831
6test 600 line 101 _ExactTM.lon: 26.322002
6test 601 line 102 _ExactTM.easting: 2065306.424934
6test 602 line 102 _ExactTM.northing: 2135008.468651
6test 603 line 102 _ExactTM.gamma: 6.258981
6test 604 line 102 _ExactTM.scale: 1.052800
6test 605 line 102 _ExactTM.lat: 18.297493
6test 606 line 102 _ExactTM.lon: 19.244669
6test 607 line 103 _ExactTM.easting: 5127738.132976
6test 608 line 103 _ExactTM.northing: 6793804.304411
6test 609 line 103 _ExactTM.gamma: 50.557915
6test 610 line 103 _ExactTM.scale: 1.339412
6test 611 line 103 _ExactTM.lat: 40.834541
6test 612 line 103 _ExactTM.lon: 61.650750
6test 613 line 104 _ExactTM.easting: 8385525.148166
6test 614 line 104 _ExactTM.northing: 6924932.344306
6test 615 line 104 _ExactTM.gamma: 59.087561
6test 616 line 104 _ExactTM.scale: 1.990364
6test 617 line 104 _ExactTM.lat: 26.273247
6test 618 line 104 _ExactTM.lon: 74.926694
6test 619 line 105 _ExactTM.easting: 2297510.791909
6test 620 line 105 _ExactTM.northing: 2805666.962834
6test 621 line 105 _ExactTM.gamma: 9.301553
6test 622 line 105 _ExactTM.scale: 1.065508
6test 623 line 105 _ExactTM.lat: 23.698347
6test 624 line 105 _ExactTM.lon: 22.155657
6test 625 line 106 _ExactTM.easting: 13749544.917635
6test 626 line 106 _ExactTM.northing: 8288728.384650
6test 627 line 106 _ExactTM.gamma: 75.033970
6test 628 line 106 _ExactTM.scale: 4.270588
6test 629 line 106 _ExactTM.lat: 12.364113
6test 630 line 106 _ExactTM.lon: 86.348578
6test 631 line 107 _ExactTM.easting: 317518.455546
6test 632 line 107 _ExactTM.northing: 1097517.583745
6test 633 line 107 _ExactTM.gamma: 0.499004
6test 634 line 107 _ExactTM.scale: 1.000848
6test 635 line 107 _ExactTM.lat: 9.916091
6test 636 line 107 _ExactTM.lon: 2.895277
6test 637 line 108 _ExactTM.easting: 3856035.184888
6test 638 line 108 _ExactTM.northing: 9141364.450290
6test 639 line 108 _ExactTM.gamma: 75.972763
6test 640 line 108 _ExactTM.scale: 1.186786
6test 641 line 108 _ExactTM.lat: 56.553876
6test 642 line 108 _ExactTM.lon: 78.215077
6test 643 line 109 _ExactTM.easting: 1457484.942823
6test 644 line 109 _ExactTM.northing: 9385297.101973
6test 645 line 109 _ExactTM.gamma: 66.784662
6test 646 line 109 _ExactTM.scale: 1.025660
6test 647 line 109 _ExactTM.lat: 75.957631
6test 648 line 109 _ExactTM.lon: 67.407383
6test 649 line 110 _ExactTM.easting: 1304934.901841
6test 650 line 110 _ExactTM.northing: 3604655.155715
6test 651 line 110 _ExactTM.gamma: 7.343989
6test 652 line 110 _ExactTM.scale: 1.020672
6test 653 line 110 _ExactTM.lat: 31.826531
6test 654 line 110 _ExactTM.lon: 13.731050
6test 655 line 111 _ExactTM.easting: 1399093.491792
6test 656 line 111 _ExactTM.northing: 8314607.120342
6test 657 line 111 _ExactTM.gamma: 38.630161
6test 658 line 111 _ExactTM.scale: 1.023625
6test 659 line 111 _ExactTM.lat: 70.542985
6test 660 line 111 _ExactTM.lon: 40.282055
6test 661 line 112 _ExactTM.easting: 356983.618540
6test 662 line 112 _ExactTM.northing: 4282309.048994
6test 663 line 112 _ExactTM.gamma: 2.561485
6test 664 line 112 _ExactTM.scale: 1.001170
6test 665 line 112 _ExactTM.lat: 38.617487
6test 666 line 112 _ExactTM.lon: 4.099838
6test 667 line 113 _ExactTM.easting: 9952911.325091
6test 668 line 113 _ExactTM.northing: 1510288.212229
6test 669 line 113 _ExactTM.gamma: 12.752154
6test 670 line 113 _ExactTM.scale: 2.511357
6test 671 line 113 _ExactTM.lat: 5.389447
6test 672 line 113 _ExactTM.lon: 66.729612
6test 673 line 114 _ExactTM.easting: 6367592.504007
6test 674 line 114 _ExactTM.northing: 1200437.077672
6test 675 line 114 _ExactTM.gamma: 8.338041
6test 676 line 114 _ExactTM.scale: 1.546210
6test 677 line 114 _ExactTM.lat: 6.995168
6test 678 line 114 _ExactTM.lon: 50.014763
6test 679 line 115 _ExactTM.easting: 4391263.676460
6test 680 line 115 _ExactTM.northing: 6325455.989408
6test 681 line 115 _ExactTM.gamma: 42.653541
6test 682 line 115 _ExactTM.scale: 1.245560
6test 683 line 115 _ExactTM.lat: 42.321894
6test 684 line 115 _ExactTM.lon: 53.784040
6test 685 line 116 _ExactTM.easting: 6209880.527527
6test 686 line 116 _ExactTM.northing: 2154754.449747
6test 687 line 116 _ExactTM.gamma: 14.919512
6test 688 line 116 _ExactTM.scale: 1.516560
6test 689 line 116 _ExactTM.lat: 12.698515
6test 690 line 116 _ExactTM.lon: 50.242047
6test 691 line 117 _ExactTM.easting: 1507053.688772
6test 692 line 117 _ExactTM.northing: 6261383.513280
6test 693 line 117 _ExactTM.gamma: 19.280373
6test 694 line 117 _ExactTM.scale: 1.027584
6test 695 line 117 _ExactTM.lat: 54.207636
6test 696 line 117 _ExactTM.lon: 23.325731
6test 697 line 118 _ExactTM.easting: 8332725.003777
6test 698 line 118 _ExactTM.northing: 3002712.329753
6test 699 line 118 _ExactTM.gamma: 24.059212
6test 700 line 118 _ExactTM.scale: 1.990450
6test 701 line 118 _ExactTM.lat: 13.224787
6test 702 line 118 _ExactTM.lon: 62.426698
6test 703 line 119 _ExactTM.easting: 3958910.085235
6test 704 line 119 _ExactTM.northing: 3462284.926102
6test 705 line 119 _ExactTM.gamma: 18.546398
6test 706 line 119 _ExactTM.scale: 1.199351
6test 707 line 119 _ExactTM.lat: 25.650282
6test 708 line 119 _ExactTM.lon: 37.710391
6test 709 line 120 _ExactTM.easting: 10452892.282083
6test 710 line 120 _ExactTM.northing: 8000059.605114
6test 711 line 120 _ExactTM.gamma: 71.075240
6test 712 line 120 _ExactTM.scale: 2.650111
6test 713 line 120 _ExactTM.lat: 20.684773
6test 714 line 120 _ExactTM.lon: 82.849734
6test 715 line 121 _ExactTM.easting: 496148.253731
6test 716 line 121 _ExactTM.northing: 6388503.365043
6test 717 line 121 _ExactTM.gamma: 6.970955
6test 718 line 121 _ExactTM.scale: 1.002620
6test 719 line 121 _ExactTM.lat: 57.367533
6test 720 line 121 _ExactTM.lon: 8.260866
6test 721 line 122 _ExactTM.easting: 7375792.085850
6test 722 line 122 _ExactTM.northing: 5544624.072155
6test 723 line 122 _ExactTM.gamma: 44.510851
6test 724 line 122 _ExactTM.scale: 1.745898
6test 725 line 122 _ExactTM.lat: 25.958757
6test 726 line 122 _ExactTM.lon: 65.760477
6test 727 line 123 _ExactTM.easting: 2826258.041979
6test 728 line 123 _ExactTM.northing: 5167759.816959
6test 729 line 123 _ExactTM.gamma: 23.783897
6test 730 line 123 _ExactTM.scale: 1.099415
6test 731 line 123 _ExactTM.lat: 41.395848
6test 732 line 123 _ExactTM.lon: 33.661790
6test 733 line 124 _ExactTM.easting: 3958563.378851
6test 734 line 124 _ExactTM.northing: 8499923.231243
6test 735 line 124 _ExactTM.gamma: 66.570945
6test 736 line 124 _ExactTM.scale: 1.197296
6test 737 line 124 _ExactTM.lat: 54.266617
6test 738 line 124 _ExactTM.lon: 70.602199
6test 739 line 125 _ExactTM.easting: 4408189.533462
6test 740 line 125 _ExactTM.northing: 8046312.003642
6test 741 line 125 _ExactTM.gamma: 62.216959
6test 742 line 125 _ExactTM.scale: 1.246750
6test 743 line 125 _ExactTM.lat: 49.840393
6test 744 line 125 _ExactTM.lon: 68.036728
6test 745 line 126 _ExactTM.easting: 3629225.627512
6test 746 line 126 _ExactTM.northing: 6371258.454645
6test 747 line 126 _ExactTM.gamma: 38.881675
6test 748 line 126 _ExactTM.scale: 1.165511
6test 749 line 126 _ExactTM.lat: 46.306035
6test 750 line 126 _ExactTM.lon: 48.085828
6test 751 line 127 _ExactTM.easting: 602838.450710
6test 752 line 127 _ExactTM.northing: 4851370.637205
6test 753 line 127 _ExactTM.gamma: 5.160395
6test 754 line 127 _ExactTM.scale: 1.004073
6test 755 line 127 _ExactTM.lat: 43.570988
6test 756 line 127 _ExactTM.lon: 7.464494
6test 757 line 128 _ExactTM.easting: 764616.665051
6test 758 line 128 _ExactTM.northing: 2164299.337945
6test 759 line 128 _ExactTM.gamma: 2.429300
6test 760 line 128 _ExactTM.scale: 1.006835
6test 761 line 128 _ExactTM.lat: 19.427290
6test 762 line 128 _ExactTM.lon: 7.268247
6test 763 line 129 _ExactTM.easting: 5048953.021931
6test 764 line 129 _ExactTM.northing: 1885974.057398
6test 765 line 129 _ExactTM.gamma: 11.459804
6test 766 line 129 _ExactTM.scale: 1.332207
6test 767 line 129 _ExactTM.lat: 12.713794
6test 768 line 129 _ExactTM.lon: 42.507018
6test 769 line 130 _ExactTM.easting: 2293996.601155
6test 770 line 130 _ExactTM.northing: 2392408.644221
6test 771 line 130 _ExactTM.gamma: 7.791838
6test 772 line 130 _ExactTM.scale: 1.065348
6test 773 line 130 _ExactTM.lat: 20.238782
6test 774 line 130 _ExactTM.lon: 21.566068
6test 775 line 131 _ExactTM.easting: 1530603.839418
6test 776 line 131 _ExactTM.northing: 7287841.459898
6test 777 line 131 _ExactTM.gamma: 27.502921
6test 778 line 131 _ExactTM.scale: 1.028416
6test 779 line 131 _ExactTM.lat: 62.367847
6test 780 line 131 _ExactTM.lon: 30.438849
6test 781 line 132 _ExactTM.easting: 2660000.093152
6test 782 line 132 _ExactTM.northing: 5161982.213248
6test 783 line 132 _ExactTM.gamma: 22.629836
6test 784 line 132 _ExactTM.scale: 1.087851
6test 785 line 132 _ExactTM.lat: 41.891569
6test 786 line 132 _ExactTM.lon: 31.959547
6test 787 line 133 _ExactTM.easting: 5037478.329414
6test 788 line 133 _ExactTM.northing: 8768172.379908
6test 789 line 133 _ExactTM.gamma: 73.511182
6test 790 line 133 _ExactTM.scale: 1.325919
6test 791 line 133 _ExactTM.lat: 47.664248
6test 792 line 133 _ExactTM.lon: 77.630062
6test 793 line 134 _ExactTM.easting: 2289650.957799
6test 794 line 134 _ExactTM.northing: 8784328.593607
6test 795 line 134 _ExactTM.gamma: 60.786067
6test 796 line 134 _ExactTM.scale: 1.064346
6test 797 line 134 _ExactTM.lat: 67.259559
6test 798 line 134 _ExactTM.lon: 62.715293
6test 799 line 135 _ExactTM.easting: 647913.889744
6test 800 line 135 _ExactTM.northing: 6742382.228217
6test 801 line 135 _ExactTM.gamma: 10.252667
6test 802 line 135 _ExactTM.scale: 1.004748
6test 803 line 135 _ExactTM.lat: 60.295381
6test 804 line 135 _ExactTM.lon: 11.763097
6test 805 line 136 _ExactTM.easting: 1118372.698566
6test 806 line 136 _ExactTM.northing: 9040627.942263
6test 807 line 136 _ExactTM.gamma: 48.936803
6test 808 line 136 _ExactTM.scale: 1.014920
6test 809 line 136 _ExactTM.lat: 76.878914
6test 810 line 136 _ExactTM.lon: 49.685773
6test 811 line 137 _ExactTM.easting: 440696.510070
6test 812 line 137 _ExactTM.northing: 5500355.826297
6test 813 line 137 _ExactTM.gamma: 4.636104
6test 814 line 137 _ExactTM.scale: 1.001986
6test 815 line 137 _ExactTM.lat: 49.495349
6test 816 line 137 _ExactTM.lon: 6.087551
6test 817 line 138 _ExactTM.easting: 601728.149727
6test 818 line 138 _ExactTM.northing: 9095352.048149
6test 819 line 138 _ExactTM.gamma: 33.435771
6test 820 line 138 _ExactTM.scale: 1.004027
6test 821 line 138 _ExactTM.lat: 80.297265
6test 822 line 138 _ExactTM.lon: 33.816372
6test 823 line 139 _ExactTM.easting: 3481444.777827
6test 824 line 139 _ExactTM.northing: 291665.708749
6test 825 line 139 _ExactTM.gamma: 1.314726
6test 826 line 139 _ExactTM.scale: 1.153534
6test 827 line 139 _ExactTM.lat: 2.286437
6test 828 line 139 _ExactTM.lon: 29.855149
6test 829 line 140 _ExactTM.easting: 3515304.901524
6test 830 line 140 _ExactTM.northing: 1443981.882918
6test 831 line 140 _ExactTM.gamma: 6.641638
6test 832 line 140 _ExactTM.scale: 1.156509
6test 833 line 140 _ExactTM.lat: 11.264457
6test 834 line 140 _ExactTM.lon: 30.743907
6test 835 line 141 _ExactTM.easting: 160012.186959
6test 836 line 141 _ExactTM.northing: 3922609.253231
6test 837 line 141 _ExactTM.gamma: 1.022225
6test 838 line 141 _ExactTM.scale: 0.999916
6test 839 line 141 _ExactTM.lat: 35.434073
6test 840 line 141 _ExactTM.lon: 1.762795
6test 841 line 142 _ExactTM.easting: 4163744.245622
6test 842 line 142 _ExactTM.northing: 936884.674804
6test 843 line 142 _ExactTM.gamma: 4.892559
6test 844 line 142 _ExactTM.scale: 1.222164
6test 845 line 142 _ExactTM.lat: 6.923695
6test 846 line 142 _ExactTM.lon: 35.289456
6test 847 line 143 _ExactTM.easting: 6155200.017926
6test 848 line 143 _ExactTM.northing: 6926306.628390
6test 849 line 143 _ExactTM.gamma: 55.103258
6test 850 line 143 _ExactTM.scale: 1.500556
6test 851 line 143 _ExactTM.lat: 36.129672
6test 852 line 143 _ExactTM.lon: 67.533176
6test 853 line 144 _ExactTM.easting: 16263383.285440
6test 854 line 144 _ExactTM.northing: 3591296.731341
6test 855 line 144 _ExactTM.gamma: 36.040254
6test 856 line 144 _ExactTM.scale: 6.589288
6test 857 line 144 _ExactTM.lat: 4.406529
6test 858 line 144 _ExactTM.lon: 81.965734
6test 859 line 145 _ExactTM.easting: 14220995.515398
6test 860 line 145 _ExactTM.northing: 5100587.457503
6test 861 line 145 _ExactTM.gamma: 47.314258
6test 862 line 145 _ExactTM.scale: 4.693202
6test 863 line 145 _ExactTM.lat: 8.474589
6test 864 line 145 _ExactTM.lon: 81.129945
6test 865 line 146 _ExactTM.easting: 3173034.802372
6test 866 line 146 _ExactTM.northing: 7263421.942957
6test 867 line 146 _ExactTM.gamma: 45.215808
6test 868 line 146 _ExactTM.scale: 1.125410
6test 869 line 146 _ExactTM.lat: 53.907276
6test 870 line 146 _ExactTM.lon: 51.252904
6test 871 line 147 _ExactTM.easting: 10253274.092204
6test 872 line 147 _ExactTM.northing: 8867574.299792
6test 873 line 147 _ExactTM.gamma: 79.198250
6test 874 line 147 _ExactTM.scale: 2.572372
6test 875 line 147 _ExactTM.lat: 22.120545
6test 876 line 147 _ExactTM.lon: 85.756782
6test 877 line 148 _ExactTM.easting: 2415561.483230
6test 878 line 148 _ExactTM.northing: 8813225.217097
6test 879 line 148 _ExactTM.gamma: 62.548978
6test 880 line 148 _ExactTM.scale: 1.071748
6test 881 line 148 _ExactTM.lat: 66.444100
6test 882 line 148 _ExactTM.lon: 64.532960
6test 883 line 149 _ExactTM.easting: 9589179.293295
6test 884 line 149 _ExactTM.northing: 1777680.784143
6test 885 line 149 _ExactTM.gamma: 14.838483
6test 886 line 149 _ExactTM.scale: 2.380716
6test 887 line 149 _ExactTM.lat: 6.670965
6test 888 line 149 _ExactTM.lon: 65.660408
6test 889 line 150 _ExactTM.easting: 727939.438391
6test 890 line 150 _ExactTM.northing: 3684363.236810
6test 891 line 150 _ExactTM.gamma: 4.266227
6test 892 line 150 _ExactTM.scale: 1.006140
6test 893 line 150 _ExactTM.lat: 33.054057
6test 894 line 150 _ExactTM.lon: 7.787458
6test 895 line 151 _ExactTM.easting: 1250765.991085
6test 896 line 151 _ExactTM.northing: 792869.242719
6test 897 line 151 _ExactTM.gamma: 1.396497
6test 898 line 151 _ExactTM.scale: 1.019026
6test 899 line 151 _ExactTM.lat: 7.035525
6test 900 line 151 _ExactTM.lon: 11.253707
6test 901 line 152 _ExactTM.easting: 710421.705887
6test 902 line 152 _ExactTM.northing: 5019406.075928
6test 903 line 152 _ExactTM.gamma: 6.393949
6test 904 line 152 _ExactTM.scale: 1.005812
6test 905 line 152 _ExactTM.lat: 44.971340
6test 906 line 152 _ExactTM.lon: 9.009304
6test 907 line 153 _ExactTM.easting: 4600995.074643
6test 908 line 153 _ExactTM.northing: 4505712.084593
6test 909 line 153 _ExactTM.gamma: 27.997458
6test 910 line 153 _ExactTM.scale: 1.271841
6test 911 line 153 _ExactTM.lat: 30.821397
6test 912 line 153 _ExactTM.lon: 45.970577
6test 913 line 154 _ExactTM.easting: 557642.627782
6test 914 line 154 _ExactTM.northing: 7006911.251644
6test 915 line 154 _ExactTM.gamma: 9.769903
6test 916 line 154 _ExactTM.scale: 1.003411
6test 917 line 154 _ExactTM.lat: 62.763886
6test 918 line 154 _ExactTM.lon: 10.960144
6test 919 line 155 _ExactTM.easting: 4635062.294291
6test 920 line 155 _ExactTM.northing: 2702556.153311
6test 921 line 155 _ExactTM.gamma: 15.779547
6test 922 line 155 _ExactTM.scale: 1.277178
6test 923 line 155 _ExactTM.lat: 18.888611
6test 924 line 155 _ExactTM.lon: 41.009871
6test 925 line 156 _ExactTM.easting: 14554962.255919
6test 926 line 156 _ExactTM.northing: 4716639.908572
6test 927 line 156 _ExactTM.gamma: 44.192751
6test 928 line 156 _ExactTM.scale: 4.960020
6test 929 line 156 _ExactTM.lat: 7.524119
6test 930 line 156 _ExactTM.lon: 81.050715
6test 931 line 157 _ExactTM.easting: 882126.661736
6test 932 line 157 _ExactTM.northing: 7947612.369506
6test 933 line 157 _ExactTM.gamma: 22.429487
6test 934 line 157 _ExactTM.scale: 1.009132
6test 935 line 157 _ExactTM.lat: 70.063902
6test 936 line 157 _ExactTM.lon: 23.705255
6test 937 line 158 _ExactTM.easting: 20262021.645983
6test 938 line 158 _ExactTM.northing: 8113827.820796
6test 939 line 158 _ExactTM.gamma: 76.936057
6test 940 line 158 _ExactTM.scale: 10.349092
6test 941 line 158 _ExactTM.lat: 3.556526
6test 942 line 158 _ExactTM.lon: 88.363529
6test 943 line 159 _ExactTM.easting: 6500508.399850
6test 944 line 159 _ExactTM.northing: 6956476.342368
6test 945 line 159 _ExactTM.gamma: 56.237116
6test 946 line 159 _ExactTM.scale: 1.563162
6test 947 line 159 _ExactTM.lat: 34.551257
6test 948 line 159 _ExactTM.lon: 69.111091
6test 949 line 160 _ExactTM.easting: 3884036.641314
6test 950 line 160 _ExactTM.northing: 6890167.411733
6test 951 line 160 _ExactTM.gamma: 45.760130
6test 952 line 160 _ExactTM.scale: 1.190167
6test 953 line 160 _ExactTM.lat: 47.929051
6test 954 line 160 _ExactTM.lon: 54.103418
6test 955 line 161 _ExactTM.easting: 217855.546078
6test 956 line 161 _ExactTM.northing: 6184108.122568
6test 957 line 161 _ExactTM.gamma: 2.870993
6test 958 line 161 _ExactTM.scale: 1.000182
6test 959 line 161 _ExactTM.lat: 55.753536
6test 960 line 161 _ExactTM.lon: 3.471798
6test 961 line 162 _ExactTM.easting: 11384139.290402
6test 962 line 162 _ExactTM.northing: 8893889.949556
6test 963 line 162 _ExactTM.gamma: 79.774854
6test 964 line 162 _ExactTM.scale: 3.024672
6test 965 line 162 _ExactTM.lat: 18.530847
6test 966 line 162 _ExactTM.lon: 86.555312
6test 967 line 163 _ExactTM.easting: 3469855.989805
6test 968 line 163 _ExactTM.northing: 7723193.799228
6test 969 line 163 _ExactTM.gamma: 53.114700
6test 970 line 163 _ExactTM.scale: 1.150540
6test 971 line 163 _ExactTM.lat: 54.510125
6test 972 line 163 _ExactTM.lon: 58.556056
6test 973 line 164 _ExactTM.easting: 5926165.994939
6test 974 line 164 _ExactTM.northing: 9385463.732747
6test 975 line 164 _ExactTM.gamma: 82.506981
6test 976 line 164 _ExactTM.scale: 1.459758
6test 977 line 164 _ExactTM.lat: 42.864162
6test 978 line 164 _ExactTM.lon: 84.866326
6test 979 line 165 _ExactTM.easting: 5798639.662224
6test 980 line 165 _ExactTM.northing: 5305387.640916
6test 981 line 165 _ExactTM.gamma: 38.617257
6test 982 line 165 _ExactTM.scale: 1.442263
6test 983 line 165 _ExactTM.lat: 30.911943
6test 984 line 165 _ExactTM.lon: 57.114102
6test 985 line 166 _ExactTM.easting: 9464.934388
6test 986 line 166 _ExactTM.northing: 6489121.624944
6test 987 line 166 _ExactTM.gamma: 0.138696
6test 988 line 166 _ExactTM.scale: 0.999601
6test 989 line 166 _ExactTM.lat: 58.542493
6test 990 line 166 _ExactTM.lon: 0.162593
6test 991 line 167 _ExactTM.easting: 12575834.275614
6test 992 line 167 _ExactTM.northing: 8356610.895486
6test 993 line 167 _ExactTM.gamma: 75.235223
6test 994 line 167 _ExactTM.scale: 3.599442
6test 995 line 167 _ExactTM.lat: 15.022689
6test 996 line 167 _ExactTM.lon: 85.792615
6test 997 line 168 _ExactTM.easting: 2719653.543469
6test 998 line 168 _ExactTM.northing: 9362389.163495
6test 999 line 168 _ExactTM.gamma: 76.049670
6test 1000 line 168 _ExactTM.scale: 1.091315
6test 1001 line 168 _ExactTM.lat: 65.692275
6test 1002 line 168 _ExactTM.lon: 77.241377
6test 1003 line 169 _ExactTM.easting: 4845341.924698
6test 1004 line 169 _ExactTM.northing: 8710522.326901
6test 1005 line 169 _ExactTM.gamma: 72.320942
6test 1006 line 169 _ExactTM.scale: 1.300382
6test 1007 line 169 _ExactTM.lat: 48.806211
6test 1008 line 169 _ExactTM.lon: 76.486365
6test 1009 line 170 _ExactTM.easting: 3935261.522763
6test 1010 line 170 _ExactTM.northing: 9454271.649062
6test 1011 line 170 _ExactTM.gamma: 81.162334
6test 1012 line 170 _ExactTM.scale: 1.194767
6test 1013 line 170 _ExactTM.lat: 56.436025
6test 1014 line 170 _ExactTM.lon: 82.611568
6test 1015 line 171 _ExactTM.easting: 7074299.823000
6test 1016 line 171 _ExactTM.northing: 1648736.065055
6test 1017 line 171 _ExactTM.gamma: 12.145925
6test 1018 line 171 _ExactTM.scale: 1.687551
6test 1019 line 171 _ExactTM.lat: 8.766053
6test 1020 line 171 _ExactTM.lon: 54.367539
6test 1021 line 172 _ExactTM.easting: 3689072.579308
6test 1022 line 172 _ExactTM.northing: 2230802.665211
6test 1023 line 172 _ExactTM.gamma: 10.856248
6test 1024 line 172 _ExactTM.scale: 1.172689
6test 1025 line 172 _ExactTM.lat: 17.095495
6test 1026 line 172 _ExactTM.lon: 33.059128
6test 1027 line 173 _ExactTM.easting: 8102565.885587
6test 1028 line 173 _ExactTM.northing: 5167396.617580
6test 1029 line 173 _ExactTM.gamma: 42.324886
6test 1030 line 173 _ExactTM.scale: 1.921927
6test 1031 line 173 _ExactTM.lat: 22.142861
6test 1032 line 173 _ExactTM.lon: 67.200684
6test 1033 line 174 _ExactTM.easting: 8181271.353564
6test 1034 line 174 _ExactTM.northing: 4425436.547185
6test 1035 line 174 _ExactTM.gamma: 35.900845
6test 1036 line 174 _ExactTM.scale: 1.945017
6test 1037 line 174 _ExactTM.lat: 19.222623
6test 1038 line 174 _ExactTM.lon: 65.180785
6test 1039 line 175 _ExactTM.easting: 767067.394003
6test 1040 line 175 _ExactTM.northing: 3701745.857296
6test 1041 line 175 _ExactTM.gamma: 4.519201
6test 1042 line 175 _ExactTM.scale: 1.006863
6test 1043 line 175 _ExactTM.lat: 33.182474
6test 1044 line 175 _ExactTM.lon: 8.216952
6test 1045 line 176 _ExactTM.easting: 6688114.168572
6test 1046 line 176 _ExactTM.northing: 2052857.299639
6test 1047 line 176 _ExactTM.gamma: 14.766191
6test 1048 line 176 _ExactTM.scale: 1.607200
6test 1049 line 176 _ExactTM.lat: 11.417963
6test 1050 line 176 _ExactTM.lon: 52.808691
6test 1051 line 177 _ExactTM.easting: 5608408.773761
6test 1052 line 177 _ExactTM.northing: 3859055.659110
6test 1053 line 177 _ExactTM.gamma: 26.244151
6test 1054 line 177 _ExactTM.scale: 1.413463
6test 1055 line 177 _ExactTM.lat: 23.836688
6test 1056 line 177 _ExactTM.lon: 50.500180
6test 1057 line 178 _ExactTM.easting: 3836942.765275
6test 1058 line 178 _ExactTM.northing: 6415467.634326
6test 1059 line 178 _ExactTM.gamma: 40.575885
6test 1060 line 178 _ExactTM.scale: 1.185615
6test 1061 line 178 _ExactTM.lat: 45.550020
6test 1062 line 178 _ExactTM.lon: 50.148036
6test 1063 line 179 _ExactTM.easting: 1298730.366025
6test 1064 line 179 _ExactTM.northing: 6021453.000792
6test 1065 line 179 _ExactTM.gamma: 15.613320
6test 1066 line 179 _ExactTM.scale: 1.020367
6test 1067 line 179 _ExactTM.lat: 52.746079
6test 1068 line 179 _ExactTM.lon: 19.343926
6test 1069 line 180 _ExactTM.easting: 416934.289208
6test 1070 line 180 _ExactTM.northing: 7295683.451705
6test 1071 line 180 _ExactTM.gamma: 8.238232
6test 1072 line 180 _ExactTM.scale: 1.001729
6test 1073 line 180 _ExactTM.lat: 65.513348
6test 1074 line 180 _ExactTM.lon: 9.039529
6test 1075 line 181 _ExactTM.easting: 4336076.850889
6test 1076 line 181 _ExactTM.northing: 7617975.722779
6test 1077 line 181 _ExactTM.gamma: 56.537088
6test 1078 line 181 _ExactTM.scale: 1.238582
6test 1079 line 181 _ExactTM.lat: 48.709795
6test 1080 line 181 _ExactTM.lon: 63.554005
6test 1081 line 182 _ExactTM.easting: 168047.336980
6test 1082 line 182 _ExactTM.northing: 2185000.046530
6test 1083 line 182 _ExactTM.gamma: 0.542187
6test 1084 line 182 _ExactTM.scale: 0.999949
6test 1085 line 182 _ExactTM.lat: 19.753509
6test 1086 line 182 _ExactTM.lon: 1.603846
6test 1087 line 183 _ExactTM.easting: 8276281.328790
6test 1088 line 183 _ExactTM.northing: 263444.350545
6test 1089 line 183 _ExactTM.gamma: 2.071435
6test 1090 line 183 _ExactTM.scale: 1.980314
6test 1091 line 183 _ExactTM.lat: 1.202816
6test 1092 line 183 _ExactTM.lon: 59.377276
6test 1093 line 184 _ExactTM.easting: 4772573.810710
6test 1094 line 184 _ExactTM.northing: 6765710.336002
6test 1095 line 184 _ExactTM.gamma: 48.857561
6test 1096 line 184 _ExactTM.scale: 1.291911
6test 1097 line 184 _ExactTM.lat: 42.564975
6test 1098 line 184 _ExactTM.lon: 59.356947
6test 1099 line 185 _ExactTM.easting: 5427755.074639
6test 1100 line 185 _ExactTM.northing: 1556055.820924
6test 1101 line 185 _ExactTM.gamma: 9.862178
6test 1102 line 185 _ExactTM.scale: 1.387394
6test 1103 line 185 _ExactTM.lat: 10.090572
6test 1104 line 185 _ExactTM.lon: 44.604132
6test 1105 line 186 _ExactTM.easting: 11588458.616041
6test 1106 line 186 _ExactTM.northing: 5707993.922613
6test 1107 line 186 _ExactTM.gamma: 50.784827
6test 1108 line 186 _ExactTM.scale: 3.149567
6test 1109 line 186 _ExactTM.lat: 14.133028
6test 1110 line 186 _ExactTM.lon: 78.097533
6test 1111 line 187 _ExactTM.easting: 7152433.802688
6test 1112 line 187 _ExactTM.northing: 761390.695844
6test 1113 line 187 _ExactTM.gamma: 5.607350
6test 1114 line 187 _ExactTM.scale: 1.705261
6test 1115 line 187 _ExactTM.lat: 4.031123
6test 1116 line 187 _ExactTM.lon: 54.048782
6test 1117 line 188 _ExactTM.easting: 3105651.390901
6test 1118 line 188 _ExactTM.northing: 9426026.169064
6test 1119 line 188 _ExactTM.gamma: 78.750206
6test 1120 line 188 _ExactTM.scale: 1.119737
6test 1121 line 188 _ExactTM.lat: 62.746603
6test 1122 line 188 _ExactTM.lon: 79.968641
6test 1123 line 189 _ExactTM.easting: 2959009.639022
6test 1124 line 189 _ExactTM.northing: 8339242.269282
6test 1125 line 189 _ExactTM.gamma: 58.460865
6test 1126 line 189 _ExactTM.scale: 1.108554
6test 1127 line 189 _ExactTM.lat: 60.626429
6test 1128 line 189 _ExactTM.lon: 61.851551
6test 1129 line 190 _ExactTM.easting: 8640472.267145
6test 1130 line 190 _ExactTM.northing: 6230320.417931
6test 1131 line 190 _ExactTM.gamma: 52.816810
6test 1132 line 190 _ExactTM.scale: 2.062973
6test 1133 line 190 _ExactTM.lat: 23.600626
6test 1134 line 190 _ExactTM.lon: 72.811634
6test 1135 line 191 _ExactTM.easting: 811352.108932
6test 1136 line 191 _ExactTM.northing: 9816129.813481
6test 1137 line 191 _ExactTM.gamma: 77.299184
6test 1138 line 191 _ExactTM.scale: 1.007651
6test 1139 line 191 _ExactTM.lat: 82.572236
6test 1140 line 191 _ExactTM.lon: 77.402323
6test 1141 line 192 _ExactTM.easting: 6521874.973458
6test 1142 line 192 _ExactTM.northing: 1053612.479744
6test 1143 line 192 _ExactTM.gamma: 7.407328
6test 1144 line 192 _ExactTM.scale: 1.575529
6test 1145 line 192 _ExactTM.lat: 6.030051
6test 1146 line 192 _ExactTM.lon: 50.783505
6test 1147 line 193 _ExactTM.easting: 3477983.997875
6test 1148 line 193 _ExactTM.northing: 5651613.325947
6test 1149 line 193 _ExactTM.gamma: 31.530673
6test 1150 line 193 _ExactTM.scale: 1.151875
6test 1151 line 193 _ExactTM.lat: 42.411523
6test 1152 line 193 _ExactTM.lon: 42.258009
6test 1153 line 194 _ExactTM.easting: 629892.822243
6test 1154 line 194 _ExactTM.northing: 3283914.910451
6test 1155 line 194 _ExactTM.gamma: 3.210482
6test 1156 line 194 _ExactTM.scale: 1.004499
6test 1157 line 194 _ExactTM.lat: 29.526120
6test 1158 line 194 _ExactTM.lon: 6.493069
6test 1159 line 195 _ExactTM.easting: 3381879.687227
6test 1160 line 195 _ExactTM.northing: 5103629.325665
6test 1161 line 195 _ExactTM.gamma: 26.748108
6test 1162 line 195 _ExactTM.scale: 1.143559
6test 1163 line 195 _ExactTM.lat: 39.021853
6test 1164 line 195 _ExactTM.lon: 38.641779
6test 1165 line 196 _ExactTM.easting: 2815986.534177
6test 1166 line 196 _ExactTM.northing: 9387029.120718
6test 1167 line 196 _ExactTM.gamma: 76.967262
6test 1168 line 196 _ExactTM.scale: 1.098032
6test 1169 line 196 _ExactTM.lat: 64.971850
6test 1170 line 196 _ExactTM.lon: 78.151893
6test 1171 line 197 _ExactTM.easting: 3398195.889603
6test 1172 line 197 _ExactTM.northing: 9138936.031490
6test 1173 line 197 _ExactTM.gamma: 74.477499
6test 1174 line 197 _ExactTM.scale: 1.144009
6test 1175 line 197 _ExactTM.lat: 59.961819
6test 1176 line 197 _ExactTM.lon: 76.473422
6test 1177 line 198 _ExactTM.easting: 2421734.754637
6test 1178 line 198 _ExactTM.northing: 5002372.094991
6test 1179 line 198 _ExactTM.gamma: 20.017082
6test 1180 line 198 _ExactTM.scale: 1.072592
6test 1181 line 198 _ExactTM.lat: 41.374040
6test 1182 line 198 _ExactTM.lon: 28.848343
6test 1183 line 199 _ExactTM.easting: 2360869.895525
6test 1184 line 199 _ExactTM.northing: 9553298.449536
6test 1185 line 199 _ExactTM.gamma: 78.848205
6test 1186 line 199 _ExactTM.scale: 1.068453
6test 1187 line 199 _ExactTM.lat: 68.946087
6test 1188 line 199 _ExactTM.lon: 79.574523
6test 1189 line 200 _ExactTM.easting: 1196539.972194
6test 1190 line 200 _ExactTM.northing: 9861920.836230
6test 1191 line 200 _ExactTM.gamma: 83.437668
6test 1192 line 200 _ExactTM.scale: 1.017137
6test 1193 line 200 _ExactTM.lat: 79.275096
6test 1194 line 200 _ExactTM.lon: 83.551272
6test 1195 line 201 _ExactTM.easting: 1327758.704795
6test 1196 line 201 _ExactTM.northing: 2375509.241683
6test 1197 line 201 _ExactTM.gamma: 4.617572
6test 1198 line 201 _ExactTM.scale: 1.021465
6test 1199 line 201 _ExactTM.lat: 21.000252
6test 1200 line 201 _ExactTM.lon: 12.697444
6test 1201 line 202 _ExactTM.easting: 2070860.327644
6test 1202 line 202 _ExactTM.northing: 8604500.719581
6test 1203 line 202 _ExactTM.gamma: 54.722761
6test 1204 line 202 _ExactTM.scale: 1.052469
6test 1205 line 202 _ExactTM.lat: 68.015227
6test 1206 line 202 _ExactTM.lon: 56.732419
6test 1207 line 203 _ExactTM.easting: 6564776.654864
6test 1208 line 203 _ExactTM.northing: 8171207.177379
6test 1209 line 203 _ExactTM.gamma: 69.237523
6test 1210 line 203 _ExactTM.scale: 1.573894
6test 1211 line 203 _ExactTM.lat: 37.423675
6test 1212 line 203 _ExactTM.lon: 76.947359
6test 1213 line 204 _ExactTM.easting: 592653.553821
6test 1214 line 204 _ExactTM.northing: 6125529.810052
6test 1215 line 204 _ExactTM.gamma: 7.600785
6test 1216 line 204 _ExactTM.scale: 1.003912
6test 1217 line 204 _ExactTM.lat: 54.922707
6test 1218 line 204 _ExactTM.lon: 9.260818
6test 1219 line 205 _ExactTM.easting: 693459.671821
6test 1220 line 205 _ExactTM.northing: 6943779.991032
6test 1221 line 205 _ExactTM.gamma: 11.787587
6test 1222 line 205 _ExactTM.scale: 1.005496
6test 1223 line 205 _ExactTM.lat: 61.982810
6test 1224 line 205 _ExactTM.lon: 13.299659
6test 1225 line 206 _ExactTM.easting: 1838956.187625
6test 1226 line 206 _ExactTM.northing: 3511959.612381
6test 1227 line 206 _ExactTM.gamma: 9.844313
6test 1228 line 206 _ExactTM.scale: 1.041603
6test 1229 line 206 _ExactTM.lat: 30.324214
6test 1230 line 206 _ExactTM.lon: 18.959769
6test 1231 line 207 _ExactTM.easting: 4460690.884597
6test 1232 line 207 _ExactTM.northing: 5541873.235403
6test 1233 line 207 _ExactTM.gamma: 35.768613
6test 1234 line 207 _ExactTM.scale: 1.254179
6test 1235 line 207 _ExactTM.lat: 37.629667
6test 1236 line 207 _ExactTM.lon: 49.649131
6test 1237 line 208 _ExactTM.easting: 2311168.998941
6test 1238 line 208 _ExactTM.northing: 9480561.869119
6test 1239 line 208 _ExactTM.gamma: 76.828257
6test 1240 line 208 _ExactTM.scale: 1.065556
6test 1241 line 208 _ExactTM.lat: 69.225574
6test 1242 line 208 _ExactTM.lon: 77.656135
6test 1243 line 209 _ExactTM.easting: 4111775.114451
6test 1244 line 209 _ExactTM.northing: 6509014.348792
6test 1245 line 209 _ExactTM.gamma: 43.052130
6test 1246 line 209 _ExactTM.scale: 1.214125
6test 1247 line 209 _ExactTM.lat: 44.698478
6test 1248 line 209 _ExactTM.lon: 52.979304
6test 1249 line 210 _ExactTM.easting: 75358.261962
6test 1250 line 210 _ExactTM.northing: 7711258.662251
6test 1251 line 210 _ExactTM.gamma: 1.806297
6test 1252 line 210 _ExactTM.scale: 0.999669
6test 1253 line 210 _ExactTM.lat: 69.499594
6test 1254 line 210 _ExactTM.lon: 1.928336
6test 1255 line 211 _ExactTM.easting: 8781885.229116
6test 1256 line 211 _ExactTM.northing: 9184776.452211
6test 1257 line 211 _ExactTM.gamma: 81.795539
6test 1258 line 211 _ExactTM.scale: 2.094908
6test 1259 line 211 _ExactTM.lat: 27.981364
6test 1260 line 211 _ExactTM.lon: 86.061113
6test 1261 line 212 _ExactTM.easting: 954378.415174
6test 1262 line 212 _ExactTM.northing: 7449110.669807
6test 1263 line 212 _ExactTM.gamma: 19.380657
6test 1264 line 212 _ExactTM.scale: 1.010768
6test 1265 line 212 _ExactTM.lat: 65.699839
6test 1266 line 212 _ExactTM.lon: 21.104725
6test 1267 line 213 _ExactTM.easting: 720971.793706
6test 1268 line 213 _ExactTM.northing: 5265195.121555
6test 1269 line 213 _ExactTM.gamma: 7.002995
6test 1270 line 213 _ExactTM.scale: 1.005995
6test 1271 line 213 _ExactTM.lat: 47.143648
6test 1272 line 213 _ExactTM.lon: 9.512189
6test 1273 line 214 _ExactTM.easting: 561561.493937
6test 1274 line 214 _ExactTM.northing: 989910.236221
6test 1275 line 214 _ExactTM.gamma: 0.793118
6test 1276 line 214 _ExactTM.scale: 1.003505
6test 1277 line 214 _ExactTM.lat: 8.920167
6test 1278 line 214 _ExactTM.lon: 5.101513
6test 1279 line 215 _ExactTM.easting: 3446829.634468
6test 1280 line 215 _ExactTM.northing: 9232868.155664
6test 1281 line 215 _ExactTM.gamma: 76.279075
6test 1282 line 215 _ExactTM.scale: 1.148263
6test 1283 line 215 _ExactTM.lat: 59.778971
6test 1284 line 215 _ExactTM.lon: 78.080322
6test 1285 line 216 _ExactTM.easting: 4048307.545909
6test 1286 line 216 _ExactTM.northing: 9800416.422998
6test 1287 line 216 _ExactTM.gamma: 86.843918
6test 1288 line 216 _ExactTM.scale: 1.206495
6test 1289 line 216 _ExactTM.lat: 55.865310
6test 1290 line 216 _ExactTM.lon: 87.384288
6test 1291 line 217 _ExactTM.easting: 8973188.480293
6test 1292 line 217 _ExactTM.northing: 7042230.087021
6test 1293 line 217 _ExactTM.gamma: 60.872456
6test 1294 line 217 _ExactTM.scale: 2.156098
6test 1295 line 217 _ExactTM.lat: 24.310973
6test 1296 line 217 _ExactTM.lon: 76.823777
6test 1297 line 218 _ExactTM.easting: 126314.191618
6test 1298 line 218 _ExactTM.northing: 396006.687921
6test 1299 line 218 _ExactTM.gamma: 0.071065
6test 1300 line 218 _ExactTM.scale: 0.999798
6test 1301 line 218 _ExactTM.lat: 3.582041
6test 1302 line 218 _ExactTM.lon: 1.137286
6test 1303 line 219 _ExactTM.easting: 5247652.345647
6test 1304 line 219 _ExactTM.northing: 8670513.359752
6test 1305 line 219 _ExactTM.gamma: 72.700498
6test 1306 line 219 _ExactTM.scale: 1.355272
6test 1307 line 219 _ExactTM.lat: 46.124233
6test 1308 line 219 _ExactTM.lon: 77.313118
6test 1309 line 220 _ExactTM.easting: 8103656.838119
6test 1310 line 220 _ExactTM.northing: 9469794.014737
6test 1311 line 220 _ExactTM.gamma: 84.490673
6test 1312 line 220 _ExactTM.scale: 1.912164
6test 1313 line 220 _ExactTM.lat: 31.171391
6test 1314 line 220 _ExactTM.lon: 87.104504
6test 1315 line 221 _ExactTM.easting: 6300112.758236
6test 1316 line 221 _ExactTM.northing: 93835.917364
6test 1317 line 221 _ExactTM.gamma: 0.644805
6test 1318 line 221 _ExactTM.scale: 1.534073
6test 1319 line 221 _ExactTM.lat: 0.553171
6test 1320 line 221 _ExactTM.lon: 49.117104
6test 1321 line 222 _ExactTM.easting: 3894813.593782
6test 1322 line 222 _ExactTM.northing: 4833832.341027
6test 1323 line 222 _ExactTM.gamma: 27.453298
6test 1324 line 222 _ExactTM.scale: 1.192135
6test 1325 line 222 _ExactTM.lat: 35.361587
6test 1326 line 222 _ExactTM.lon: 41.860599
6test 1327 line 223 _ExactTM.easting: 402511.346712
6test 1328 line 223 _ExactTM.northing: 3520621.561911
6test 1329 line 223 _ExactTM.gamma: 2.238474
6test 1330 line 223 _ExactTM.scale: 1.001599
6test 1331 line 223 _ExactTM.lat: 31.750314
6test 1332 line 223 _ExactTM.lon: 4.248167
6test 1333 line 224 _ExactTM.easting: 5357378.503148
6test 1334 line 224 _ExactTM.northing: 2772997.602234
6test 1335 line 224 _ExactTM.gamma: 17.823560
6test 1336 line 224 _ExactTM.scale: 1.376031
6test 1337 line 224 _ExactTM.lat: 17.924336
6test 1338 line 224 _ExactTM.lon: 46.096402
6test 1339 line 225 _ExactTM.easting: 2807553.985866
6test 1340 line 225 _ExactTM.northing: 8177847.980275
6test 1341 line 225 _ExactTM.gamma: 54.680045
6test 1342 line 225 _ExactTM.scale: 1.097531
6test 1343 line 225 _ExactTM.lat: 60.931488
6test 1344 line 225 _ExactTM.lon: 58.221214
6test 1345 line 226 _ExactTM.easting: 18289045.166501
6test 1346 line 226 _ExactTM.northing: 7792942.339604
6test 1347 line 226 _ExactTM.gamma: 73.216494
6test 1348 line 226 _ExactTM.scale: 8.098009
6test 1349 line 226 _ExactTM.lat: 5.358151
6test 1350 line 226 _ExactTM.lon: 87.556213
6test 1351 line 227 _ExactTM.easting: 8376822.459538
6test 1352 line 227 _ExactTM.northing: 8128174.623878
6test 1353 line 227 _ExactTM.gamma: 70.920117
6test 1354 line 227 _ExactTM.scale: 1.984873
6test 1355 line 227 _ExactTM.lat: 28.616673
6test 1356 line 227 _ExactTM.lon: 80.452426
6test 1357 line 228 _ExactTM.easting: 11898068.353272
6test 1358 line 228 _ExactTM.northing: 4772439.493697
6test 1359 line 228 _ExactTM.gamma: 42.613968
6test 1360 line 228 _ExactTM.scale: 3.314412
6test 1361 line 228 _ExactTM.lat: 11.709763
6test 1362 line 228 _ExactTM.lon: 76.760295
6test 1363 line 229 _ExactTM.easting: 10550946.939050
6test 1364 line 229 _ExactTM.northing: 3851968.815295
6test 1365 line 229 _ExactTM.gamma: 33.383025
6test 1366 line 229 _ExactTM.scale: 2.724754
6test 1367 line 229 _ExactTM.lat: 12.009498
6test 1368 line 229 _ExactTM.lon: 71.782351
6test 1369 line 230 _ExactTM.easting: 6828299.123607
6test 1370 line 230 _ExactTM.northing: 9394803.227463
6test 1371 line 230 _ExactTM.gamma: 83.181386
6test 1372 line 230 _ExactTM.scale: 1.624359
6test 1373 line 230 _ExactTM.lat: 37.629784
6test 1374 line 230 _ExactTM.lon: 85.795687
6test 1375 line 231 _ExactTM.easting: 11162550.334022
6test 1376 line 231 _ExactTM.northing: 2640267.279593
6test 1377 line 231 _ExactTM.gamma: 23.145404
6test 1378 line 231 _ExactTM.scale: 2.998408
6test 1379 line 231 _ExactTM.lat: 7.721128
6test 1380 line 231 _ExactTM.lon: 71.662731
6test 1381 line 232 _ExactTM.easting: 4411584.447941
6test 1382 line 232 _ExactTM.northing: 4956173.694407
6test 1383 line 232 _ExactTM.gamma: 30.713919
6test 1384 line 232 _ExactTM.scale: 1.248736
6test 1385 line 232 _ExactTM.lat: 34.295026
6test 1386 line 232 _ExactTM.lon: 46.442191
6test 1387 line 233 _ExactTM.easting: 672108.897905
6test 1388 line 233 _ExactTM.northing: 4751554.657054
6test 1389 line 233 _ExactTM.gamma: 5.569178
6test 1390 line 233 _ExactTM.scale: 1.005162
6test 1391 line 233 _ExactTM.lat: 42.622496
6test 1392 line 233 _ExactTM.lon: 8.193605
6test 1393 line 234 _ExactTM.easting: 5022964.290579
6test 1394 line 234 _ExactTM.northing: 6860418.199502
6test 1395 line 234 _ExactTM.gamma: 50.862230
6test 1396 line 234 _ExactTM.scale: 1.324925
6test 1397 line 234 _ExactTM.lat: 41.667780
6test 1398 line 234 _ExactTM.lon: 61.518288
6test 1399 line 235 _ExactTM.easting: 1669655.595207
6test 1400 line 235 _ExactTM.northing: 4152086.537021
6test 1401 line 235 _ExactTM.gamma: 11.110237
6test 1402 line 235 _ExactTM.scale: 1.034138
6test 1403 line 235 _ExactTM.lat: 36.060369
6test 1404 line 235 _ExactTM.lon: 18.444112
6test 1405 line 236 _ExactTM.easting: 6055876.729655
6test 1406 line 236 _ExactTM.northing: 4896837.552619
6test 1407 line 236 _ExactTM.gamma: 35.799747
6test 1408 line 236 _ExactTM.scale: 1.485967
6test 1409 line 236 _ExactTM.lat: 27.948091
6test 1410 line 236 _ExactTM.lon: 56.816429
6test 1411 line 237 _ExactTM.easting: 1209214.164379
6test 1412 line 237 _ExactTM.northing: 7266409.859178
6test 1413 line 237 _ExactTM.gamma: 22.319633
6test 1414 line 237 _ExactTM.scale: 1.017554
6test 1415 line 237 _ExactTM.lat: 63.386030
6test 1416 line 237 _ExactTM.lon: 24.662716
6test 1417 line 238 _ExactTM.easting: 5154564.559584
6test 1418 line 238 _ExactTM.northing: 698118.349975
6test 1419 line 238 _ExactTM.gamma: 4.242360
6test 1420 line 238 _ExactTM.scale: 1.347481
6test 1421 line 238 _ExactTM.lat: 4.680922
6test 1422 line 238 _ExactTM.lon: 42.114426
6test 1423 line 239 _ExactTM.easting: 2695149.806543
6test 1424 line 239 _ExactTM.northing: 8208197.765605
6test 1425 line 239 _ExactTM.gamma: 54.178615
6test 1426 line 239 _ExactTM.scale: 1.089730
6test 1427 line 239 _ExactTM.lat: 61.826625
6test 1428 line 239 _ExactTM.lon: 57.525096
6test 1429 line 240 _ExactTM.easting: 3394792.327820
6test 1430 line 240 _ExactTM.northing: 3217583.415552
6test 1431 line 240 _ExactTM.gamma: 15.165863
6test 1432 line 240 _ExactTM.scale: 1.145285
6test 1433 line 240 _ExactTM.lat: 25.104353
6test 1434 line 240 _ExactTM.lon: 32.528660
6test 1435 line 241 _ExactTM.easting: 1429160.966985
6test 1436 line 241 _ExactTM.northing: 8212685.362032
6test 1437 line 241 _ExactTM.gamma: 37.484904
6test 1438 line 241 _ExactTM.scale: 1.024676
6test 1439 line 241 _ExactTM.lat: 69.678351
6test 1440 line 241 _ExactTM.lon: 39.275513
6test 1441 line 242 _ExactTM.easting: 8343387.998065
6test 1442 line 242 _ExactTM.northing: 8885196.954578
6test 1443 line 242 _ExactTM.gamma: 78.561937
6test 1444 line 242 _ExactTM.scale: 1.974733
6test 1445 line 242 _ExactTM.lat: 29.671384
6test 1446 line 242 _ExactTM.lon: 84.196595
6test 1447 line 243 _ExactTM.easting: 1990722.928606
6test 1448 line 243 _ExactTM.northing: 7569202.065162
6test 1449 line 243 _ExactTM.gamma: 37.075276
6test 1450 line 243 _ExactTM.scale: 1.048486
6test 1451 line 243 _ExactTM.lat: 62.300208
6test 1452 line 243 _ExactTM.lon: 40.474051
6test 1453 line 244 _ExactTM.easting: 1554980.099559
6test 1454 line 244 _ExactTM.northing: 1449423.919586
6test 1455 line 244 _ExactTM.gamma: 3.188328
6test 1456 line 244 _ExactTM.scale: 1.029664
6test 1457 line 244 _ExactTM.lat: 12.721776
6test 1458 line 244 _ExactTM.lon: 14.190003
6test 1459 line 245 _ExactTM.easting: 785205.450196
6test 1460 line 245 _ExactTM.northing: 5575158.423096
6test 1461 line 245 _ExactTM.gamma: 8.388417
6test 1462 line 245 _ExactTM.scale: 1.007181
6test 1463 line 245 _ExactTM.lat: 49.811296
6test 1464 line 245 _ExactTM.lon: 10.925011
6test 1465 line 246 _ExactTM.easting: 3310405.988313
6test 1466 line 246 _ExactTM.northing: 5955022.233881
6test 1467 line 246 _ExactTM.gamma: 33.007587
6test 1468 line 246 _ExactTM.scale: 1.137141
6test 1469 line 246 _ExactTM.lat: 45.132680
6test 1470 line 246 _ExactTM.lon: 42.478624
6test 1471 line 247 _ExactTM.easting: 4733460.960666
6test 1472 line 247 _ExactTM.northing: 129034.889816
6test 1473 line 247 _ExactTM.gamma: 0.737551
6test 1474 line 247 _ExactTM.scale: 1.290439
6test 1475 line 247 _ExactTM.lat: 0.904279
6test 1476 line 247 _ExactTM.lon: 39.078412
6test 1477 line 248 _ExactTM.easting: 3322708.343909
6test 1478 line 248 _ExactTM.northing: 3864738.078742
6test 1479 line 248 _ExactTM.gamma: 18.472566
6test 1480 line 248 _ExactTM.scale: 1.138838
6test 1481 line 248 _ExactTM.lat: 30.163605
6test 1482 line 248 _ExactTM.lon: 33.577996
6test 1483 line 249 _ExactTM.easting: 8672864.417204
6test 1484 line 249 _ExactTM.northing: 8333465.983444
6test 1485 line 249 _ExactTM.gamma: 73.206273
6test 1486 line 249 _ExactTM.scale: 2.065441
6test 1487 line 249 _ExactTM.lat: 27.643244
6test 1488 line 249 _ExactTM.lon: 81.892859
6test 1489 line 250 _ExactTM.easting: 11126818.231196
6test 1490 line 250 _ExactTM.northing: 7618712.174991
6test 1491 line 250 _ExactTM.gamma: 67.887173
6test 1492 line 250 _ExactTM.scale: 2.922417
6test 1493 line 250 _ExactTM.lat: 18.201208
6test 1494 line 250 _ExactTM.lon: 82.434618
6test 1495 line 251 _ExactTM.easting: 8650100.981797
6test 1496 line 251 _ExactTM.northing: 9975084.168997
6test 1497 line 251 _ExactTM.gamma: 89.767446
6test 1498 line 251 _ExactTM.scale: 2.057289
6test 1499 line 251 _ExactTM.lat: 28.804576
6test 1500 line 251 _ExactTM.lon: 89.886072
6test 1501 line 252 _ExactTM.easting: 2212701.180192
6test 1502 line 252 _ExactTM.northing: 650348.100229
6test 1503 line 252 _ExactTM.gamma: 1.970441
6test 1504 line 252 _ExactTM.scale: 1.060830
6test 1505 line 252 _ExactTM.lat: 5.542998
6test 1506 line 252 _ExactTM.lon: 19.589578
6test 1507 line 253 _ExactTM.easting: 6890222.326618
6test 1508 line 253 _ExactTM.northing: 7506813.499547
6test 1509 line 253 _ExactTM.gamma: 62.684825
6test 1510 line 253 _ExactTM.scale: 1.638488
6test 1511 line 253 _ExactTM.lat: 34.237147
6test 1512 line 253 _ExactTM.lon: 73.678164
6test 1513 line 254 _ExactTM.easting: 6692260.067325
6test 1514 line 254 _ExactTM.northing: 4244174.008110
6test 1515 line 254 _ExactTM.gamma: 31.812920
6test 1516 line 254 _ExactTM.scale: 1.604640
6test 1517 line 254 _ExactTM.lat: 22.704949
6test 1518 line 254 _ExactTM.lon: 57.877010
6test 1519 line 255 _ExactTM.easting: 1225564.137190
6test 1520 line 255 _ExactTM.northing: 4778923.924144
6test 1521 line 255 _ExactTM.gamma: 10.083419
6test 1522 line 255 _ExactTM.scale: 1.018134
6test 1523 line 255 _ExactTM.lat: 42.192424
6test 1524 line 255 _ExactTM.lon: 14.828196
6test 1525 line 256 _ExactTM.easting: 12341116.154950
6test 1526 line 256 _ExactTM.northing: 5081855.521966
6test 1527 line 256 _ExactTM.gamma: 45.712546
6test 1528 line 256 _ExactTM.scale: 3.535170
6test 1529 line 256 _ExactTM.lat: 11.481151
6test 1530 line 256 _ExactTM.lon: 78.189236
6test 1531 line 257 _ExactTM.easting: 6673845.021771
6test 1532 line 257 _ExactTM.northing: 1177587.190565
6test 1533 line 257 _ExactTM.gamma: 8.389141
6test 1534 line 257 _ExactTM.scale: 1.605171
6test 1535 line 257 _ExactTM.lat: 6.609626
6test 1536 line 257 _ExactTM.lon: 51.735783
6test 1537 line 258 _ExactTM.easting: 6966354.690417
6test 1538 line 258 _ExactTM.northing: 3641802.005093
6test 1539 line 258 _ExactTM.gamma: 27.409636
6test 1540 line 258 _ExactTM.scale: 1.661469
6test 1541 line 258 _ExactTM.lat: 19.059369
6test 1542 line 258 _ExactTM.lon: 57.526439
6test 1543 max forward error: 2.328306e-08
6test 1544 max reverse error: 1.136868e-13
6test 1545 _ExactTM.scale0: 0.9996
6test 1546 _ExactTM.datum: WGS84
6test 1547 _ExactTM.datum.ellipsoid.KsOrder: 8
6test 1548 WGS84.KsOrder: 8
6all 1548 testExactTMcoords.py tests passed, 1 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 1.254 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testFmath.py
6testing testFmath.py 22.09.03 (module pygeodesy.fmath 22.11.04)
6test 1 fpolynomialA: 1.21197509765625
6test 2 fhornerA: 1.21197509765625
6test 3 fpolynomialB: 0.1513671875
6test 4 fhornerB: 0.1513671875

6test 5 fpolynomialA: 1.21197509765625
6test 6 fhornerA: 1.21197509765625
6test 7 fpolynomialB: 0.1513671875
6test 8 fhornerB: 0.1513671875

6test 9 fpolynomialA: 1.21197509765625
6test 10 fhornerA: 1.21197509765625
6test 11 fpolynomialB: 0.1513671875
6test 12 fhornerB: 0.1513671875

6test 13 fpolynomialA: 1.21197509765625
6test 14 fhornerA: 1.21197509765625
6test 15 fpolynomialB: 0.1513671875
6test 16 fhornerB: 0.1513671875

6test 17 fpolynomialA: 1.21197509765625
6test 18 fhornerA: 1.21197509765625
6test 19 fpolynomialB: 0.1513671875
6test 20 fhornerB: 0.1513671875

6test 21 fpolynomialA: 1.21197509765625
6test 22 fhornerA: 1.21197509765625
6test 23 fpolynomialB: 0.1513671875
6test 24 fhornerB: 0.1513671875

6test 25 fpolynomialA: 1.21197509765625
6test 26 fhornerA: 1.21197509765625
6test 27 fpolynomialB: 0.1513671875
6test 28 fhornerB: 0.1513671875

6test 29 fpolynomialA: 1.21197509765625
6test 30 fhornerA: 1.21197509765625
6test 31 fpolynomialB: 0.1513671875
6test 32 fhornerB: 0.1513671875

6test 33 fpolynomialA: 1.21197509765625
6test 34 fhornerA: 1.21197509765625
6test 35 fpolynomialB: 0.1513671875
6test 36 fhornerB: 0.1513671875

6test 37 fpolynomialA: 1.21197509765625
6test 38 fhornerA: 1.21197509765625
6test 39 fpolynomialB: 0.1513671875
6test 40 fhornerB: 0.1513671875

6test 41 fpolynomialA: 1.21197509765625
6test 42 fhornerA: 1.21197509765625
6test 43 fpolynomialB: 0.1513671875
6test 44 fhornerB: 0.1513671875

6test 45 fpolynomialA: 1.21197509765625
6test 46 fhornerA: 1.21197509765625
6test 47 fpolynomialB: 0.1513671875
6test 48 fhornerB: 0.1513671875

6test 49 fpolynomialA: 1.21197509765625
6test 50 fhornerA: 1.21197509765625
6test 51 fpolynomialB: 0.1513671875
6test 52 fhornerB: 0.1513671875

6test 53 fpolynomialA: 1.21197509765625
6test 54 fhornerA: 1.21197509765625
6test 55 fpolynomialB: 0.1513671875
6test 56 fhornerB: 0.1513671875

6test 57 fpolynomialA: 1.21197509765625
6test 58 fhornerA: 1.21197509765625
6test 59 fpolynomialB: 0.1513671875
6test 60 fhornerB: 0.1513671875

6test 61 fpolynomialA: 1.21197509765625
6test 62 fhornerA: 1.21197509765625
6test 63 fpolynomialB: 0.1513671875
6test 64 fhornerB: 0.1513671875

6test 65 fpolynomialA: 1.21197509765625
6test 66 fhornerA: 1.21197509765625
6test 67 fpolynomialB: 0.1513671875
6test 68 fhornerB: 0.1513671875

6test 69 fpolynomialA: 1.21197509765625
6test 70 fhornerA: 1.21197509765625
6test 71 fpolynomialB: 0.1513671875
6test 72 fhornerB: 0.1513671875

6test 73 fpolynomialA: 1.21197509765625
6test 74 fhornerA: 1.21197509765625
6test 75 fpolynomialB: 0.1513671875
6test 76 fhornerB: 0.1513671875

6test 77 fpolynomialA: 1.21197509765625
6test 78 fhornerA: 1.21197509765625
6test 79 fpolynomialB: 0.1513671875
6test 80 fhornerB: 0.1513671875

6test 81 fpolynomialA: 1.21197509765625
6test 82 fhornerA: 1.21197509765625
6test 83 fpolynomialB: 0.1513671875
6test 84 fhornerB: 0.1513671875

6test 85 fpolynomialA: 1.21197509765625
6test 86 fhornerA: 1.21197509765625
6test 87 fpolynomialB: 0.1513671875
6test 88 fhornerB: 0.1513671875

6test 89 fpolynomialA: 1.21197509765625
6test 90 fhornerA: 1.21197509765625
6test 91 fpolynomialB: 0.1513671875
6test 92 fhornerB: 0.1513671875

6test 93 fpolynomialA: 1.21197509765625
6test 94 fhornerA: 1.21197509765625
6test 95 fpolynomialB: 0.1513671875
6test 96 fhornerB: 0.1513671875

6test 97 fpolynomialA: 1.21197509765625
6test 98 fhornerA: 1.21197509765625
6test 99 fpolynomialB: 0.1513671875
6test 100 fhornerB: 0.1513671875

6test 101 fpolynomialA: 1.21197509765625
6test 102 fhornerA: 1.21197509765625
6test 103 fpolynomialB: 0.1513671875
6test 104 fhornerB: 0.1513671875

6test 105 fpolynomialA: 1.21197509765625
6test 106 fhornerA: 1.21197509765625
6test 107 fpolynomialB: 0.1513671875
6test 108 fhornerB: 0.1513671875

6test 109 fpolynomialA: 1.21197509765625
6test 110 fhornerA: 1.21197509765625
6test 111 fpolynomialB: 0.1513671875
6test 112 fhornerB: 0.1513671875

6test 113 fpolynomialA: 1.21197509765625
6test 114 fhornerA: 1.21197509765625
6test 115 fpolynomialB: 0.1513671875
6test 116 fhornerB: 0.1513671875

6test 117 fpolynomialA: 1.21197509765625
6test 118 fhornerA: 1.21197509765625
6test 119 fpolynomialB: 0.1513671875
6test 120 fhornerB: 0.1513671875

6test 121 fpolynomialA: 1.21197509765625
6test 122 fhornerA: 1.21197509765625
6test 123 fpolynomialB: 0.1513671875
6test 124 fhornerB: 0.1513671875

6test 125 fpolynomialA: 1.21197509765625
6test 126 fhornerA: 1.21197509765625
6test 127 fpolynomialB: 0.1513671875
6test 128 fhornerB: 0.1513671875

6test 129 fpolynomialA: 1.21197509765625
6test 130 fhornerA: 1.21197509765625
6test 131 fpolynomialB: 0.1513671875
6test 132 fhornerB: 0.1513671875

6test 133 fpowers: 10
6test 134 fpowers: 2
6test 135 fpowers: 1024
6test 136 fpowers: 4
6test 137 fpowers: 16
6test 138 fpowers: 1024
6test 139 fpowers: 4
6test 140 fpowers: 8
6test 141 fpowers: 512

6test 142 Airy1830: 6366914.608925221
6test 143 Airy1830: 6366914.608925221
6test 144 Airy1830: 6366914.608925221
6test 145 Airy1830: 6366914.608925221

6test 146 AiryModified: 6366691.774619882  FAILED, KNOWN, expected 6366691.774619881
6test 147 AiryModified: 6366691.774619882  FAILED, KNOWN, expected 6366691.774619881
6test 148 AiryModified: 6366691.774619882  FAILED, KNOWN, expected 6366691.774619881
6test 149 AiryModified: 6366691.774619882  FAILED, KNOWN, expected 6366691.774619881

6test 150 ATS1977: 6367447.141166951  FAILED, KNOWN, expected 6367447.141166950
6test 151 ATS1977: 6367447.141166951  FAILED, KNOWN, expected 6367447.141166950
6test 152 ATS1977: 6367447.141166951  FAILED, KNOWN, expected 6367447.141166950
6test 153 ATS1977: 6367447.141166951  FAILED, KNOWN, expected 6367447.141166950

6test 154 Australia1966: 6367471.848532283  FAILED, KNOWN, expected 6367471.848532284
6test 155 Australia1966: 6367471.848532283  FAILED, KNOWN, expected 6367471.848532284
6test 156 Australia1966: 6367471.848532283  FAILED, KNOWN, expected 6367471.848532284
6test 157 Australia1966: 6367471.848532283  FAILED, KNOWN, expected 6367471.848532284

6test 158 Bessel1841: 6366742.520233950
6test 159 Bessel1841: 6366742.520233950
6test 160 Bessel1841: 6366742.520233950
6test 161 Bessel1841: 6366742.520233950

6test 162 BesselModified: 6366837.224747659
6test 163 BesselModified: 6366837.224747659
6test 164 BesselModified: 6366837.224747659
6test 165 BesselModified: 6366837.224747659

6test 166 CGCS2000: 6367449.145771047  FAILED, KNOWN, expected 6367449.145771048
6test 167 CGCS2000: 6367449.145771047  FAILED, KNOWN, expected 6367449.145771048
6test 168 CGCS2000: 6367449.145771047  FAILED, KNOWN, expected 6367449.145771048
6test 169 CGCS2000: 6367449.145771047  FAILED, KNOWN, expected 6367449.145771048

6test 170 Clarke1866: 6367399.689169783
6test 171 Clarke1866: 6367399.689169783
6test 172 Clarke1866: 6367399.689169783
6test 173 Clarke1866: 6367399.689169783

6test 174 Clarke1880: 6367386.643980513  FAILED, KNOWN, expected 6367386.643980514
6test 175 Clarke1880: 6367386.643980513  FAILED, KNOWN, expected 6367386.643980514
6test 176 Clarke1880: 6367386.643980513  FAILED, KNOWN, expected 6367386.643980514
6test 177 Clarke1880: 6367386.643980513  FAILED, KNOWN, expected 6367386.643980514

6test 178 Clarke1880IGN: 6367386.736673363
6test 179 Clarke1880IGN: 6367386.736673363
6test 180 Clarke1880IGN: 6367386.736673363
6test 181 Clarke1880IGN: 6367386.736673363

6test 182 Clarke1880Mod: 6367386.692362010  FAILED, KNOWN, expected 6367386.692362011
6test 183 Clarke1880Mod: 6367386.692362010  FAILED, KNOWN, expected 6367386.692362011
6test 184 Clarke1880Mod: 6367386.692362010  FAILED, KNOWN, expected 6367386.692362011
6test 185 Clarke1880Mod: 6367386.692362010  FAILED, KNOWN, expected 6367386.692362011

6test 186 CPM1799: 6366208.881847842  FAILED, KNOWN, expected 6366208.881847841
6test 187 CPM1799: 6366208.881847842  FAILED, KNOWN, expected 6366208.881847841
6test 188 CPM1799: 6366208.881847842  FAILED, KNOWN, expected 6366208.881847841
6test 189 CPM1799: 6366208.881847842  FAILED, KNOWN, expected 6366208.881847841

6test 190 Delambre1810: 6366197.076843344
6test 191 Delambre1810: 6366197.076843344
6test 192 Delambre1810: 6366197.076843344
6test 193 Delambre1810: 6366197.076843344

6test 194 Engelis1985: 6367448.175079710  FAILED, KNOWN, expected 6367448.175079712
6test 195 Engelis1985: 6367448.175079710  FAILED, KNOWN, expected 6367448.175079712
6test 196 Engelis1985: 6367448.175079710  FAILED, KNOWN, expected 6367448.175079712
6test 197 Engelis1985: 6367448.175079710  FAILED, KNOWN, expected 6367448.175079712

6test 198 Everest1969: 6366699.578395008  FAILED, KNOWN, expected 6366699.578395009
6test 199 Everest1969: 6366699.578395008  FAILED, KNOWN, expected 6366699.578395009
6test 200 Everest1969: 6366699.578395008  FAILED, KNOWN, expected 6366699.578395009
6test 201 Everest1969: 6366699.578395008  FAILED, KNOWN, expected 6366699.578395009

6test 202 Everest1975: 6366703.060499237
6test 203 Everest1975: 6366703.060499237
6test 204 Everest1975: 6366703.060499237
6test 205 Everest1975: 6366703.060499237

6test 206 Fisher1968: 6367463.656043807
6test 207 Fisher1968: 6367463.656043807
6test 208 Fisher1968: 6367463.656043807
6test 209 Fisher1968: 6367463.656043807

6test 210 GEM10C: 6367449.145824739  FAILED, KNOWN, expected 6367449.145824740
6test 211 GEM10C: 6367449.145824739  FAILED, KNOWN, expected 6367449.145824740
6test 212 GEM10C: 6367449.145824739  FAILED, KNOWN, expected 6367449.145824740
6test 213 GEM10C: 6367449.145824739  FAILED, KNOWN, expected 6367449.145824740

6test 214 GPES: 6378135.000000000
6test 215 GPES: 6378135.000000000
6test 216 GPES: 6378135.000000000
6test 217 GPES: 6378135.000000000

6test 218 GRS67: 6367471.747065325
6test 219 GRS67: 6367471.747065325
6test 220 GRS67: 6367471.747065325
6test 221 GRS67: 6367471.747065325

6test 222 GRS80: 6367449.145771043
6test 223 GRS80: 6367449.145771043
6test 224 GRS80: 6367449.145771043
6test 225 GRS80: 6367449.145771043

6test 226 Helmert1906: 6367513.572270742
6test 227 Helmert1906: 6367513.572270742
6test 228 Helmert1906: 6367513.572270742
6test 229 Helmert1906: 6367513.572270742

6test 230 IAU76: 6367452.132788436
6test 231 IAU76: 6367452.132788436
6test 232 IAU76: 6367452.132788436
6test 233 IAU76: 6367452.132788436

6test 234 IERS1989: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246
6test 235 IERS1989: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246
6test 236 IERS1989: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246
6test 237 IERS1989: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246

6test 238 IERS1992TOPEX: 6367448.446996409
6test 239 IERS1992TOPEX: 6367448.446996409
6test 240 IERS1992TOPEX: 6367448.446996409
6test 241 IERS1992TOPEX: 6367448.446996409

6test 242 IERS2003: 6367448.717710576  FAILED, KNOWN, expected 6367448.717710577
6test 243 IERS2003: 6367448.717710576  FAILED, KNOWN, expected 6367448.717710577
6test 244 IERS2003: 6367448.717710576  FAILED, KNOWN, expected 6367448.717710577
6test 245 IERS2003: 6367448.717710576  FAILED, KNOWN, expected 6367448.717710577

6test 246 Intl1924: 6367654.500057585  FAILED, KNOWN, expected 6367654.500057584
6test 247 Intl1924: 6367654.500057585  FAILED, KNOWN, expected 6367654.500057584
6test 248 Intl1924: 6367654.500057585  FAILED, KNOWN, expected 6367654.500057584
6test 249 Intl1924: 6367654.500057585  FAILED, KNOWN, expected 6367654.500057584

6test 250 Intl1967: 6367469.338944457
6test 251 Intl1967: 6367469.338944457
6test 252 Intl1967: 6367469.338944457
6test 253 Intl1967: 6367469.338944457

6test 254 Krassovski1940: 6367558.496874981
6test 255 Krassovski1940: 6367558.496874981
6test 256 Krassovski1940: 6367558.496874981
6test 257 Krassovski1940: 6367558.496874981

6test 258 Krassowsky1940: 6367558.496874981
6test 259 Krassowsky1940: 6367558.496874981
6test 260 Krassowsky1940: 6367558.496874981
6test 261 Krassowsky1940: 6367558.496874981

6test 262 Maupertuis1738: 6380564.130118373
6test 263 Maupertuis1738: 6380564.130118373
6test 264 Maupertuis1738: 6380564.130118373
6test 265 Maupertuis1738: 6380564.130118373

6test 266 Mercury1960: 6367479.629236430
6test 267 Mercury1960: 6367479.629236430
6test 268 Mercury1960: 6367479.629236430
6test 269 Mercury1960: 6367479.629236430

6test 270 Mercury1968Mod: 6367463.656043807
6test 271 Mercury1968Mod: 6367463.656043807
6test 272 Mercury1968Mod: 6367463.656043807
6test 273 Mercury1968Mod: 6367463.656043807

6test 274 NWL1965: 6367456.873668412
6test 275 NWL1965: 6367456.873668412
6test 276 NWL1965: 6367456.873668412
6test 277 NWL1965: 6367456.873668412

6test 278 OSU86F: 6367448.347165301  FAILED, KNOWN, expected 6367448.347165302
6test 279 OSU86F: 6367448.347165301  FAILED, KNOWN, expected 6367448.347165302
6test 280 OSU86F: 6367448.347165301  FAILED, KNOWN, expected 6367448.347165302
6test 281 OSU86F: 6367448.347165301  FAILED, KNOWN, expected 6367448.347165302

6test 282 OSU91A: 6367448.446997731  FAILED, KNOWN, expected 6367448.446997732
6test 283 OSU91A: 6367448.446997731  FAILED, KNOWN, expected 6367448.446997732
6test 284 OSU91A: 6367448.446997731  FAILED, KNOWN, expected 6367448.446997732
6test 285 OSU91A: 6367448.446997731  FAILED, KNOWN, expected 6367448.446997732

6test 286 Plessis1817: 6366197.157107386
6test 287 Plessis1817: 6366197.157107386
6test 288 Plessis1817: 6366197.157107386
6test 289 Plessis1817: 6366197.157107386

6test 290 PZ90: 6367448.169554430
6test 291 PZ90: 6367448.169554430
6test 292 PZ90: 6367448.169554430
6test 293 PZ90: 6367448.169554430

6test 294 SGS85: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246
6test 295 SGS85: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246
6test 296 SGS85: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246
6test 297 SGS85: 6367448.139491247  FAILED, KNOWN, expected 6367448.139491246

6test 298 SoAmerican1969: 6367471.848532285
6test 299 SoAmerican1969: 6367471.848532285
6test 300 SoAmerican1969: 6367471.848532285
6test 301 SoAmerican1969: 6367471.848532285

6test 302 Sphere: 6371008.771415000
6test 303 Sphere: 6371008.771415000
6test 304 Sphere: 6371008.771415000
6test 305 Sphere: 6371008.771415000

6test 306 SphereAuthalic: 6371000.000000000
6test 307 SphereAuthalic: 6371000.000000000
6test 308 SphereAuthalic: 6371000.000000000
6test 309 SphereAuthalic: 6371000.000000000

6test 310 SpherePopular: 6378137.000000000
6test 311 SpherePopular: 6378137.000000000
6test 312 SpherePopular: 6378137.000000000
6test 313 SpherePopular: 6378137.000000000

6test 314 Struve1860: 6367482.318325493
6test 315 Struve1860: 6367482.318325493
6test 316 Struve1860: 6367482.318325493
6test 317 Struve1860: 6367482.318325493

6test 318 WGS60: 6367478.630911891
6test 319 WGS60: 6367478.630911891
6test 320 WGS60: 6367478.630911891
6test 321 WGS60: 6367478.630911891

6test 322 WGS66: 6367456.873668412
6test 323 WGS66: 6367456.873668412
6test 324 WGS66: 6367456.873668412
6test 325 WGS66: 6367456.873668412

6test 326 WGS72: 6367447.248623827  FAILED, KNOWN, expected 6367447.248623826
6test 327 WGS72: 6367447.248623827  FAILED, KNOWN, expected 6367447.248623826
6test 328 WGS72: 6367447.248623827  FAILED, KNOWN, expected 6367447.248623826
6test 329 WGS72: 6367447.248623827  FAILED, KNOWN, expected 6367447.248623826

6test 330 WGS84: 6367449.145823414
6test 331 WGS84: 6367449.145823414
6test 332 WGS84: 6367449.145823414
6test 333 WGS84: 6367449.145823414

6test 334 hypot: 1
6test 335 sqrt_a: 0.6102683302836
6test 336 sqrt_a: 0.6102683302836
6test 337 hypot_ : 1.00001250
6test 338 euclid_: 1.00207107  FAILED, KNOWN, expected 1.00001250
6test 339 hypot2_: 1.00002500
6test 340 norm_  : 1.00000000
6test 341 hypot_ : 3606.937759
6test 342 euclid_: 3845.584412  FAILED, KNOWN, expected 3859.423403
6test 343 hypot2_: 13010000.0
6test 344 norm_  : 1.0
6test 345 hypot_ : 40112.842
6test 346 hypot2_: 1609040100.0
6test 347 euclid_: 41277.666  FAILED, KNOWN, expected 41316.227
6test 348 cbrt: 3.00
6test 349 cbrt: -3.00
6test 350 cbrt2: 9.00
6test 351 cbrt2: 9.00
6test 352 sqrt3: 27.00
6test 353 facos1: 0.005%
6test 354 fasin1: 0.439%
6test 355 fatan : 0.134%
6test 356 fatan1: 2.834%
6test 357 fatan2: 0.321%
6test 358 Fhypot: fmath.Fhypot[2] (5.0, 0)
6test 359 Fhypot: fmath.Fhypot[3] (9.43398, 0)
6test 360 Fhypot: fmath.Fhypot[2] (5.0, 0)
6test 361 Fhypot: fmath.Fhypot[3] (-2.18182, 0)
6test 362 Fhypot: fmath.Fhypot[2] (-12, 0)
6test 363 Fhypot: fmath.Fhypot[2] (1.41421, 0)
6test 364 Fhypot: fmath.Fhypot[2] (-0.5, 0)
6test 365 Fhypot: fmath.Fhypot(<fsums.Fsum[1] (-1, 0) at 0x103c461f0>, inf, <fsums.Fsum[1] (-1, 0) at 0x103c461f0>, ..., power=-1): xs[2] (inf): _ (inf): not finite
6test 366 Fhypot: fmath.Fhypot(<fsums.Fsum[1] (-1, 0) at 0x103c461f0>, -1, power=0): float division by zero
6test 367 Fsqrt: fmath.Fsqrt[2] (3.0, 0)
6test 368 Fsqrt: fmath.Fcbrt[3] (3.0, 0)
6test 369 Fsqrt: fmath.Fsqrt[3] (1.41421, 0)
6test 370 Fsqrt: fmath.Fsqrt[2] (1.41421, 0)
6test 371 Fn_rt: fmath.Fn_rt[3] (0.5, 0)
6test 372 Fn_rt: fmath.Fn_rt[2] (0.5, 0)
6test 373 Fsqrt: fmath.Fsqrt(<fsums.Fsum[1] (-1, 0) at 0x103c46d60>, -1, root=2.0): fsums.Fsum[3] Fsum2Tuple(fsum=-2, residual=0) ** 0.5: complex (8.659560562354934e-17+1.4142135623730951j) from 2-arg pow(-2, 0.5)
6test 374 Fsqrt: fmath.Fn_rt(<fsums.Fsum[1] (-1, 0) at 0x103c46d60>, -1, root=0): float division by zero
6test 375 Fn_rt: fmath.Fn_rt[2] (-0.25, 0)
6test 376 Fhypot1: 1.41421356e+100
6test 377 Fpowers1: -33.6811753
6test 378 Fsqrt1: 0.0352065013
6test 379 Fcbrt1: 0.1074192
6test 380 Fhypot2: 1.41421356e+100
6test 381 Fpowers2: -10799.0267
6test 382 Fsqrt2: 0.00167686931
6test 383 Fcbrt2: 0.014114521
6test 384 Fhypot3: 2e+100
6test 385 Fpowers3: 1078627
6test 386 Fsqrt3: 12.759174
6test 387 Fcbrt3: 5.46028159
6test 388 Fhypot4: 2.44948974e+100
6test 389 Fpowers4: -7.84707e-05
6test 390 Fsqrt4: 0.00342590476
6test 391 Fcbrt4: 0.0227256784
6test 392 Fhypot5: 2.82842712e+100
6test 393 Fpowers5: 4.54056244
6test 394 Fsqrt5: 0.0345644254
6test 395 Fcbrt5: 0.106109164
6test 396 Fhypot6: 3.16227766e+100
6test 397 Fpowers6: -110.997289
6test 398 Fsqrt6: 4.01011293e-07
6test 399 Fcbrt6: 5.43798162e-05
6test 400 Fhypot7: 3.46410162e+100
6test 401 Fpowers7: -18.3364782
6test 402 Fsqrt7: 1.50320027e-08
6test 403 Fcbrt7: 6.0908499e-06
6test 404 Fhypot8: 3.74165739e+100
6test 405 Fpowers8: 1.61666616
6test 406 Fsqrt8: 0.163011309
6test 407 Fcbrt8: 0.298408936
6test 408 Fhypot9: 4e+100
6test 409 Fpowers9: 0.00358230487
6test 410 Fsqrt9: 0.0457457298
6test 411 Fcbrt9: 0.127908785
671 of 411 testFmath.py tests (17.3%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 66.615 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testFormy.py
6testing testFormy.py 22.11.02
6test 1 antipode1: (-89.0, -1.0)
6test 2 antipode2: (89.0, 1.0)
6test 3 bearing1: 251.364
6test 4 bearing2: 251.364
6test 5 bearing3: 249.614
6test 6 excessAbc: 11.9698
6test 7 excessAbc: 11.9698
6test 8 excessGirard: 11.9698
6test 9 excessLHuilier: 11.9698
6test 10 excessKarney: 56.9625
6test 11 excessQuad: 56.9625
6test 12 excessKarney: 44.0235
6test 13 excessQuad: 44.0235
6test 14 excessKarney: -44.0235
6test 15 excessQuad: -44.0235
6test 16 isantipode1: True
6test 17 isantipode2: True
6test 18 isantipode3: False
6test 19 isantipode4: True
6test 20 isantipode5: True
6test 21 isantipode6: True
6test 22 isantipode7: False
6test 23 isantipode8: True
6test 24 isnormal1: True
6test 25 isnormal2: False
6test 26 isnormal3: True
6test 27 isnormal4: True
6test 28 isnormal5: True
6test 29 isnormal6: False
6test 30 isnormal7: True
6test 31 isnormal8: True
6test 32 hartzell: (884080.396945, 5592040.198472, 2927517.711001)
6test 33 hartzell: 27.500482°N, 081.016111°E, +0.00, 'hartzell'
6test 34 hartzell: (3642031.283571, 3678090.99925, 3714150.714929)
6test 35 hartzell: 35.843738°N, 045.282243°E, +0.00, 'hartzell'
6test 36 heightOf0: 2638958.23912
6test 37 heightOf45: 5401080.43931
6test 38 heightOf90: 6371008.77141
6test 39 heightOf135: 5401080.43931
6test 40 horizon0: 0.0
6test 41 horizon10Km: 357099.672
6test 42 horizon30Kft: 392310.704
6test 43 horizon10Kft: 214877.422
6test 44 normal1: (-89.0, 179.0)
6test 45 normal2: (81.0, 180.0)
6test 46 normal3: (81.0, -19.0)
6test 47 normal4: (-81.0, 0.0)

6test 48 haversine1 (0.00%): 298009.404
6test 49 vincentys1 (0.00%): 298009.404
6test 50 vincentys1 (0.00%): 298009.404
6test 51 cosineAndoyerLambert1 (0.13%): 298395.796  FAILED, KNOWN, expected 298009.404
6test 52 cosineForsytheAndoyerLambert1 (0.13%): 298396.056  FAILED, KNOWN, expected 298009.404
6test 53 cosineLaw1 (0.00%): 298009.404
6test 54 equirectangular1 (0.01%): 298039.206  FAILED, KNOWN, expected 298009.404
6test 55 euclidean1 (5.26%): 313698.901  FAILED, KNOWN, expected 298009.404
6test 56 flatLocal1 (0.14%): 298425.999  FAILED, KNOWN, expected 298009.404
6test 57 flatPolar1 (8.67%): 323841.582  FAILED, KNOWN, expected 298009.404
6test 58 thomas1 (0.13%): 298396.261  FAILED, KNOWN, expected 298009.404
6test 59 hubeny1: <function flatLocal at 0x105063280>

6test 60 haversine2 (0.00%): 98164.988
6test 61 vincentys2 (0.00%): 98164.988
6test 62 vincentys2 (0.00%): 98164.988
6test 63 cosineAndoyerLambert2 (0.10%): 98071.421  FAILED, KNOWN, expected 98164.988
6test 64 cosineForsytheAndoyerLambert2 (0.10%): 98071.560  FAILED, KNOWN, expected 98164.988
6test 65 cosineLaw2 (0.00%): 98164.988
6test 66 equirectangular2 (0.00%): 98165.123  FAILED, KNOWN, expected 98164.988
6test 67 euclidean2 (6.37%): 104419.458  FAILED, KNOWN, expected 98164.988
6test 68 flatLocal2 (0.10%): 98071.693  FAILED, KNOWN, expected 98164.988
6test 69 flatPolar2 (0.57%): 98725.040  FAILED, KNOWN, expected 98164.988
6test 70 thomas2 (0.10%): 98071.535  FAILED, KNOWN, expected 98164.988
6test 71 hubeny2: <function flatLocal at 0x105063280>

6test 72 haversine3 (0.00%): 651816.987
6test 73 vincentys3 (0.00%): 651816.987
6test 74 vincentys3 (0.00%): 651816.987
6test 75 cosineAndoyerLambert3 (0.25%): 653456.144  FAILED, KNOWN, expected 651816.987
6test 76 cosineForsytheAndoyerLambert3 (0.25%): 653456.175  FAILED, KNOWN, expected 651816.987
6test 77 cosineLaw3 (0.00%): 651816.987
6test 78 equirectangular3 (0.03%): 652041.760  FAILED, KNOWN, expected 651816.987
6test 79 euclidean3 (4.37%): 680281.470  FAILED, KNOWN, expected 651816.987
6test 80 flatLocal3 (0.29%): 653681.559  FAILED, KNOWN, expected 651816.987
6test 81 flatPolar3 (13.00%): 736534.840  FAILED, KNOWN, expected 651816.987
6test 82 thomas3 (0.25%): 653456.933  FAILED, KNOWN, expected 651816.987
6test 83 hubeny3: <function flatLocal at 0x105063280>

6test 84 haversine4 (0.00%): 4084985.780
6test 85 vincentys4 (0.00%): 4084985.780
6test 86 vincentys4 (0.00%): 4084985.780
6test 87 cosineAndoyerLambert4 (0.24%): 4094954.008  FAILED, KNOWN, expected 4084985.780
6test 88 cosineForsytheAndoyerLambert4 (0.24%): 4094953.639  FAILED, KNOWN, expected 4084985.780
6test 89 cosineLaw4 (0.00%): 4084985.780
6test 90 equirectangular4 (1.26%): 4136407.022  FAILED, KNOWN, expected 4084985.780
6test 91 euclidean4 (4.22%): 4257296.511  FAILED, KNOWN, expected 4084985.780
6test 92 flatLocal4 (1.51%): 4146513.247  FAILED, KNOWN, expected 4084985.780
6test 93 flatPolar4 (12.31%): 4587896.452  FAILED, KNOWN, expected 4084985.780
6test 94 thomas4 (0.24%): 4094958.301  FAILED, KNOWN, expected 4084985.780
6test 95 hubeny4: <function flatLocal at 0x105063280>

6test 96 haversine5 (0.00%): 9670051.606
6test 97 vincentys5 (0.00%): 9670051.606
6test 98 vincentys5 (0.00%): 9670051.606
6test 99 cosineAndoyerLambert5 (0.21%): 9690752.610  FAILED, KNOWN, expected 9670051.606
6test 100 cosineForsytheAndoyerLambert5 (0.21%): 9690746.120  FAILED, KNOWN, expected 9670051.606
6test 101 cosineLaw5 (0.00%): 9670051.606
6test 102 equirectangular5 (7.79%): 10423307.214  FAILED, KNOWN, expected 9670051.606
6test 103 euclidean5 (9.34%): 10573030.726  FAILED, KNOWN, expected 9670051.606
6test 104 flatLocal5 (8.03%): 10446503.342  FAILED, KNOWN, expected 9670051.606
6test 105 flatPolar5 (55.59%): 15045906.074  FAILED, KNOWN, expected 9670051.606
6test 106 thomas5 (0.21%): 9690767.767  FAILED, KNOWN, expected 9670051.606
6test 107 hubeny5: <function flatLocal at 0x105063280>

6test 108 haversine6 (0.00%): 10496496.577
6test 109 vincentys6 (0.00%): 10496496.577
6test 110 vincentys6 (0.00%): 10496496.577
6test 111 cosineAndoyerLambert6 (0.18%): 10477328.664  FAILED, KNOWN, expected 10496496.577
6test 112 cosineForsytheAndoyerLambert6 (0.18%): 10477342.084  FAILED, KNOWN, expected 10496496.577
6test 113 cosineLaw6 (0.00%): 10496496.577
6test 114 equirectangular6 (3.32%): 10844969.236  FAILED, KNOWN, expected 10496496.577
6test 115 euclidean6 (4.50%): 10968488.107  FAILED, KNOWN, expected 10496496.577
6test 116 flatLocal6 (3.07%): 10818798.605  FAILED, KNOWN, expected 10496496.577
6test 117 flatPolar6 (23.87%): 13002288.857  FAILED, KNOWN, expected 10496496.577
6test 118 thomas6 (0.18%): 10477316.498  FAILED, KNOWN, expected 10496496.577
6test 119 hubeny6: <function flatLocal at 0x105063280>

6test 120 haversine7 (0.00%): 8998396.669
6test 121 vincentys7 (0.00%): 8998396.669
6test 122 vincentys7 (0.00%): 8998396.669
6test 123 cosineAndoyerLambert7 (0.27%): 8974227.489  FAILED, KNOWN, expected 8998396.669
6test 124 cosineForsytheAndoyerLambert7 (0.27%): 8974238.592  FAILED, KNOWN, expected 8998396.669
6test 125 cosineLaw7 (0.00%): 8998396.669
6test 126 equirectangular7 (2.05%): 9182626.289  FAILED, KNOWN, expected 8998396.669
6test 127 euclidean7 (7.76%): 9696965.812  FAILED, KNOWN, expected 8998396.669
6test 128 flatLocal7 (1.71%): 9151831.117  FAILED, KNOWN, expected 8998396.669
6test 129 flatPolar7 (17.56%): 10578638.162  FAILED, KNOWN, expected 8998396.669
6test 130 thomas7 (0.27%): 8974216.867  FAILED, KNOWN, expected 8998396.669
6test 131 hubeny7: <function flatLocal at 0x105063280>

6test 132 haversine8 (0.00%): 6906867.946
6test 133 vincentys8 (0.00%): 6906867.946
6test 134 vincentys8 (0.00%): 6906867.946
6test 135 cosineAndoyerLambert8 (0.13%): 6916085.969  FAILED, KNOWN, expected 6906867.946
6test 136 cosineForsytheAndoyerLambert8 (0.13%): 6916085.333  FAILED, KNOWN, expected 6906867.946
6test 137 cosineLaw8 (0.00%): 6906867.946
6test 138 equirectangular8 (0.91%): 6969581.760  FAILED, KNOWN, expected 6906867.946
6test 139 euclidean8 (6.54%): 7358706.022  FAILED, KNOWN, expected 6906867.946
6test 140 flatLocal8 (1.04%): 6978905.097  FAILED, KNOWN, expected 6906867.946
6test 141 flatPolar8 (23.23%): 8511564.321  FAILED, KNOWN, expected 6906867.946
6test 142 thomas8 (0.13%): 6916087.828  FAILED, KNOWN, expected 6906867.946
6test 143 hubeny8: <function flatLocal at 0x105063280>

6test 144 haversine9 (0.01%): 8045325.213  FAILED, KNOWN, expected 8044806.076
6test 145 vincentys9 (0.01%): 8045325.213  FAILED, KNOWN, expected 8044806.076
6test 146 cosineAndoyerLambert9 (0.07%): 8050357.566  FAILED, KNOWN, expected 8044806.076
6test 147 cosineForsytheAndoyerLambert9 (0.07%): 8050363.635  FAILED, KNOWN, expected 8044806.076
6test 148 cosineLaw9 (0.01%): 8045325.213  FAILED, KNOWN, expected 8044806.076
6test 149 flatLocal9 (15.21%): 9268128.573  FAILED, KNOWN, expected 8044806.076
6test 150 thomas9 (0.07%): 8050370.796  FAILED, KNOWN, expected 8044806.076
6test 151 hubeny9: <function flatLocal at 0x105063280>

6test 152 intersections2: pygeodesy.formy
6test 153 intersection2 (None) 1: (1.0003, 1.0003), (-1.0003, -1.0003)
6test 154 intersection2 (None) 2: (2.0024, 2.0024), (-2.0024, -2.0024)
6test 155 intersection2 (None) 5: (5.0381, 5.0381), (-5.0381, -5.0381)
6test 156 intersection2 (None) 10: (10.3062, 10.3062), (-10.3062, -10.3062)
6test 157 intersection2 (None) 20: (22.494, 22.494), (-22.494, -22.494)
6test 158 intersection2 (None) 30: (38.7298, 38.7298), (-38.7298, -38.7298)
6test 159 intersection2 (None) 40: (62.0732, 62.0732), (-62.0732, -62.0732)
6test 160 intersection2 (R_M) 1: (-1.0, -1.0003), (1.0, 1.0003)
6test 161 intersection2 (R_M) 2: (-2.0, -2.0024), (2.0, 2.0024)
6test 162 intersection2 (R_M) 5: (-4.9999, -5.0383), (4.9999, 5.0383)
6test 163 intersection2 (R_M) 10: (-9.9976, -10.3117), (9.9976, 10.3117)
6test 164 intersection2 (R_M) 20: (-19.914, -22.6761), (19.914, 22.6761)
6test 165 intersection2 (R_M) 30: (-29.2059, -40.203), (29.2059, 40.203)
6test 166 intersection2 (R_M) 40: (-35.5129, -68.6826), (35.5129, 68.6826)
6test 167 intersection2 (WGS84) 1: (-1.0112, -0.998), (1.0112, 0.998)
6test 168 intersection2 (WGS84) 2: (-2.0224, -1.9979), (2.0224, 1.9979)
6test 169 intersection2 (WGS84) 5: (-5.0558, -5.0271), (5.0558, 5.0271)
6test 170 intersection2 (WGS84) 10: (-10.1081, -10.2901), (10.1081, 10.2901)
6test 171 intersection2 (WGS84) 20: (-20.1241, -22.6411), (20.1241, 22.6411)
6test 172 intersection2 (WGS84) 30: (-29.4898, -40.1785), (29.4898, 40.1785)
6test 173 intersection2 (WGS84) 40: (-35.8146, -68.7149), (35.8146, 68.7149)
6test 174 radical2: (0.26, 2.6)
6test 175 radical2: (0.74, 7.4)
6test 176 radical2: (0.5, 5.0)
6test 177 radical2: (0.5, 0.0)
6test 178 IntersectionError: distance (10.0), radius1 (5.0) or radius2 (4.0): too distant  FAILED, KNOWN, expected distance (10.0), ...

6test 179 LimitError: delta exceeds limit: equirectangular_(0.0, 0.0, 60.0, 120.0, limit=45)  FAILED, KNOWN, expected delta exceeds ...
665 of 179 testFormy.py tests (36.3%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 1.983 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testFrechet.py
6testing testFrechet.py 21.08.14
6test 1 FrechetDegrees_ (degrees): (178.5, 74, 56, 19, 5400)
6test 2 FrechetDegrees_ (degrees): (175.5, 74, 52.5, 29, 10710)
6test 3 copy(FrechetDegrees_): (<class '__main__.FrechetDegrees_'>, True)
6test 4 FrechetDegrees_.copy(): (<class '__main__.FrechetDegrees_'>, True)
6test 5 FrechetRadians_ (radians): (3.11541, 74, 56, 19, 5400)
6test 6 FrechetRadians_ (radians): (3.06305, 74, 52.5, 29, 10710)
6test 7 copy(FrechetRadians_): (<class '__main__.FrechetRadians_'>, True)
6test 8 FrechetRadians_.copy(): (<class '__main__.FrechetRadians_'>, True)
6test 9 FrechetCosineAndoyerLambert (radians): (2.6319, 0, 0, 149, 5400)
6test 10 FrechetCosineAndoyerLambert (radians): (2.6319, 0, 0, 208, 10710)
6test 11 copy(FrechetCosineAndoyerLambert): (<class 'pygeodesy.frechet.FrechetCosineAndoyerLambert'>, True)
6test 12 FrechetCosineAndoyerLambert.copy(): (<class 'pygeodesy.frechet.FrechetCosineAndoyerLambert'>, True)
6test 13 FrechetCosineForsytheAndoyerLambert (radians): (2.6319, 0, 0, 149, 5400)
6test 14 FrechetCosineForsytheAndoyerLambert (radians): (2.6319, 0, 0, 208, 10710)
6test 15 copy(FrechetCosineForsytheAndoyerLambert): (<class 'pygeodesy.frechet.FrechetCosineForsytheAndoyerLambert'>, True)
6test 16 FrechetCosineForsytheAndoyerLambert.copy(): (<class 'pygeodesy.frechet.FrechetCosineForsytheAndoyerLambert'>, True)
6test 17 FrechetCosineLaw (radians): (2.63867, 0, 0, 149, 5400)
6test 18 FrechetCosineLaw (radians): (2.63867, 0, 0, 208, 10710)
6test 19 copy(FrechetCosineLaw): (<class 'pygeodesy.frechet.FrechetCosineLaw'>, True)
6test 20 FrechetCosineLaw.copy(): (<class 'pygeodesy.frechet.FrechetCosineLaw'>, True)
6test 21 FrechetEquirectangular (radians2): (7.1331, 8, 3, 138, 5400)
6test 22 FrechetEquirectangular (radians2): (7.01295, 0, 0, 208, 10710)
6test 23 copy(FrechetEquirectangular): (<class 'pygeodesy.frechet.FrechetEquirectangular'>, True)
6test 24 FrechetEquirectangular.copy(): (<class 'pygeodesy.frechet.FrechetEquirectangular'>, True)
6test 25 FrechetEuclidean (radians): (2.81124, 8, 3, 138, 5400)
6test 26 FrechetEuclidean (radians): (2.74296, 0, 0, 208, 10710)
6test 27 copy(FrechetEuclidean): (<class 'pygeodesy.frechet.FrechetEuclidean'>, True)
6test 28 FrechetEuclidean.copy(): (<class 'pygeodesy.frechet.FrechetEuclidean'>, True)
6test 29 FrechetFlatLocal (radians2): (7.13778, 8, 3, 138, 5400)
6test 30 FrechetFlatLocal (radians2): (6.92262, 0, 0, 208, 10710)
6test 31 copy(FrechetFlatLocal): (<class 'pygeodesy.frechet.FrechetFlatLocal'>, True)
6test 32 FrechetFlatLocal.copy(): (<class 'pygeodesy.frechet.FrechetFlatLocal'>, True)
6test 33 FrechetFlatPolar (radians): (2.65039, 0, 0, 149, 5400)
6test 34 FrechetFlatPolar (radians): (2.65039, 0, 0, 208, 10710)
6test 35 copy(FrechetFlatPolar): (<class 'pygeodesy.frechet.FrechetFlatPolar'>, True)
6test 36 FrechetFlatPolar.copy(): (<class 'pygeodesy.frechet.FrechetFlatPolar'>, True)
6test 37 FrechetHaversine (radians): (2.63867, 0, 0, 149, 5400)
6test 38 FrechetHaversine (radians): (2.63867, 0, 0, 208, 10710)
6test 39 copy(FrechetHaversine): (<class 'pygeodesy.frechet.FrechetHaversine'>, True)
6test 40 FrechetHaversine.copy(): (<class 'pygeodesy.frechet.FrechetHaversine'>, True)
6test 41 FrechetHubeny (radians2): (7.13778, 8, 3, 138, 5400)
6test 42 FrechetHubeny (radians2): (6.92262, 0, 0, 208, 10710)
6test 43 copy(FrechetHubeny): (<class 'pygeodesy.frechet.FrechetHubeny'>, True)
6test 44 FrechetHubeny.copy(): (<class 'pygeodesy.frechet.FrechetHubeny'>, True)
6test 45 FrechetThomas (radians): (2.63187, 0, 0, 149, 5400)
6test 46 FrechetThomas (radians): (2.63187, 0, 0, 208, 10710)
6test 47 copy(FrechetThomas): (<class 'pygeodesy.frechet.FrechetThomas'>, True)
6test 48 FrechetThomas.copy(): (<class 'pygeodesy.frechet.FrechetThomas'>, True)
6test 49 FrechetVincentys (radians): (2.63867, 0, 0, 149, 5400)
6test 50 FrechetVincentys (radians): (2.63867, 0, 0, 208, 10710)
6test 51 copy(FrechetVincentys): (<class 'pygeodesy.frechet.FrechetVincentys'>, True)
6test 52 FrechetVincentys.copy(): (<class 'pygeodesy.frechet.FrechetVincentys'>, True)
6test 53 FrechetDistanceTo (meter): (16786640.7064, 0, 0, 149, 5400)
6test 54 FrechetDistanceTo (meter): FrechetDistanceTo.discrete: type(other) (fractional(lat=-35.0, lon=-26.0)): incompatible with ellipsoidalVincenty.LatLon.distanceTo(other)  FAILED, KNOWN, expected (16786640.7064, 0, 0, 149, 5400)
6test 55 copy(FrechetDistanceTo): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 56 FrechetDistanceTo.copy(): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 57 FrechetDistanceTo (meter): (16810959.0015, 0, 0, 149, 5400)
6test 58 FrechetDistanceTo (meter): FrechetDistanceTo.discrete: type(other) (fractional(lat=-35.0, lon=-26.0)): incompatible with ellipsoidalNvector.LatLon.distanceTo(other)  FAILED, KNOWN, expected (16810959.0015, 0, 0, 149, 5400)
6test 59 copy(FrechetDistanceTo): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 60 FrechetDistanceTo.copy(): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 61 FrechetDistanceTo (meter): (16810959.0015, 0, 0, 149, 5400)
6test 62 FrechetDistanceTo (meter): FrechetDistanceTo.discrete: type(other) (fractional(lat=-35.0, lon=-26.0)): incompatible with sphericalNvector.LatLon.distanceTo(other)  FAILED, KNOWN, expected (16810959.0015, 0, 0, 149, 5400)
6test 63 copy(FrechetDistanceTo): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 64 FrechetDistanceTo.copy(): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 65 FrechetDistanceTo (meter): (16810959.0015, 0, 0, 149, 5400)
6test 66 FrechetDistanceTo (meter): FrechetDistanceTo.discrete: type(other) (fractional(lat=-35.0, lon=-26.0)): incompatible with sphericalTrigonometry.LatLon.distanceTo(other)  FAILED, KNOWN, expected (16810959.0015, 0, 0, 149, 5400)
6test 67 copy(FrechetDistanceTo): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 68 FrechetDistanceTo.copy(): (<class 'pygeodesy.frechet.FrechetDistanceTo'>, True)
6test 69 frechet_: (178.5, 74, 56, 19, 5400, 'test')
6test 70 [fi1]: 64.0°S, 096.0°E
6test 71 [fi2]: 41.0°S, 071.0°W
6test 72 [fi1]: LatLon_(64.0°S, 096.0°E)
6test 73 [fi2]: LatLon_(41.0°S, 071.0°W)
64 of 73 testFrechet.py tests (5.5%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 6.654 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testFstats.py
6testing testFstats.py 22.01.14 (module pygeodesy.fstats 22.09.12)
6test 1 Fcook: 8
6test 2 Fcook: -0.218750
6test 3 Fcook: 4.562500
6test 4 Fcook: 5.0
6test 5 Fcook: 0.656250
6test 6 Fcook: 2.0
6test 7 Fcook: 4.0
6test 8 Fcook: 1.039635

6test 9 fcopy: fstats.Fcook 'fcopy'[8]  FAILED, KNOWN, expected fstats.Fcook 'Fcook'[8]
6test 10 fcopy: 5.0
6test 11 fcopy: 2.0
6test 12 Fcook: 8

6test 13 Doubled: 16
6test 14 Doubled: -0.218750
6test 15 Doubled: 4.5625
6test 16 Doubled: 5.0
6test 17 Doubled: 0.656250
6test 18 Doubled: 2.0
6test 19 Doubled: 4.0
6test 20 Doubled: 1.340453  FAILED, KNOWN, expected 1.039635

6test 21 Empty: fstats.Fcook 'Empty'[16]  FAILED, KNOWN, expected fstats.Fcook 'Doubled'[16]
6test 22 Empty: 18
6test 23 Empty: fstats.Fcook 'Empty'[18] += None: invalid other
6test 24 Excel: 8
6test 25 Excel: -1.114187
6test 26 Excel: -0.939792
6test 27 Excel: 2.735294
6test 28 Excel: 2.50
6test 29 Excel: -0.342403
6test 30 Excel: -0.427052
6test 31 Excel: 2.061553
6test 32 Excel: 4.2
6test 33 Excel: 0.470372

6test 34 Fwelford: 8
6test 35 Fwelford: 5.0
6test 36 Fwelford: 2.0
6test 37 Fwelford: 4.0

6test 38 fcopy: fstats.Fwelford 'fcopy'[8]  FAILED, KNOWN, expected fstats.Fwelford 'Fwelford'[8]
6test 39 fcopy: 5.0
6test 40 fcopy: 2.0
6test 41 fcopy: 4.0
6test 42 fcopy: 8
6test 43 __add__: 18
6test 44 __add__: fstats.Fwelford '__add__'[18] += None: invalid other
6test 45 Flinear: 9
6test 46 Flinear: 0.988288
6test 47 Flinear: 167.682949
6test 48 Flinear: 23.422786
6test 49 __add__: 10
6test 50 __add__: 21
6test 51 __add__: fstats.Flinear '__add__'[21] += None: invalid other
6test 52 __add__: fstats.Flinear '__add__'[21] += (1, 2, 3): isodd(len(other))
64 of 52 testFstats.py tests (7.7%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 221.576 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testFsums.py
6testing testFsums.py 22.10.09 (module pygeodesy.fsums 22.10.09)
6test 1 sum1: 0.0  FAILED, KNOWN, expected 2.0
6test 2 fsum: 2.0
6test 3 Fsum: 2.0
6test 4 sum2: 0.0  FAILED, KNOWN, expected 4.0
6test 5 fsum: 4.0
6test 6 Fsum: 4.0
6test 7 sum3: 0.0  FAILED, KNOWN, expected 8.0
6test 8 fsum: 8.0
6test 9 Fsum: 8.0
6test 10 sum4: 0.0  FAILED, KNOWN, expected 16.0
6test 11 fsum: 16.0
6test 12 Fsum: 16.0
6test 13 sum5: 0.0  FAILED, KNOWN, expected 32.0
6test 14 fsum: 32.0
6test 15 Fsum: 32.0
6test 16 sum6: 0.0  FAILED, KNOWN, expected 64.0
6test 17 fsum: 64.0
6test 18 Fsum: 64.0
6test 19 sum7: 0.0  FAILED, KNOWN, expected 128.0
6test 20 fsum: 128.0
6test 21 Fsum: 128.0
6test 22 sum8: 0.0  FAILED, KNOWN, expected 256.0
6test 23 fsum: 256.0
6test 24 Fsum: 256.0
6test 25 sum9: 0.0  FAILED, KNOWN, expected 512.0
6test 26 fsum: 512.0
6test 27 Fsum: 512.0
6test 28 sum10: 0.0  FAILED, KNOWN, expected 1024.0
6test 29 fsum: 1024.0
6test 30 Fsum: 1024.0
6test 31 sum: 1.005000000001
6test 32 fsum: 1.005000000001
6test 33 Fsum: 1.005000000001
6test 34 fsum: 1.0000000000000002e+16
6test 35 Fsum: 1.0000000000000002e+16
6test 36 Fsum: 1.0000000000000002e+16

6test 37 fsum: 0.0006197488684192628
6test 38 sum1: -7.013217775829787  FAILED, KNOWN, expected 0.0006197488684192628
6test 39 pow(4): fsums.Fsum 'pow'[55] (1.47524e-13, 5.478e-30)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[222] (1.47524e-13, 5.67938e-31)
6test 40 pow(1): fsums.Fsum 'pow'[26] (0.000619749, 2.19517e-20)  FAILED, KNOWN, expected fsums.Fsum[26] (0.000619749, 2.19517e-20)
6test 41 pow(0): fsums.Fsum 'pow'[26] (1.0, 0)
6test 42 ceil: True
6test 43 floor: True
6test 44 divmod: fsums.Fsum[33] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 45 residual: 0
6test 46 is_exact: True
6test 47 Fsum: 0.0006197488684192628
6test 48 Fsum: 0.0006197488684192628
6test 49 fsum: -0.001494949720489639
6test 50 sum2: -0.6178291435937582  FAILED, KNOWN, expected -0.001494949720489639
6test 51 pow(4): fsums.Fsum 'pow'[64] (4.99466e-12, -6.7213e-29)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[172] (4.99466e-12, 7.14996e-29)
6test 52 pow(1): fsums.Fsum 'pow'[32] (-0.00149495, -7.61747e-20)  FAILED, KNOWN, expected fsums.Fsum[32] (-0.00149495, -7.61747e-20)
6test 53 pow(0): fsums.Fsum 'pow'[32] (1.0, 0)
6test 54 ceil: True
6test 55 floor: True
6test 56 divmod: fsums.Fsum[38] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 57 residual: 0
6test 58 is_exact: True
6test 59 Fsum: -0.001494949720489639
6test 60 Fsum: -0.001494949720489639
6test 61 fsum: -2.9367411693529673
6test 62 sum3: 25.060043346793854  FAILED, KNOWN, expected -2.9367411693529673
6test 63 pow(4): fsums.Fsum 'pow'[71] (74.3811, 5.13913e-16)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[242] (74.3811, -3.26354e-15)
6test 64 pow(1): fsums.Fsum 'pow'[38] (-2.93674, 1.35197e-16)  FAILED, KNOWN, expected fsums.Fsum[38] (-2.93674, 1.35197e-16)
6test 65 pow(0): fsums.Fsum 'pow'[38] (1.0, 0)
6test 66 ceil: True
6test 67 floor: True
6test 68 divmod: fsums.Fsum[45] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 69 residual: 0
6test 70 is_exact: True
6test 71 Fsum: -2.9367411693529673
6test 72 Fsum: -2.9367411693529673
6test 73 fsum: 9.191493405335026e-08
6test 74 sum4: -4.109609574810085  FAILED, KNOWN, expected 9.191493405335026e-08
6test 75 pow(4): fsums.Fsum 'pow'[51] (7.13747e-29, 4.34154e-45)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[66] (7.13747e-29, 1.77479e-45)
6test 76 pow(1): fsums.Fsum 'pow'[44] (9.19149e-08, -2.21139e-24)  FAILED, KNOWN, expected fsums.Fsum[44] (9.19149e-08, -2.21139e-24)
6test 77 pow(0): fsums.Fsum 'pow'[44] (1.0, 0)
6test 78 ceil: True
6test 79 floor: True
6test 80 divmod: fsums.Fsum[46] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 81 residual: 0
6test 82 is_exact: True
6test 83 Fsum: 9.191493405335026e-08
6test 84 Fsum: 9.191493405335026e-08
6test 85 fsum: 7.983122859178864e-13
6test 86 sum5: -3.885337784451458e+84  FAILED, KNOWN, expected 7.983122859178864e-13
6test 87 pow(4): fsums.Fsum 'pow'[56] (4.06154e-49, 1.76491e-65)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[122] (4.06154e-49, 2.11569e-67)
6test 88 pow(1): fsums.Fsum 'pow'[50] (7.98312e-13, 2.88632e-29)  FAILED, KNOWN, expected fsums.Fsum[50] (7.98312e-13, 2.88632e-29)
6test 89 pow(0): fsums.Fsum 'pow'[50] (1.0, 0)
6test 90 ceil: True
6test 91 floor: True
6test 92 divmod: fsums.Fsum[54] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 93 residual: 0
6test 94 is_exact: True
6test 95 Fsum: 7.983122859178864e-13
6test 96 Fsum: 7.983122859178864e-13
6test 97 fsum: 0.2967602677088284
6test 98 sum6: 0.0  FAILED, KNOWN, expected 0.2967602677088284
6test 99 pow(4): fsums.Fsum 'pow'[79] (0.00775574, -2.57771e-20)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[160] (0.00775574, 1.66799e-19)
6test 100 pow(1): fsums.Fsum 'pow'[56] (0.29676, 2.31356e-17)  FAILED, KNOWN, expected fsums.Fsum[56] (0.29676, 2.31356e-17)
6test 101 pow(0): fsums.Fsum 'pow'[56] (1.0, 0)
6test 102 ceil: True
6test 103 floor: True
6test 104 divmod: fsums.Fsum[60] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 105 residual: 0
6test 106 is_exact: True
6test 107 Fsum: 0.2967602677088284
6test 108 Fsum: 0.2967602677088284
6test 109 fsum: 8.599173491609102e-13
6test 110 sum7: -3.885337784451458e+84  FAILED, KNOWN, expected 8.599173491609102e-13
6test 111 pow(4): fsums.Fsum 'pow'[70] (5.46798e-49, 4.79143e-68)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[98] (5.46798e-49, 4.79143e-68)
6test 112 pow(1): fsums.Fsum 'pow'[62] (8.59917e-13, 1.8838e-32)  FAILED, KNOWN, expected fsums.Fsum[62] (8.59917e-13, 1.8838e-32)
6test 113 pow(0): fsums.Fsum 'pow'[62] (1.0, 0)
6test 114 ceil: True
6test 115 floor: True
6test 116 divmod: fsums.Fsum[65] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 117 residual: 0
6test 118 is_exact: True
6test 119 Fsum: 8.599173491609102e-13
6test 120 Fsum: 8.599173491609102e-13
6test 121 fsum: 0.000902270315357984
6test 122 sum8: 3.885337784451458e+84  FAILED, KNOWN, expected 0.000902270315357984
6test 123 pow(4): fsums.Fsum 'pow'[86] (6.62745e-13, 2.20404e-29)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[119] (6.62745e-13, 7.26153e-30)
6test 124 pow(1): fsums.Fsum 'pow'[68] (0.00090227, 3.18083e-20)  FAILED, KNOWN, expected fsums.Fsum[68] (0.00090227, 3.18083e-20)
6test 125 pow(0): fsums.Fsum 'pow'[68] (1.0, 0)
6test 126 ceil: True
6test 127 floor: True
6test 128 divmod: fsums.Fsum[71] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 129 residual: 0
6test 130 is_exact: True
6test 131 Fsum: 0.000902270315357984
6test 132 Fsum: 0.000902270315357984
6test 133 fsum: -0.022659280984852398
6test 134 sum9: -3.885337784451458e+84  FAILED, KNOWN, expected -0.022659280984852398
6test 135 pow(4): fsums.Fsum 'pow'[99] (2.63624e-07, -5.32296e-24)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[146] (2.63624e-07, -5.32296e-24)
6test 136 pow(1): fsums.Fsum 'pow'[74] (-0.0226593, 1.14381e-19)  FAILED, KNOWN, expected fsums.Fsum[74] (-0.0226593, 1.14381e-19)
6test 137 pow(0): fsums.Fsum 'pow'[74] (1.0, 0)
6test 138 ceil: True
6test 139 floor: True
6test 140 divmod: fsums.Fsum[78] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 141 residual: 0
6test 142 is_exact: True
6test 143 Fsum: -0.022659280984852398
6test 144 Fsum: -0.022659280984852398
6test 145 fsum: -8.512096670107584e-10
6test 146 sum10: -3.885337784451458e+84  FAILED, KNOWN, expected -8.512096670107584e-10
6test 147 pow(4): fsums.Fsum 'pow'[95] (5.24984e-37, -3.1806e-53)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[122] (5.24984e-37, -1.80545e-53)
6test 148 pow(1): fsums.Fsum 'pow'[80] (-8.5121e-10, 3.56006e-26)  FAILED, KNOWN, expected fsums.Fsum[80] (-8.5121e-10, 3.56006e-26)
6test 149 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 150 ceil: True
6test 151 floor: True
6test 152 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 153 residual: 0
6test 154 is_exact: True
6test 155 Fsum: -8.512096670107584e-10
6test 156 Fsum: -8.512096670107584e-10
6test 157 fsum: 0.7607488890355719
6test 158 sum11: -3.885337784451458e+84  FAILED, KNOWN, expected 0.7607488890355719
6test 159 pow(4): fsums.Fsum 'pow'[103] (0.334939, 5.48051e-18)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[192] (0.334939, 1.87616e-17)
6test 160 pow(1): fsums.Fsum 'pow'[80] (0.760749, 3.46327e-17)  FAILED, KNOWN, expected fsums.Fsum[80] (0.760749, 3.46327e-17)
6test 161 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 162 ceil: True
6test 163 floor: True
6test 164 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 165 residual: 0
6test 166 is_exact: True
6test 167 Fsum: 0.7607488890355719
6test 168 Fsum: 0.7607488890355719
6test 169 fsum: 0.010178177578054065
6test 170 sum12: -3.885337784451458e+84  FAILED, KNOWN, expected 0.010178177578054065
6test 171 pow(4): fsums.Fsum 'pow'[98] (1.0732e-08, 5.09587e-25)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[137] (1.0732e-08, 2.59204e-25)
6test 172 pow(1): fsums.Fsum 'pow'[80] (0.0101782, 3.94339e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0101782, 3.94339e-19)
6test 173 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 174 ceil: True
6test 175 floor: True
6test 176 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 177 residual: 0
6test 178 is_exact: True
6test 179 Fsum: 0.010178177578054065
6test 180 Fsum: 0.010178177578054065
6test 181 fsum: 2.8472920972199835e-10
6test 182 sum13: -3.885337784451458e+84  FAILED, KNOWN, expected 2.8472920972199835e-10
6test 183 pow(4): fsums.Fsum 'pow'[90] (6.57246e-39, 4.6532e-55)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[122] (6.57246e-39, -5.10534e-55)
6test 184 pow(1): fsums.Fsum 'pow'[80] (2.84729e-10, -1.60981e-26)  FAILED, KNOWN, expected fsums.Fsum[80] (2.84729e-10, -1.60981e-26)
6test 185 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 186 ceil: True
6test 187 floor: True
6test 188 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 189 residual: 0
6test 190 is_exact: True
6test 191 Fsum: 2.8472920972199835e-10
6test 192 Fsum: 2.8472920972199835e-10
6test 193 fsum: -1.7902951989632558e-10
6test 194 sum14: 3.885337784451458e+84  FAILED, KNOWN, expected -1.7902951989632558e-10
6test 195 pow(4): fsums.Fsum 'pow'[92] (1.0273e-39, -1.14346e-57)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[131] (1.0273e-39, -3.09142e-56)
6test 196 pow(1): fsums.Fsum 'pow'[80] (-1.7903e-10, 9.75125e-27)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.7903e-10, 9.75125e-27)
6test 197 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 198 ceil: True
6test 199 floor: True
6test 200 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 201 residual: 0
6test 202 is_exact: True
6test 203 Fsum: -1.7902951989632558e-10
6test 204 Fsum: -1.7902951989632558e-10
6test 205 fsum: 0.440417076925256
6test 206 sum15: 3.885337784451458e+84  FAILED, KNOWN, expected 0.440417076925256
6test 207 pow(4): fsums.Fsum 'pow'[97] (0.0376233, 3.13429e-18)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[143] (0.0376233, 3.13429e-18)
6test 208 pow(1): fsums.Fsum 'pow'[80] (0.440417, -1.11342e-17)  FAILED, KNOWN, expected fsums.Fsum[80] (0.440417, -1.11342e-17)
6test 209 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 210 ceil: True
6test 211 floor: True
6test 212 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 213 residual: 0
6test 214 is_exact: True
6test 215 Fsum: 0.440417076925256
6test 216 Fsum: 0.440417076925256
6test 217 fsum: -8.548843110459774e-07
6test 218 sum16: -5.138289146752083  FAILED, KNOWN, expected -8.548843110459774e-07
6test 219 pow(4): fsums.Fsum 'pow'[94] (5.34108e-25, -1.822e-41)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (5.34108e-25, -3.62608e-41)
6test 220 pow(1): fsums.Fsum 'pow'[80] (-8.54884e-07, -5.17666e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (-8.54884e-07, -5.17666e-23)
6test 221 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 222 ceil: True
6test 223 floor: True
6test 224 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 225 residual: 0
6test 226 is_exact: True
6test 227 Fsum: -8.548843110459774e-07
6test 228 Fsum: -8.548843110459774e-07
6test 229 fsum: -3.2061614734339166e-08
6test 230 sum17: 3.885337784451458e+84  FAILED, KNOWN, expected -3.2061614734339166e-08
6test 231 pow(4): fsums.Fsum 'pow'[91] (1.05668e-30, -2.17994e-47)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[128] (1.05668e-30, -3.6085e-47)
6test 232 pow(1): fsums.Fsum 'pow'[80] (-3.20616e-08, 3.24093e-24)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.20616e-08, 3.24093e-24)
6test 233 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 234 ceil: True
6test 235 floor: True
6test 236 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 237 residual: 0
6test 238 is_exact: True
6test 239 Fsum: -3.2061614734339166e-08
6test 240 Fsum: -3.2061614734339166e-08
6test 241 fsum: -3.3226132980942264e-08
6test 242 sum18: -7.0  FAILED, KNOWN, expected -3.3226132980942264e-08
6test 243 pow(4): fsums.Fsum 'pow'[92] (1.21876e-30, -1.81513e-47)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[128] (1.21876e-30, -4.05865e-47)
6test 244 pow(1): fsums.Fsum 'pow'[80] (-3.32261e-08, 3.09148e-24)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.32261e-08, 3.09148e-24)
6test 245 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 246 ceil: True
6test 247 floor: True
6test 248 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 249 residual: 0
6test 250 is_exact: True
6test 251 Fsum: -3.3226132980942264e-08
6test 252 Fsum: -3.3226132980942264e-08
6test 253 fsum: 5.1039894704144794e-05
6test 254 sum19: -3.885337784451458e+84  FAILED, KNOWN, expected 5.1039894704144794e-05
6test 255 pow(4): fsums.Fsum 'pow'[99] (6.78639e-18, 8.63669e-36)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[137] (6.78639e-18, 8.63669e-36)
6test 256 pow(1): fsums.Fsum 'pow'[80] (5.10399e-05, 1.6239e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (5.10399e-05, 1.6239e-23)
6test 257 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 258 ceil: True
6test 259 floor: True
6test 260 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 261 residual: 0
6test 262 is_exact: True
6test 263 Fsum: 5.1039894704144794e-05
6test 264 Fsum: 5.1039894704144794e-05
6test 265 fsum: -0.24397464217888246
6test 266 sum20: 3.885337784451458e+84  FAILED, KNOWN, expected -0.24397464217888246
6test 267 pow(4): fsums.Fsum 'pow'[111] (0.00354306, 4.64706e-20)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[200] (0.00354306, 4.64706e-20)
6test 268 pow(1): fsums.Fsum 'pow'[80] (-0.243975, -7.9999e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.243975, -7.9999e-19)
6test 269 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 270 ceil: True
6test 271 floor: True
6test 272 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 273 residual: 0
6test 274 is_exact: True
6test 275 Fsum: -0.24397464217888246
6test 276 Fsum: -0.24397464217888246
6test 277 fsum: -1.6623134182700686e-07
6test 278 sum21: 3.885337784451458e+84  FAILED, KNOWN, expected -1.6623134182700686e-07
6test 279 pow(4): fsums.Fsum 'pow'[86] (7.63575e-28, 4.36711e-44)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[102] (7.63575e-28, 4.36711e-44)
6test 280 pow(1): fsums.Fsum 'pow'[80] (-1.66231e-07, 2.50422e-24)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.66231e-07, 2.50422e-24)
6test 281 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 282 ceil: True
6test 283 floor: True
6test 284 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 285 residual: 0
6test 286 is_exact: True
6test 287 Fsum: -1.6623134182700686e-07
6test 288 Fsum: -1.6623134182700686e-07
6test 289 fsum: 3.1554875655060606
6test 290 sum22: 7.000002466836303  FAILED, KNOWN, expected 3.1554875655060606
6test 291 pow(4): fsums.Fsum 'pow'[110] (99.1439, 2.75307e-15)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[245] (99.1439, 6.22958e-15)
6test 292 pow(1): fsums.Fsum 'pow'[80] (3.15549, 1.90303e-16)  FAILED, KNOWN, expected fsums.Fsum[80] (3.15549, 1.90303e-16)
6test 293 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 294 ceil: True
6test 295 floor: True
6test 296 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 297 residual: 0
6test 298 is_exact: True
6test 299 Fsum: 3.1554875655060606
6test 300 Fsum: 3.1554875655060606
6test 301 fsum: -0.009376490656433931
6test 302 sum23: -3.885337784451458e+84  FAILED, KNOWN, expected -0.009376490656433931
6test 303 pow(4): fsums.Fsum 'pow'[104] (7.72968e-09, -2.55145e-25)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[168] (7.72968e-09, -4.5389e-25)
6test 304 pow(1): fsums.Fsum 'pow'[80] (-0.00937649, 8.00063e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.00937649, 8.00063e-19)
6test 305 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 306 ceil: True
6test 307 floor: True
6test 308 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 309 residual: 0
6test 310 is_exact: True
6test 311 Fsum: -0.009376490656433931
6test 312 Fsum: -0.009376490656433931
6test 313 fsum: 0.0024886639904732506
6test 314 sum24: 3.885337784451458e+84  FAILED, KNOWN, expected 0.0024886639904732506
6test 315 pow(4): fsums.Fsum 'pow'[94] (3.83588e-11, 1.75922e-27)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (3.83588e-11, 1.75922e-27)
6test 316 pow(1): fsums.Fsum 'pow'[80] (0.00248866, -7.62831e-20)  FAILED, KNOWN, expected fsums.Fsum[80] (0.00248866, -7.62831e-20)
6test 317 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 318 ceil: True
6test 319 floor: True
6test 320 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 321 residual: 0
6test 322 is_exact: True
6test 323 Fsum: 0.0024886639904732506
6test 324 Fsum: 0.0024886639904732506
6test 325 fsum: 6.206586317938853e-09
6test 326 sum25: 3.885337784451458e+84  FAILED, KNOWN, expected 6.206586317938853e-09
6test 327 pow(4): fsums.Fsum 'pow'[87] (1.48392e-33, 2.69408e-50)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[98] (1.48392e-33, -7.77647e-50)
6test 328 pow(1): fsums.Fsum 'pow'[80] (6.20659e-09, 3.45793e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (6.20659e-09, 3.45793e-25)
6test 329 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 330 ceil: True
6test 331 floor: True
6test 332 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 333 residual: 0
6test 334 is_exact: True
6test 335 Fsum: 6.206586317938853e-09
6test 336 Fsum: 6.206586317938853e-09
6test 337 fsum: -2.3159520437040817e-05
6test 338 sum26: -3.885337784451458e+84  FAILED, KNOWN, expected -2.3159520437040817e-05
6test 339 pow(4): fsums.Fsum 'pow'[87] (2.87686e-19, 1.90729e-35)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[102] (2.87686e-19, 7.46392e-36)
6test 340 pow(1): fsums.Fsum 'pow'[80] (-2.31595e-05, 5.85162e-22)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.31595e-05, 5.85162e-22)
6test 341 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 342 ceil: True
6test 343 floor: True
6test 344 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 345 residual: 0
6test 346 is_exact: True
6test 347 Fsum: -2.3159520437040817e-05
6test 348 Fsum: -2.3159520437040817e-05
6test 349 fsum: 3.131296024762666e-05
6test 350 sum27: 3.885337784451458e+84  FAILED, KNOWN, expected 3.131296024762666e-05
6test 351 pow(4): fsums.Fsum 'pow'[100] (9.61383e-19, 3.45743e-36)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[140] (9.61383e-19, 8.477e-36)
6test 352 pow(1): fsums.Fsum 'pow'[80] (3.1313e-05, -1.54007e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (3.1313e-05, -1.54007e-21)
6test 353 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 354 ceil: True
6test 355 floor: True
6test 356 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 357 residual: 0
6test 358 is_exact: True
6test 359 Fsum: 3.131296024762666e-05
6test 360 Fsum: 3.131296024762666e-05
6test 361 fsum: -0.005087488714958041
6test 362 sum28: 3.885337784451458e+84  FAILED, KNOWN, expected -0.005087488714958041
6test 363 pow(4): fsums.Fsum 'pow'[95] (6.69906e-10, 3.86984e-26)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[128] (6.69906e-10, -4.89951e-26)
6test 364 pow(1): fsums.Fsum 'pow'[80] (-0.00508749, 2.59515e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.00508749, 2.59515e-19)
6test 365 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 366 ceil: True
6test 367 floor: True
6test 368 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 369 residual: 0
6test 370 is_exact: True
6test 371 Fsum: -0.005087488714958041
6test 372 Fsum: -0.005087488714958041
6test 373 fsum: -3.0633884921157762e-06
6test 374 sum29: -3.885337784451458e+84  FAILED, KNOWN, expected -3.0633884921157762e-06
6test 375 pow(4): fsums.Fsum 'pow'[91] (8.8066e-23, 2.50023e-39)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[125] (8.8066e-23, -9.06055e-40)
6test 376 pow(1): fsums.Fsum 'pow'[80] (-3.06339e-06, 1.39726e-22)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.06339e-06, 1.39726e-22)
6test 377 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 378 ceil: True
6test 379 floor: True
6test 380 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 381 residual: 0
6test 382 is_exact: True
6test 383 Fsum: -3.0633884921157762e-06
6test 384 Fsum: -3.0633884921157762e-06
6test 385 fsum: -0.004655247500495816
6test 386 sum30: -3.885337784451458e+84  FAILED, KNOWN, expected -0.004655247500495816
6test 387 pow(4): fsums.Fsum 'pow'[87] (4.69647e-10, 5.34603e-27)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[100] (4.69647e-10, 5.34603e-27)
6test 388 pow(1): fsums.Fsum 'pow'[80] (-0.00465525, -1.32478e-20)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.00465525, -1.32478e-20)
6test 389 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 390 ceil: True
6test 391 floor: True
6test 392 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 393 residual: 0
6test 394 is_exact: True
6test 395 Fsum: -0.004655247500495816
6test 396 Fsum: -0.004655247500495816
6test 397 fsum: -0.01494456175319388
6test 398 sum31: -3.885337784451458e+84  FAILED, KNOWN, expected -0.01494456175319388
6test 399 pow(4): fsums.Fsum 'pow'[105] (4.98807e-08, 2.71581e-24)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[215] (4.98807e-08, 2.15201e-24)
6test 400 pow(1): fsums.Fsum 'pow'[80] (-0.0149446, -6.14615e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.0149446, -6.14615e-19)
6test 401 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 402 ceil: True
6test 403 floor: True
6test 404 divmod: fsums.Fsum[86] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 405 residual: 0
6test 406 is_exact: True
6test 407 Fsum: -0.01494456175319388
6test 408 Fsum: -0.01494456175319388
6test 409 fsum: 6.458262722160379e-11
6test 410 sum32: -3.885337784451458e+84  FAILED, KNOWN, expected 6.458262722160379e-11
6test 411 pow(4): fsums.Fsum 'pow'[90] (1.73965e-41, 3.07439e-58)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[125] (1.73965e-41, -2.81462e-58)
6test 412 pow(1): fsums.Fsum 'pow'[80] (6.45826e-11, -3.17345e-27)  FAILED, KNOWN, expected fsums.Fsum[80] (6.45826e-11, -3.17345e-27)
6test 413 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 414 ceil: True
6test 415 floor: True
6test 416 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 417 residual: 0
6test 418 is_exact: True
6test 419 Fsum: 6.458262722160379e-11
6test 420 Fsum: 6.458262722160379e-11
6test 421 fsum: 8.572580468815654e-07
6test 422 sum33: 0.0  FAILED, KNOWN, expected 8.572580468815654e-07
6test 423 pow(4): fsums.Fsum 'pow'[87] (5.40065e-25, -4.04158e-41)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[100] (5.40065e-25, -4.04158e-41)
6test 424 pow(1): fsums.Fsum 'pow'[80] (8.57258e-07, 2.04049e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (8.57258e-07, 2.04049e-23)
6test 425 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 426 ceil: True
6test 427 floor: True
6test 428 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 429 residual: 0
6test 430 is_exact: True
6test 431 Fsum: 8.572580468815654e-07
6test 432 Fsum: 8.572580468815654e-07
6test 433 fsum: 0.013766539836413866
6test 434 sum34: 0.0  FAILED, KNOWN, expected 0.013766539836413866
6test 435 pow(4): fsums.Fsum 'pow'[103] (3.59169e-08, 1.62854e-24)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[172] (3.59169e-08, 1.47984e-25)
6test 436 pow(1): fsums.Fsum 'pow'[80] (0.0137665, 5.06407e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0137665, 5.06407e-19)
6test 437 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 438 ceil: True
6test 439 floor: True
6test 440 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 441 residual: 0
6test 442 is_exact: True
6test 443 Fsum: 0.013766539836413866
6test 444 Fsum: 0.013766539836413866
6test 445 fsum: -2.5208038235195835e-05
6test 446 sum35: 8e-20  FAILED, KNOWN, expected -2.5208038235195835e-05
6test 447 pow(4): fsums.Fsum 'pow'[94] (4.03791e-19, -8.05412e-36)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[140] (4.03791e-19, 2.33402e-35)
6test 448 pow(1): fsums.Fsum 'pow'[80] (-2.5208e-05, 8.77157e-22)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.5208e-05, 8.77157e-22)
6test 449 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 450 ceil: True
6test 451 floor: True
6test 452 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 453 residual: 0
6test 454 is_exact: True
6test 455 Fsum: -2.5208038235195835e-05
6test 456 Fsum: -2.5208038235195835e-05
6test 457 fsum: -0.313819622767299
6test 458 sum36: 3.885337784451458e+84  FAILED, KNOWN, expected -0.313819622767299
6test 459 pow(4): fsums.Fsum 'pow'[105] (0.00969885, -8.43129e-19)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[184] (0.00969885, 5.23593e-19)
6test 460 pow(1): fsums.Fsum 'pow'[80] (-0.31382, -1.52909e-17)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.31382, -1.52909e-17)
6test 461 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 462 ceil: True
6test 463 floor: True
6test 464 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 465 residual: 0
6test 466 is_exact: True
6test 467 Fsum: -0.313819622767299
6test 468 Fsum: -0.313819622767299
6test 469 fsum: -5.059362467179911e-05
6test 470 sum37: -3.885337784451458e+84  FAILED, KNOWN, expected -5.059362467179911e-05
6test 471 pow(4): fsums.Fsum 'pow'[89] (6.55214e-18, -2.11516e-34)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[98] (6.55214e-18, 2.70555e-34)
6test 472 pow(1): fsums.Fsum 'pow'[80] (-5.05936e-05, 3.00855e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (-5.05936e-05, 3.00855e-21)
6test 473 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 474 ceil: True
6test 475 floor: True
6test 476 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 477 residual: 0
6test 478 is_exact: True
6test 479 Fsum: -5.059362467179911e-05
6test 480 Fsum: -5.059362467179911e-05
6test 481 fsum: -0.0014659527109851462
6test 482 sum38: 3.885337784451458e+84  FAILED, KNOWN, expected -0.0014659527109851462
6test 483 pow(4): fsums.Fsum 'pow'[100] (4.61828e-12, -4.31099e-29)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[160] (4.61828e-12, -1.45461e-28)
6test 484 pow(1): fsums.Fsum 'pow'[80] (-0.00146595, 8.37686e-20)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.00146595, 8.37686e-20)
6test 485 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 486 ceil: True
6test 487 floor: True
6test 488 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 489 residual: 0
6test 490 is_exact: True
6test 491 Fsum: -0.0014659527109851462
6test 492 Fsum: -0.0014659527109851462
6test 493 fsum: -1.0349304178971924e-16
6test 494 sum39: 3.885337784451458e+84  FAILED, KNOWN, expected -1.0349304178971924e-16
6test 495 pow(4): fsums.Fsum 'pow'[86] (1.14721e-64, -5.37925e-81)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[113] (1.14721e-64, -3.169e-81)
6test 496 pow(1): fsums.Fsum 'pow'[80] (-1.03493e-16, 4.02038e-33)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.03493e-16, 4.02038e-33)
6test 497 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 498 ceil: True
6test 499 floor: True
6test 500 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 501 residual: 0
6test 502 is_exact: True
6test 503 Fsum: -1.0349304178971924e-16
6test 504 Fsum: -1.0349304178971924e-16
6test 505 fsum: 0.02331957446410985
6test 506 sum40: 3.885337784451458e+84  FAILED, KNOWN, expected 0.02331957446410985
6test 507 pow(4): fsums.Fsum 'pow'[107] (2.95721e-07, -1.50461e-23)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[180] (2.95721e-07, -1.61148e-24)
6test 508 pow(1): fsums.Fsum 'pow'[80] (0.0233196, 7.47037e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0233196, 7.47037e-19)
6test 509 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 510 ceil: True
6test 511 floor: True
6test 512 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 513 residual: 0
6test 514 is_exact: True
6test 515 Fsum: 0.02331957446410985
6test 516 Fsum: 0.02331957446410985
6test 517 fsum: -2.3409460556643338e-05
6test 518 sum41: -3.885337784451458e+84  FAILED, KNOWN, expected -2.3409460556643338e-05
6test 519 pow(4): fsums.Fsum 'pow'[87] (3.00307e-19, 5.56329e-36)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[98] (3.00307e-19, 1.40772e-35)
6test 520 pow(1): fsums.Fsum 'pow'[80] (-2.34095e-05, -1.37856e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.34095e-05, -1.37856e-21)
6test 521 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 522 ceil: True
6test 523 floor: True
6test 524 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 525 residual: 0
6test 526 is_exact: True
6test 527 Fsum: -2.3409460556643338e-05
6test 528 Fsum: -2.3409460556643338e-05
6test 529 fsum: -5.660697131629262e-07
6test 530 sum42: -3.885337784451458e+84  FAILED, KNOWN, expected -5.660697131629262e-07
6test 531 pow(4): fsums.Fsum 'pow'[92] (1.02679e-25, -2.05138e-42)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[152] (1.02679e-25, -2.05138e-42)
6test 532 pow(1): fsums.Fsum 'pow'[80] (-5.6607e-07, 2.82734e-24)  FAILED, KNOWN, expected fsums.Fsum[80] (-5.6607e-07, 2.82734e-24)
6test 533 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 534 ceil: True
6test 535 floor: True
6test 536 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 537 residual: 0
6test 538 is_exact: True
6test 539 Fsum: -5.660697131629262e-07
6test 540 Fsum: -5.660697131629262e-07
6test 541 fsum: 0.036467500939619445
6test 542 sum43: 0.0  FAILED, KNOWN, expected 0.036467500939619445
6test 543 pow(4): fsums.Fsum 'pow'[95] (1.76858e-06, 6.53108e-23)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[128] (1.76858e-06, 6.53108e-23)
6test 544 pow(1): fsums.Fsum 'pow'[80] (0.0364675, 3.36672e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0364675, 3.36672e-19)
6test 545 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 546 ceil: True
6test 547 floor: True
6test 548 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 549 residual: 0
6test 550 is_exact: True
6test 551 Fsum: 0.036467500939619445
6test 552 Fsum: 0.036467500939619445
6test 553 fsum: 3.627675109043883e-08
6test 554 sum44: -17.46267480603742  FAILED, KNOWN, expected 3.627675109043883e-08
6test 555 pow(4): fsums.Fsum 'pow'[94] (1.73186e-30, 7.66809e-47)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[170] (1.73186e-30, 1.23001e-46)
6test 556 pow(1): fsums.Fsum 'pow'[80] (3.62768e-08, 3.11976e-24)  FAILED, KNOWN, expected fsums.Fsum[80] (3.62768e-08, 3.11976e-24)
6test 557 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 558 ceil: True
6test 559 floor: True
6test 560 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 561 residual: 0
6test 562 is_exact: True
6test 563 Fsum: 3.627675109043883e-08
6test 564 Fsum: 3.627675109043883e-08
6test 565 fsum: -0.16830389705257734
6test 566 sum45: 0.0  FAILED, KNOWN, expected -0.16830389705257734
6test 567 pow(4): fsums.Fsum 'pow'[95] (0.000802374, -4.94091e-20)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[137] (0.000802374, -1.70495e-21)
6test 568 pow(1): fsums.Fsum 'pow'[80] (-0.168304, 1.28981e-17)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.168304, 1.28981e-17)
6test 569 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 570 ceil: True
6test 571 floor: True
6test 572 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 573 residual: 0
6test 574 is_exact: True
6test 575 Fsum: -0.16830389705257734
6test 576 Fsum: -0.16830389705257734
6test 577 fsum: -8.934453415738882e-05
6test 578 sum46: -8.934453415676558e-05  FAILED, KNOWN, expected -8.934453415738882e-05
6test 579 pow(4): fsums.Fsum 'pow'[98] (6.37194e-17, 4.16262e-33)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (6.37194e-17, 8.58163e-34)
6test 580 pow(1): fsums.Fsum 'pow'[80] (-8.93445e-05, 2.86156e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (-8.93445e-05, 2.86156e-21)
6test 581 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 582 ceil: True
6test 583 floor: True
6test 584 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 585 residual: 0
6test 586 is_exact: True
6test 587 Fsum: -8.934453415738882e-05
6test 588 Fsum: -8.934453415738882e-05
6test 589 fsum: 5.5005629137163555e-05
6test 590 sum47: 25.558565000734834  FAILED, KNOWN, expected 5.5005629137163555e-05
6test 591 pow(4): fsums.Fsum 'pow'[98] (9.15437e-18, 3.19208e-34)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[156] (9.15437e-18, 2.9831e-35)
6test 592 pow(1): fsums.Fsum 'pow'[80] (5.50056e-05, 1.92457e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (5.50056e-05, 1.92457e-21)
6test 593 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 594 ceil: True
6test 595 floor: True
6test 596 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 597 residual: 0
6test 598 is_exact: True
6test 599 Fsum: 5.5005629137163555e-05
6test 600 Fsum: 5.5005629137163555e-05
6test 601 fsum: -6.423367085581908e-05
6test 602 sum48: -3.885337784451458e+84  FAILED, KNOWN, expected -6.423367085581908e-05
6test 603 pow(4): fsums.Fsum 'pow'[95] (1.70236e-17, -1.87837e-35)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[125] (1.70236e-17, -3.50214e-34)
6test 604 pow(1): fsums.Fsum 'pow'[80] (-6.42337e-05, 3.54978e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (-6.42337e-05, 3.54978e-21)
6test 605 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 606 ceil: True
6test 607 floor: True
6test 608 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 609 residual: 0
6test 610 is_exact: True
6test 611 Fsum: -6.423367085581908e-05
6test 612 Fsum: -6.423367085581908e-05
6test 613 fsum: -0.16794898666547792
6test 614 sum49: 2.9625957616440557  FAILED, KNOWN, expected -0.16794898666547792
6test 615 pow(4): fsums.Fsum 'pow'[104] (0.000795627, -2.26823e-20)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[176] (0.000795627, -1.21243e-20)
6test 616 pow(1): fsums.Fsum 'pow'[80] (-0.167949, 5.80427e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.167949, 5.80427e-18)
6test 617 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 618 ceil: True
6test 619 floor: True
6test 620 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 621 residual: 0
6test 622 is_exact: True
6test 623 Fsum: -0.16794898666547792
6test 624 Fsum: -0.16794898666547792
6test 625 fsum: -0.9326682333207479
6test 626 sum50: -3.885337784451458e+84  FAILED, KNOWN, expected -0.9326682333207479
6test 627 pow(4): fsums.Fsum 'pow'[105] (0.756674, -7.01369e-18)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[225] (0.756674, -7.01369e-18)
6test 628 pow(1): fsums.Fsum 'pow'[80] (-0.932668, 2.16125e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.932668, 2.16125e-18)
6test 629 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 630 ceil: True
6test 631 floor: True
6test 632 divmod: fsums.Fsum[86] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 633 residual: 0
6test 634 is_exact: True
6test 635 Fsum: -0.9326682333207479
6test 636 Fsum: -0.9326682333207479
6test 637 fsum: -2.1361469467998795e-12
6test 638 sum51: 3.885337784451458e+84  FAILED, KNOWN, expected -2.1361469467998795e-12
6test 639 pow(4): fsums.Fsum 'pow'[87] (2.08221e-47, 1.8011e-64)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[119] (2.08221e-47, 6.03954e-64)
6test 640 pow(1): fsums.Fsum 'pow'[80] (-2.13615e-12, 5.77265e-29)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.13615e-12, 5.77265e-29)
6test 641 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 642 ceil: True
6test 643 floor: True
6test 644 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 645 residual: 0
6test 646 is_exact: True
6test 647 Fsum: -2.1361469467998795e-12
6test 648 Fsum: -2.1361469467998795e-12
6test 649 fsum: -0.0014834014169806346
6test 650 sum52: 3.885337784451458e+84  FAILED, KNOWN, expected -0.0014834014169806346
6test 651 pow(4): fsums.Fsum 'pow'[98] (4.84211e-12, -5.09712e-29)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[146] (4.84211e-12, -5.09712e-29)
6test 652 pow(1): fsums.Fsum 'pow'[80] (-0.0014834, 3.90381e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.0014834, 3.90381e-21)
6test 653 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 654 ceil: True
6test 655 floor: True
6test 656 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 657 residual: 0
6test 658 is_exact: True
6test 659 Fsum: -0.0014834014169806346
6test 660 Fsum: -0.0014834014169806346
6test 661 fsum: 7.545756786055732e-09
6test 662 sum53: 3.885337784451458e+84  FAILED, KNOWN, expected 7.545756786055732e-09
6test 663 pow(4): fsums.Fsum 'pow'[88] (3.24199e-33, -1.07887e-49)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[122] (3.24199e-33, -1.25479e-49)
6test 664 pow(1): fsums.Fsum 'pow'[80] (7.54576e-09, -4.81387e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (7.54576e-09, -4.81387e-25)
6test 665 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 666 ceil: True
6test 667 floor: True
6test 668 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 669 residual: 0
6test 670 is_exact: True
6test 671 Fsum: 7.545756786055732e-09
6test 672 Fsum: 7.545756786055732e-09
6test 673 fsum: -0.00010751032151039877
6test 674 sum54: -3.885337784451458e+84  FAILED, KNOWN, expected -0.00010751032151039877
6test 675 pow(4): fsums.Fsum 'pow'[87] (1.33598e-16, -9.66684e-33)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[102] (1.33598e-16, -6.72647e-33)
6test 676 pow(1): fsums.Fsum 'pow'[80] (-0.00010751, -3.01473e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.00010751, -3.01473e-21)
6test 677 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 678 ceil: True
6test 679 floor: True
6test 680 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 681 residual: 0
6test 682 is_exact: True
6test 683 Fsum: -0.00010751032151039877
6test 684 Fsum: -0.00010751032151039877
6test 685 fsum: -1.3781536465412346e-08
6test 686 sum55: 0.0  FAILED, KNOWN, expected -1.3781536465412346e-08
6test 687 pow(4): fsums.Fsum 'pow'[95] (3.60737e-32, 1.25114e-48)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[144] (3.60737e-32, 1.25114e-48)
6test 688 pow(1): fsums.Fsum 'pow'[80] (-1.37815e-08, -1.19496e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.37815e-08, -1.19496e-25)
6test 689 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 690 ceil: True
6test 691 floor: True
6test 692 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 693 residual: 0
6test 694 is_exact: True
6test 695 Fsum: -1.3781536465412346e-08
6test 696 Fsum: -1.3781536465412346e-08
6test 697 fsum: 143.4574210325158
6test 698 sum56: 3.885337784451458e+84  FAILED, KNOWN, expected 143.4574210325158
6test 699 pow(4): fsums.Fsum 'pow'[117] (4.23538e+08, 2.50071e-08)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[367] (4.23538e+08, 9.74206e-09)
6test 700 pow(1): fsums.Fsum 'pow'[80] (143.457, -1.05621e-14)  FAILED, KNOWN, expected fsums.Fsum[80] (143.457, -1.05621e-14)
6test 701 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 702 ceil: True
6test 703 floor: True
6test 704 divmod: fsums.Fsum[87] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 705 residual: 0
6test 706 is_exact: True
6test 707 Fsum: 143.4574210325158
6test 708 Fsum: 143.4574210325158
6test 709 fsum: -0.27841219148647567
6test 710 sum57: -3.885337784451458e+84  FAILED, KNOWN, expected -0.27841219148647567
6test 711 pow(4): fsums.Fsum 'pow'[103] (0.00600832, -1.16313e-19)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[143] (0.00600832, -1.16313e-19)
6test 712 pow(1): fsums.Fsum 'pow'[80] (-0.278412, 1.34743e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.278412, 1.34743e-18)
6test 713 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 714 ceil: True
6test 715 floor: True
6test 716 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 717 residual: 0
6test 718 is_exact: True
6test 719 Fsum: -0.27841219148647567
6test 720 Fsum: -0.27841219148647567
6test 721 fsum: 3.734020126008672e-05
6test 722 sum58: -3.885337784451458e+84  FAILED, KNOWN, expected 3.734020126008672e-05
6test 723 pow(4): fsums.Fsum 'pow'[89] (1.94405e-18, 1.21077e-34)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[98] (1.94405e-18, -1.67255e-34)
6test 724 pow(1): fsums.Fsum 'pow'[80] (3.73402e-05, -2.18767e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (3.73402e-05, -2.18767e-21)
6test 725 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 726 ceil: True
6test 727 floor: True
6test 728 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 729 residual: 0
6test 730 is_exact: True
6test 731 Fsum: 3.734020126008672e-05
6test 732 Fsum: 3.734020126008672e-05
6test 733 fsum: -0.0003477448302738172
6test 734 sum59: 7.006734874471409  FAILED, KNOWN, expected -0.0003477448302738172
6test 735 pow(4): fsums.Fsum 'pow'[97] (1.46232e-14, 7.52242e-31)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (1.46232e-14, 7.52242e-31)
6test 736 pow(1): fsums.Fsum 'pow'[80] (-0.000347745, -4.47214e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.000347745, -4.47214e-21)
6test 737 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 738 ceil: True
6test 739 floor: True
6test 740 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 741 residual: 0
6test 742 is_exact: True
6test 743 Fsum: -0.0003477448302738172
6test 744 Fsum: -0.0003477448302738172
6test 745 fsum: 0.00036876775019921095
6test 746 sum60: 3.885337784451458e+84  FAILED, KNOWN, expected 0.00036876775019921095
6test 747 pow(4): fsums.Fsum 'pow'[88] (1.84932e-14, -7.86755e-31)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[98] (1.84932e-14, -1.44171e-32)
6test 748 pow(1): fsums.Fsum 'pow'[80] (0.000368768, 1.18083e-20)  FAILED, KNOWN, expected fsums.Fsum[80] (0.000368768, 1.18083e-20)
6test 749 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 750 ceil: True
6test 751 floor: True
6test 752 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 753 residual: 0
6test 754 is_exact: True
6test 755 Fsum: 0.00036876775019921095
6test 756 Fsum: 0.00036876775019921095
6test 757 fsum: -0.012034168759839406
6test 758 sum61: -0.09182887299376528  FAILED, KNOWN, expected -0.012034168759839406
6test 759 pow(4): fsums.Fsum 'pow'[100] (2.09732e-08, 1.32783e-24)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[140] (2.09732e-08, 1.32783e-24)
6test 760 pow(1): fsums.Fsum 'pow'[80] (-0.0120342, -1.90474e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.0120342, -1.90474e-19)
6test 761 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 762 ceil: True
6test 763 floor: True
6test 764 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 765 residual: 0
6test 766 is_exact: True
6test 767 Fsum: -0.012034168759839406
6test 768 Fsum: -0.012034168759839406
6test 769 fsum: 0.2723511522345822
6test 770 sum62: 0.0  FAILED, KNOWN, expected 0.2723511522345822
6test 771 pow(4): fsums.Fsum 'pow'[106] (0.00550195, -7.04412e-20)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[188] (0.00550195, -1.5492e-19)
6test 772 pow(1): fsums.Fsum 'pow'[80] (0.272351, -2.63495e-17)  FAILED, KNOWN, expected fsums.Fsum[80] (0.272351, -2.63495e-17)
6test 773 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 774 ceil: True
6test 775 floor: True
6test 776 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 777 residual: 0
6test 778 is_exact: True
6test 779 Fsum: 0.2723511522345822
6test 780 Fsum: 0.2723511522345822
6test 781 fsum: 3.469650027066616e-09
6test 782 sum63: 8e-20  FAILED, KNOWN, expected 3.469650027066616e-09
6test 783 pow(4): fsums.Fsum 'pow'[91] (1.44925e-34, 7.50914e-51)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[144] (1.44925e-34, 4.67522e-51)
6test 784 pow(1): fsums.Fsum 'pow'[80] (3.46965e-09, 1.38998e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (3.46965e-09, 1.38998e-25)
6test 785 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 786 ceil: True
6test 787 floor: True
6test 788 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 789 residual: 0
6test 790 is_exact: True
6test 791 Fsum: 3.469650027066616e-09
6test 792 Fsum: 3.469650027066616e-09
6test 793 fsum: -5.045816929048236e-09
6test 794 sum64: 3.885337784451458e+84  FAILED, KNOWN, expected -5.045816929048236e-09
6test 795 pow(4): fsums.Fsum 'pow'[91] (6.48225e-34, -2.07823e-50)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[122] (6.48225e-34, -1.37093e-50)
6test 796 pow(1): fsums.Fsum 'pow'[80] (-5.04582e-09, 3.45793e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (-5.04582e-09, 3.45793e-25)
6test 797 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 798 ceil: True
6test 799 floor: True
6test 800 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 801 residual: 0
6test 802 is_exact: True
6test 803 Fsum: -5.045816929048236e-09
6test 804 Fsum: -5.045816929048236e-09
6test 805 fsum: -0.13290283253584737
6test 806 sum65: 0.0024850737028117957  FAILED, KNOWN, expected -0.13290283253584737
6test 807 pow(4): fsums.Fsum 'pow'[100] (0.000311987, -1.97753e-20)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[168] (0.000311987, -2.68466e-20)
6test 808 pow(1): fsums.Fsum 'pow'[80] (-0.132903, 9.38537e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.132903, 9.38537e-18)
6test 809 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 810 ceil: True
6test 811 floor: True
6test 812 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 813 residual: 0
6test 814 is_exact: True
6test 815 Fsum: -0.13290283253584737
6test 816 Fsum: -0.13290283253584737
6test 817 fsum: -3.0755446584234275e-08
6test 818 sum66: 3.885337784451458e+84  FAILED, KNOWN, expected -3.0755446584234275e-08
6test 819 pow(4): fsums.Fsum 'pow'[92] (8.94722e-31, -5.22706e-47)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[125] (8.94722e-31, -5.22706e-47)
6test 820 pow(1): fsums.Fsum 'pow'[80] (-3.07554e-08, 4.49191e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.07554e-08, 4.49191e-25)
6test 821 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 822 ceil: True
6test 823 floor: True
6test 824 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 825 residual: 0
6test 826 is_exact: True
6test 827 Fsum: -3.0755446584234275e-08
6test 828 Fsum: -3.0755446584234275e-08
6test 829 fsum: -1.8867940563670145
6test 830 sum67: -3.885337784451458e+84  FAILED, KNOWN, expected -1.8867940563670145
6test 831 pow(4): fsums.Fsum 'pow'[113] (12.6735, -1.74464e-16)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[235] (12.6735, -3.69867e-16)
6test 832 pow(1): fsums.Fsum 'pow'[80] (-1.88679, 1.10854e-16)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.88679, 1.10854e-16)
6test 833 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 834 ceil: True
6test 835 floor: True
6test 836 divmod: fsums.Fsum[86] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 837 residual: 0
6test 838 is_exact: True
6test 839 Fsum: -1.8867940563670145
6test 840 Fsum: -1.8867940563670145
6test 841 fsum: -1.058139094655089
6test 842 sum68: 3.885337784451458e+84  FAILED, KNOWN, expected -1.058139094655089
6test 843 pow(4): fsums.Fsum 'pow'[106] (1.25363, 1.28413e-17)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[184] (1.25363, -1.37282e-17)
6test 844 pow(1): fsums.Fsum 'pow'[80] (-1.05814, 1.02213e-16)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.05814, 1.02213e-16)
6test 845 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 846 ceil: True
6test 847 floor: True
6test 848 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 849 residual: 0
6test 850 is_exact: True
6test 851 Fsum: -1.058139094655089
6test 852 Fsum: -1.058139094655089
6test 853 fsum: -1.2965156428504658e-07
6test 854 sum69: 3.885337784451458e+84  FAILED, KNOWN, expected -1.2965156428504658e-07
6test 855 pow(4): fsums.Fsum 'pow'[91] (2.8256e-28, 2.14945e-44)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[131] (2.8256e-28, 1.32945e-44)
6test 856 pow(1): fsums.Fsum 'pow'[80] (-1.29652e-07, 9.70327e-24)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.29652e-07, 9.70327e-24)
6test 857 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 858 ceil: True
6test 859 floor: True
6test 860 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 861 residual: 0
6test 862 is_exact: True
6test 863 Fsum: -1.2965156428504658e-07
6test 864 Fsum: -1.2965156428504658e-07
6test 865 fsum: -3.075937303214353e-09
6test 866 sum70: -6.172030971927082e-10  FAILED, KNOWN, expected -3.075937303214353e-09
6test 867 pow(4): fsums.Fsum 'pow'[88] (8.95179e-35, 1.87399e-51)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[125] (8.95179e-35, 1.87399e-51)
6test 868 pow(1): fsums.Fsum 'pow'[80] (-3.07594e-09, -1.60981e-26)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.07594e-09, -1.60981e-26)
6test 869 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 870 ceil: True
6test 871 floor: True
6test 872 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 873 residual: 0
6test 874 is_exact: True
6test 875 Fsum: -3.075937303214353e-09
6test 876 Fsum: -3.075937303214353e-09
6test 877 fsum: 8.070988200024818e-07
6test 878 sum71: -3.885337784451458e+84  FAILED, KNOWN, expected 8.070988200024818e-07
6test 879 pow(4): fsums.Fsum 'pow'[91] (4.24333e-25, 2.61647e-41)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[125] (4.24333e-25, -3.96108e-41)
6test 880 pow(1): fsums.Fsum 'pow'[80] (8.07099e-07, -5.01122e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (8.07099e-07, -5.01122e-23)
6test 881 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 882 ceil: True
6test 883 floor: True
6test 884 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 885 residual: 0
6test 886 is_exact: True
6test 887 Fsum: 8.070988200024818e-07
6test 888 Fsum: 8.070988200024818e-07
6test 889 fsum: -0.06931948501004027
6test 890 sum72: -3.885337784451458e+84  FAILED, KNOWN, expected -0.06931948501004027
6test 891 pow(4): fsums.Fsum 'pow'[94] (2.30899e-05, 3.84181e-22)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[128] (2.30899e-05, 1.16389e-21)
6test 892 pow(1): fsums.Fsum 'pow'[80] (-0.0693195, -4.00168e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.0693195, -4.00168e-18)
6test 893 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 894 ceil: True
6test 895 floor: True
6test 896 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 897 residual: 0
6test 898 is_exact: True
6test 899 Fsum: -0.06931948501004027
6test 900 Fsum: -0.06931948501004027
6test 901 fsum: 0.0006044518733088537
6test 902 sum73: 3.885337784451458e+84  FAILED, KNOWN, expected 0.0006044518733088537
6test 903 pow(4): fsums.Fsum 'pow'[100] (1.33489e-13, -6.73173e-30)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[146] (1.33489e-13, -6.73173e-30)
6test 904 pow(1): fsums.Fsum 'pow'[80] (0.000604452, -7.62047e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (0.000604452, -7.62047e-21)
6test 905 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 906 ceil: True
6test 907 floor: True
6test 908 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 909 residual: 0
6test 910 is_exact: True
6test 911 Fsum: 0.0006044518733088537
6test 912 Fsum: 0.0006044518733088537
6test 913 fsum: -0.00532395616006846
6test 914 sum74: -0.012982218490897911  FAILED, KNOWN, expected -0.00532395616006846
6test 915 pow(4): fsums.Fsum 'pow'[95] (8.03411e-10, 3.72401e-26)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[137] (8.03411e-10, -7.64892e-27)
6test 916 pow(1): fsums.Fsum 'pow'[80] (-0.00532396, -3.79891e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.00532396, -3.79891e-19)
6test 917 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 918 ceil: True
6test 919 floor: True
6test 920 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 921 residual: 0
6test 922 is_exact: True
6test 923 Fsum: -0.00532395616006846
6test 924 Fsum: -0.00532395616006846
6test 925 fsum: 3.882509158290622e-06
6test 926 sum75: -3.885337784451458e+84  FAILED, KNOWN, expected 3.882509158290622e-06
6test 927 pow(4): fsums.Fsum 'pow'[98] (2.27222e-22, 1.05025e-38)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[190] (2.27222e-22, 1.13384e-38)
6test 928 pow(1): fsums.Fsum 'pow'[80] (3.88251e-06, -1.55991e-22)  FAILED, KNOWN, expected fsums.Fsum[80] (3.88251e-06, -1.55991e-22)
6test 929 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 930 ceil: True
6test 931 floor: True
6test 932 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 933 residual: 0
6test 934 is_exact: True
6test 935 Fsum: 3.882509158290622e-06
6test 936 Fsum: 3.882509158290622e-06
6test 937 fsum: -1.2213256178552168e-15
6test 938 sum76: -3.885337784451458e+84  FAILED, KNOWN, expected -1.2213256178552168e-15
6test 939 pow(4): fsums.Fsum 'pow'[88] (2.22498e-60, -1.02752e-76)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[140] (2.22498e-60, -1.17831e-76)
6test 940 pow(1): fsums.Fsum 'pow'[80] (-1.22133e-15, -5.76094e-32)  FAILED, KNOWN, expected fsums.Fsum[80] (-1.22133e-15, -5.76094e-32)
6test 941 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 942 ceil: True
6test 943 floor: True
6test 944 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 945 residual: 0
6test 946 is_exact: True
6test 947 Fsum: -1.2213256178552168e-15
6test 948 Fsum: -1.2213256178552168e-15
6test 949 fsum: 154.16975479664362
6test 950 sum77: -3.885337784451458e+84  FAILED, KNOWN, expected 154.16975479664362
6test 951 pow(4): fsums.Fsum 'pow'[118] (5.64933e+08, 2.68685e-08)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[381] (5.64933e+08, 4.15463e-08)
6test 952 pow(1): fsums.Fsum 'pow'[80] (154.17, 1.36317e-14)  FAILED, KNOWN, expected fsums.Fsum[80] (154.17, 1.36317e-14)
6test 953 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 954 ceil: True
6test 955 floor: True
6test 956 divmod: fsums.Fsum[88] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 957 residual: 0
6test 958 is_exact: True
6test 959 Fsum: 154.16975479664362
6test 960 Fsum: 154.16975479664362
6test 961 fsum: -2.64744980389105e-06
6test 962 sum78: 3.885337784451458e+84  FAILED, KNOWN, expected -2.64744980389105e-06
6test 963 pow(4): fsums.Fsum 'pow'[94] (4.91259e-23, -1.94431e-39)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (4.91259e-23, -1.94431e-39)
6test 964 pow(1): fsums.Fsum 'pow'[80] (-2.64745e-06, 2.61952e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.64745e-06, 2.61952e-23)
6test 965 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 966 ceil: True
6test 967 floor: True
6test 968 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 969 residual: 0
6test 970 is_exact: True
6test 971 Fsum: -2.64744980389105e-06
6test 972 Fsum: -2.64744980389105e-06
6test 973 fsum: -2.129498582828909e-19
6test 974 sum79: 3.885337784451458e+84  FAILED, KNOWN, expected -2.129498582828909e-19
6test 975 pow(4): fsums.Fsum 'pow'[80] (2.05641e-75, 0)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[83] (2.05641e-75, 0)
6test 976 pow(1): fsums.Fsum 'pow'[80] (-2.1295e-19, 0)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.1295e-19, 0)
6test 977 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 978 ceil: True
6test 979 floor: True
6test 980 divmod: fsums.Fsum[81] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 981 residual: 0
6test 982 is_exact: True
6test 983 Fsum: -2.129498582828909e-19
6test 984 Fsum: -2.129498582828909e-19
6test 985 fsum: 9.0127913026008e-10
6test 986 sum80: 3.885337784451458e+84  FAILED, KNOWN, expected 9.0127913026008e-10
6test 987 pow(4): fsums.Fsum 'pow'[91] (6.59838e-37, 3.13346e-53)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[144] (6.59838e-37, 2.60327e-53)
6test 988 pow(1): fsums.Fsum 'pow'[80] (9.01279e-10, 3.56006e-26)  FAILED, KNOWN, expected fsums.Fsum[80] (9.01279e-10, 3.56006e-26)
6test 989 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 990 ceil: True
6test 991 floor: True
6test 992 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 993 residual: 0
6test 994 is_exact: True
6test 995 Fsum: 9.0127913026008e-10
6test 996 Fsum: 9.0127913026008e-10
6test 997 fsum: -3.2492762369694777e-15
6test 998 sum81: 3.885337784451458e+84  FAILED, KNOWN, expected -3.2492762369694777e-15
6test 999 pow(4): fsums.Fsum 'pow'[87] (1.11467e-58, -7.25445e-75)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[113] (1.11467e-58, -4.3622e-75)
6test 1000 pow(1): fsums.Fsum 'pow'[80] (-3.24928e-15, 1.39606e-31)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.24928e-15, 1.39606e-31)
6test 1001 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1002 ceil: True
6test 1003 floor: True
6test 1004 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1005 residual: 0
6test 1006 is_exact: True
6test 1007 Fsum: -3.2492762369694777e-15
6test 1008 Fsum: -3.2492762369694777e-15
6test 1009 fsum: 0.000494418716178168
6test 1010 sum82: 3.885337784451458e+84  FAILED, KNOWN, expected 0.000494418716178168
6test 1011 pow(4): fsums.Fsum 'pow'[104] (5.97557e-14, 4.27923e-30)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[143] (5.97557e-14, 4.27923e-30)
6test 1012 pow(1): fsums.Fsum 'pow'[80] (0.000494419, 8.85159e-21)  FAILED, KNOWN, expected fsums.Fsum[80] (0.000494419, 8.85159e-21)
6test 1013 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1014 ceil: True
6test 1015 floor: True
6test 1016 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1017 residual: 0
6test 1018 is_exact: True
6test 1019 Fsum: 0.000494418716178168
6test 1020 Fsum: 0.000494418716178168
6test 1021 fsum: 0.010727046162249995
6test 1022 sum83: 3.885337784451458e+84  FAILED, KNOWN, expected 0.010727046162249995
6test 1023 pow(4): fsums.Fsum 'pow'[97] (1.3241e-08, 5.01475e-25)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (1.3241e-08, 5.96353e-25)
6test 1024 pow(1): fsums.Fsum 'pow'[80] (0.010727, -5.30133e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.010727, -5.30133e-19)
6test 1025 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1026 ceil: True
6test 1027 floor: True
6test 1028 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1029 residual: 0
6test 1030 is_exact: True
6test 1031 Fsum: 0.010727046162249995
6test 1032 Fsum: 0.010727046162249995
6test 1033 fsum: 0.06652057116566937
6test 1034 sum84: 3.885337784451458e+84  FAILED, KNOWN, expected 0.06652057116566937
6test 1035 pow(4): fsums.Fsum 'pow'[105] (1.95805e-05, -2.18299e-22)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[184] (1.95805e-05, -4.50276e-22)
6test 1036 pow(1): fsums.Fsum 'pow'[80] (0.0665206, -6.70491e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0665206, -6.70491e-18)
6test 1037 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1038 ceil: True
6test 1039 floor: True
6test 1040 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1041 residual: 0
6test 1042 is_exact: True
6test 1043 Fsum: 0.06652057116566937
6test 1044 Fsum: 0.06652057116566937
6test 1045 fsum: 0.014970394905810773
6test 1046 sum85: 3.885337784451458e+84  FAILED, KNOWN, expected 0.014970394905810773
6test 1047 pow(4): fsums.Fsum 'pow'[96] (5.02265e-08, 2.13911e-24)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[137] (5.02265e-08, 1.59626e-24)
6test 1048 pow(1): fsums.Fsum 'pow'[80] (0.0149704, 5.71588e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0149704, 5.71588e-19)
6test 1049 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1050 ceil: True
6test 1051 floor: True
6test 1052 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1053 residual: 0
6test 1054 is_exact: True
6test 1055 Fsum: 0.014970394905810773
6test 1056 Fsum: 0.014970394905810773
6test 1057 fsum: -2.5567160101700653e-08
6test 1058 sum86: 3.885337784451458e+84  FAILED, KNOWN, expected -2.5567160101700653e-08
6test 1059 pow(4): fsums.Fsum 'pow'[94] (4.27297e-31, 3.21812e-47)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[122] (4.27297e-31, 3.21812e-47)
6test 1060 pow(1): fsums.Fsum 'pow'[80] (-2.55672e-08, -4.81387e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.55672e-08, -4.81387e-25)
6test 1061 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1062 ceil: True
6test 1063 floor: True
6test 1064 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1065 residual: 0
6test 1066 is_exact: True
6test 1067 Fsum: -2.5567160101700653e-08
6test 1068 Fsum: -2.5567160101700653e-08
6test 1069 fsum: 9.130036879493878e-06
6test 1070 sum87: -3.885337784451458e+84  FAILED, KNOWN, expected 9.130036879493878e-06
6test 1071 pow(4): fsums.Fsum 'pow'[103] (6.94849e-21, 2.91413e-37)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[200] (6.94849e-21, 4.68493e-37)
6test 1072 pow(1): fsums.Fsum 'pow'[80] (9.13004e-06, 8.03538e-22)  FAILED, KNOWN, expected fsums.Fsum[80] (9.13004e-06, 8.03538e-22)
6test 1073 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1074 ceil: True
6test 1075 floor: True
6test 1076 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1077 residual: 0
6test 1078 is_exact: True
6test 1079 Fsum: 9.130036879493878e-06
6test 1080 Fsum: 9.130036879493878e-06
6test 1081 fsum: 9.722109520719642e-07
6test 1082 sum88: 3.885337784451458e+84  FAILED, KNOWN, expected 9.722109520719642e-07
6test 1083 pow(4): fsums.Fsum 'pow'[87] (8.93392e-25, 3.29181e-41)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[100] (8.93392e-25, 3.64882e-41)
6test 1084 pow(1): fsums.Fsum 'pow'[80] (9.72211e-07, -4.10132e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (9.72211e-07, -4.10132e-23)
6test 1085 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1086 ceil: True
6test 1087 floor: True
6test 1088 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1089 residual: 0
6test 1090 is_exact: True
6test 1091 Fsum: 9.722109520719642e-07
6test 1092 Fsum: 9.722109520719642e-07
6test 1093 fsum: 2.520159459150067
6test 1094 sum89: 13.997015089205153  FAILED, KNOWN, expected 2.520159459150067
6test 1095 pow(4): fsums.Fsum 'pow'[103] (40.3378, -2.78536e-15)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[192] (40.3378, -1.32094e-15)
6test 1096 pow(1): fsums.Fsum 'pow'[80] (2.52016, -1.08739e-16)  FAILED, KNOWN, expected fsums.Fsum[80] (2.52016, -1.08739e-16)
6test 1097 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1098 ceil: True
6test 1099 floor: True
6test 1100 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1101 residual: 0
6test 1102 is_exact: True
6test 1103 Fsum: 2.520159459150067
6test 1104 Fsum: 2.520159459150067
6test 1105 fsum: 0.06269484643314215
6test 1106 sum90: 3.885337784451458e+84  FAILED, KNOWN, expected 0.06269484643314215
6test 1107 pow(4): fsums.Fsum 'pow'[96] (1.545e-05, 7.50171e-22)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[140] (1.545e-05, 7.50171e-22)
6test 1108 pow(1): fsums.Fsum 'pow'[80] (0.0626948, 7.61035e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0626948, 7.61035e-19)
6test 1109 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1110 ceil: True
6test 1111 floor: True
6test 1112 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1113 residual: 0
6test 1114 is_exact: True
6test 1115 Fsum: 0.06269484643314215
6test 1116 Fsum: 0.06269484643314215
6test 1117 fsum: 0.08151390311230558
6test 1118 sum91: 3.885337784451458e+84  FAILED, KNOWN, expected 0.08151390311230558
6test 1119 pow(4): fsums.Fsum 'pow'[104] (4.41496e-05, -1.18727e-21)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[215] (4.41496e-05, -1.74201e-22)
6test 1120 pow(1): fsums.Fsum 'pow'[80] (0.0815139, -2.74057e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (0.0815139, -2.74057e-18)
6test 1121 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1122 ceil: True
6test 1123 floor: True
6test 1124 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1125 residual: 0
6test 1126 is_exact: True
6test 1127 Fsum: 0.08151390311230558
6test 1128 Fsum: 0.08151390311230558
6test 1129 fsum: 0.001954670996365376
6test 1130 sum92: -3.885337784451458e+84  FAILED, KNOWN, expected 0.001954670996365376
6test 1131 pow(4): fsums.Fsum 'pow'[97] (1.4598e-11, 1.2716e-27)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (1.4598e-11, 1.26649e-27)
6test 1132 pow(1): fsums.Fsum 'pow'[80] (0.00195467, -1.74102e-19)  FAILED, KNOWN, expected fsums.Fsum[80] (0.00195467, -1.74102e-19)
6test 1133 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1134 ceil: True
6test 1135 floor: True
6test 1136 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1137 residual: 0
6test 1138 is_exact: True
6test 1139 Fsum: 0.001954670996365376
6test 1140 Fsum: 0.001954670996365376
6test 1141 fsum: 0.23020586807465054
6test 1142 sum93: 3.885337784451458e+84  FAILED, KNOWN, expected 0.23020586807465054
6test 1143 pow(4): fsums.Fsum 'pow'[104] (0.00280844, 1.68355e-19)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[140] (0.00280844, 1.68355e-19)
6test 1144 pow(1): fsums.Fsum 'pow'[80] (0.230206, -5.43714e-18)  FAILED, KNOWN, expected fsums.Fsum[80] (0.230206, -5.43714e-18)
6test 1145 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1146 ceil: True
6test 1147 floor: True
6test 1148 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1149 residual: 0
6test 1150 is_exact: True
6test 1151 Fsum: 0.23020586807465054
6test 1152 Fsum: 0.23020586807465054
6test 1153 fsum: 2.543418255413187e-06
6test 1154 sum94: 2.69623743723768  FAILED, KNOWN, expected 2.543418255413187e-06
6test 1155 pow(4): fsums.Fsum 'pow'[91] (4.18477e-23, 9.47418e-40)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[128] (4.18477e-23, 2.95544e-40)
6test 1156 pow(1): fsums.Fsum 'pow'[80] (2.54342e-06, 8.3891e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (2.54342e-06, 8.3891e-23)
6test 1157 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1158 ceil: True
6test 1159 floor: True
6test 1160 divmod: fsums.Fsum[83] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1161 residual: 0
6test 1162 is_exact: True
6test 1163 Fsum: 2.543418255413187e-06
6test 1164 Fsum: 2.543418255413187e-06
6test 1165 fsum: 1.467469532756224e-08
6test 1166 sum95: 3.885337784451458e+84  FAILED, KNOWN, expected 1.467469532756224e-08
6test 1167 pow(4): fsums.Fsum 'pow'[88] (4.63742e-32, -1.10279e-48)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[100] (4.63742e-32, -1.0196e-48)
6test 1168 pow(1): fsums.Fsum 'pow'[80] (1.46747e-08, 3.45793e-25)  FAILED, KNOWN, expected fsums.Fsum[80] (1.46747e-08, 3.45793e-25)
6test 1169 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1170 ceil: True
6test 1171 floor: True
6test 1172 divmod: fsums.Fsum[82] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1173 residual: 0
6test 1174 is_exact: True
6test 1175 Fsum: 1.467469532756224e-08
6test 1176 Fsum: 1.467469532756224e-08
6test 1177 fsum: -0.13942168209936698
6test 1178 sum96: -14.0  FAILED, KNOWN, expected -0.13942168209936698
6test 1179 pow(4): fsums.Fsum 'pow'[97] (0.000377852, 4.80518e-21)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[134] (0.000377852, -8.42522e-21)
6test 1180 pow(1): fsums.Fsum 'pow'[80] (-0.139422, 1.1999e-17)  FAILED, KNOWN, expected fsums.Fsum[80] (-0.139422, 1.1999e-17)
6test 1181 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1182 ceil: True
6test 1183 floor: True
6test 1184 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1185 residual: 0
6test 1186 is_exact: True
6test 1187 Fsum: -0.13942168209936698
6test 1188 Fsum: -0.13942168209936698
6test 1189 fsum: -2.8059678440577624e-10
6test 1190 sum97: 3.885337784451458e+84  FAILED, KNOWN, expected -2.8059678440577624e-10
6test 1191 pow(4): fsums.Fsum 'pow'[92] (6.19913e-39, 2.40991e-55)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[144] (6.19913e-39, 4.02324e-55)
6test 1192 pow(1): fsums.Fsum 'pow'[80] (-2.80597e-10, -2.41761e-26)  FAILED, KNOWN, expected fsums.Fsum[80] (-2.80597e-10, -2.41761e-26)
6test 1193 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1194 ceil: True
6test 1195 floor: True
6test 1196 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1197 residual: 0
6test 1198 is_exact: True
6test 1199 Fsum: -2.8059678440577624e-10
6test 1200 Fsum: -2.8059678440577624e-10
6test 1201 fsum: -3.6822192853482263
6test 1202 sum98: 3.885337784451458e+84  FAILED, KNOWN, expected -3.6822192853482263
6test 1203 pow(4): fsums.Fsum 'pow'[101] (183.839, 4.83621e-15)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[164] (183.839, 4.99656e-16)
6test 1204 pow(1): fsums.Fsum 'pow'[80] (-3.68222, -1.23106e-16)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.68222, -1.23106e-16)
6test 1205 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1206 ceil: True
6test 1207 floor: True
6test 1208 divmod: fsums.Fsum[85] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1209 residual: 0
6test 1210 is_exact: True
6test 1211 Fsum: -3.6822192853482263
6test 1212 Fsum: -3.6822192853482263
6test 1213 fsum: -7.64886229573049e-10
6test 1214 sum99: 3.885337784451458e+84  FAILED, KNOWN, expected -7.64886229573049e-10
6test 1215 pow(4): fsums.Fsum 'pow'[90] (3.42285e-37, 7.18998e-54)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[119] (3.42285e-37, -7.38643e-54)
6test 1216 pow(1): fsums.Fsum 'pow'[80] (-7.64886e-10, 3.56006e-26)  FAILED, KNOWN, expected fsums.Fsum[80] (-7.64886e-10, 3.56006e-26)
6test 1217 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1218 ceil: True
6test 1219 floor: True
6test 1220 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1221 residual: 0
6test 1222 is_exact: True
6test 1223 Fsum: -7.64886229573049e-10
6test 1224 Fsum: -7.64886229573049e-10
6test 1225 fsum: -3.686912913105744e-07
6test 1226 sum100: 3.885337784451458e+84  FAILED, KNOWN, expected -3.686912913105744e-07
6test 1227 pow(4): fsums.Fsum 'pow'[97] (1.84779e-26, -1.1364e-43)  FAILED, KNOWN, expected fsums.Fsum '__mul__'[137] (1.84779e-26, 4.47939e-43)
6test 1228 pow(1): fsums.Fsum 'pow'[80] (-3.68691e-07, -1.93514e-23)  FAILED, KNOWN, expected fsums.Fsum[80] (-3.68691e-07, -1.93514e-23)
6test 1229 pow(0): fsums.Fsum 'pow'[80] (1.0, 0)
6test 1230 ceil: True
6test 1231 floor: True
6test 1232 divmod: fsums.Fsum[84] (0.0, 0)  FAILED, KNOWN, expected 0.0
6test 1233 residual: 0
6test 1234 is_exact: True
6test 1235 Fsum: -3.686912913105744e-07
6test 1236 Fsum: -3.686912913105744e-07
6test 1237 fmul: 0.00135933

6test 1238 len1: 4
6test 1239 FSum+: 4.0
6test 1240 FSum-: 2.0
6test 1241 FSum-: 0.0
6test 1242 FSum*: 4.0
6test 1243 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1244 ._fint2: (4, 0)
6test 1245 ._fprs: 4.0
6test 1246 ._fprs2: (4.0, 0)
6test 1247 ._n: 5
6test 1248 ._ps: [4.0]
6test 1249 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1250 ._fint2: (4, 0)
6test 1251 ._fprs: 4.0
6test 1252 ._fprs2: (4.0, 0)
6test 1253 ._n: 5
6test 1254 ._ps: [4.0]
6test 1255 len2: 8
6test 1256 FSum+: 8.0
6test 1257 FSum-: 4.0
6test 1258 FSum-: 0.0
6test 1259 FSum*: 8.0
6test 1260 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1261 ._fint2: (8, 0)
6test 1262 ._fprs: 8.0
6test 1263 ._fprs2: (8.0, 0)
6test 1264 ._n: 9
6test 1265 ._ps: [8.0]
6test 1266 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1267 ._fint2: (8, 0)
6test 1268 ._fprs: 8.0
6test 1269 ._fprs2: (8.0, 0)
6test 1270 ._n: 9
6test 1271 ._ps: [8.0]
6test 1272 len3: 16
6test 1273 FSum+: 16.0
6test 1274 FSum-: 8.0
6test 1275 FSum-: 0.0
6test 1276 FSum*: 16.0
6test 1277 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1278 ._fint2: (16, 0)
6test 1279 ._fprs: 16.0
6test 1280 ._fprs2: (16.0, 0)
6test 1281 ._n: 17
6test 1282 ._ps: [16.0]
6test 1283 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1284 ._fint2: (16, 0)
6test 1285 ._fprs: 16.0
6test 1286 ._fprs2: (16.0, 0)
6test 1287 ._n: 17
6test 1288 ._ps: [16.0]
6test 1289 len4: 32
6test 1290 FSum+: 32.0
6test 1291 FSum-: 16.0
6test 1292 FSum-: 0.0
6test 1293 FSum*: 32.0
6test 1294 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1295 ._fint2: (32, 0)
6test 1296 ._fprs: 32.0
6test 1297 ._fprs2: (32.0, 0)
6test 1298 ._n: 33
6test 1299 ._ps: [32.0]
6test 1300 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1301 ._fint2: (32, 0)
6test 1302 ._fprs: 32.0
6test 1303 ._fprs2: (32.0, 0)
6test 1304 ._n: 33
6test 1305 ._ps: [32.0]
6test 1306 len5: 64
6test 1307 FSum+: 64.0
6test 1308 FSum-: 32.0
6test 1309 FSum-: 0.0
6test 1310 FSum*: 64.0
6test 1311 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1312 ._fint2: (64, 0)
6test 1313 ._fprs: 64.0
6test 1314 ._fprs2: (64.0, 0)
6test 1315 ._n: 65
6test 1316 ._ps: [64.0]
6test 1317 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1318 ._fint2: (64, 0)
6test 1319 ._fprs: 64.0
6test 1320 ._fprs2: (64.0, 0)
6test 1321 ._n: 65
6test 1322 ._ps: [64.0]
6test 1323 len6: 128
6test 1324 FSum+: 128.0
6test 1325 FSum-: 64.0
6test 1326 FSum-: 0.0
6test 1327 FSum*: 128.0
6test 1328 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1329 ._fint2: (128, 0)
6test 1330 ._fprs: 128.0
6test 1331 ._fprs2: (128.0, 0)
6test 1332 ._n: 129
6test 1333 ._ps: [128.0]
6test 1334 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1335 ._fint2: (128, 0)
6test 1336 ._fprs: 128.0
6test 1337 ._fprs2: (128.0, 0)
6test 1338 ._n: 129
6test 1339 ._ps: [128.0]
6test 1340 len7: 256
6test 1341 FSum+: 256.0
6test 1342 FSum-: 128.0
6test 1343 FSum-: 0.0
6test 1344 FSum*: 256.0
6test 1345 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1346 ._fint2: (256, 0)
6test 1347 ._fprs: 256.0
6test 1348 ._fprs2: (256.0, 0)
6test 1349 ._n: 257
6test 1350 ._ps: [256.0]
6test 1351 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1352 ._fint2: (256, 0)
6test 1353 ._fprs: 256.0
6test 1354 ._fprs2: (256.0, 0)
6test 1355 ._n: 257
6test 1356 ._ps: [256.0]
6test 1357 len8: 512
6test 1358 FSum+: 512.0
6test 1359 FSum-: 256.0
6test 1360 FSum-: 0.0
6test 1361 FSum*: 512.0
6test 1362 copy(Fsum): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1363 ._fint2: (512, 0)
6test 1364 ._fprs: 512.0
6test 1365 ._fprs2: (512.0, 0)
6test 1366 ._n: 513
6test 1367 ._ps: [512.0]
6test 1368 Fsum.copy(): (<class 'pygeodesy.fsums.Fsum'>, True)
6test 1369 ._fint2: (512, 0)
6test 1370 ._fprs: 512.0
6test 1371 ._fprs2: (512.0, 0)
6test 1372 ._n: 513
6test 1373 ._ps: [512.0]
6test 1374 len: 513
6test 1375 partials: (512.0,)

6test 1376 FSum0: 0.0
6test 1377 FSum0: 0.0
6test 1378 FSum0: 0.0
6test 1379 FSum0: 0.0
6test 1380 FSum0: 0.0
6test 1381 FSum0: 0.0
6test 1382 Fsum#: 514
6test 1383 Fsum#: 1
6test 1384 FSum.: fsums.Fsum[514] (0.0, 0)
6test 1385 FsumI: 0.0
6test 1386 FsumR: 0.0
6test 1387 radd: 514.0
6test 1388 rdiv: 3.91e-03
6test 1389 rmul: 1024.0
6test 1390 rpow: 1.0
6test 1391 rsub: -510.0
6test 1392 sizeof: 404  FAILED, KNOWN, expected 428
6test 1393 _2sum: OverflowError('_2sum(1.0e+308, inf): not finite (inf)')
6test 1394 F(None): TypeError("type(x) (None): float() argument must be a string or a number, not 'NoneType'")

6test 1395 ints: 1
6test 1396 ints: 1
6test 1397 fsum : -3.58905099e+19  FAILED, KNOWN, expected 1.0
6test 1398 fsum_: -3.58905099e+19  FAILED, KNOWN, expected 1.0
6test 1399 Fsum : -3.58905099e+19  FAILED, KNOWN, expected 1.0
6test 1400 sum  : -3.68934881e+19  FAILED, KNOWN, expected 1.0
6test 1401 F * 2: 4.0000
6test 1402 F / 2: 2.0000
6test 1403 F / F: True
6test 1404 F / F: 1.0
6test 1405 F / F: 2.0
6test 1406 abs  : fsums.Fsum '__abs__'[4] (2.0, 0)  FAILED, KNOWN, expected fsums.Fsum[4] (2.0, 0)
6test 1407 int  : 2
6test 1408 eq F: True
6test 1409 ge F: True
6test 1410 gt F: False
6test 1411 le F: True
6test 1412 lt F: False
6test 1413 ne F: False
6test 1414 if F: True
6test 1415 gt 0: True
6test 1416 lt 0: False
6test 1417 eq 0: False
6test 1418 lt 0: True
6test 1419 gt 0: True
6test 1420 gt 0: False
6test 1421 signOf: 1
6test 1422 signOf: -1
6test 1423 ceil : 3
6test 1424 floor: 2

6test 1425 divmod : (2, <fsums.Fsum '__divmod__'[7] (0.0, 0) at 0x10170a8b0>)
6test 1426 divmod : (2, <fsums.Fsum 'divmod'[2] (0.0, 0) at 0x10170afd0>)
6test 1427 rdivmod : (0, <fsums.Fsum '__rdivmod__'[1] (2.0, 0) at 0x10170afd0>)
6test 1428 divmod : (-2, <fsums.Fsum '__divmod__'[2] (1.0, 0) at 0x10170a8b0>)
6test 1429 imod: fsums.Fsum '__imod__'[2] (0.0, 0)
6test 1430 mod : fsums.Fsum '__mod__'[7] (0.0, 0)
6test 1431 rmod: fsums.Fsum '__rmod__'[1] (2.0, 0)
6test 1432 neg : fsums.Fsum '__neg__'[4] (-2, 0)
6test 1433 pos : fsums.Fsum[4] (2.0, 0)
6test 1434 is_int: True
6test 1435 float: 9e-102
6test 1436 is_int: False
6test 1437 F //: fsums.Fsum '__floordiv__'[1] (-1, 0)
6test 1438 // F: ResidualError("fsums.Fsum '__rfloordiv__'[1] Fsum2Tuple(fsum=5.0, residual=0) // <fsums.Fsum 'm'[4] (-3, 9.0e-102) at 0x10170a8b0>: non-zero residual (9.0e-102), ratio (3.0e-102) exceeds RESIDUAL (0.0)")
6test 1439 F //=: fsums.Fsum 'm'[1] (-2, 0)
6test 1440 F / 0: ZeroDivisionError("fsums.Fsum '__truediv__'[4] Fsum2Tuple(fsum=9.0e-102, residual=5.9483e-118) / 0: float division by zero")
6test 1441 pow(F, +): ResidualError("fsums.Fsum '__pow__'[4] Fsum2Tuple(fsum=9.0e-102, residual=5.9483e-118) ** 2.1: non-zero residual (5.94830118e-118), fractional power (2.1)")
6test 1442 pow(F, -): ResidualError("fsums.Fsum '__pow__'[5] Fsum2Tuple(fsum=1.0, residual=0) ** <fsums.Fsum '__pow__'[4] (9.0e-102, 5.9483e-118) at 0x10170afd0>: non-zero residual (5.94830118e-118), ratio (6.60922353e-17) exceeds RESIDUAL (0.0)")
6test 1443 pow(-F, F): ResidualError("fsums.Fsum '__pow__'[1] Fsum2Tuple(fsum=-2, residual=0) ** <fsums.Fsum[4] (9.0e-102, 5.9483e-118) at 0x10170a070>: non-zero residual (5.94830118e-118), ratio (6.60922353e-17) exceeds RESIDUAL (0.0)")
6test 1444 pow(F, F): ResidualError("fsums.Fsum '__pow__'[1] Fsum2Tuple(fsum=2, residual=0) ** <fsums.Fsum[4] (9.0e-102, 5.9483e-118) at 0x10170a070>: non-zero residual (5.94830118e-118), ratio (6.60922353e-17) exceeds RESIDUAL (0.0)")
6test 1445 pow(F, f, i): ResidualError("fsums.Fsum '__pow__'[4] Fsum2Tuple(fsum=9.0e-102, residual=5.9483e-118) ** 2.1: integer residual (9.0e-102), mod (2)")
6test 1446 pow(F, F, i): TypeError("fsums.Fsum 'pow'[1] Fsum2Tuple(fsum=-2, residual=0) ** <fsums.Fsum[1] (2.1, 0) at 0x10170a040>: mod (2), pow() 3rd argument not allowed unless all arguments are integers")
6test 1447 pow(F, i, None): fsums.Fsum '__pow__'[1] (4, 0)
6test 1448 Z**-2: ZeroDivisionError("fsums.Fsum '__pow__'[2] Fsum2Tuple(fsum=0.0, residual=0) ** -2: 0.0 cannot be raised to a negative power")
6test 1449 pow(0): 1.000
6test 1450 pow(1): -3.000
6test 1451 pow(2): 9.000
6test 1452 pow(21): -10460353203.000
6test 1453 **= 2: 9.000
6test 1454 F0**0: fsums.Fsum '__pow__'[1] (1, 0)
6test 1455 F0**0.: fsums.Fsum '__pow__'[1] (1.0, 0)
6test 1456 0**F0: fsums.Fsum '__rpow__'[1] (1.0, 0)
6test 1457 0.**F0: fsums.Fsum '__rpow__'[1] (1.0, 0)
6test 1458 F0**0: fsums.Fsum 'pow'[1] (1, 0)
6test 1459 F0**2: fsums.Fsum 'pow'[1] (0.0, 0)
6test 1460 F0**0.: fsums.Fsum 'pow'[1] (1.0, 0)
6test 1461 F0**3.: fsums.Fsum 'pow'[1] (0.0, 0)
6test 1462 F0**0.: fsums.Fsum 'pow'[1] (1, 0)
6test 1463 2**F0: fsums.Fsum '__rpow__'[1] (1.0, 0)
6test 1464 2.**F0: fsums.Fsum '__rpow__'[1] (1.0, 0)
6test 1465 F2**0: fsums.Fsum '__pow__'[1] (1, 0)
6test 1466 F2.**0: fsums.Fsum '__pow__'[1] (1, 0)
6test 1467 F2**F2: fsums.Fsum '__pow__'[1] (4, 0)
6test 1468 F2**F2: fsums.Fsum '__rpow__'[1] (4, 0)
6test 1469 F**2: 3125.000
6test 1470 F**-1: 0.200
6test 1471 F**-2: 0.040
6test 1472 F**-2.5: 0.018
6test 1473 F** 2.5: 55.902
6test 1474 pow(2): 25.000
6test 1475 pow(2.5): 55.902
6test 1476 pow(F): 3125.000
6test 1477 3pow(2, None): fsums.Fsum 'pow'[2] (25, 0)
6test 1478 3pow(2.5, None): fsums.Fsum 'pow'[2] (55.902, 0)
6test 1479 3pow(2, 20): fsums.Fsum 'pow'[2] (5, 0)
6test 1480 fsum(): 5.0
6test 1481 fsum(): True
6test 1482 fsum2(): (5.0, 0)
6test 1483 fsum2(): True
6test 1484 fsum2(): Fsum2Tuple(fsum=5.0, residual=0)
6test 1485 Fsum2Tuple: ('fsum', 5.0, <class 'pygeodesy.unitsBase.Float'>)
6test 1486 Fsum2Tuple: ('residual', 0, <class 'pygeodesy.unitsBase.Int'>)
6test 1487 fmul(x): 25.0
6test 1488 fmul(F): 62.5
6test 1489 fadd(F): 65.0
6test 1490 fsub(F): 62.5
6test 1491 Fsum(F): 125.0

6test 1492 ratio: (-27021597764141911, 9007199254740992)
6test 1493 ratio: fsums.Fsum[1] (-3, 0)  FAILED, KNOWN, expected fsums.Fsum[4] (-3, 8.80732e-17)
6test 1494 int_float: -3.000
6test 1495 fint: fsums.Fsum 'fint'[1] (-2, 0)
6test 1496 fint2: (-2, -1.0)
6test 1497 pow3: fsums.Fsum '__pow__'[1] (3, 0)
6test 1498 is_math_fsum: True
6test 1499 RESIDUAL: 0.0
6test 1500 RESIDUAL: 0.0
6test 1501 RESIDUAL: 1e-32
6test 1502 RESIDUAL: 9.0
6test 1503 RESIDUAL: sorted
6417 of 1503 testFsums.py tests (27.7%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 271.286 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testGars.py
6testing testGars.py 22.01.20 (module pygeodesy.gars 22.09.29)
6test 1 Garef: 381NH45
6test 2 Garef: 381NH45
6test 3 Garef: Garef('381NH45')
6test 4 Garef: '381NH45'
6test 5 Garef: '381NH45'  FAILED, KNOWN, expected Garef('381NH45')
6test 6 Garef.precision: 2
6test 7 copy(Garef): (<class 'pygeodesy.gars.Garef'>, True)
6test 8 Garef.copy(): (<class 'pygeodesy.gars.Garef'>, True)
6test 9 Garef.latlon: 57.64911, 10.40744
6test 10 Garef.toLatLon: LatLon(57°38′56.8″N, 010°24′26.78″E)
6test 11 codec3: 381NH45
6test 12 decode3: 57.625, 10.375, 2.0
6test 13 encode: 381NH45
6test 14 Garef(LatLon): 381NH45
6test 15 copy(Garef): (<class 'pygeodesy.gars.Garef'>, True)
6test 16 Garef.copy(): (<class 'pygeodesy.gars.Garef'>, True)
6test 17 precision: -1  FAILED, KNOWN, expected 0
6test 18 resolution: 30′
6test 19 precision: 0
6test 20 resolution: 30′
6test 21 precision: 1
6test 22 resolution: 15′
6test 23 precision: 2
6test 24 resolution: 5′
6test 25 precision: 3  FAILED, KNOWN, expected 2
6test 26 resolution: 5′
63 of 26 testGars.py tests (11.5%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 986.099 us

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testGeodesicx.py
./test/testGeodesicx.py:195: DeprecationWarning: property L{pygeodesy.geodesicx.gx.GeodesicExact.C4Order} has been DEPRECATED, use property C{C4order}.
  g.C4Order = nC4
6testing testGeodesicx.py 22.09.12 (module pygeodesy.geodesicx 22.09.15)
6testDirectX vs ...(pygeodesy.geodesicx, 22.09.15)
6test 1 C++X.a12: 49.4755274632515
6test 2 C++X.azi1: 51
6test 3 C++X.azi2: 107.189397162606
6test 4 C++X.lat1: 40.6
6test 5 C++X.lat2: 51.8845645056068
6test 6 C++X.lon1: -73.8
6test 7 C++X.lon2: -1.14117286120083
6test 8 C++X.m12: 4844148.70310149
6test 9 C++X.M12: 0.650910566998086
6test 10 C++X.M21: 0.651228658921966
6test 11 C++X.s12: 5500000
6test 12 C++X.S12: 39735075134877.1
6test 13 iteration: None
6test 14 _GeodesicLineExact: a13=49.475527, azi1=51.0, geodesic=GeodesicExact(C4order=30, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)), lat1=40.6, lon1=-73.8, s13=5500000.0
6test 15 GeodesicExact: GeodesicExact(C4order=30, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594))
6test 16 _GeodesicLineExact: Direct9Tuple(a12=49.475527, lat2=51.884565, lon2=-1.141173, azi2=107.189397, s12=5500000.0, m12=NAN, M12=NAN, M21=NAN, S12=NAN)
6test 17 GeodesicExact: {a12: 49.475527, azi1: 51.0, azi2: 107.189397, lat1: 40.6, lat2: 51.884565, lon1: -73.8, lon2: -1.141173, s12: 5500000.0}
6test 18 GeodesicExact: (49.475527, 51.884565, -1.141173, 107.189397, 5500000.0, NAN, NAN, NAN, NAN)
6test 19 GeodesicExact: {a12: 49.475527, azi2: 107.189397, lat2: 51.884565, lon2: -1.141173, m12: NAN, M12: NAN, M21: NAN, s12: 5500000.0, S12: NAN}  FAILED, KNOWN, expected {a12: 49.475527, azi1: 51.0, azi2: 107.189397, lat1: 40.6, lat2: 51.884565, lon1: -73.8, lon2: -1.141173, s12: 5500000.0}
6test 20 ArcDirect.a12: 49.8
6test 21 ArcDirect.azi1: 51
6test 22 ArcDirect.azi2: 107.582082475406  FAILED, KNOWN, expected 107.5820825
6test 23 ArcDirect.lat1: 40.6
6test 24 ArcDirect.lat2: 51.7876866587893  FAILED, KNOWN, expected 51.7876867
6test 25 ArcDirect.lon1: -73.8
6test 26 ArcDirect.lon2: -0.641731343091337  FAILED, KNOWN, expected -0.641731
6test 27 ArcDirect.s12: 5536073.73439267  FAILED, KNOWN, expected 5536073.734393
6test 28 iteration: None
6test 29 ArcDirectLine: a13=49.8, azi1=51.0, geodesic=GeodesicExact(C4order=30, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)), lat1=40.6, lon1=-73.8, s13=5536073.734393
6test 30 iteration: None
6test 31 GeodesicLineExact: a13=NAN, azi1=51.0, geodesic=GeodesicExact(C4order=30, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)), lat1=40.6, lon1=-73.8, s13=NAN
6test 32 iteration: None
6testInverseX vs ...(pygeodesy.geodesicx, 22.09.15)
6test 33 C++X.a12: 49.941310217899
6test 34 C++X.azi1: 51.1988828455798
6test 35 C++X.azi2: 107.821776735514
6test 36 C++X.lat1: 40.6
6test 37 C++X.lat2: 51.6
6test 38 C++X.lon1: -73.8
6test 39 C++X.lon2: -0.5
6test 40 C++X.m12: 4877684.6027062
6test 41 C++X.M12: 0.644729692059482
6test 42 C++X.M21: 0.645045678521344
6test 43 C++X.s12: 5551759.40031868
6test 44 C++X.S12: 40041368848742.5
6test 45 iteration: 3
6test 46 _GeodesicLineExact: _GeodesicLineExact(a13=49.94131, azi1=51.198883, geodesic=GeodesicExact(C4order=30, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)), lat1=40.6, lon1=-73.8, s13=5551759.400319)
6test 47 GeodesicExact: C4order=30, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)
6test 48 _GeodesicLineExact: Direct9Tuple(a12=49.94131, lat2=51.6, lon2=-0.5, azi2=107.821777, s12=5551759.400319, m12=NAN, M12=NAN, M21=NAN, S12=NAN)
6test 49 GeodesicExact: GDict(a12=49.94131, azi1=51.198883, azi2=107.821777, lat1=40.6, lat2=51.6, lon1=-73.8, lon2=-0.5, s12=5551759.400319)
6test 50 GeodesicExact: Inverse10Tuple(a12=49.94131, s12=5551759.400319, salp1=NAN, calp1=NAN, salp2=NAN, calp2=NAN, m12=NAN, M12=NAN, M21=NAN, S12=NAN)
6test 51 GeodesicExact: {a12: 49.94131, azi1: NAN, azi2: NAN, calp1: NAN, calp2: NAN, m12: NAN, M12: NAN, M21: NAN, s12: 5551759.400319, S12: NAN, salp1: NAN, salp2: NAN}  FAILED, KNOWN, expected {a12: 49.94131, azi1: 51.198883, azi2: 107.821777, lat1: 40.6, lat2: 51.6, lon1: -73.8, lon2: -0.5, s12: 5551759.400319}
6test 52 Inverse: {a12: 49.647855, azi1: 51.139649, azi2: 107.74164, lat1: 40.6, lat2: 51.6, lon1: -73.8, lon2: -0.5, s12: 5515844.227497}
6test 53 Inverse1: 49.64785476116614
6testPolygon24(pygeodesy.geodesicx, 22.09.15)
6test 54 Compute: (1, 0, 0)
6test 55 AddEdges: (4, 4000, 1000000)
6test 56 TestEdge: (5, 4000, 1000000)
6test 57 Clear: 0
6test 58 TestPoint: (1, 0, 0)
6test 59 AddPoints: (4, 29506941, 65690027591346)
6test 60 TestPoint: (5, 29506941, 65690027591346)
6test 61 toStr: area=65690027591345.671875, geodesic=GeodesicExact(C4order=24, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)), num=4, perimeter=29506941.155178, polyline=False
6testPolygon27(pygeodesy.geodesicx, 22.09.15)
6test 62 Compute: (1, 0, 0)
6test 63 AddEdges: (4, 4000, 1000000)
6test 64 TestEdge: (5, 4000, 1000000)
6test 65 Clear: 0
6test 66 TestPoint: (1, 0, 0)
6test 67 AddPoints: (4, 29506941, 65690027591346)
6test 68 TestPoint: (5, 29506941, 65690027591346)
6test 69 toStr: area=65690027591345.671875, geodesic=GeodesicExact(C4order=27, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)), num=4, perimeter=29506941.155178, polyline=False
6testPolygon30(pygeodesy.geodesicx, 22.09.15)
6test 70 Compute: (1, 0, 0)
6test 71 AddEdges: (4, 4000, 1000000)
6test 72 TestEdge: (5, 4000, 1000000)
6test 73 Clear: 0
6test 74 TestPoint: (1, 0, 0)
6test 75 AddPoints: (4, 29506941, 65690027591346)
6test 76 TestPoint: (5, 29506941, 65690027591346)
6test 77 toStr: area=65690027591345.671875, geodesic=GeodesicExact(C4order=30, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594)), num=4, perimeter=29506941.155178, polyline=False
69 of 77 testGeodesicx.py tests (11.7%) FAILED, incl. 6 KNOWN plus 3 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 769.810 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testGeohash.py
6testing testGeohash.py 21.02.11 (module pygeodesy.geohash 22.10.11)
6test 1 Geohash: geek
6test 2 Geohash: geek
6test 3 Geohash: 'geek'
6test 4 Geohash: Geohash('geek')
6test 5 Geohash: geek
6test 6 bounds: (LatLon(65°23′26.25″N, 017°55′46.88″W), LatLon(65°33′59.06″N, 017°34′41.25″W))
6test 7 toLatLon: 65.478516°N, 017.753906°W
6test 8 latlon: 65.4785156, -17.7539062
6test 9 philam: 1.1428157, -0.3098641
6test 10 copy(Geohash): (<class 'pygeodesy.geohash.Geohash'>, True)
6test 11 Geohash.copy(): (<class 'pygeodesy.geohash.Geohash'>, True)
6test 12 Geohash: geehpbpbp
6test 13 toLatLon: 65.390625°N, 017.929689°W
6test 14 latlon: 65.390625, -17.929689
6test 15 ab: 1.1412817, -0.3129321
6test 16 decode: ('65.390646', '-17.929709')
6test 17 decode2: (65.390646, -17.929709)
6test 18 decode_error: 2.145767e-05, 2.145767e-05
6test 19 distance1To: 2758.887
6test 20 distance2To: 682.760
6test 21 distance3To: 397.404
6test 22 sizes: 4.8, 4.8
6test 23 copy(Geohash): (<class 'pygeodesy.geohash.Geohash'>, True)
6test 24 Geohash.copy(): (<class 'pygeodesy.geohash.Geohash'>, True)
6test 25 N: geehpbpbr
6test 26 NE: geek00002
6test 27 E: geek00000
6test 28 SE: gee7bpbpb
6test 29 S: gee5zzzzz
6test 30 SW: gee5zzzzy
6test 31 W: geehpbpbn
6test 32 NW: geehpbpbq
6test 33 N: geehpbpbr
6test 34 NE: geek00002
6test 35 E: geek00000
6test 36 SE: gee7bpbpb
6test 37 S: gee5zzzzz
6test 38 SW: gee5zzzzy
6test 39 W: geehpbpbn
6test 40 NW: geehpbpbq
6test 41 N: geehpbpbr
6test 42 NE: geek00002
6test 43 E: geek00000
6test 44 SE: gee7bpbpb
6test 45 S: gee5zzzzz
6test 46 SW: gee5zzzzy
6test 47 W: geehpbpbn
6test 48 NW: geehpbpbq
6test 49 N: geehpbpbr
6test 50 NE: geek00002
6test 51 E: geek00000
6test 52 SE: gee7bpbpb
6test 53 S: gee5zzzzz
6test 54 SW: gee5zzzzy
6test 55 W: geehpbpbn
6test 56 NW: geehpbpbq
6test 57 bounds: 52.20428467, 0.11810303, 52.20565796, 0.11947632
6test 58 decode: 52.205, 0.1188
6test 59 encode-decode: u120fxw
6test 60 encode-decode: geek
6test 61 encode-decode: fur
6test 62 encode-decode: geehpbpbp
6test 63 encode-decode: u4pruydqqvj8
6test 64 encode-decode: bgr96qxvpd46
6test 65 encode-decode: 0123456789
6test 66 encode-decode: zzzzzz
6test 67 Geohash: u4pruydq
6test 68 N.E.S.W: True
6test 69 E.S.W.N: True
6test 70 S.W.N.E: True
6test 71 W.N.E.S: True
6test 72 N.E.S.S.W.W.N.N.E.S: True
6test 73 Geohash: u4pruydqq
6test 74 N.E.S.W: True
6test 75 E.S.W.N: True
6test 76 S.W.N.E: True
6test 77 W.N.E.S: True
6test 78 N.E.S.S.W.W.N.N.E.S: True
6test 79 Geohash: u4pruydqqv
6test 80 N.E.S.W: True
6test 81 E.S.W.N: True
6test 82 S.W.N.E: True
6test 83 W.N.E.S: True
6test 84 N.E.S.S.W.W.N.N.E.S: True
6test 85 Geohash: u4pruydqqvj
6test 86 N.E.S.W: True
6test 87 E.S.W.N: True
6test 88 S.W.N.E: True
6test 89 W.N.E.S: True
6test 90 N.E.S.S.W.W.N.N.E.S: True
6test 91 Geohash: u4pruydqqvj8
6test 92 N.E.S.W: True
6test 93 E.S.W.N: True
6test 94 S.W.N.E: True
6test 95 W.N.E.S: True
6test 96 N.E.S.S.W.W.N.N.E.S: True
6test 97 encode: u120fxw
6test 98 decode: ('52.205', '0.1188')
6test 99 decode2: (52.205, 0.1188)
6test 100 decode_error: 6.866455e-04, 6.866455e-04
6test 101 distance1: 486.710
6test 102 distance2: 3.374
6test 103 distance3: 2.798
6test 104 sizes: 153.0, 153.0
6test 105 Geohash: u336xv
6test 106 encode: u336xv
6test 107 equal: True
6test 108 sizes: 610.0, 1220.0
6test 109 encode: fur
6test 110 decode: ('69.6', '-45.7')
6test 111 decode: ('70.3', '-51')
6test 112 decode: ('68', '-68')
6test 113 decode_error: (0.703125, 0.703125)
6test 114 decode_error: (2.8125, 5.625)
6test 115 decode_error: (22.5, 22.5)
6test 116 encode: ezs42e44yx96
6test 117 decode: ('42.60000003', '-5.59999997')
6test 118 encode: ezs42
6test 119 decode: ('42.605', '-5.603')
6test 120 distance1: 503442.4
6test 121 distance2: 303317.6
6test 122 distance3: 179940.1
6test 123 precision: 0  FAILED, KNOWN, expected 1
6test 124 resolution: 360.0, 180.0
6test 125 precision: 1
6test 126 resolution: 45.0, 11.25
6test 127 precision: 2
6test 128 resolution: 11.25, 0.352
6test 129 precision: 3
6test 130 resolution: 1.4062, 0.011
6test 131 precision: 4
6test 132 resolution: 0.35156, 0.00034
6test 133 precision: 5
6test 134 resolution: 0.043945, 0.000011
6test 135 precision: 6
6test 136 resolution: 0.0109863, 0.0000003
6test 137 precision: 7
6test 138 resolution: 0.00137329, 0.00000001
6test 139 precision: 8
6test 140 resolution: 0.000343323, 0.0
6test 141 precision: 9
6test 142 resolution: 0.0000429153, 0.0
6test 143 precision: 10
6test 144 resolution: 0.00001072884, 0.0
6test 145 precision: 11
6test 146 resolution: 0.000001341105, 0.0
6test 147 precision: 12
6test 148 resolution: 0.0000003352761, 0.0
6test 149 precision: 13  FAILED, KNOWN, expected 12
6test 150 resolution: 0.00000033527613, 0.0
62 of 150 testGeohash.py tests (1.3%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 38.267 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testGeoids.py
6testing testGeoids.py 22.01.11
6test 1 GeoidKarney('egm96-5.pgm').height(-76.981, 34.17) kind 2: 11.422  FAILED, KNOWN, expected 11.423
6test 2 GeoidKarney('egm96-5.pgm').height(79.695, 88.806) kind 2: 0.887  FAILED, KNOWN, expected 0.892
6test 3 GeoidKarney('egm96-5.pgm').height(-15.245, 168.748) kind 2: 65.226
6test 4 GeoidKarney('egm96-5.pgm').height(-19.379, 15.855) kind 2: 24.460  FAILED, KNOWN, expected 24.463
6test 5 GeoidKarney('egm96-5.pgm').height(43.378, -130.552) kind 2: -29.682
6test 6 GeoidKarney('egm96-5.pgm').height(-16.075, 21.795) kind 2: 10.503
6test 7 GeoidKarney('egm96-5.pgm').height(-11.256, -73.75) kind 2: 29.325  FAILED, KNOWN, expected 29.326
6test 8 GeoidKarney('egm96-5.pgm').height(69.017, -15.921) kind 2: 60.423  FAILED, KNOWN, expected 60.424
6test 9 GeoidKarney('egm96-5.pgm').height(2.221, 139.739) kind 2: 68.997  FAILED, KNOWN, expected 68.996
6test 10 GeoidKarney('egm96-5.pgm').height(-9.097, 119.142) kind 2: 36.295  FAILED, KNOWN, expected 36.287
6test 11 GeoidKarney('egm96-5.pgm').height(-28.524, -22.192) kind 2: 6.627  FAILED, KNOWN, expected 6.626
6test 12 GeoidKarney('egm96-5.pgm').height(12.272, -136.424) kind 2: -20.860
6test 13 GeoidKarney('egm96-5.pgm').height(-15.203, -85.604) kind 2: -3.266  FAILED, KNOWN, expected -3.267
6test 14 GeoidKarney('egm96-5.pgm').height(-63.736, -77.17) kind 2: -1.296  FAILED, KNOWN, expected -1.294
6test 15 GeoidKarney('egm96-5.pgm').height(-48.771, -90.102) kind 2: -2.322
6test 16 GeoidKarney('egm96-5.pgm').height(-0.179, -126.368) kind 2: -17.556  FAILED, KNOWN, expected -17.557
6test 17 GeoidKarney('egm96-5.pgm').height(1.586, -128.887) kind 2: -16.594
6test 18 GeoidKarney('egm96-5.pgm').height(-48.781, -2.684) kind 2: 24.455  FAILED, KNOWN, expected 24.453
6test 19 GeoidKarney('egm96-5.pgm').height(-49.092, 136.862) kind 2: -18.591  FAILED, KNOWN, expected -18.592
6test 20 GeoidKarney('egm96-5.pgm').height(47.732, 17.552) kind 2: 44.051  FAILED, KNOWN, expected 44.049
6test 21 GeoidKarney('egm96-5.pgm').height(-49.11, 85.706) kind 2: 18.582  FAILED, KNOWN, expected 18.581
6test 22 GeoidKarney('egm96-5.pgm').height(-49.162, 40.321) kind 2: 44.290  FAILED, KNOWN, expected 44.289
6test 23 GeoidKarney('egm96-5.pgm').height(3.498, 158.118) kind 2: 49.821  FAILED, KNOWN, expected 49.816
6test 24 GeoidKarney('egm96-5.pgm').height(-35.616, 122.648) kind 2: -36.108  FAILED, KNOWN, expected -36.114
6test 25 GeoidKarney('egm96-5.pgm').height(56.598, -96.114) kind 2: -41.046  FAILED, KNOWN, expected -41.048
6test 26 GeoidKarney('egm96-5.pgm').height(-31.85, 149.121) kind 2: 26.457  FAILED, KNOWN, expected 26.456
6test 27 GeoidKarney('egm96-5.pgm').height(-26.569, -177.792) kind 2: 49.309  FAILED, KNOWN, expected 49.317
6test 28 GeoidKarney('egm96-5.pgm').height(76.735, -65.753) kind 2: 20.706  FAILED, KNOWN, expected 20.714
6test 29 GeoidKarney('egm96-5.pgm').height(-21.404, -122.268) kind 2: -7.363  FAILED, KNOWN, expected -7.362
6test 30 GeoidKarney('egm96-5.pgm').height(-77.133, -65.474) kind 2: -16.499  FAILED, KNOWN, expected -16.492
6test 31 GeoidKarney('egm96-5.pgm').height(-58.812, 2.276) kind 2: 18.108  FAILED, KNOWN, expected 18.110
6test 32 GeoidKarney('egm96-5.pgm').height(4.415, 155.683) kind 2: 51.859  FAILED, KNOWN, expected 51.858
6test 33 GeoidKarney('egm96-5.pgm').height(-28.146, 107.081) kind 2: -38.979  FAILED, KNOWN, expected -38.981
6test 34 GeoidKarney('egm96-5.pgm').height(-10.551, -126.69) kind 2: -9.912  FAILED, KNOWN, expected -9.913
6test 35 GeoidKarney('egm96-5.pgm').height(-25.444, -103.337) kind 2: -2.827  FAILED, KNOWN, expected -2.828
6test 36 GeoidKarney('egm96-5.pgm').height(24.436, 46.159) kind 2: -5.719
6test 37 GeoidKarney('egm96-5.pgm').height(-72.889, 37.107) kind 2: 22.420  FAILED, KNOWN, expected 22.426
6test 38 GeoidKarney('egm96-5.pgm').height(-19.629, 13.245) kind 2: 24.546  FAILED, KNOWN, expected 24.545
6test 39 GeoidKarney('egm96-5.pgm').height(-7.602, 171.265) kind 2: 40.651  FAILED, KNOWN, expected 40.652
6test 40 GeoidKarney('egm96-5.pgm').height(-45.364, -1.876) kind 2: 22.380  FAILED, KNOWN, expected 22.383
6test 41 GeoidKarney('egm96-5.pgm').height(-7.292, -69.18) kind 2: 22.185  FAILED, KNOWN, expected 22.182
6test 42 GeoidKarney('egm96-5.pgm').height(-31.566, -166.689) kind 2: 14.927  FAILED, KNOWN, expected 14.930
6test 43 GeoidKarney('egm96-5.pgm').height(-82.751, -162.085) kind 2: -47.093  FAILED, KNOWN, expected -47.094
6test 44 GeoidKarney('egm96-5.pgm').height(-40.7, 99.466) kind 2: -18.421
6test 45 GeoidKarney('egm96-5.pgm').height(48.676, 39.69) kind 2: 10.060  FAILED, KNOWN, expected 10.055
6test 46 GeoidKarney('egm96-5.pgm').height(74.817, -78.404) kind 2: 5.784  FAILED, KNOWN, expected 5.786
6test 47 GeoidKarney('egm96-5.pgm').height(-81.032, -63.865) kind 2: -22.840  FAILED, KNOWN, expected -22.838
6test 48 GeoidKarney('egm96-5.pgm').height(74.022, 9.432) kind 2: 42.988  FAILED, KNOWN, expected 42.989
6test 49 GeoidKarney('egm96-5.pgm').height(-75.071, 17.579) kind 2: 15.351  FAILED, KNOWN, expected 15.353
6test 50 GeoidKarney('egm96-5.pgm').height(-12.546, -54.851) kind 2: -6.341  FAILED, KNOWN, expected -6.337
6test 51 GeoidKarney('egm96-5.pgm').height(-13.621, 42.408) kind 2: -25.551  FAILED, KNOWN, expected -25.555
6test 52 GeoidKarney('egm96-5.pgm').height(-2.266, -91.951) kind 2: -9.921  FAILED, KNOWN, expected -9.923
6test 53 GeoidKarney('egm96-5.pgm').height(-18.672, 42.547) kind 2: -10.861  FAILED, KNOWN, expected -10.852
6test 54 GeoidKarney('egm96-5.pgm').height(-41.44, 157.413) kind 2: -0.136  FAILED, KNOWN, expected -0.135
6test 55 GeoidKarney('egm96-5.pgm').height(53.686, -79.375) kind 2: -43.808  FAILED, KNOWN, expected -43.809
6test 56 GeoidKarney('egm96-5.pgm').height(39.26, -30.351) kind 2: 57.151  FAILED, KNOWN, expected 57.150
6test 57 GeoidKarney('egm96-5.pgm').height(-51.699, -141.493) kind 2: -17.660  FAILED, KNOWN, expected -17.657
6test 58 GeoidKarney('egm96-5.pgm').height(36.585, 4.515) kind 2: 46.356  FAILED, KNOWN, expected 46.358
6test 59 GeoidKarney('egm96-5.pgm').height(39.642, -54.659) kind 2: -14.404
6test 60 GeoidKarney('egm96-5.pgm').height(59.761, 166.567) kind 2: 11.239  FAILED, KNOWN, expected 11.242
6test 61 GeoidKarney('egm96-5.pgm').height(51.83, 13.357) kind 2: 42.236  FAILED, KNOWN, expected 42.237
6test 62 GeoidKarney('egm96-5.pgm').height(-36.531, -175.431) kind 2: 22.148  FAILED, KNOWN, expected 22.147
6test 63 GeoidKarney('egm96-5.pgm').height(-37.08, 125.264) kind 2: -33.395  FAILED, KNOWN, expected -33.396
6test 64 GeoidKarney('egm96-5.pgm').height(-68.651, 92.732) kind 2: 7.965  FAILED, KNOWN, expected 7.961
6test 65 GeoidKarney('egm96-5.pgm').height(35.087, 45.336) kind 2: 7.228  FAILED, KNOWN, expected 7.229
6test 66 GeoidKarney('egm96-5.pgm').height(-61.356, -169.379) kind 2: -44.289  FAILED, KNOWN, expected -44.292
6test 67 GeoidKarney('egm96-5.pgm').height(-36.955, 179.12) kind 2: 21.872  FAILED, KNOWN, expected 21.875
6test 68 GeoidKarney('egm96-5.pgm').height(10.248, -6.714) kind 2: 28.935  FAILED, KNOWN, expected 28.933
6test 69 GeoidKarney('egm96-5.pgm').height(36.868, 84.602) kind 2: -41.255  FAILED, KNOWN, expected -41.238
6test 70 GeoidKarney('egm96-5.pgm').height(28.637, 88.933) kind 2: -31.334  FAILED, KNOWN, expected -31.331
6test 71 GeoidKarney('egm96-5.pgm').height(54.811, -99.968) kind 2: -32.702
6test 72 GeoidKarney('egm96-5.pgm').height(7.611, 145.911) kind 2: 60.118  FAILED, KNOWN, expected 60.117
6test 73 GeoidKarney('egm96-5.pgm').height(59.412, 170.102) kind 2: 6.456  FAILED, KNOWN, expected 6.457
6test 74 GeoidKarney('egm96-5.pgm').height(-61.469, 126.144) kind 2: -31.959  FAILED, KNOWN, expected -31.961
6test 75 GeoidKarney('egm96-5.pgm').height(18.514, -137.083) kind 2: -26.572  FAILED, KNOWN, expected -26.571
6test 76 GeoidKarney('egm96-5.pgm').height(7.854, -126.799) kind 2: -29.761  FAILED, KNOWN, expected -29.760
6test 77 GeoidKarney('egm96-5.pgm').height(47.489, 134.183) kind 2: 21.980
6test 78 GeoidKarney('egm96-5.pgm').height(-34.144, -11.922) kind 2: 16.849
6test 79 GeoidKarney('egm96-5.pgm').height(-58.389, 117.458) kind 2: -20.922  FAILED, KNOWN, expected -20.923
6test 80 GeoidKarney('egm96-5.pgm').height(9.773, 95.846) kind 2: -42.745  FAILED, KNOWN, expected -42.749
6test 81 GeoidKarney('egm96-5.pgm').height(-53.12, 136.994) kind 2: -21.839  FAILED, KNOWN, expected -21.841
6test 82 GeoidKarney('egm96-5.pgm').height(-50.35, 0.075) kind 2: 25.482
6test 83 GeoidKarney('egm96-5.pgm').height(31.438, -170.879) kind 2: -8.845  FAILED, KNOWN, expected -8.847
6test 84 GeoidKarney('egm96-5.pgm').height(37.541, -153.024) kind 2: -19.600  FAILED, KNOWN, expected -19.604
6test 85 GeoidKarney('egm96-5.pgm').height(27.586, 2.444) kind 2: 25.672  FAILED, KNOWN, expected 25.668
6test 86 GeoidKarney('egm96-5.pgm').height(-26.139, -106.201) kind 2: -3.772
6test 87 GeoidKarney('egm96-5.pgm').height(-33.426, -14.84) kind 2: 17.747  FAILED, KNOWN, expected 17.748
6test 88 GeoidKarney('egm96-5.pgm').height(39.586, -153.019) kind 2: -17.838  FAILED, KNOWN, expected -17.839
6test 89 GeoidKarney('egm96-5.pgm').height(-60.79, -2.578) kind 2: 14.293  FAILED, KNOWN, expected 14.292
6test 90 GeoidKarney('egm96-5.pgm').height(-20.131, 21.975) kind 2: 16.529
6test 91 GeoidKarney('egm96-5.pgm').height(75.649, 99.921) kind 2: -8.230  FAILED, KNOWN, expected -8.229
6test 92 GeoidKarney('egm96-5.pgm').height(-0.385, -23.788) kind 2: 9.828  FAILED, KNOWN, expected 9.830
6test 93 GeoidKarney('egm96-5.pgm').height(-51.56, -50.327) kind 2: 6.213  FAILED, KNOWN, expected 6.215
6test 94 GeoidKarney('egm96-5.pgm').height(-43.129, -167.271) kind 2: -2.957  FAILED, KNOWN, expected -2.960
6test 95 GeoidKarney('egm96-5.pgm').height(46.374, 71.948) kind 2: -42.326  FAILED, KNOWN, expected -42.323
6test 96 GeoidKarney('egm96-5.pgm').height(-22.783, 140.657) kind 2: 38.352  FAILED, KNOWN, expected 38.356
6test 97 GeoidKarney('egm96-5.pgm').height(-12.056, 122.804) kind 2: 34.242  FAILED, KNOWN, expected 34.259
6test 98 GeoidKarney('egm96-5.pgm').height(30.127, 94.738) kind 2: -37.390  FAILED, KNOWN, expected -37.397
6test 99 GeoidKarney('egm96-5.pgm').height(46.296, -174.479) kind 2: -2.015  FAILED, KNOWN, expected -2.016
6test 100 GeoidKarney('egm96-5.pgm').height(34.99, 15.052) kind 2: 33.915  FAILED, KNOWN, expected 33.912
6test 101 GeoidKarney('egm96-5.pgm').height(-51.287, 90.565) kind 2: 12.676
6test 102 GeoidKarney('egm96-5.pgm').height(34.217, 141.302) kind 2: 15.729  FAILED, KNOWN, expected 15.692
6test 103 GeoidKarney('egm96-5.pgm').height(-40.423, -142.787) kind 2: -11.117
6test 104 GeoidKarney('egm96-5.pgm').height(-17.854, -170.216) kind 2: 27.443  FAILED, KNOWN, expected 27.437
6test 105 GeoidKarney('egm96-5.pgm').height(47.803, 112.701) kind 2: -23.893  FAILED, KNOWN, expected -23.894
6test 106 GeoidKarney('egm96-5.pgm').height(-23.276, 133.454) kind 2: 18.749  FAILED, KNOWN, expected 18.766
6test 107 GeoidKarney('egm96-5.pgm').height(-26.884, -36.571) kind 2: -7.452
6test 108 GeoidKarney('egm96-5.pgm').height(-37.106, 31.128) kind 2: 30.141  FAILED, KNOWN, expected 30.143
6test 109 GeoidKarney('egm96-5.pgm').height(-75.363, -173.674) kind 2: -61.176  FAILED, KNOWN, expected -61.172
6test 110 GeoidKarney('egm96-5.pgm').height(-18.305, 69.016) kind 2: -24.892  FAILED, KNOWN, expected -24.890
6test 111 GeoidKarney('egm96-5.pgm').height(39.527, 23.58) kind 2: 39.523  FAILED, KNOWN, expected 39.519
6test 112 GeoidKarney('egm96-5.pgm').height(68.903, 30.97) kind 2: 19.417  FAILED, KNOWN, expected 19.419
6test 113 GeoidKarney('egm96-5.pgm').height(53.937, 168.318) kind 2: 2.069
6test 114 GeoidKarney('egm96-5.pgm').height(-38.6, 64.812) kind 2: 25.048
6test 115 GeoidKarney('egm96-5.pgm').height(-41.396, -69.739) kind 2: 22.547
6test 116 GeoidKarney('egm96-5.pgm').height(50.158, 72.319) kind 2: -34.359
6test 117 GeoidKarney('egm96-5.pgm').height(27.692, 176.153) kind 2: -5.454  FAILED, KNOWN, expected -5.453
6test 118 GeoidKarney('egm96-5.pgm').height(-48.419, 170.454) kind 2: -6.802  FAILED, KNOWN, expected -6.804
6test 119 GeoidKarney('egm96-5.pgm').height(-65.346, -124.976) kind 2: -35.053  FAILED, KNOWN, expected -35.054
6test 120 GeoidKarney('egm96-5.pgm').height(-51.873, 167.266) kind 2: -15.417  FAILED, KNOWN, expected -15.418
6test 121 GeoidKarney('egm96-5.pgm').height(-7.263, 84.308) kind 2: -79.556  FAILED, KNOWN, expected -79.557
6test 122 GeoidKarney('egm96-5.pgm').height(-1.461, -105.458) kind 2: -16.894
6test 123 GeoidKarney('egm96-5.pgm').height(7.684, 161.873) kind 2: 36.213  FAILED, KNOWN, expected 36.215
6test 124 GeoidKarney('egm96-5.pgm').height(-31.475, -158.52) kind 2: 3.524  FAILED, KNOWN, expected 3.523
6test 125 GeoidKarney('egm96-5.pgm').height(-36.187, 62.917) kind 2: 23.796  FAILED, KNOWN, expected 23.797
6test 126 GeoidKarney('egm96-5.pgm').height(16.003, 141.687) kind 2: 51.587  FAILED, KNOWN, expected 51.586
6test 127 GeoidKarney('egm96-5.pgm').height(30.182, 86.261) kind 2: -30.131
6test 128 GeoidKarney('egm96-5.pgm').height(-77.304, 159.498) kind 2: -51.853  FAILED, KNOWN, expected -51.848
6test 129 GeoidKarney('egm96-5.pgm').height(39.536, 139.795) kind 2: 37.200  FAILED, KNOWN, expected 37.192
6test 130 GeoidKarney('egm96-5.pgm').height(8.569, 134.618) kind 2: 63.583  FAILED, KNOWN, expected 63.597
6test 131 GeoidKarney('egm96-5.pgm').height(14.473, 90.596) kind 2: -62.636
6test 132 GeoidKarney('egm96-5.pgm').height(-13.138, -99.589) kind 2: -8.717
6test 133 GeoidKarney('egm96-5.pgm').height(34.212, -26.307) kind 2: 40.649  FAILED, KNOWN, expected 40.645
6test 134 GeoidKarney('egm96-5.pgm').height(21.89, 76.371) kind 2: -60.730  FAILED, KNOWN, expected -60.729
6test 135 GeoidKarney('egm96-5.pgm').height(29.793, 120.487) kind 2: 8.784  FAILED, KNOWN, expected 8.783
6test 136 GeoidKarney('egm96-5.pgm').height(15.724, 122.714) kind 2: 31.569  FAILED, KNOWN, expected 31.523
6test 137 GeoidKarney('egm96-5.pgm').height(-66.208, -78.499) kind 2: -6.249  FAILED, KNOWN, expected -6.250
6test 138 GeoidKarney('egm96-5.pgm').height(-39.507, 55.809) kind 2: 32.599
6test 139 GeoidKarney('egm96-5.pgm').height(28.159, 51.476) kind 2: -24.531  FAILED, KNOWN, expected -24.536
6test 140 GeoidKarney('egm96-5.pgm').height(-36.207, 120.205) kind 2: -38.863  FAILED, KNOWN, expected -38.869
6test 141 GeoidKarney('egm96-5.pgm').height(30.575, -99.998) kind 2: -23.214  FAILED, KNOWN, expected -23.213
6test 142 GeoidKarney('egm96-5.pgm').height(-16.993, 37.136) kind 2: -11.824
6test 143 GeoidKarney('egm96-5.pgm').height(-11.477, 12.039) kind 2: 16.712  FAILED, KNOWN, expected 16.709
6test 144 GeoidKarney('egm96-5.pgm').height(30.428, -144.765) kind 2: -22.380  FAILED, KNOWN, expected -22.379
6test 145 GeoidKarney('egm96-5.pgm').height(-17.44, -92.424) kind 2: -4.941
6test 146 GeoidKarney('egm96-5.pgm').height(40.203, 143.43) kind 2: 19.382  FAILED, KNOWN, expected 19.394
6test 147 GeoidKarney('egm96-5.pgm').height(-37.098, -106.574) kind 2: -9.381
6test 148 GeoidKarney('egm96-5.pgm').height(54.62, -68.413) kind 2: -23.319
6test 149 GeoidKarney('egm96-5.pgm').height(-31.633, 148.182) kind 2: 24.470  FAILED, KNOWN, expected 24.468
6test 150 GeoidKarney('egm96-5.pgm').height(-56.07, -141.407) kind 2: -21.762  FAILED, KNOWN, expected -21.761
6test 151 GeoidKarney('egm96-5.pgm').height(-8.195, -52.691) kind 2: -18.798
6test 152 GeoidKarney('egm96-5.pgm').height(17.851, 24.749) kind 2: 12.611  FAILED, KNOWN, expected 12.612
6test 153 GeoidKarney('egm96-5.pgm').height(0.349, -108.333) kind 2: -19.708  FAILED, KNOWN, expected -19.706
6test 154 GeoidKarney('egm96-5.pgm').height(15.038, 126.191) kind 2: 45.794  FAILED, KNOWN, expected 45.792
6test 155 GeoidKarney('egm96-5.pgm').height(-21.111, -123.696) kind 2: -8.408  FAILED, KNOWN, expected -8.406
6test 156 GeoidKarney('egm96-5.pgm').height(30.947, 173.002) kind 2: -8.366  FAILED, KNOWN, expected -8.367
6test 157 GeoidKarney('egm96-5.pgm').height(-10.698, -144.091) kind 2: -2.026  FAILED, KNOWN, expected -2.025
6test 158 GeoidKarney('egm96-5.pgm').height(-29.412, 124.753) kind 2: -16.569
6test 159 GeoidKarney('egm96-5.pgm').height(38.224, -137.189) kind 2: -35.434  FAILED, KNOWN, expected -35.435
6test 160 GeoidKarney('egm96-5.pgm').height(36.064, -132.409) kind 2: -39.009
6test 161 GeoidKarney('egm96-5.pgm').height(29.975, 178.076) kind 2: -6.921
6test 162 GeoidKarney('egm96-5.pgm').height(-21.346, 169.26) kind 2: 50.811  FAILED, KNOWN, expected 50.795
6test 163 GeoidKarney('egm96-5.pgm').height(49.282, -152.934) kind 2: 1.069  FAILED, KNOWN, expected 1.070
6test 164 GeoidKarney('egm96-5.pgm').height(16.349, -99.962) kind 2: -14.198  FAILED, KNOWN, expected -14.214
6test 165 GeoidKarney('egm96-5.pgm').height(-14.293, -167.34) kind 2: 17.603  FAILED, KNOWN, expected 17.600
6test 166 GeoidKarney('egm96-5.pgm').height(47.166, -38.523) kind 2: 44.803  FAILED, KNOWN, expected 44.804
6test 167 GeoidKarney('egm96-5.pgm').height(-58.911, 114.347) kind 2: -17.924  FAILED, KNOWN, expected -17.922
6test 168 GeoidKarney('egm96-5.pgm').height(-9.055, 111.294) kind 2: 10.681  FAILED, KNOWN, expected 10.662
6test 169 GeoidKarney('egm96-5.pgm').height(18.391, 29.692) kind 2: 7.672  FAILED, KNOWN, expected 7.670
6test 170 GeoidKarney('egm96-5.pgm').height(-15.074, 22.153) kind 2: 8.622  FAILED, KNOWN, expected 8.623
6test 171 GeoidKarney('egm96-5.pgm').height(-4.235, 62.001) kind 2: -60.723
6test 172 GeoidKarney('egm96-5.pgm').height(15.171, -86.583) kind 2: 3.818
6test 173 GeoidKarney('egm96-5.pgm').height(79.254, 112.116) kind 2: -1.870  FAILED, KNOWN, expected -1.871
6test 174 GeoidKarney('egm96-5.pgm').height(15.947, 156.093) kind 2: 30.642  FAILED, KNOWN, expected 30.633
6test 175 GeoidKarney('egm96-5.pgm').height(68.371, -177.382) kind 2: 2.801
6test 176 GeoidKarney('egm96-5.pgm').height(-41.931, -72.093) kind 2: 19.858  FAILED, KNOWN, expected 19.859
6test 177 GeoidKarney('egm96-5.pgm').height(-1.193, -143.133) kind 2: 5.347  FAILED, KNOWN, expected 5.348
6test 178 GeoidKarney('egm96-5.pgm').height(-37.006, 154.513) kind 2: 9.940  FAILED, KNOWN, expected 9.941
6test 179 GeoidKarney('egm96-5.pgm').height(-22.148, 9.938) kind 2: 22.322  FAILED, KNOWN, expected 22.321
6test 180 GeoidKarney('egm96-5.pgm').height(24.329, 109.044) kind 2: -24.136  FAILED, KNOWN, expected -24.135
6test 181 GeoidKarney('egm96-5.pgm').height(-54.878, 114.691) kind 2: -17.680  FAILED, KNOWN, expected -17.679
6test 182 GeoidKarney('egm96-5.pgm').height(45.601, -80.458) kind 2: -37.149  FAILED, KNOWN, expected -37.150
6test 183 GeoidKarney('egm96-5.pgm').height(2.372, 58.974) kind 2: -61.158
6test 184 GeoidKarney('egm96-5.pgm').height(15.937, 165.854) kind 2: 20.600  FAILED, KNOWN, expected 20.602
6test 185 GeoidKarney('egm96-5.pgm').height(4.889, -24.213) kind 2: 13.054  FAILED, KNOWN, expected 13.055
6test 186 GeoidKarney('egm96-5.pgm').height(-11.392, 179.558) kind 2: 40.138  FAILED, KNOWN, expected 40.132
6test 187 GeoidKarney('egm96-5.pgm').height(58.246, 4.862) kind 2: 43.263
6test 188 GeoidKarney('egm96-5.pgm').height(34.302, -109.109) kind 2: -23.129  FAILED, KNOWN, expected -23.126
6test 189 GeoidKarney('egm96-5.pgm').height(-58.196, 117.306) kind 2: -20.677  FAILED, KNOWN, expected -20.678
6test 190 GeoidKarney('egm96-5.pgm').height(44.5, 173.769) kind 2: -8.531  FAILED, KNOWN, expected -8.529
6test 191 GeoidKarney('egm96-5.pgm').height(-28.863, -139.775) kind 2: -8.669  FAILED, KNOWN, expected -8.666
6test 192 GeoidKarney('egm96-5.pgm').height(19.507, -96.099) kind 2: -12.798  FAILED, KNOWN, expected -12.796
6test 193 GeoidKarney('egm96-5.pgm').height(-42.488, -73.907) kind 2: 15.770  FAILED, KNOWN, expected 15.773
6test 194 GeoidKarney('egm96-5.pgm').height(46.138, -141.429) kind 2: -19.955  FAILED, KNOWN, expected -19.954
6test 195 GeoidKarney('egm96-5.pgm').height(60.507, 93.743) kind 2: -31.479  FAILED, KNOWN, expected -31.480
6test 196 GeoidKarney('egm96-5.pgm').height(26.219, -145.434) kind 2: -17.428  FAILED, KNOWN, expected -17.429
6test 197 GeoidKarney('egm96-5.pgm').height(-28.687, 3.37) kind 2: 24.037
6test 198 GeoidKarney('egm96-5.pgm').height(-15.008, 117.45) kind 2: 4.522  FAILED, KNOWN, expected 4.520
6test 199 GeoidKarney('egm96-5.pgm').height(40.71, 144.095) kind 2: 11.403  FAILED, KNOWN, expected 11.394
6test 200 GeoidKarney('egm96-5.pgm').height(20.823, -173.611) kind 2: 5.676  FAILED, KNOWN, expected 5.679
6test 201 GeoidKarney('egm96-5.pgm').height(16.776, -3.009) kind 2: 28.705  FAILED, KNOWN, expected 28.707
6test 202 GeoidKarney('egm96-5.pgm').height(41.0, -95.0) kind 2: -30.261  FAILED, KNOWN, expected -30.262
6test 203 GeoidKarney('egm96-5.pgm').height(49.0, -120.5) kind 2: -15.984
6test 204 GeoidKarney('egm96-5.pgm').height(49.0, -103.5) kind 2: -18.636  FAILED, KNOWN, expected -18.635
6test 205 GeoidKarney('egm96-5.pgm').height(49.0, -86.5) kind 2: -37.749
6test 206 GeoidKarney('egm96-5.pgm').height(49.0, -69.5) kind 2: -26.691
6test 207 GeoidKarney('egm96-5.pgm').height(33.0, -120.5) kind 2: -39.561
6test 208 GeoidKarney('egm96-5.pgm').height(33.0, -103.5) kind 2: -22.563  FAILED, KNOWN, expected -22.562
6test 209 GeoidKarney('egm96-5.pgm').height(33.0, -86.5) kind 2: -30.012
6test 210 GeoidKarney('egm96-5.pgm').height(33.0, -69.5) kind 2: -48.039
6test 211 GeoidKarney('egm96-5.pgm').height() kind 2, hits 0, eps max (in 0 FAILED): 0.046496
6test 212 GeoidKarney('egm96-5.pgm').height() kind 2, hits 0, eps mean (of 210 total): 0.002766
6test 213 GeoidKarney('egm96-5.pgm').height() kind 2, hits 0, eps stdev (of 210 total): 0.005116
6test 214 GeoidKarney('egm96-5.pgm').highest(): -8.167, 147.25, 85.422
6test 215 GeoidKarney('egm96-5.pgm').lowerleft(): -90.0, -180.0, -29.535
6test 216 GeoidKarney('egm96-5.pgm').lowerright(): -90.0, 180.0, -29.535
6test 217 GeoidKarney('egm96-5.pgm').lowest(): 4.667, 78.833, -107.043
6test 218 GeoidKarney('egm96-5.pgm').upperleft(): 90.0, -180.0, 13.605
6test 219 GeoidKarney('egm96-5.pgm').upperright(): 90.0, 180.0, 13.605
6test 220 GeoidKarney('egm96-5.pgm').dtype: ("'ushort'",)
6test 221 GeoidKarney('egm96-5.pgm').knots: ('9335520',)
6test 222 GeoidKarney('egm96-5.pgm').mean: ('-1.317',)
6test 223 GeoidKarney('egm96-5.pgm').nBytes: ('None',)
6test 224 GeoidKarney('egm96-5.pgm').smooth: ('None',)
6test 225 GeoidKarney('egm96-5.pgm').stdev: ('29.244',)
6test 226 GeoidKarney('egm96-5.pgm')._g2ll2(180, 360): (180, 0.0)
6test 227 GeoidKarney('egm96-5.pgm')._ll2g2(180, 360): (180, 360)
6test 228 GeoidKarney('egm96-5.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 229 GeoidKarney('egm96-5.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 230 GeoidKarney('egm96-5.pgm').toStr: GeoidKarney('egm96-5.pgm'): lowerleft(-90.0, -180.0, -29.535), upperright(90.0, 180.0, 13.605), center(0.0, 0.0, 17.163), highest(-8.167, 147.25, 85.422), lowest(4.667, 78.833, -107.043)

6test 231 closed: True
6test 232 copy(GeoidKarney): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 233 GeoidKarney.copy(): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 234 GeoidKarney('egm96-5.pgm').height(-76.981, 34.17) kind 3: 11.424  FAILED, KNOWN, expected 11.423
6test 235 GeoidKarney('egm96-5.pgm').height(79.695, 88.806) kind 3: 0.892
6test 236 GeoidKarney('egm96-5.pgm').height(-15.245, 168.748) kind 3: 65.225  FAILED, KNOWN, expected 65.226
6test 237 GeoidKarney('egm96-5.pgm').height(-19.379, 15.855) kind 3: 24.464  FAILED, KNOWN, expected 24.463
6test 238 GeoidKarney('egm96-5.pgm').height(43.378, -130.552) kind 3: -29.682
6test 239 GeoidKarney('egm96-5.pgm').height(-16.075, 21.795) kind 3: 10.503
6test 240 GeoidKarney('egm96-5.pgm').height(-11.256, -73.75) kind 3: 29.325  FAILED, KNOWN, expected 29.326
6test 241 GeoidKarney('egm96-5.pgm').height(69.017, -15.921) kind 3: 60.423  FAILED, KNOWN, expected 60.424
6test 242 GeoidKarney('egm96-5.pgm').height(2.221, 139.739) kind 3: 68.996
6test 243 GeoidKarney('egm96-5.pgm').height(-9.097, 119.142) kind 3: 36.287
6test 244 GeoidKarney('egm96-5.pgm').height(-28.524, -22.192) kind 3: 6.626
6test 245 GeoidKarney('egm96-5.pgm').height(12.272, -136.424) kind 3: -20.861  FAILED, KNOWN, expected -20.860
6test 246 GeoidKarney('egm96-5.pgm').height(-15.203, -85.604) kind 3: -3.267
6test 247 GeoidKarney('egm96-5.pgm').height(-63.736, -77.17) kind 3: -1.295  FAILED, KNOWN, expected -1.294
6test 248 GeoidKarney('egm96-5.pgm').height(-48.771, -90.102) kind 3: -2.323  FAILED, KNOWN, expected -2.322
6test 249 GeoidKarney('egm96-5.pgm').height(-0.179, -126.368) kind 3: -17.555  FAILED, KNOWN, expected -17.557
6test 250 GeoidKarney('egm96-5.pgm').height(1.586, -128.887) kind 3: -16.594
6test 251 GeoidKarney('egm96-5.pgm').height(-48.781, -2.684) kind 3: 24.454  FAILED, KNOWN, expected 24.453
6test 252 GeoidKarney('egm96-5.pgm').height(-49.092, 136.862) kind 3: -18.592
6test 253 GeoidKarney('egm96-5.pgm').height(47.732, 17.552) kind 3: 44.048  FAILED, KNOWN, expected 44.049
6test 254 GeoidKarney('egm96-5.pgm').height(-49.11, 85.706) kind 3: 18.582  FAILED, KNOWN, expected 18.581
6test 255 GeoidKarney('egm96-5.pgm').height(-49.162, 40.321) kind 3: 44.290  FAILED, KNOWN, expected 44.289
6test 256 GeoidKarney('egm96-5.pgm').height(3.498, 158.118) kind 3: 49.817  FAILED, KNOWN, expected 49.816
6test 257 GeoidKarney('egm96-5.pgm').height(-35.616, 122.648) kind 3: -36.114
6test 258 GeoidKarney('egm96-5.pgm').height(56.598, -96.114) kind 3: -41.047  FAILED, KNOWN, expected -41.048
6test 259 GeoidKarney('egm96-5.pgm').height(-31.85, 149.121) kind 3: 26.456
6test 260 GeoidKarney('egm96-5.pgm').height(-26.569, -177.792) kind 3: 49.317
6test 261 GeoidKarney('egm96-5.pgm').height(76.735, -65.753) kind 3: 20.714
6test 262 GeoidKarney('egm96-5.pgm').height(-21.404, -122.268) kind 3: -7.362
6test 263 GeoidKarney('egm96-5.pgm').height(-77.133, -65.474) kind 3: -16.491  FAILED, KNOWN, expected -16.492
6test 264 GeoidKarney('egm96-5.pgm').height(-58.812, 2.276) kind 3: 18.110
6test 265 GeoidKarney('egm96-5.pgm').height(4.415, 155.683) kind 3: 51.858
6test 266 GeoidKarney('egm96-5.pgm').height(-28.146, 107.081) kind 3: -38.979  FAILED, KNOWN, expected -38.981
6test 267 GeoidKarney('egm96-5.pgm').height(-10.551, -126.69) kind 3: -9.913
6test 268 GeoidKarney('egm96-5.pgm').height(-25.444, -103.337) kind 3: -2.828
6test 269 GeoidKarney('egm96-5.pgm').height(24.436, 46.159) kind 3: -5.718  FAILED, KNOWN, expected -5.719
6test 270 GeoidKarney('egm96-5.pgm').height(-72.889, 37.107) kind 3: 22.427  FAILED, KNOWN, expected 22.426
6test 271 GeoidKarney('egm96-5.pgm').height(-19.629, 13.245) kind 3: 24.545
6test 272 GeoidKarney('egm96-5.pgm').height(-7.602, 171.265) kind 3: 40.651  FAILED, KNOWN, expected 40.652
6test 273 GeoidKarney('egm96-5.pgm').height(-45.364, -1.876) kind 3: 22.383
6test 274 GeoidKarney('egm96-5.pgm').height(-7.292, -69.18) kind 3: 22.183  FAILED, KNOWN, expected 22.182
6test 275 GeoidKarney('egm96-5.pgm').height(-31.566, -166.689) kind 3: 14.929  FAILED, KNOWN, expected 14.930
6test 276 GeoidKarney('egm96-5.pgm').height(-82.751, -162.085) kind 3: -47.094
6test 277 GeoidKarney('egm96-5.pgm').height(-40.7, 99.466) kind 3: -18.421
6test 278 GeoidKarney('egm96-5.pgm').height(48.676, 39.69) kind 3: 10.055
6test 279 GeoidKarney('egm96-5.pgm').height(74.817, -78.404) kind 3: 5.786
6test 280 GeoidKarney('egm96-5.pgm').height(-81.032, -63.865) kind 3: -22.838
6test 281 GeoidKarney('egm96-5.pgm').height(74.022, 9.432) kind 3: 42.989
6test 282 GeoidKarney('egm96-5.pgm').height(-75.071, 17.579) kind 3: 15.352  FAILED, KNOWN, expected 15.353
6test 283 GeoidKarney('egm96-5.pgm').height(-12.546, -54.851) kind 3: -6.338  FAILED, KNOWN, expected -6.337
6test 284 GeoidKarney('egm96-5.pgm').height(-13.621, 42.408) kind 3: -25.554  FAILED, KNOWN, expected -25.555
6test 285 GeoidKarney('egm96-5.pgm').height(-2.266, -91.951) kind 3: -9.922  FAILED, KNOWN, expected -9.923
6test 286 GeoidKarney('egm96-5.pgm').height(-18.672, 42.547) kind 3: -10.853  FAILED, KNOWN, expected -10.852
6test 287 GeoidKarney('egm96-5.pgm').height(-41.44, 157.413) kind 3: -0.135
6test 288 GeoidKarney('egm96-5.pgm').height(53.686, -79.375) kind 3: -43.809
6test 289 GeoidKarney('egm96-5.pgm').height(39.26, -30.351) kind 3: 57.150
6test 290 GeoidKarney('egm96-5.pgm').height(-51.699, -141.493) kind 3: -17.656  FAILED, KNOWN, expected -17.657
6test 291 GeoidKarney('egm96-5.pgm').height(36.585, 4.515) kind 3: 46.359  FAILED, KNOWN, expected 46.358
6test 292 GeoidKarney('egm96-5.pgm').height(39.642, -54.659) kind 3: -14.404
6test 293 GeoidKarney('egm96-5.pgm').height(59.761, 166.567) kind 3: 11.242
6test 294 GeoidKarney('egm96-5.pgm').height(51.83, 13.357) kind 3: 42.237
6test 295 GeoidKarney('egm96-5.pgm').height(-36.531, -175.431) kind 3: 22.147
6test 296 GeoidKarney('egm96-5.pgm').height(-37.08, 125.264) kind 3: -33.396
6test 297 GeoidKarney('egm96-5.pgm').height(-68.651, 92.732) kind 3: 7.961
6test 298 GeoidKarney('egm96-5.pgm').height(35.087, 45.336) kind 3: 7.228  FAILED, KNOWN, expected 7.229
6test 299 GeoidKarney('egm96-5.pgm').height(-61.356, -169.379) kind 3: -44.290  FAILED, KNOWN, expected -44.292
6test 300 GeoidKarney('egm96-5.pgm').height(-36.955, 179.12) kind 3: 21.874  FAILED, KNOWN, expected 21.875
6test 301 GeoidKarney('egm96-5.pgm').height(10.248, -6.714) kind 3: 28.933
6test 302 GeoidKarney('egm96-5.pgm').height(36.868, 84.602) kind 3: -41.238
6test 303 GeoidKarney('egm96-5.pgm').height(28.637, 88.933) kind 3: -31.331
6test 304 GeoidKarney('egm96-5.pgm').height(54.811, -99.968) kind 3: -32.702
6test 305 GeoidKarney('egm96-5.pgm').height(7.611, 145.911) kind 3: 60.117
6test 306 GeoidKarney('egm96-5.pgm').height(59.412, 170.102) kind 3: 6.457
6test 307 GeoidKarney('egm96-5.pgm').height(-61.469, 126.144) kind 3: -31.961
6test 308 GeoidKarney('egm96-5.pgm').height(18.514, -137.083) kind 3: -26.572  FAILED, KNOWN, expected -26.571
6test 309 GeoidKarney('egm96-5.pgm').height(7.854, -126.799) kind 3: -29.761  FAILED, KNOWN, expected -29.760
6test 310 GeoidKarney('egm96-5.pgm').height(47.489, 134.183) kind 3: 21.981  FAILED, KNOWN, expected 21.980
6test 311 GeoidKarney('egm96-5.pgm').height(-34.144, -11.922) kind 3: 16.849
6test 312 GeoidKarney('egm96-5.pgm').height(-58.389, 117.458) kind 3: -20.923
6test 313 GeoidKarney('egm96-5.pgm').height(9.773, 95.846) kind 3: -42.749
6test 314 GeoidKarney('egm96-5.pgm').height(-53.12, 136.994) kind 3: -21.840  FAILED, KNOWN, expected -21.841
6test 315 GeoidKarney('egm96-5.pgm').height(-50.35, 0.075) kind 3: 25.481  FAILED, KNOWN, expected 25.482
6test 316 GeoidKarney('egm96-5.pgm').height(31.438, -170.879) kind 3: -8.846  FAILED, KNOWN, expected -8.847
6test 317 GeoidKarney('egm96-5.pgm').height(37.541, -153.024) kind 3: -19.603  FAILED, KNOWN, expected -19.604
6test 318 GeoidKarney('egm96-5.pgm').height(27.586, 2.444) kind 3: 25.668
6test 319 GeoidKarney('egm96-5.pgm').height(-26.139, -106.201) kind 3: -3.772
6test 320 GeoidKarney('egm96-5.pgm').height(-33.426, -14.84) kind 3: 17.747  FAILED, KNOWN, expected 17.748
6test 321 GeoidKarney('egm96-5.pgm').height(39.586, -153.019) kind 3: -17.838  FAILED, KNOWN, expected -17.839
6test 322 GeoidKarney('egm96-5.pgm').height(-60.79, -2.578) kind 3: 14.292
6test 323 GeoidKarney('egm96-5.pgm').height(-20.131, 21.975) kind 3: 16.529
6test 324 GeoidKarney('egm96-5.pgm').height(75.649, 99.921) kind 3: -8.230  FAILED, KNOWN, expected -8.229
6test 325 GeoidKarney('egm96-5.pgm').height(-0.385, -23.788) kind 3: 9.831  FAILED, KNOWN, expected 9.830
6test 326 GeoidKarney('egm96-5.pgm').height(-51.56, -50.327) kind 3: 6.215
6test 327 GeoidKarney('egm96-5.pgm').height(-43.129, -167.271) kind 3: -2.960
6test 328 GeoidKarney('egm96-5.pgm').height(46.374, 71.948) kind 3: -42.323
6test 329 GeoidKarney('egm96-5.pgm').height(-22.783, 140.657) kind 3: 38.356
6test 330 GeoidKarney('egm96-5.pgm').height(-12.056, 122.804) kind 3: 34.259
6test 331 GeoidKarney('egm96-5.pgm').height(30.127, 94.738) kind 3: -37.397
6test 332 GeoidKarney('egm96-5.pgm').height(46.296, -174.479) kind 3: -2.017  FAILED, KNOWN, expected -2.016
6test 333 GeoidKarney('egm96-5.pgm').height(34.99, 15.052) kind 3: 33.912
6test 334 GeoidKarney('egm96-5.pgm').height(-51.287, 90.565) kind 3: 12.676
6test 335 GeoidKarney('egm96-5.pgm').height(34.217, 141.302) kind 3: 15.692
6test 336 GeoidKarney('egm96-5.pgm').height(-40.423, -142.787) kind 3: -11.117
6test 337 GeoidKarney('egm96-5.pgm').height(-17.854, -170.216) kind 3: 27.437
6test 338 GeoidKarney('egm96-5.pgm').height(47.803, 112.701) kind 3: -23.894
6test 339 GeoidKarney('egm96-5.pgm').height(-23.276, 133.454) kind 3: 18.765  FAILED, KNOWN, expected 18.766
6test 340 GeoidKarney('egm96-5.pgm').height(-26.884, -36.571) kind 3: -7.452
6test 341 GeoidKarney('egm96-5.pgm').height(-37.106, 31.128) kind 3: 30.143
6test 342 GeoidKarney('egm96-5.pgm').height(-75.363, -173.674) kind 3: -61.172
6test 343 GeoidKarney('egm96-5.pgm').height(-18.305, 69.016) kind 3: -24.890
6test 344 GeoidKarney('egm96-5.pgm').height(39.527, 23.58) kind 3: 39.519
6test 345 GeoidKarney('egm96-5.pgm').height(68.903, 30.97) kind 3: 19.420  FAILED, KNOWN, expected 19.419
6test 346 GeoidKarney('egm96-5.pgm').height(53.937, 168.318) kind 3: 2.067  FAILED, KNOWN, expected 2.069
6test 347 GeoidKarney('egm96-5.pgm').height(-38.6, 64.812) kind 3: 25.049  FAILED, KNOWN, expected 25.048
6test 348 GeoidKarney('egm96-5.pgm').height(-41.396, -69.739) kind 3: 22.546  FAILED, KNOWN, expected 22.547
6test 349 GeoidKarney('egm96-5.pgm').height(50.158, 72.319) kind 3: -34.358  FAILED, KNOWN, expected -34.359
6test 350 GeoidKarney('egm96-5.pgm').height(27.692, 176.153) kind 3: -5.454  FAILED, KNOWN, expected -5.453
6test 351 GeoidKarney('egm96-5.pgm').height(-48.419, 170.454) kind 3: -6.804
6test 352 GeoidKarney('egm96-5.pgm').height(-65.346, -124.976) kind 3: -35.053  FAILED, KNOWN, expected -35.054
6test 353 GeoidKarney('egm96-5.pgm').height(-51.873, 167.266) kind 3: -15.417  FAILED, KNOWN, expected -15.418
6test 354 GeoidKarney('egm96-5.pgm').height(-7.263, 84.308) kind 3: -79.557
6test 355 GeoidKarney('egm96-5.pgm').height(-1.461, -105.458) kind 3: -16.894
6test 356 GeoidKarney('egm96-5.pgm').height(7.684, 161.873) kind 3: 36.215
6test 357 GeoidKarney('egm96-5.pgm').height(-31.475, -158.52) kind 3: 3.523
6test 358 GeoidKarney('egm96-5.pgm').height(-36.187, 62.917) kind 3: 23.797
6test 359 GeoidKarney('egm96-5.pgm').height(16.003, 141.687) kind 3: 51.587  FAILED, KNOWN, expected 51.586
6test 360 GeoidKarney('egm96-5.pgm').height(30.182, 86.261) kind 3: -30.131
6test 361 GeoidKarney('egm96-5.pgm').height(-77.304, 159.498) kind 3: -51.849  FAILED, KNOWN, expected -51.848
6test 362 GeoidKarney('egm96-5.pgm').height(39.536, 139.795) kind 3: 37.191  FAILED, KNOWN, expected 37.192
6test 363 GeoidKarney('egm96-5.pgm').height(8.569, 134.618) kind 3: 63.596  FAILED, KNOWN, expected 63.597
6test 364 GeoidKarney('egm96-5.pgm').height(14.473, 90.596) kind 3: -62.636
6test 365 GeoidKarney('egm96-5.pgm').height(-13.138, -99.589) kind 3: -8.718  FAILED, KNOWN, expected -8.717
6test 366 GeoidKarney('egm96-5.pgm').height(34.212, -26.307) kind 3: 40.645
6test 367 GeoidKarney('egm96-5.pgm').height(21.89, 76.371) kind 3: -60.729
6test 368 GeoidKarney('egm96-5.pgm').height(29.793, 120.487) kind 3: 8.784  FAILED, KNOWN, expected 8.783
6test 369 GeoidKarney('egm96-5.pgm').height(15.724, 122.714) kind 3: 31.523
6test 370 GeoidKarney('egm96-5.pgm').height(-66.208, -78.499) kind 3: -6.251  FAILED, KNOWN, expected -6.250
6test 371 GeoidKarney('egm96-5.pgm').height(-39.507, 55.809) kind 3: 32.598  FAILED, KNOWN, expected 32.599
6test 372 GeoidKarney('egm96-5.pgm').height(28.159, 51.476) kind 3: -24.536
6test 373 GeoidKarney('egm96-5.pgm').height(-36.207, 120.205) kind 3: -38.869
6test 374 GeoidKarney('egm96-5.pgm').height(30.575, -99.998) kind 3: -23.212  FAILED, KNOWN, expected -23.213
6test 375 GeoidKarney('egm96-5.pgm').height(-16.993, 37.136) kind 3: -11.824
6test 376 GeoidKarney('egm96-5.pgm').height(-11.477, 12.039) kind 3: 16.710  FAILED, KNOWN, expected 16.709
6test 377 GeoidKarney('egm96-5.pgm').height(30.428, -144.765) kind 3: -22.378  FAILED, KNOWN, expected -22.379
6test 378 GeoidKarney('egm96-5.pgm').height(-17.44, -92.424) kind 3: -4.941
6test 379 GeoidKarney('egm96-5.pgm').height(40.203, 143.43) kind 3: 19.394
6test 380 GeoidKarney('egm96-5.pgm').height(-37.098, -106.574) kind 3: -9.381
6test 381 GeoidKarney('egm96-5.pgm').height(54.62, -68.413) kind 3: -23.318  FAILED, KNOWN, expected -23.319
6test 382 GeoidKarney('egm96-5.pgm').height(-31.633, 148.182) kind 3: 24.467  FAILED, KNOWN, expected 24.468
6test 383 GeoidKarney('egm96-5.pgm').height(-56.07, -141.407) kind 3: -21.761
6test 384 GeoidKarney('egm96-5.pgm').height(-8.195, -52.691) kind 3: -18.798
6test 385 GeoidKarney('egm96-5.pgm').height(17.851, 24.749) kind 3: 12.612
6test 386 GeoidKarney('egm96-5.pgm').height(0.349, -108.333) kind 3: -19.708  FAILED, KNOWN, expected -19.706
6test 387 GeoidKarney('egm96-5.pgm').height(15.038, 126.191) kind 3: 45.792
6test 388 GeoidKarney('egm96-5.pgm').height(-21.111, -123.696) kind 3: -8.406
6test 389 GeoidKarney('egm96-5.pgm').height(30.947, 173.002) kind 3: -8.367
6test 390 GeoidKarney('egm96-5.pgm').height(-10.698, -144.091) kind 3: -2.026  FAILED, KNOWN, expected -2.025
6test 391 GeoidKarney('egm96-5.pgm').height(-29.412, 124.753) kind 3: -16.567  FAILED, KNOWN, expected -16.569
6test 392 GeoidKarney('egm96-5.pgm').height(38.224, -137.189) kind 3: -35.435
6test 393 GeoidKarney('egm96-5.pgm').height(36.064, -132.409) kind 3: -39.008  FAILED, KNOWN, expected -39.009
6test 394 GeoidKarney('egm96-5.pgm').height(29.975, 178.076) kind 3: -6.921
6test 395 GeoidKarney('egm96-5.pgm').height(-21.346, 169.26) kind 3: 50.795
6test 396 GeoidKarney('egm96-5.pgm').height(49.282, -152.934) kind 3: 1.071  FAILED, KNOWN, expected 1.070
6test 397 GeoidKarney('egm96-5.pgm').height(16.349, -99.962) kind 3: -14.214
6test 398 GeoidKarney('egm96-5.pgm').height(-14.293, -167.34) kind 3: 17.600
6test 399 GeoidKarney('egm96-5.pgm').height(47.166, -38.523) kind 3: 44.803  FAILED, KNOWN, expected 44.804
6test 400 GeoidKarney('egm96-5.pgm').height(-58.911, 114.347) kind 3: -17.923  FAILED, KNOWN, expected -17.922
6test 401 GeoidKarney('egm96-5.pgm').height(-9.055, 111.294) kind 3: 10.662
6test 402 GeoidKarney('egm96-5.pgm').height(18.391, 29.692) kind 3: 7.670
6test 403 GeoidKarney('egm96-5.pgm').height(-15.074, 22.153) kind 3: 8.624  FAILED, KNOWN, expected 8.623
6test 404 GeoidKarney('egm96-5.pgm').height(-4.235, 62.001) kind 3: -60.722  FAILED, KNOWN, expected -60.723
6test 405 GeoidKarney('egm96-5.pgm').height(15.171, -86.583) kind 3: 3.820  FAILED, KNOWN, expected 3.818
6test 406 GeoidKarney('egm96-5.pgm').height(79.254, 112.116) kind 3: -1.871
6test 407 GeoidKarney('egm96-5.pgm').height(15.947, 156.093) kind 3: 30.634  FAILED, KNOWN, expected 30.633
6test 408 GeoidKarney('egm96-5.pgm').height(68.371, -177.382) kind 3: 2.800  FAILED, KNOWN, expected 2.801
6test 409 GeoidKarney('egm96-5.pgm').height(-41.931, -72.093) kind 3: 19.858  FAILED, KNOWN, expected 19.859
6test 410 GeoidKarney('egm96-5.pgm').height(-1.193, -143.133) kind 3: 5.347  FAILED, KNOWN, expected 5.348
6test 411 GeoidKarney('egm96-5.pgm').height(-37.006, 154.513) kind 3: 9.941
6test 412 GeoidKarney('egm96-5.pgm').height(-22.148, 9.938) kind 3: 22.322  FAILED, KNOWN, expected 22.321
6test 413 GeoidKarney('egm96-5.pgm').height(24.329, 109.044) kind 3: -24.135
6test 414 GeoidKarney('egm96-5.pgm').height(-54.878, 114.691) kind 3: -17.680  FAILED, KNOWN, expected -17.679
6test 415 GeoidKarney('egm96-5.pgm').height(45.601, -80.458) kind 3: -37.151  FAILED, KNOWN, expected -37.150
6test 416 GeoidKarney('egm96-5.pgm').height(2.372, 58.974) kind 3: -61.158
6test 417 GeoidKarney('egm96-5.pgm').height(15.937, 165.854) kind 3: 20.603  FAILED, KNOWN, expected 20.602
6test 418 GeoidKarney('egm96-5.pgm').height(4.889, -24.213) kind 3: 13.056  FAILED, KNOWN, expected 13.055
6test 419 GeoidKarney('egm96-5.pgm').height(-11.392, 179.558) kind 3: 40.133  FAILED, KNOWN, expected 40.132
6test 420 GeoidKarney('egm96-5.pgm').height(58.246, 4.862) kind 3: 43.263
6test 421 GeoidKarney('egm96-5.pgm').height(34.302, -109.109) kind 3: -23.126
6test 422 GeoidKarney('egm96-5.pgm').height(-58.196, 117.306) kind 3: -20.678
6test 423 GeoidKarney('egm96-5.pgm').height(44.5, 173.769) kind 3: -8.530  FAILED, KNOWN, expected -8.529
6test 424 GeoidKarney('egm96-5.pgm').height(-28.863, -139.775) kind 3: -8.666
6test 425 GeoidKarney('egm96-5.pgm').height(19.507, -96.099) kind 3: -12.795  FAILED, KNOWN, expected -12.796
6test 426 GeoidKarney('egm96-5.pgm').height(-42.488, -73.907) kind 3: 15.774  FAILED, KNOWN, expected 15.773
6test 427 GeoidKarney('egm96-5.pgm').height(46.138, -141.429) kind 3: -19.955  FAILED, KNOWN, expected -19.954
6test 428 GeoidKarney('egm96-5.pgm').height(60.507, 93.743) kind 3: -31.480
6test 429 GeoidKarney('egm96-5.pgm').height(26.219, -145.434) kind 3: -17.428  FAILED, KNOWN, expected -17.429
6test 430 GeoidKarney('egm96-5.pgm').height(-28.687, 3.37) kind 3: 24.037
6test 431 GeoidKarney('egm96-5.pgm').height(-15.008, 117.45) kind 3: 4.519  FAILED, KNOWN, expected 4.520
6test 432 GeoidKarney('egm96-5.pgm').height(40.71, 144.095) kind 3: 11.393  FAILED, KNOWN, expected 11.394
6test 433 GeoidKarney('egm96-5.pgm').height(20.823, -173.611) kind 3: 5.678  FAILED, KNOWN, expected 5.679
6test 434 GeoidKarney('egm96-5.pgm').height(16.776, -3.009) kind 3: 28.707
6test 435 GeoidKarney('egm96-5.pgm').height(41.0, -95.0) kind 3: -30.261  FAILED, KNOWN, expected -30.262
6test 436 GeoidKarney('egm96-5.pgm').height(49.0, -120.5) kind 3: -15.984
6test 437 GeoidKarney('egm96-5.pgm').height(49.0, -103.5) kind 3: -18.635
6test 438 GeoidKarney('egm96-5.pgm').height(49.0, -86.5) kind 3: -37.749
6test 439 GeoidKarney('egm96-5.pgm').height(49.0, -69.5) kind 3: -26.691
6test 440 GeoidKarney('egm96-5.pgm').height(33.0, -120.5) kind 3: -39.561
6test 441 GeoidKarney('egm96-5.pgm').height(33.0, -103.5) kind 3: -22.562
6test 442 GeoidKarney('egm96-5.pgm').height(33.0, -86.5) kind 3: -30.012
6test 443 GeoidKarney('egm96-5.pgm').height(33.0, -69.5) kind 3: -48.039
6test 444 GeoidKarney('egm96-5.pgm').height() kind 3, hits 0, eps max (in 0 FAILED): 0.001756
6test 445 GeoidKarney('egm96-5.pgm').height() kind 3, hits 0, eps mean (of 210 total): 0.000524
6test 446 GeoidKarney('egm96-5.pgm').height() kind 3, hits 0, eps stdev (of 210 total): 0.000371
6test 447 GeoidKarney('egm96-5.pgm').highest(): -8.167, 147.25, 85.422
6test 448 GeoidKarney('egm96-5.pgm').lowerleft(): -90.0, -180.0, -29.535
6test 449 GeoidKarney('egm96-5.pgm').lowerright(): -90.0, 180.0, -29.535
6test 450 GeoidKarney('egm96-5.pgm').lowest(): 4.667, 78.833, -107.043
6test 451 GeoidKarney('egm96-5.pgm').upperleft(): 90.0, -180.0, 13.605
6test 452 GeoidKarney('egm96-5.pgm').upperright(): 90.0, 180.0, 13.605
6test 453 GeoidKarney('egm96-5.pgm').dtype: ("'ushort'",)
6test 454 GeoidKarney('egm96-5.pgm').knots: ('9335520',)
6test 455 GeoidKarney('egm96-5.pgm').mean: ('-1.317',)
6test 456 GeoidKarney('egm96-5.pgm').nBytes: ('None',)
6test 457 GeoidKarney('egm96-5.pgm').smooth: ('None',)
6test 458 GeoidKarney('egm96-5.pgm').stdev: ('29.244',)
6test 459 GeoidKarney('egm96-5.pgm')._g2ll2(180, 360): (180, 0.0)
6test 460 GeoidKarney('egm96-5.pgm')._ll2g2(180, 360): (180, 360)
6test 461 GeoidKarney('egm96-5.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 462 GeoidKarney('egm96-5.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 463 GeoidKarney('egm96-5.pgm').toStr: GeoidKarney('egm96-5.pgm'): lowerleft(-90.0, -180.0, -29.535), upperright(90.0, 180.0, 13.605), center(0.0, 0.0, 17.163), highest(-8.167, 147.25, 85.422), lowest(4.667, 78.833, -107.043)

6test 464 closed: True
6test 465 copy(GeoidKarney): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 466 GeoidKarney.copy(): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6232 tests skipped (232): no scipy
6test 467 GeoidKarney('egm2008-1.pgm').height(-76.981, 34.17) kind 2: 12.637  FAILED, KNOWN, expected 12.636
6test 468 GeoidKarney('egm2008-1.pgm').height(79.695, 88.806) kind 2: 0.749
6test 469 GeoidKarney('egm2008-1.pgm').height(-15.245, 168.748) kind 2: 65.110  FAILED, KNOWN, expected 65.109
6test 470 GeoidKarney('egm2008-1.pgm').height(-19.379, 15.855) kind 2: 24.889
6test 471 GeoidKarney('egm2008-1.pgm').height(43.378, -130.552) kind 2: -29.557
6test 472 GeoidKarney('egm2008-1.pgm').height(-16.075, 21.795) kind 2: 9.741  FAILED, KNOWN, expected 9.742
6test 473 GeoidKarney('egm2008-1.pgm').height(-11.256, -73.75) kind 2: 30.061  FAILED, KNOWN, expected 30.059
6test 474 GeoidKarney('egm2008-1.pgm').height(69.017, -15.921) kind 2: 60.691  FAILED, KNOWN, expected 60.690
6test 475 GeoidKarney('egm2008-1.pgm').height(2.221, 139.739) kind 2: 69.134  FAILED, KNOWN, expected 69.133
6test 476 GeoidKarney('egm2008-1.pgm').height(-9.097, 119.142) kind 2: 36.522  FAILED, KNOWN, expected 36.520
6test 477 GeoidKarney('egm2008-1.pgm').height(-28.524, -22.192) kind 2: 6.801
6test 478 GeoidKarney('egm2008-1.pgm').height(12.272, -136.424) kind 2: -20.652  FAILED, KNOWN, expected -20.651
6test 479 GeoidKarney('egm2008-1.pgm').height(-15.203, -85.604) kind 2: -3.040
6test 480 GeoidKarney('egm2008-1.pgm').height(-63.736, -77.17) kind 2: -1.329  FAILED, KNOWN, expected -1.328
6test 481 GeoidKarney('egm2008-1.pgm').height(-48.771, -90.102) kind 2: -2.171  FAILED, KNOWN, expected -2.172
6test 482 GeoidKarney('egm2008-1.pgm').height(-0.179, -126.368) kind 2: -17.411
6test 483 GeoidKarney('egm2008-1.pgm').height(1.586, -128.887) kind 2: -16.426  FAILED, KNOWN, expected -16.425
6test 484 GeoidKarney('egm2008-1.pgm').height(-48.781, -2.684) kind 2: 24.699  FAILED, KNOWN, expected 24.698
6test 485 GeoidKarney('egm2008-1.pgm').height(-49.092, 136.862) kind 2: -18.328  FAILED, KNOWN, expected -18.329
6test 486 GeoidKarney('egm2008-1.pgm').height(47.732, 17.552) kind 2: 43.802
6test 487 GeoidKarney('egm2008-1.pgm').height(-49.11, 85.706) kind 2: 18.716
6test 488 GeoidKarney('egm2008-1.pgm').height(-49.162, 40.321) kind 2: 44.468  FAILED, KNOWN, expected 44.469
6test 489 GeoidKarney('egm2008-1.pgm').height(3.498, 158.118) kind 2: 49.943  FAILED, KNOWN, expected 49.944
6test 490 GeoidKarney('egm2008-1.pgm').height(-35.616, 122.648) kind 2: -35.878
6test 491 GeoidKarney('egm2008-1.pgm').height(56.598, -96.114) kind 2: -40.777
6test 492 GeoidKarney('egm2008-1.pgm').height(-31.85, 149.121) kind 2: 26.560  FAILED, KNOWN, expected 26.559
6test 493 GeoidKarney('egm2008-1.pgm').height(-26.569, -177.792) kind 2: 49.361
6test 494 GeoidKarney('egm2008-1.pgm').height(76.735, -65.753) kind 2: 21.106  FAILED, KNOWN, expected 21.107
6test 495 GeoidKarney('egm2008-1.pgm').height(-21.404, -122.268) kind 2: -7.202
6test 496 GeoidKarney('egm2008-1.pgm').height(-77.133, -65.474) kind 2: -17.168
6test 497 GeoidKarney('egm2008-1.pgm').height(-58.812, 2.276) kind 2: 18.359
6test 498 GeoidKarney('egm2008-1.pgm').height(4.415, 155.683) kind 2: 52.118
6test 499 GeoidKarney('egm2008-1.pgm').height(-28.146, 107.081) kind 2: -38.949  FAILED, KNOWN, expected -38.950
6test 500 GeoidKarney('egm2008-1.pgm').height(-10.551, -126.69) kind 2: -9.935  FAILED, KNOWN, expected -9.934
6test 501 GeoidKarney('egm2008-1.pgm').height(-25.444, -103.337) kind 2: -2.879
6test 502 GeoidKarney('egm2008-1.pgm').height(24.436, 46.159) kind 2: -5.025
6test 503 GeoidKarney('egm2008-1.pgm').height(-72.889, 37.107) kind 2: 24.296
6test 504 GeoidKarney('egm2008-1.pgm').height(-19.629, 13.245) kind 2: 25.131
6test 505 GeoidKarney('egm2008-1.pgm').height(-7.602, 171.265) kind 2: 40.720  FAILED, KNOWN, expected 40.721
6test 506 GeoidKarney('egm2008-1.pgm').height(-45.364, -1.876) kind 2: 22.388
6test 507 GeoidKarney('egm2008-1.pgm').height(-7.292, -69.18) kind 2: 22.485  FAILED, KNOWN, expected 22.486
6test 508 GeoidKarney('egm2008-1.pgm').height(-31.566, -166.689) kind 2: 14.942  FAILED, KNOWN, expected 14.943
6test 509 GeoidKarney('egm2008-1.pgm').height(-82.751, -162.085) kind 2: -47.387
6test 510 GeoidKarney('egm2008-1.pgm').height(-40.7, 99.466) kind 2: -18.404  FAILED, KNOWN, expected -18.403
6test 511 GeoidKarney('egm2008-1.pgm').height(48.676, 39.69) kind 2: 10.186  FAILED, KNOWN, expected 10.185
6test 512 GeoidKarney('egm2008-1.pgm').height(74.817, -78.404) kind 2: 5.671
6test 513 GeoidKarney('egm2008-1.pgm').height(-81.032, -63.865) kind 2: -24.577
6test 514 GeoidKarney('egm2008-1.pgm').height(74.022, 9.432) kind 2: 43.288
6test 515 GeoidKarney('egm2008-1.pgm').height(-75.071, 17.579) kind 2: 13.747  FAILED, KNOWN, expected 13.748
6test 516 GeoidKarney('egm2008-1.pgm').height(-12.546, -54.851) kind 2: -5.342
6test 517 GeoidKarney('egm2008-1.pgm').height(-13.621, 42.408) kind 2: -25.579
6test 518 GeoidKarney('egm2008-1.pgm').height(-2.266, -91.951) kind 2: -9.849
6test 519 GeoidKarney('egm2008-1.pgm').height(-18.672, 42.547) kind 2: -10.491
6test 520 GeoidKarney('egm2008-1.pgm').height(-41.44, 157.413) kind 2: 0.243  FAILED, KNOWN, expected 0.244
6test 521 GeoidKarney('egm2008-1.pgm').height(53.686, -79.375) kind 2: -43.820  FAILED, KNOWN, expected -43.821
6test 522 GeoidKarney('egm2008-1.pgm').height(39.26, -30.351) kind 2: 57.400  FAILED, KNOWN, expected 57.401
6test 523 GeoidKarney('egm2008-1.pgm').height(-51.699, -141.493) kind 2: -17.889  FAILED, KNOWN, expected -17.890
6test 524 GeoidKarney('egm2008-1.pgm').height(36.585, 4.515) kind 2: 46.422  FAILED, KNOWN, expected 46.421
6test 525 GeoidKarney('egm2008-1.pgm').height(39.642, -54.659) kind 2: -14.475
6test 526 GeoidKarney('egm2008-1.pgm').height(59.761, 166.567) kind 2: 11.119  FAILED, KNOWN, expected 11.118
6test 527 GeoidKarney('egm2008-1.pgm').height(51.83, 13.357) kind 2: 42.291
6test 528 GeoidKarney('egm2008-1.pgm').height(-36.531, -175.431) kind 2: 22.327  FAILED, KNOWN, expected 22.326
6test 529 GeoidKarney('egm2008-1.pgm').height(-37.08, 125.264) kind 2: -33.098
6test 530 GeoidKarney('egm2008-1.pgm').height(-68.651, 92.732) kind 2: 9.431  FAILED, KNOWN, expected 9.430
6test 531 GeoidKarney('egm2008-1.pgm').height(35.087, 45.336) kind 2: 6.032
6test 532 GeoidKarney('egm2008-1.pgm').height(-61.356, -169.379) kind 2: -44.330
6test 533 GeoidKarney('egm2008-1.pgm').height(-36.955, 179.12) kind 2: 21.775
6test 534 GeoidKarney('egm2008-1.pgm').height(10.248, -6.714) kind 2: 29.243
6test 535 GeoidKarney('egm2008-1.pgm').height(36.868, 84.602) kind 2: -40.677  FAILED, KNOWN, expected -40.676
6test 536 GeoidKarney('egm2008-1.pgm').height(28.637, 88.933) kind 2: -31.353
6test 537 GeoidKarney('egm2008-1.pgm').height(54.811, -99.968) kind 2: -32.700  FAILED, KNOWN, expected -32.701
6test 538 GeoidKarney('egm2008-1.pgm').height(7.611, 145.911) kind 2: 60.628  FAILED, KNOWN, expected 60.629
6test 539 GeoidKarney('egm2008-1.pgm').height(59.412, 170.102) kind 2: 6.617
6test 540 GeoidKarney('egm2008-1.pgm').height(-61.469, 126.144) kind 2: -31.888  FAILED, KNOWN, expected -31.887
6test 541 GeoidKarney('egm2008-1.pgm').height(18.514, -137.083) kind 2: -26.536  FAILED, KNOWN, expected -26.535
6test 542 GeoidKarney('egm2008-1.pgm').height(7.854, -126.799) kind 2: -29.631  FAILED, KNOWN, expected -29.630
6test 543 GeoidKarney('egm2008-1.pgm').height(47.489, 134.183) kind 2: 22.274  FAILED, KNOWN, expected 22.275
6test 544 GeoidKarney('egm2008-1.pgm').height(-34.144, -11.922) kind 2: 17.095  FAILED, KNOWN, expected 17.094
6test 545 GeoidKarney('egm2008-1.pgm').height(-58.389, 117.458) kind 2: -20.940  FAILED, KNOWN, expected -20.941
6test 546 GeoidKarney('egm2008-1.pgm').height(9.773, 95.846) kind 2: -42.740
6test 547 GeoidKarney('egm2008-1.pgm').height(-53.12, 136.994) kind 2: -21.651
6test 548 GeoidKarney('egm2008-1.pgm').height(-50.35, 0.075) kind 2: 25.240
6test 549 GeoidKarney('egm2008-1.pgm').height(31.438, -170.879) kind 2: -8.758
6test 550 GeoidKarney('egm2008-1.pgm').height(37.541, -153.024) kind 2: -19.606  FAILED, KNOWN, expected -19.607
6test 551 GeoidKarney('egm2008-1.pgm').height(27.586, 2.444) kind 2: 26.258
6test 552 GeoidKarney('egm2008-1.pgm').height(-26.139, -106.201) kind 2: -3.824
6test 553 GeoidKarney('egm2008-1.pgm').height(-33.426, -14.84) kind 2: 18.194  FAILED, KNOWN, expected 18.195
6test 554 GeoidKarney('egm2008-1.pgm').height(39.586, -153.019) kind 2: -17.724  FAILED, KNOWN, expected -17.725
6test 555 GeoidKarney('egm2008-1.pgm').height(-60.79, -2.578) kind 2: 14.511  FAILED, KNOWN, expected 14.513
6test 556 GeoidKarney('egm2008-1.pgm').height(-20.131, 21.975) kind 2: 16.808  FAILED, KNOWN, expected 16.809
6test 557 GeoidKarney('egm2008-1.pgm').height(75.649, 99.921) kind 2: -8.025  FAILED, KNOWN, expected -8.026
6test 558 GeoidKarney('egm2008-1.pgm').height(-0.385, -23.788) kind 2: 9.688
6test 559 GeoidKarney('egm2008-1.pgm').height(-51.56, -50.327) kind 2: 6.218
6test 560 GeoidKarney('egm2008-1.pgm').height(-43.129, -167.271) kind 2: -2.725  FAILED, KNOWN, expected -2.724
6test 561 GeoidKarney('egm2008-1.pgm').height(46.374, 71.948) kind 2: -42.566  FAILED, KNOWN, expected -42.565
6test 562 GeoidKarney('egm2008-1.pgm').height(-22.783, 140.657) kind 2: 38.341
6test 563 GeoidKarney('egm2008-1.pgm').height(-12.056, 122.804) kind 2: 33.888  FAILED, KNOWN, expected 33.889
6test 564 GeoidKarney('egm2008-1.pgm').height(30.127, 94.738) kind 2: -37.382  FAILED, KNOWN, expected -37.380
6test 565 GeoidKarney('egm2008-1.pgm').height(46.296, -174.479) kind 2: -1.857  FAILED, KNOWN, expected -1.858
6test 566 GeoidKarney('egm2008-1.pgm').height(34.99, 15.052) kind 2: 34.196  FAILED, KNOWN, expected 34.195
6test 567 GeoidKarney('egm2008-1.pgm').height(-51.287, 90.565) kind 2: 12.767
6test 568 GeoidKarney('egm2008-1.pgm').height(34.217, 141.302) kind 2: 15.612
6test 569 GeoidKarney('egm2008-1.pgm').height(-40.423, -142.787) kind 2: -11.063
6test 570 GeoidKarney('egm2008-1.pgm').height(-17.854, -170.216) kind 2: 27.387
6test 571 GeoidKarney('egm2008-1.pgm').height(47.803, 112.701) kind 2: -23.817
6test 572 GeoidKarney('egm2008-1.pgm').height(-23.276, 133.454) kind 2: 18.713  FAILED, KNOWN, expected 18.712
6test 573 GeoidKarney('egm2008-1.pgm').height(-26.884, -36.571) kind 2: -7.343  FAILED, KNOWN, expected -7.344
6test 574 GeoidKarney('egm2008-1.pgm').height(-37.106, 31.128) kind 2: 29.997  FAILED, KNOWN, expected 29.998
6test 575 GeoidKarney('egm2008-1.pgm').height(-75.363, -173.674) kind 2: -61.869
6test 576 GeoidKarney('egm2008-1.pgm').height(-18.305, 69.016) kind 2: -24.937
6test 577 GeoidKarney('egm2008-1.pgm').height(39.527, 23.58) kind 2: 38.558  FAILED, KNOWN, expected 38.556
6test 578 GeoidKarney('egm2008-1.pgm').height(68.903, 30.97) kind 2: 19.672  FAILED, KNOWN, expected 19.671
6test 579 GeoidKarney('egm2008-1.pgm').height(53.937, 168.318) kind 2: 2.273  FAILED, KNOWN, expected 2.272
6test 580 GeoidKarney('egm2008-1.pgm').height(-38.6, 64.812) kind 2: 24.863
6test 581 GeoidKarney('egm2008-1.pgm').height(-41.396, -69.739) kind 2: 21.637  FAILED, KNOWN, expected 21.636
6test 582 GeoidKarney('egm2008-1.pgm').height(50.158, 72.319) kind 2: -33.851
6test 583 GeoidKarney('egm2008-1.pgm').height(27.692, 176.153) kind 2: -5.299
6test 584 GeoidKarney('egm2008-1.pgm').height(-48.419, 170.454) kind 2: -6.789
6test 585 GeoidKarney('egm2008-1.pgm').height(-65.346, -124.976) kind 2: -35.030
6test 586 GeoidKarney('egm2008-1.pgm').height(-51.873, 167.266) kind 2: -15.338
6test 587 GeoidKarney('egm2008-1.pgm').height(-7.263, 84.308) kind 2: -79.356
6test 588 GeoidKarney('egm2008-1.pgm').height(-1.461, -105.458) kind 2: -16.650
6test 589 GeoidKarney('egm2008-1.pgm').height(7.684, 161.873) kind 2: 36.358  FAILED, KNOWN, expected 36.359
6test 590 GeoidKarney('egm2008-1.pgm').height(-31.475, -158.52) kind 2: 3.614  FAILED, KNOWN, expected 3.615
6test 591 GeoidKarney('egm2008-1.pgm').height(-36.187, 62.917) kind 2: 23.946  FAILED, KNOWN, expected 23.947
6test 592 GeoidKarney('egm2008-1.pgm').height(16.003, 141.687) kind 2: 51.495
6test 593 GeoidKarney('egm2008-1.pgm').height(30.182, 86.261) kind 2: -30.909  FAILED, KNOWN, expected -30.910
6test 594 GeoidKarney('egm2008-1.pgm').height(-77.304, 159.498) kind 2: -52.131
6test 595 GeoidKarney('egm2008-1.pgm').height(39.536, 139.795) kind 2: 37.046  FAILED, KNOWN, expected 37.045
6test 596 GeoidKarney('egm2008-1.pgm').height(8.569, 134.618) kind 2: 64.181  FAILED, KNOWN, expected 64.180
6test 597 GeoidKarney('egm2008-1.pgm').height(14.473, 90.596) kind 2: -62.475
6test 598 GeoidKarney('egm2008-1.pgm').height(-13.138, -99.589) kind 2: -8.454
6test 599 GeoidKarney('egm2008-1.pgm').height(34.212, -26.307) kind 2: 40.834
6test 600 GeoidKarney('egm2008-1.pgm').height(21.89, 76.371) kind 2: -60.456  FAILED, KNOWN, expected -60.455
6test 601 GeoidKarney('egm2008-1.pgm').height(29.793, 120.487) kind 2: 9.727
6test 602 GeoidKarney('egm2008-1.pgm').height(15.724, 122.714) kind 2: 32.143  FAILED, KNOWN, expected 32.142
6test 603 GeoidKarney('egm2008-1.pgm').height(-66.208, -78.499) kind 2: -6.221  FAILED, KNOWN, expected -6.220
6test 604 GeoidKarney('egm2008-1.pgm').height(-39.507, 55.809) kind 2: 32.489
6test 605 GeoidKarney('egm2008-1.pgm').height(28.159, 51.476) kind 2: -24.692
6test 606 GeoidKarney('egm2008-1.pgm').height(-36.207, 120.205) kind 2: -38.748  FAILED, KNOWN, expected -38.749
6test 607 GeoidKarney('egm2008-1.pgm').height(30.575, -99.998) kind 2: -23.254  FAILED, KNOWN, expected -23.255
6test 608 GeoidKarney('egm2008-1.pgm').height(-16.993, 37.136) kind 2: -13.454  FAILED, KNOWN, expected -13.455
6test 609 GeoidKarney('egm2008-1.pgm').height(-11.477, 12.039) kind 2: 16.627
6test 610 GeoidKarney('egm2008-1.pgm').height(30.428, -144.765) kind 2: -22.221
6test 611 GeoidKarney('egm2008-1.pgm').height(-17.44, -92.424) kind 2: -4.836
6test 612 GeoidKarney('egm2008-1.pgm').height(40.203, 143.43) kind 2: 19.571
6test 613 GeoidKarney('egm2008-1.pgm').height(-37.098, -106.574) kind 2: -9.227
6test 614 GeoidKarney('egm2008-1.pgm').height(54.62, -68.413) kind 2: -23.248
6test 615 GeoidKarney('egm2008-1.pgm').height(-31.633, 148.182) kind 2: 24.829
6test 616 GeoidKarney('egm2008-1.pgm').height(-56.07, -141.407) kind 2: -21.706  FAILED, KNOWN, expected -21.705
6test 617 GeoidKarney('egm2008-1.pgm').height(-8.195, -52.691) kind 2: -17.054  FAILED, KNOWN, expected -17.053
6test 618 GeoidKarney('egm2008-1.pgm').height(17.851, 24.749) kind 2: 11.716
6test 619 GeoidKarney('egm2008-1.pgm').height(0.349, -108.333) kind 2: -19.529  FAILED, KNOWN, expected -19.530
6test 620 GeoidKarney('egm2008-1.pgm').height(15.038, 126.191) kind 2: 45.929
6test 621 GeoidKarney('egm2008-1.pgm').height(-21.111, -123.696) kind 2: -8.283
6test 622 GeoidKarney('egm2008-1.pgm').height(30.947, 173.002) kind 2: -8.467
6test 623 GeoidKarney('egm2008-1.pgm').height(-10.698, -144.091) kind 2: -1.829
6test 624 GeoidKarney('egm2008-1.pgm').height(-29.412, 124.753) kind 2: -16.505  FAILED, KNOWN, expected -16.506
6test 625 GeoidKarney('egm2008-1.pgm').height(38.224, -137.189) kind 2: -35.384
6test 626 GeoidKarney('egm2008-1.pgm').height(36.064, -132.409) kind 2: -38.962  FAILED, KNOWN, expected -38.963
6test 627 GeoidKarney('egm2008-1.pgm').height(29.975, 178.076) kind 2: -6.956
6test 628 GeoidKarney('egm2008-1.pgm').height(-21.346, 169.26) kind 2: 51.006  FAILED, KNOWN, expected 51.005
6test 629 GeoidKarney('egm2008-1.pgm').height(49.282, -152.934) kind 2: 1.193  FAILED, KNOWN, expected 1.192
6test 630 GeoidKarney('egm2008-1.pgm').height(16.349, -99.962) kind 2: -15.038
6test 631 GeoidKarney('egm2008-1.pgm').height(-14.293, -167.34) kind 2: 17.792  FAILED, KNOWN, expected 17.791
6test 632 GeoidKarney('egm2008-1.pgm').height(47.166, -38.523) kind 2: 44.653  FAILED, KNOWN, expected 44.652
6test 633 GeoidKarney('egm2008-1.pgm').height(-58.911, 114.347) kind 2: -17.972  FAILED, KNOWN, expected -17.971
6test 634 GeoidKarney('egm2008-1.pgm').height(-9.055, 111.294) kind 2: 11.631
6test 635 GeoidKarney('egm2008-1.pgm').height(18.391, 29.692) kind 2: 7.394
6test 636 GeoidKarney('egm2008-1.pgm').height(-15.074, 22.153) kind 2: 7.932
6test 637 GeoidKarney('egm2008-1.pgm').height(-4.235, 62.001) kind 2: -60.594  FAILED, KNOWN, expected -60.593
6test 638 GeoidKarney('egm2008-1.pgm').height(15.171, -86.583) kind 2: 4.382  FAILED, KNOWN, expected 4.384
6test 639 GeoidKarney('egm2008-1.pgm').height(79.254, 112.116) kind 2: 1.296  FAILED, KNOWN, expected 1.297
6test 640 GeoidKarney('egm2008-1.pgm').height(15.947, 156.093) kind 2: 30.852
6test 641 GeoidKarney('egm2008-1.pgm').height(68.371, -177.382) kind 2: 2.705  FAILED, KNOWN, expected 2.704
6test 642 GeoidKarney('egm2008-1.pgm').height(-41.931, -72.093) kind 2: 21.263  FAILED, KNOWN, expected 21.264
6test 643 GeoidKarney('egm2008-1.pgm').height(-1.193, -143.133) kind 2: 5.443
6test 644 GeoidKarney('egm2008-1.pgm').height(-37.006, 154.513) kind 2: 9.998
6test 645 GeoidKarney('egm2008-1.pgm').height(-22.148, 9.938) kind 2: 22.428
6test 646 GeoidKarney('egm2008-1.pgm').height(24.329, 109.044) kind 2: -23.156  FAILED, KNOWN, expected -23.154
6test 647 GeoidKarney('egm2008-1.pgm').height(-54.878, 114.691) kind 2: -17.662
6test 648 GeoidKarney('egm2008-1.pgm').height(45.601, -80.458) kind 2: -36.840  FAILED, KNOWN, expected -36.839
6test 649 GeoidKarney('egm2008-1.pgm').height(2.372, 58.974) kind 2: -61.220  FAILED, KNOWN, expected -61.221
6test 650 GeoidKarney('egm2008-1.pgm').height(15.937, 165.854) kind 2: 20.355
6test 651 GeoidKarney('egm2008-1.pgm').height(4.889, -24.213) kind 2: 13.147
6test 652 GeoidKarney('egm2008-1.pgm').height(-11.392, 179.558) kind 2: 41.072
6test 653 GeoidKarney('egm2008-1.pgm').height(58.246, 4.862) kind 2: 42.982
6test 654 GeoidKarney('egm2008-1.pgm').height(34.302, -109.109) kind 2: -22.997  FAILED, KNOWN, expected -22.998
6test 655 GeoidKarney('egm2008-1.pgm').height(-58.196, 117.306) kind 2: -20.662
6test 656 GeoidKarney('egm2008-1.pgm').height(44.5, 173.769) kind 2: -8.438
6test 657 GeoidKarney('egm2008-1.pgm').height(-28.863, -139.775) kind 2: -8.711  FAILED, KNOWN, expected -8.712
6test 658 GeoidKarney('egm2008-1.pgm').height(19.507, -96.099) kind 2: -12.654  FAILED, KNOWN, expected -12.653
6test 659 GeoidKarney('egm2008-1.pgm').height(-42.488, -73.907) kind 2: 17.163  FAILED, KNOWN, expected 17.166
6test 660 GeoidKarney('egm2008-1.pgm').height(46.138, -141.429) kind 2: -19.873  FAILED, KNOWN, expected -19.874
6test 661 GeoidKarney('egm2008-1.pgm').height(60.507, 93.743) kind 2: -31.124
6test 662 GeoidKarney('egm2008-1.pgm').height(26.219, -145.434) kind 2: -17.307
6test 663 GeoidKarney('egm2008-1.pgm').height(-28.687, 3.37) kind 2: 23.437  FAILED, KNOWN, expected 23.434
6test 664 GeoidKarney('egm2008-1.pgm').height(-15.008, 117.45) kind 2: 4.508
6test 665 GeoidKarney('egm2008-1.pgm').height(40.71, 144.095) kind 2: 11.550  FAILED, KNOWN, expected 11.549
6test 666 GeoidKarney('egm2008-1.pgm').height(20.823, -173.611) kind 2: 5.749  FAILED, KNOWN, expected 5.748
6test 667 GeoidKarney('egm2008-1.pgm').height(16.776, -3.009) kind 2: 28.788
6test 668 GeoidKarney('egm2008-1.pgm').height(41.0, -95.0) kind 2: -30.588  FAILED, KNOWN, expected -30.589
6test 669 GeoidKarney('egm2008-1.pgm').height(49.0, -120.5) kind 2: -15.273
6test 670 GeoidKarney('egm2008-1.pgm').height(49.0, -103.5) kind 2: -18.624
6test 671 GeoidKarney('egm2008-1.pgm').height(49.0, -86.5) kind 2: -37.872  FAILED, KNOWN, expected -37.873
6test 672 GeoidKarney('egm2008-1.pgm').height(49.0, -69.5) kind 2: -26.511
6test 673 GeoidKarney('egm2008-1.pgm').height(33.0, -120.5) kind 2: -39.600
6test 674 GeoidKarney('egm2008-1.pgm').height(33.0, -103.5) kind 2: -22.689
6test 675 GeoidKarney('egm2008-1.pgm').height(33.0, -86.5) kind 2: -30.066  FAILED, KNOWN, expected -30.067
6test 676 GeoidKarney('egm2008-1.pgm').height(33.0, -69.5) kind 2: -48.093
6test 677 GeoidKarney('egm2008-1.pgm').height() kind 2, hits 0, eps max (in 0 FAILED): 0.002537
6test 678 GeoidKarney('egm2008-1.pgm').height() kind 2, hits 0, eps mean (of 210 total): 0.000543
6test 679 GeoidKarney('egm2008-1.pgm').height() kind 2, hits 0, eps stdev (of 210 total): 0.000458
6test 680 GeoidKarney('egm2008-1.pgm').highest(): -8.4, 147.367, 85.839
6test 681 GeoidKarney('egm2008-1.pgm').lowerleft(): -90.0, -180.0, -30.15
6test 682 GeoidKarney('egm2008-1.pgm').lowerright(): -90.0, 180.0, -30.15
6test 683 GeoidKarney('egm2008-1.pgm').lowest(): 4.7, 78.767, -106.911
6test 684 GeoidKarney('egm2008-1.pgm').upperleft(): 90.0, -180.0, 14.898
6test 685 GeoidKarney('egm2008-1.pgm').upperright(): 90.0, 180.0, 14.898
6test 686 GeoidKarney('egm2008-1.pgm').dtype: ("'ushort'",)
6test 687 GeoidKarney('egm2008-1.pgm').knots: ('233301600',)
6test 688 GeoidKarney('egm2008-1.pgm').mean: ('-1.317',)
6test 689 GeoidKarney('egm2008-1.pgm').nBytes: ('None',)
6test 690 GeoidKarney('egm2008-1.pgm').smooth: ('None',)
6test 691 GeoidKarney('egm2008-1.pgm').stdev: ('29.244',)
6test 692 GeoidKarney('egm2008-1.pgm')._g2ll2(180, 360): (180, 0.0)
6test 693 GeoidKarney('egm2008-1.pgm')._ll2g2(180, 360): (180, 360)
6test 694 GeoidKarney('egm2008-1.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 695 GeoidKarney('egm2008-1.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 696 GeoidKarney('egm2008-1.pgm').toStr: GeoidKarney('egm2008-1.pgm'): lowerleft(-90.0, -180.0, -30.15), upperright(90.0, 180.0, 14.898), center(0.0, 0.0, 17.226), highest(-8.4, 147.367, 85.839), lowest(4.7, 78.767, -106.911)

6test 697 closed: True
6test 698 copy(GeoidKarney): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 699 GeoidKarney.copy(): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 700 GeoidKarney('egm2008-1.pgm').height(-76.981, 34.17) kind 3: 12.637  FAILED, KNOWN, expected 12.636
6test 701 GeoidKarney('egm2008-1.pgm').height(79.695, 88.806) kind 3: 0.749
6test 702 GeoidKarney('egm2008-1.pgm').height(-15.245, 168.748) kind 3: 65.110  FAILED, KNOWN, expected 65.109
6test 703 GeoidKarney('egm2008-1.pgm').height(-19.379, 15.855) kind 3: 24.889
6test 704 GeoidKarney('egm2008-1.pgm').height(43.378, -130.552) kind 3: -29.556  FAILED, KNOWN, expected -29.557
6test 705 GeoidKarney('egm2008-1.pgm').height(-16.075, 21.795) kind 3: 9.741  FAILED, KNOWN, expected 9.742
6test 706 GeoidKarney('egm2008-1.pgm').height(-11.256, -73.75) kind 3: 30.060  FAILED, KNOWN, expected 30.059
6test 707 GeoidKarney('egm2008-1.pgm').height(69.017, -15.921) kind 3: 60.690
6test 708 GeoidKarney('egm2008-1.pgm').height(2.221, 139.739) kind 3: 69.134  FAILED, KNOWN, expected 69.133
6test 709 GeoidKarney('egm2008-1.pgm').height(-9.097, 119.142) kind 3: 36.521  FAILED, KNOWN, expected 36.520
6test 710 GeoidKarney('egm2008-1.pgm').height(-28.524, -22.192) kind 3: 6.801
6test 711 GeoidKarney('egm2008-1.pgm').height(12.272, -136.424) kind 3: -20.652  FAILED, KNOWN, expected -20.651
6test 712 GeoidKarney('egm2008-1.pgm').height(-15.203, -85.604) kind 3: -3.040
6test 713 GeoidKarney('egm2008-1.pgm').height(-63.736, -77.17) kind 3: -1.329  FAILED, KNOWN, expected -1.328
6test 714 GeoidKarney('egm2008-1.pgm').height(-48.771, -90.102) kind 3: -2.171  FAILED, KNOWN, expected -2.172
6test 715 GeoidKarney('egm2008-1.pgm').height(-0.179, -126.368) kind 3: -17.411
6test 716 GeoidKarney('egm2008-1.pgm').height(1.586, -128.887) kind 3: -16.426  FAILED, KNOWN, expected -16.425
6test 717 GeoidKarney('egm2008-1.pgm').height(-48.781, -2.684) kind 3: 24.699  FAILED, KNOWN, expected 24.698
6test 718 GeoidKarney('egm2008-1.pgm').height(-49.092, 136.862) kind 3: -18.328  FAILED, KNOWN, expected -18.329
6test 719 GeoidKarney('egm2008-1.pgm').height(47.732, 17.552) kind 3: 43.802
6test 720 GeoidKarney('egm2008-1.pgm').height(-49.11, 85.706) kind 3: 18.716
6test 721 GeoidKarney('egm2008-1.pgm').height(-49.162, 40.321) kind 3: 44.468  FAILED, KNOWN, expected 44.469
6test 722 GeoidKarney('egm2008-1.pgm').height(3.498, 158.118) kind 3: 49.943  FAILED, KNOWN, expected 49.944
6test 723 GeoidKarney('egm2008-1.pgm').height(-35.616, 122.648) kind 3: -35.878
6test 724 GeoidKarney('egm2008-1.pgm').height(56.598, -96.114) kind 3: -40.777
6test 725 GeoidKarney('egm2008-1.pgm').height(-31.85, 149.121) kind 3: 26.559
6test 726 GeoidKarney('egm2008-1.pgm').height(-26.569, -177.792) kind 3: 49.362  FAILED, KNOWN, expected 49.361
6test 727 GeoidKarney('egm2008-1.pgm').height(76.735, -65.753) kind 3: 21.106  FAILED, KNOWN, expected 21.107
6test 728 GeoidKarney('egm2008-1.pgm').height(-21.404, -122.268) kind 3: -7.203  FAILED, KNOWN, expected -7.202
6test 729 GeoidKarney('egm2008-1.pgm').height(-77.133, -65.474) kind 3: -17.167  FAILED, KNOWN, expected -17.168
6test 730 GeoidKarney('egm2008-1.pgm').height(-58.812, 2.276) kind 3: 18.359
6test 731 GeoidKarney('egm2008-1.pgm').height(4.415, 155.683) kind 3: 52.117  FAILED, KNOWN, expected 52.118
6test 732 GeoidKarney('egm2008-1.pgm').height(-28.146, 107.081) kind 3: -38.950
6test 733 GeoidKarney('egm2008-1.pgm').height(-10.551, -126.69) kind 3: -9.935  FAILED, KNOWN, expected -9.934
6test 734 GeoidKarney('egm2008-1.pgm').height(-25.444, -103.337) kind 3: -2.879
6test 735 GeoidKarney('egm2008-1.pgm').height(24.436, 46.159) kind 3: -5.025
6test 736 GeoidKarney('egm2008-1.pgm').height(-72.889, 37.107) kind 3: 24.296
6test 737 GeoidKarney('egm2008-1.pgm').height(-19.629, 13.245) kind 3: 25.131
6test 738 GeoidKarney('egm2008-1.pgm').height(-7.602, 171.265) kind 3: 40.720  FAILED, KNOWN, expected 40.721
6test 739 GeoidKarney('egm2008-1.pgm').height(-45.364, -1.876) kind 3: 22.387  FAILED, KNOWN, expected 22.388
6test 740 GeoidKarney('egm2008-1.pgm').height(-7.292, -69.18) kind 3: 22.485  FAILED, KNOWN, expected 22.486
6test 741 GeoidKarney('egm2008-1.pgm').height(-31.566, -166.689) kind 3: 14.942  FAILED, KNOWN, expected 14.943
6test 742 GeoidKarney('egm2008-1.pgm').height(-82.751, -162.085) kind 3: -47.387
6test 743 GeoidKarney('egm2008-1.pgm').height(-40.7, 99.466) kind 3: -18.404  FAILED, KNOWN, expected -18.403
6test 744 GeoidKarney('egm2008-1.pgm').height(48.676, 39.69) kind 3: 10.185
6test 745 GeoidKarney('egm2008-1.pgm').height(74.817, -78.404) kind 3: 5.670  FAILED, KNOWN, expected 5.671
6test 746 GeoidKarney('egm2008-1.pgm').height(-81.032, -63.865) kind 3: -24.577
6test 747 GeoidKarney('egm2008-1.pgm').height(74.022, 9.432) kind 3: 43.288
6test 748 GeoidKarney('egm2008-1.pgm').height(-75.071, 17.579) kind 3: 13.747  FAILED, KNOWN, expected 13.748
6test 749 GeoidKarney('egm2008-1.pgm').height(-12.546, -54.851) kind 3: -5.342
6test 750 GeoidKarney('egm2008-1.pgm').height(-13.621, 42.408) kind 3: -25.579
6test 751 GeoidKarney('egm2008-1.pgm').height(-2.266, -91.951) kind 3: -9.849
6test 752 GeoidKarney('egm2008-1.pgm').height(-18.672, 42.547) kind 3: -10.490  FAILED, KNOWN, expected -10.491
6test 753 GeoidKarney('egm2008-1.pgm').height(-41.44, 157.413) kind 3: 0.243  FAILED, KNOWN, expected 0.244
6test 754 GeoidKarney('egm2008-1.pgm').height(53.686, -79.375) kind 3: -43.820  FAILED, KNOWN, expected -43.821
6test 755 GeoidKarney('egm2008-1.pgm').height(39.26, -30.351) kind 3: 57.401
6test 756 GeoidKarney('egm2008-1.pgm').height(-51.699, -141.493) kind 3: -17.889  FAILED, KNOWN, expected -17.890
6test 757 GeoidKarney('egm2008-1.pgm').height(36.585, 4.515) kind 3: 46.423  FAILED, KNOWN, expected 46.421
6test 758 GeoidKarney('egm2008-1.pgm').height(39.642, -54.659) kind 3: -14.475
6test 759 GeoidKarney('egm2008-1.pgm').height(59.761, 166.567) kind 3: 11.118
6test 760 GeoidKarney('egm2008-1.pgm').height(51.83, 13.357) kind 3: 42.291
6test 761 GeoidKarney('egm2008-1.pgm').height(-36.531, -175.431) kind 3: 22.327  FAILED, KNOWN, expected 22.326
6test 762 GeoidKarney('egm2008-1.pgm').height(-37.08, 125.264) kind 3: -33.098
6test 763 GeoidKarney('egm2008-1.pgm').height(-68.651, 92.732) kind 3: 9.431  FAILED, KNOWN, expected 9.430
6test 764 GeoidKarney('egm2008-1.pgm').height(35.087, 45.336) kind 3: 6.032
6test 765 GeoidKarney('egm2008-1.pgm').height(-61.356, -169.379) kind 3: -44.330
6test 766 GeoidKarney('egm2008-1.pgm').height(-36.955, 179.12) kind 3: 21.775
6test 767 GeoidKarney('egm2008-1.pgm').height(10.248, -6.714) kind 3: 29.243
6test 768 GeoidKarney('egm2008-1.pgm').height(36.868, 84.602) kind 3: -40.677  FAILED, KNOWN, expected -40.676
6test 769 GeoidKarney('egm2008-1.pgm').height(28.637, 88.933) kind 3: -31.352  FAILED, KNOWN, expected -31.353
6test 770 GeoidKarney('egm2008-1.pgm').height(54.811, -99.968) kind 3: -32.700  FAILED, KNOWN, expected -32.701
6test 771 GeoidKarney('egm2008-1.pgm').height(7.611, 145.911) kind 3: 60.628  FAILED, KNOWN, expected 60.629
6test 772 GeoidKarney('egm2008-1.pgm').height(59.412, 170.102) kind 3: 6.617
6test 773 GeoidKarney('egm2008-1.pgm').height(-61.469, 126.144) kind 3: -31.887
6test 774 GeoidKarney('egm2008-1.pgm').height(18.514, -137.083) kind 3: -26.536  FAILED, KNOWN, expected -26.535
6test 775 GeoidKarney('egm2008-1.pgm').height(7.854, -126.799) kind 3: -29.631  FAILED, KNOWN, expected -29.630
6test 776 GeoidKarney('egm2008-1.pgm').height(47.489, 134.183) kind 3: 22.274  FAILED, KNOWN, expected 22.275
6test 777 GeoidKarney('egm2008-1.pgm').height(-34.144, -11.922) kind 3: 17.095  FAILED, KNOWN, expected 17.094
6test 778 GeoidKarney('egm2008-1.pgm').height(-58.389, 117.458) kind 3: -20.940  FAILED, KNOWN, expected -20.941
6test 779 GeoidKarney('egm2008-1.pgm').height(9.773, 95.846) kind 3: -42.740
6test 780 GeoidKarney('egm2008-1.pgm').height(-53.12, 136.994) kind 3: -21.651
6test 781 GeoidKarney('egm2008-1.pgm').height(-50.35, 0.075) kind 3: 25.240
6test 782 GeoidKarney('egm2008-1.pgm').height(31.438, -170.879) kind 3: -8.758
6test 783 GeoidKarney('egm2008-1.pgm').height(37.541, -153.024) kind 3: -19.606  FAILED, KNOWN, expected -19.607
6test 784 GeoidKarney('egm2008-1.pgm').height(27.586, 2.444) kind 3: 26.258
6test 785 GeoidKarney('egm2008-1.pgm').height(-26.139, -106.201) kind 3: -3.823  FAILED, KNOWN, expected -3.824
6test 786 GeoidKarney('egm2008-1.pgm').height(-33.426, -14.84) kind 3: 18.195
6test 787 GeoidKarney('egm2008-1.pgm').height(39.586, -153.019) kind 3: -17.724  FAILED, KNOWN, expected -17.725
6test 788 GeoidKarney('egm2008-1.pgm').height(-60.79, -2.578) kind 3: 14.512  FAILED, KNOWN, expected 14.513
6test 789 GeoidKarney('egm2008-1.pgm').height(-20.131, 21.975) kind 3: 16.808  FAILED, KNOWN, expected 16.809
6test 790 GeoidKarney('egm2008-1.pgm').height(75.649, 99.921) kind 3: -8.025  FAILED, KNOWN, expected -8.026
6test 791 GeoidKarney('egm2008-1.pgm').height(-0.385, -23.788) kind 3: 9.689  FAILED, KNOWN, expected 9.688
6test 792 GeoidKarney('egm2008-1.pgm').height(-51.56, -50.327) kind 3: 6.218
6test 793 GeoidKarney('egm2008-1.pgm').height(-43.129, -167.271) kind 3: -2.725  FAILED, KNOWN, expected -2.724
6test 794 GeoidKarney('egm2008-1.pgm').height(46.374, 71.948) kind 3: -42.566  FAILED, KNOWN, expected -42.565
6test 795 GeoidKarney('egm2008-1.pgm').height(-22.783, 140.657) kind 3: 38.342  FAILED, KNOWN, expected 38.341
6test 796 GeoidKarney('egm2008-1.pgm').height(-12.056, 122.804) kind 3: 33.888  FAILED, KNOWN, expected 33.889
6test 797 GeoidKarney('egm2008-1.pgm').height(30.127, 94.738) kind 3: -37.381  FAILED, KNOWN, expected -37.380
6test 798 GeoidKarney('egm2008-1.pgm').height(46.296, -174.479) kind 3: -1.857  FAILED, KNOWN, expected -1.858
6test 799 GeoidKarney('egm2008-1.pgm').height(34.99, 15.052) kind 3: 34.196  FAILED, KNOWN, expected 34.195
6test 800 GeoidKarney('egm2008-1.pgm').height(-51.287, 90.565) kind 3: 12.767
6test 801 GeoidKarney('egm2008-1.pgm').height(34.217, 141.302) kind 3: 15.612
6test 802 GeoidKarney('egm2008-1.pgm').height(-40.423, -142.787) kind 3: -11.063
6test 803 GeoidKarney('egm2008-1.pgm').height(-17.854, -170.216) kind 3: 27.386  FAILED, KNOWN, expected 27.387
6test 804 GeoidKarney('egm2008-1.pgm').height(47.803, 112.701) kind 3: -23.817
6test 805 GeoidKarney('egm2008-1.pgm').height(-23.276, 133.454) kind 3: 18.713  FAILED, KNOWN, expected 18.712
6test 806 GeoidKarney('egm2008-1.pgm').height(-26.884, -36.571) kind 3: -7.343  FAILED, KNOWN, expected -7.344
6test 807 GeoidKarney('egm2008-1.pgm').height(-37.106, 31.128) kind 3: 29.997  FAILED, KNOWN, expected 29.998
6test 808 GeoidKarney('egm2008-1.pgm').height(-75.363, -173.674) kind 3: -61.869
6test 809 GeoidKarney('egm2008-1.pgm').height(-18.305, 69.016) kind 3: -24.938  FAILED, KNOWN, expected -24.937
6test 810 GeoidKarney('egm2008-1.pgm').height(39.527, 23.58) kind 3: 38.557  FAILED, KNOWN, expected 38.556
6test 811 GeoidKarney('egm2008-1.pgm').height(68.903, 30.97) kind 3: 19.671
6test 812 GeoidKarney('egm2008-1.pgm').height(53.937, 168.318) kind 3: 2.273  FAILED, KNOWN, expected 2.272
6test 813 GeoidKarney('egm2008-1.pgm').height(-38.6, 64.812) kind 3: 24.863
6test 814 GeoidKarney('egm2008-1.pgm').height(-41.396, -69.739) kind 3: 21.636
6test 815 GeoidKarney('egm2008-1.pgm').height(50.158, 72.319) kind 3: -33.850  FAILED, KNOWN, expected -33.851
6test 816 GeoidKarney('egm2008-1.pgm').height(27.692, 176.153) kind 3: -5.299
6test 817 GeoidKarney('egm2008-1.pgm').height(-48.419, 170.454) kind 3: -6.789
6test 818 GeoidKarney('egm2008-1.pgm').height(-65.346, -124.976) kind 3: -35.030
6test 819 GeoidKarney('egm2008-1.pgm').height(-51.873, 167.266) kind 3: -15.338
6test 820 GeoidKarney('egm2008-1.pgm').height(-7.263, 84.308) kind 3: -79.356
6test 821 GeoidKarney('egm2008-1.pgm').height(-1.461, -105.458) kind 3: -16.649  FAILED, KNOWN, expected -16.650
6test 822 GeoidKarney('egm2008-1.pgm').height(7.684, 161.873) kind 3: 36.359
6test 823 GeoidKarney('egm2008-1.pgm').height(-31.475, -158.52) kind 3: 3.614  FAILED, KNOWN, expected 3.615
6test 824 GeoidKarney('egm2008-1.pgm').height(-36.187, 62.917) kind 3: 23.946  FAILED, KNOWN, expected 23.947
6test 825 GeoidKarney('egm2008-1.pgm').height(16.003, 141.687) kind 3: 51.494  FAILED, KNOWN, expected 51.495
6test 826 GeoidKarney('egm2008-1.pgm').height(30.182, 86.261) kind 3: -30.909  FAILED, KNOWN, expected -30.910
6test 827 GeoidKarney('egm2008-1.pgm').height(-77.304, 159.498) kind 3: -52.131
6test 828 GeoidKarney('egm2008-1.pgm').height(39.536, 139.795) kind 3: 37.046  FAILED, KNOWN, expected 37.045
6test 829 GeoidKarney('egm2008-1.pgm').height(8.569, 134.618) kind 3: 64.181  FAILED, KNOWN, expected 64.180
6test 830 GeoidKarney('egm2008-1.pgm').height(14.473, 90.596) kind 3: -62.475
6test 831 GeoidKarney('egm2008-1.pgm').height(-13.138, -99.589) kind 3: -8.454
6test 832 GeoidKarney('egm2008-1.pgm').height(34.212, -26.307) kind 3: 40.834
6test 833 GeoidKarney('egm2008-1.pgm').height(21.89, 76.371) kind 3: -60.455
6test 834 GeoidKarney('egm2008-1.pgm').height(29.793, 120.487) kind 3: 9.728  FAILED, KNOWN, expected 9.727
6test 835 GeoidKarney('egm2008-1.pgm').height(15.724, 122.714) kind 3: 32.141  FAILED, KNOWN, expected 32.142
6test 836 GeoidKarney('egm2008-1.pgm').height(-66.208, -78.499) kind 3: -6.221  FAILED, KNOWN, expected -6.220
6test 837 GeoidKarney('egm2008-1.pgm').height(-39.507, 55.809) kind 3: 32.488  FAILED, KNOWN, expected 32.489
6test 838 GeoidKarney('egm2008-1.pgm').height(28.159, 51.476) kind 3: -24.692
6test 839 GeoidKarney('egm2008-1.pgm').height(-36.207, 120.205) kind 3: -38.749
6test 840 GeoidKarney('egm2008-1.pgm').height(30.575, -99.998) kind 3: -23.254  FAILED, KNOWN, expected -23.255
6test 841 GeoidKarney('egm2008-1.pgm').height(-16.993, 37.136) kind 3: -13.454  FAILED, KNOWN, expected -13.455
6test 842 GeoidKarney('egm2008-1.pgm').height(-11.477, 12.039) kind 3: 16.627
6test 843 GeoidKarney('egm2008-1.pgm').height(30.428, -144.765) kind 3: -22.221
6test 844 GeoidKarney('egm2008-1.pgm').height(-17.44, -92.424) kind 3: -4.836
6test 845 GeoidKarney('egm2008-1.pgm').height(40.203, 143.43) kind 3: 19.571
6test 846 GeoidKarney('egm2008-1.pgm').height(-37.098, -106.574) kind 3: -9.227
6test 847 GeoidKarney('egm2008-1.pgm').height(54.62, -68.413) kind 3: -23.248
6test 848 GeoidKarney('egm2008-1.pgm').height(-31.633, 148.182) kind 3: 24.829
6test 849 GeoidKarney('egm2008-1.pgm').height(-56.07, -141.407) kind 3: -21.706  FAILED, KNOWN, expected -21.705
6test 850 GeoidKarney('egm2008-1.pgm').height(-8.195, -52.691) kind 3: -17.054  FAILED, KNOWN, expected -17.053
6test 851 GeoidKarney('egm2008-1.pgm').height(17.851, 24.749) kind 3: 11.715  FAILED, KNOWN, expected 11.716
6test 852 GeoidKarney('egm2008-1.pgm').height(0.349, -108.333) kind 3: -19.529  FAILED, KNOWN, expected -19.530
6test 853 GeoidKarney('egm2008-1.pgm').height(15.038, 126.191) kind 3: 45.929
6test 854 GeoidKarney('egm2008-1.pgm').height(-21.111, -123.696) kind 3: -8.283
6test 855 GeoidKarney('egm2008-1.pgm').height(30.947, 173.002) kind 3: -8.467
6test 856 GeoidKarney('egm2008-1.pgm').height(-10.698, -144.091) kind 3: -1.829
6test 857 GeoidKarney('egm2008-1.pgm').height(-29.412, 124.753) kind 3: -16.505  FAILED, KNOWN, expected -16.506
6test 858 GeoidKarney('egm2008-1.pgm').height(38.224, -137.189) kind 3: -35.384
6test 859 GeoidKarney('egm2008-1.pgm').height(36.064, -132.409) kind 3: -38.962  FAILED, KNOWN, expected -38.963
6test 860 GeoidKarney('egm2008-1.pgm').height(29.975, 178.076) kind 3: -6.956
6test 861 GeoidKarney('egm2008-1.pgm').height(-21.346, 169.26) kind 3: 51.006  FAILED, KNOWN, expected 51.005
6test 862 GeoidKarney('egm2008-1.pgm').height(49.282, -152.934) kind 3: 1.193  FAILED, KNOWN, expected 1.192
6test 863 GeoidKarney('egm2008-1.pgm').height(16.349, -99.962) kind 3: -15.038
6test 864 GeoidKarney('egm2008-1.pgm').height(-14.293, -167.34) kind 3: 17.791
6test 865 GeoidKarney('egm2008-1.pgm').height(47.166, -38.523) kind 3: 44.653  FAILED, KNOWN, expected 44.652
6test 866 GeoidKarney('egm2008-1.pgm').height(-58.911, 114.347) kind 3: -17.972  FAILED, KNOWN, expected -17.971
6test 867 GeoidKarney('egm2008-1.pgm').height(-9.055, 111.294) kind 3: 11.630  FAILED, KNOWN, expected 11.631
6test 868 GeoidKarney('egm2008-1.pgm').height(18.391, 29.692) kind 3: 7.394
6test 869 GeoidKarney('egm2008-1.pgm').height(-15.074, 22.153) kind 3: 7.932
6test 870 GeoidKarney('egm2008-1.pgm').height(-4.235, 62.001) kind 3: -60.594  FAILED, KNOWN, expected -60.593
6test 871 GeoidKarney('egm2008-1.pgm').height(15.171, -86.583) kind 3: 4.384
6test 872 GeoidKarney('egm2008-1.pgm').height(79.254, 112.116) kind 3: 1.296  FAILED, KNOWN, expected 1.297
6test 873 GeoidKarney('egm2008-1.pgm').height(15.947, 156.093) kind 3: 30.852
6test 874 GeoidKarney('egm2008-1.pgm').height(68.371, -177.382) kind 3: 2.705  FAILED, KNOWN, expected 2.704
6test 875 GeoidKarney('egm2008-1.pgm').height(-41.931, -72.093) kind 3: 21.264
6test 876 GeoidKarney('egm2008-1.pgm').height(-1.193, -143.133) kind 3: 5.443
6test 877 GeoidKarney('egm2008-1.pgm').height(-37.006, 154.513) kind 3: 9.998
6test 878 GeoidKarney('egm2008-1.pgm').height(-22.148, 9.938) kind 3: 22.428
6test 879 GeoidKarney('egm2008-1.pgm').height(24.329, 109.044) kind 3: -23.155  FAILED, KNOWN, expected -23.154
6test 880 GeoidKarney('egm2008-1.pgm').height(-54.878, 114.691) kind 3: -17.662
6test 881 GeoidKarney('egm2008-1.pgm').height(45.601, -80.458) kind 3: -36.840  FAILED, KNOWN, expected -36.839
6test 882 GeoidKarney('egm2008-1.pgm').height(2.372, 58.974) kind 3: -61.220  FAILED, KNOWN, expected -61.221
6test 883 GeoidKarney('egm2008-1.pgm').height(15.937, 165.854) kind 3: 20.355
6test 884 GeoidKarney('egm2008-1.pgm').height(4.889, -24.213) kind 3: 13.147
6test 885 GeoidKarney('egm2008-1.pgm').height(-11.392, 179.558) kind 3: 41.073  FAILED, KNOWN, expected 41.072
6test 886 GeoidKarney('egm2008-1.pgm').height(58.246, 4.862) kind 3: 42.982
6test 887 GeoidKarney('egm2008-1.pgm').height(34.302, -109.109) kind 3: -22.997  FAILED, KNOWN, expected -22.998
6test 888 GeoidKarney('egm2008-1.pgm').height(-58.196, 117.306) kind 3: -20.662
6test 889 GeoidKarney('egm2008-1.pgm').height(44.5, 173.769) kind 3: -8.438
6test 890 GeoidKarney('egm2008-1.pgm').height(-28.863, -139.775) kind 3: -8.711  FAILED, KNOWN, expected -8.712
6test 891 GeoidKarney('egm2008-1.pgm').height(19.507, -96.099) kind 3: -12.653
6test 892 GeoidKarney('egm2008-1.pgm').height(-42.488, -73.907) kind 3: 17.166
6test 893 GeoidKarney('egm2008-1.pgm').height(46.138, -141.429) kind 3: -19.873  FAILED, KNOWN, expected -19.874
6test 894 GeoidKarney('egm2008-1.pgm').height(60.507, 93.743) kind 3: -31.124
6test 895 GeoidKarney('egm2008-1.pgm').height(26.219, -145.434) kind 3: -17.306  FAILED, KNOWN, expected -17.307
6test 896 GeoidKarney('egm2008-1.pgm').height(-28.687, 3.37) kind 3: 23.435  FAILED, KNOWN, expected 23.434
6test 897 GeoidKarney('egm2008-1.pgm').height(-15.008, 117.45) kind 3: 4.508
6test 898 GeoidKarney('egm2008-1.pgm').height(40.71, 144.095) kind 3: 11.550  FAILED, KNOWN, expected 11.549
6test 899 GeoidKarney('egm2008-1.pgm').height(20.823, -173.611) kind 3: 5.749  FAILED, KNOWN, expected 5.748
6test 900 GeoidKarney('egm2008-1.pgm').height(16.776, -3.009) kind 3: 28.788
6test 901 GeoidKarney('egm2008-1.pgm').height(41.0, -95.0) kind 3: -30.589
6test 902 GeoidKarney('egm2008-1.pgm').height(49.0, -120.5) kind 3: -15.273
6test 903 GeoidKarney('egm2008-1.pgm').height(49.0, -103.5) kind 3: -18.624
6test 904 GeoidKarney('egm2008-1.pgm').height(49.0, -86.5) kind 3: -37.872  FAILED, KNOWN, expected -37.873
6test 905 GeoidKarney('egm2008-1.pgm').height(49.0, -69.5) kind 3: -26.511
6test 906 GeoidKarney('egm2008-1.pgm').height(33.0, -120.5) kind 3: -39.600
6test 907 GeoidKarney('egm2008-1.pgm').height(33.0, -103.5) kind 3: -22.689
6test 908 GeoidKarney('egm2008-1.pgm').height(33.0, -86.5) kind 3: -30.067
6test 909 GeoidKarney('egm2008-1.pgm').height(33.0, -69.5) kind 3: -48.093
6test 910 GeoidKarney('egm2008-1.pgm').height() kind 3, hits 0, eps max (in 0 FAILED): 0.001323
6test 911 GeoidKarney('egm2008-1.pgm').height() kind 3, hits 0, eps mean (of 210 total): 0.000468
6test 912 GeoidKarney('egm2008-1.pgm').height() kind 3, hits 0, eps stdev (of 210 total): 0.000333
6test 913 GeoidKarney('egm2008-1.pgm').highest(): -8.4, 147.367, 85.839
6test 914 GeoidKarney('egm2008-1.pgm').lowerleft(): -90.0, -180.0, -30.15
6test 915 GeoidKarney('egm2008-1.pgm').lowerright(): -90.0, 180.0, -30.15
6test 916 GeoidKarney('egm2008-1.pgm').lowest(): 4.7, 78.767, -106.911
6test 917 GeoidKarney('egm2008-1.pgm').upperleft(): 90.0, -180.0, 14.898
6test 918 GeoidKarney('egm2008-1.pgm').upperright(): 90.0, 180.0, 14.898
6test 919 GeoidKarney('egm2008-1.pgm').dtype: ("'ushort'",)
6test 920 GeoidKarney('egm2008-1.pgm').knots: ('233301600',)
6test 921 GeoidKarney('egm2008-1.pgm').mean: ('-1.317',)
6test 922 GeoidKarney('egm2008-1.pgm').nBytes: ('None',)
6test 923 GeoidKarney('egm2008-1.pgm').smooth: ('None',)
6test 924 GeoidKarney('egm2008-1.pgm').stdev: ('29.244',)
6test 925 GeoidKarney('egm2008-1.pgm')._g2ll2(180, 360): (180, 0.0)
6test 926 GeoidKarney('egm2008-1.pgm')._ll2g2(180, 360): (180, 360)
6test 927 GeoidKarney('egm2008-1.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 928 GeoidKarney('egm2008-1.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 929 GeoidKarney('egm2008-1.pgm').toStr: GeoidKarney('egm2008-1.pgm'): lowerleft(-90.0, -180.0, -30.15), upperright(90.0, 180.0, 14.898), center(0.0, 0.0, 17.226), highest(-8.4, 147.367, 85.839), lowest(4.7, 78.767, -106.911)

6test 930 closed: True
6test 931 copy(GeoidKarney): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 932 GeoidKarney.copy(): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6232 tests skipped (464): no scipy
6test 933 GeoidKarney('egm84-15.pgm').height(-76.981, 34.17) kind 2: 11.727  FAILED, KNOWN, expected 11.729
6test 934 GeoidKarney('egm84-15.pgm').height(79.695, 88.806) kind 2: 0.280  FAILED, KNOWN, expected 0.270
6test 935 GeoidKarney('egm84-15.pgm').height(-15.245, 168.748) kind 2: 67.071  FAILED, KNOWN, expected 67.074
6test 936 GeoidKarney('egm84-15.pgm').height(-19.379, 15.855) kind 2: 25.366  FAILED, KNOWN, expected 25.344
6test 937 GeoidKarney('egm84-15.pgm').height(43.378, -130.552) kind 2: -28.913  FAILED, KNOWN, expected -28.919
6test 938 GeoidKarney('egm84-15.pgm').height(-16.075, 21.795) kind 2: 14.383  FAILED, KNOWN, expected 14.386
6test 939 GeoidKarney('egm84-15.pgm').height(-11.256, -73.75) kind 2: 30.701  FAILED, KNOWN, expected 30.700
6test 940 GeoidKarney('egm84-15.pgm').height(69.017, -15.921) kind 2: 62.222  FAILED, KNOWN, expected 62.225
6test 941 GeoidKarney('egm84-15.pgm').height(2.221, 139.739) kind 2: 70.221  FAILED, KNOWN, expected 70.222
6test 942 GeoidKarney('egm84-15.pgm').height(-9.097, 119.142) kind 2: 34.290  FAILED, KNOWN, expected 34.336
6test 943 GeoidKarney('egm84-15.pgm').height(-28.524, -22.192) kind 2: 8.205  FAILED, KNOWN, expected 8.206
6test 944 GeoidKarney('egm84-15.pgm').height(12.272, -136.424) kind 2: -20.068  FAILED, KNOWN, expected -20.074
6test 945 GeoidKarney('egm84-15.pgm').height(-15.203, -85.604) kind 2: -3.129
6test 946 GeoidKarney('egm84-15.pgm').height(-63.736, -77.17) kind 2: -3.214  FAILED, KNOWN, expected -3.217
6test 947 GeoidKarney('egm84-15.pgm').height(-48.771, -90.102) kind 2: -1.536  FAILED, KNOWN, expected -1.531
6test 948 GeoidKarney('egm84-15.pgm').height(-0.179, -126.368) kind 2: -16.742
6test 949 GeoidKarney('egm84-15.pgm').height(1.586, -128.887) kind 2: -15.418  FAILED, KNOWN, expected -15.412
6test 950 GeoidKarney('egm84-15.pgm').height(-48.781, -2.684) kind 2: 25.077  FAILED, KNOWN, expected 25.078
6test 951 GeoidKarney('egm84-15.pgm').height(-49.092, 136.862) kind 2: -18.114  FAILED, KNOWN, expected -18.120
6test 952 GeoidKarney('egm84-15.pgm').height(47.732, 17.552) kind 2: 46.230  FAILED, KNOWN, expected 46.224
6test 953 GeoidKarney('egm84-15.pgm').height(-49.11, 85.706) kind 2: 18.648  FAILED, KNOWN, expected 18.649
6test 954 GeoidKarney('egm84-15.pgm').height(-49.162, 40.321) kind 2: 44.759  FAILED, KNOWN, expected 44.764
6test 955 GeoidKarney('egm84-15.pgm').height(3.498, 158.118) kind 2: 51.095  FAILED, KNOWN, expected 51.089
6test 956 GeoidKarney('egm84-15.pgm').height(-35.616, 122.648) kind 2: -34.436  FAILED, KNOWN, expected -34.471
6test 957 GeoidKarney('egm84-15.pgm').height(56.598, -96.114) kind 2: -39.124
6test 958 GeoidKarney('egm84-15.pgm').height(-31.85, 149.121) kind 2: 28.131  FAILED, KNOWN, expected 28.142
6test 959 GeoidKarney('egm84-15.pgm').height(-26.569, -177.792) kind 2: 49.606  FAILED, KNOWN, expected 49.619
6test 960 GeoidKarney('egm84-15.pgm').height(76.735, -65.753) kind 2: 22.568  FAILED, KNOWN, expected 22.575
6test 961 GeoidKarney('egm84-15.pgm').height(-21.404, -122.268) kind 2: -6.894  FAILED, KNOWN, expected -6.893
6test 962 GeoidKarney('egm84-15.pgm').height(-77.133, -65.474) kind 2: -15.017  FAILED, KNOWN, expected -15.012
6test 963 GeoidKarney('egm84-15.pgm').height(-58.812, 2.276) kind 2: 18.777  FAILED, KNOWN, expected 18.776
6test 964 GeoidKarney('egm84-15.pgm').height(4.415, 155.683) kind 2: 53.644  FAILED, KNOWN, expected 53.645
6test 965 GeoidKarney('egm84-15.pgm').height(-28.146, 107.081) kind 2: -39.058  FAILED, KNOWN, expected -39.074
6test 966 GeoidKarney('egm84-15.pgm').height(-10.551, -126.69) kind 2: -9.643  FAILED, KNOWN, expected -9.645
6test 967 GeoidKarney('egm84-15.pgm').height(-25.444, -103.337) kind 2: -2.520  FAILED, KNOWN, expected -2.528
6test 968 GeoidKarney('egm84-15.pgm').height(24.436, 46.159) kind 2: -6.918  FAILED, KNOWN, expected -6.907
6test 969 GeoidKarney('egm84-15.pgm').height(-72.889, 37.107) kind 2: 21.758  FAILED, KNOWN, expected 21.711
6test 970 GeoidKarney('egm84-15.pgm').height(-19.629, 13.245) kind 2: 25.617  FAILED, KNOWN, expected 25.611
6test 971 GeoidKarney('egm84-15.pgm').height(-7.602, 171.265) kind 2: 41.585  FAILED, KNOWN, expected 41.569
6test 972 GeoidKarney('egm84-15.pgm').height(-45.364, -1.876) kind 2: 23.283  FAILED, KNOWN, expected 23.280
6test 973 GeoidKarney('egm84-15.pgm').height(-7.292, -69.18) kind 2: 24.497  FAILED, KNOWN, expected 24.502
6test 974 GeoidKarney('egm84-15.pgm').height(-31.566, -166.689) kind 2: 14.825  FAILED, KNOWN, expected 14.826
6test 975 GeoidKarney('egm84-15.pgm').height(-82.751, -162.085) kind 2: -45.104
6test 976 GeoidKarney('egm84-15.pgm').height(-40.7, 99.466) kind 2: -17.254  FAILED, KNOWN, expected -17.252
6test 977 GeoidKarney('egm84-15.pgm').height(48.676, 39.69) kind 2: 12.984  FAILED, KNOWN, expected 12.972
6test 978 GeoidKarney('egm84-15.pgm').height(74.817, -78.404) kind 2: 4.773  FAILED, KNOWN, expected 4.776
6test 979 GeoidKarney('egm84-15.pgm').height(-81.032, -63.865) kind 2: -23.577
6test 980 GeoidKarney('egm84-15.pgm').height(74.022, 9.432) kind 2: 43.884  FAILED, KNOWN, expected 43.885
6test 981 GeoidKarney('egm84-15.pgm').height(-75.071, 17.579) kind 2: 17.064  FAILED, KNOWN, expected 17.072
6test 982 GeoidKarney('egm84-15.pgm').height(-12.546, -54.851) kind 2: -6.637  FAILED, KNOWN, expected -6.643
6test 983 GeoidKarney('egm84-15.pgm').height(-13.621, 42.408) kind 2: -23.332  FAILED, KNOWN, expected -23.325
6test 984 GeoidKarney('egm84-15.pgm').height(-2.266, -91.951) kind 2: -10.689  FAILED, KNOWN, expected -10.698
6test 985 GeoidKarney('egm84-15.pgm').height(-18.672, 42.547) kind 2: -10.305  FAILED, KNOWN, expected -10.265
6test 986 GeoidKarney('egm84-15.pgm').height(-41.44, 157.413) kind 2: 0.692  FAILED, KNOWN, expected 0.689
6test 987 GeoidKarney('egm84-15.pgm').height(53.686, -79.375) kind 2: -43.763  FAILED, KNOWN, expected -43.758
6test 988 GeoidKarney('egm84-15.pgm').height(39.26, -30.351) kind 2: 57.551  FAILED, KNOWN, expected 57.554
6test 989 GeoidKarney('egm84-15.pgm').height(-51.699, -141.493) kind 2: -16.939  FAILED, KNOWN, expected -16.936
6test 990 GeoidKarney('egm84-15.pgm').height(36.585, 4.515) kind 2: 45.227  FAILED, KNOWN, expected 45.295
6test 991 GeoidKarney('egm84-15.pgm').height(39.642, -54.659) kind 2: -13.585  FAILED, KNOWN, expected -13.586
6test 992 GeoidKarney('egm84-15.pgm').height(59.761, 166.567) kind 2: 11.469  FAILED, KNOWN, expected 11.468
6test 993 GeoidKarney('egm84-15.pgm').height(51.83, 13.357) kind 2: 42.090  FAILED, KNOWN, expected 42.092
6test 994 GeoidKarney('egm84-15.pgm').height(-36.531, -175.431) kind 2: 22.828  FAILED, KNOWN, expected 22.830
6test 995 GeoidKarney('egm84-15.pgm').height(-37.08, 125.264) kind 2: -32.300  FAILED, KNOWN, expected -32.302
6test 996 GeoidKarney('egm84-15.pgm').height(-68.651, 92.732) kind 2: 9.212  FAILED, KNOWN, expected 9.228
6test 997 GeoidKarney('egm84-15.pgm').height(35.087, 45.336) kind 2: 6.000  FAILED, KNOWN, expected 5.965
6test 998 GeoidKarney('egm84-15.pgm').height(-61.356, -169.379) kind 2: -45.000  FAILED, KNOWN, expected -45.013
6test 999 GeoidKarney('egm84-15.pgm').height(-36.955, 179.12) kind 2: 21.148  FAILED, KNOWN, expected 21.118
6test 1000 GeoidKarney('egm84-15.pgm').height(10.248, -6.714) kind 2: 30.500  FAILED, KNOWN, expected 30.497
6test 1001 GeoidKarney('egm84-15.pgm').height(36.868, 84.602) kind 2: -40.416  FAILED, KNOWN, expected -40.396
6test 1002 GeoidKarney('egm84-15.pgm').height(28.637, 88.933) kind 2: -31.726  FAILED, KNOWN, expected -31.704
6test 1003 GeoidKarney('egm84-15.pgm').height(54.811, -99.968) kind 2: -32.271  FAILED, KNOWN, expected -32.277
6test 1004 GeoidKarney('egm84-15.pgm').height(7.611, 145.911) kind 2: 61.016  FAILED, KNOWN, expected 61.024
6test 1005 GeoidKarney('egm84-15.pgm').height(59.412, 170.102) kind 2: 5.017  FAILED, KNOWN, expected 4.994
6test 1006 GeoidKarney('egm84-15.pgm').height(-61.469, 126.144) kind 2: -30.240  FAILED, KNOWN, expected -30.237
6test 1007 GeoidKarney('egm84-15.pgm').height(18.514, -137.083) kind 2: -26.007  FAILED, KNOWN, expected -26.006
6test 1008 GeoidKarney('egm84-15.pgm').height(7.854, -126.799) kind 2: -29.280  FAILED, KNOWN, expected -29.283
6test 1009 GeoidKarney('egm84-15.pgm').height(47.489, 134.183) kind 2: 22.400  FAILED, KNOWN, expected 22.394
6test 1010 GeoidKarney('egm84-15.pgm').height(-34.144, -11.922) kind 2: 17.549  FAILED, KNOWN, expected 17.550
6test 1011 GeoidKarney('egm84-15.pgm').height(-58.389, 117.458) kind 2: -20.621  FAILED, KNOWN, expected -20.622
6test 1012 GeoidKarney('egm84-15.pgm').height(9.773, 95.846) kind 2: -41.463  FAILED, KNOWN, expected -41.484
6test 1013 GeoidKarney('egm84-15.pgm').height(-53.12, 136.994) kind 2: -20.969  FAILED, KNOWN, expected -20.968
6test 1014 GeoidKarney('egm84-15.pgm').height(-50.35, 0.075) kind 2: 25.561  FAILED, KNOWN, expected 25.568
6test 1015 GeoidKarney('egm84-15.pgm').height(31.438, -170.879) kind 2: -8.574  FAILED, KNOWN, expected -8.581
6test 1016 GeoidKarney('egm84-15.pgm').height(37.541, -153.024) kind 2: -18.329
6test 1017 GeoidKarney('egm84-15.pgm').height(27.586, 2.444) kind 2: 25.003  FAILED, KNOWN, expected 25.001
6test 1018 GeoidKarney('egm84-15.pgm').height(-26.139, -106.201) kind 2: -2.945  FAILED, KNOWN, expected -2.940
6test 1019 GeoidKarney('egm84-15.pgm').height(-33.426, -14.84) kind 2: 18.220  FAILED, KNOWN, expected 18.228
6test 1020 GeoidKarney('egm84-15.pgm').height(39.586, -153.019) kind 2: -16.511  FAILED, KNOWN, expected -16.507
6test 1021 GeoidKarney('egm84-15.pgm').height(-60.79, -2.578) kind 2: 14.277  FAILED, KNOWN, expected 14.275
6test 1022 GeoidKarney('egm84-15.pgm').height(-20.131, 21.975) kind 2: 16.866  FAILED, KNOWN, expected 16.852
6test 1023 GeoidKarney('egm84-15.pgm').height(75.649, 99.921) kind 2: -6.870  FAILED, KNOWN, expected -6.872
6test 1024 GeoidKarney('egm84-15.pgm').height(-0.385, -23.788) kind 2: 8.987  FAILED, KNOWN, expected 9.006
6test 1025 GeoidKarney('egm84-15.pgm').height(-51.56, -50.327) kind 2: 6.277  FAILED, KNOWN, expected 6.296
6test 1026 GeoidKarney('egm84-15.pgm').height(-43.129, -167.271) kind 2: -1.483  FAILED, KNOWN, expected -1.481
6test 1027 GeoidKarney('egm84-15.pgm').height(46.374, 71.948) kind 2: -40.929  FAILED, KNOWN, expected -40.915
6test 1028 GeoidKarney('egm84-15.pgm').height(-22.783, 140.657) kind 2: 37.481  FAILED, KNOWN, expected 37.495
6test 1029 GeoidKarney('egm84-15.pgm').height(-12.056, 122.804) kind 2: 32.222  FAILED, KNOWN, expected 32.258
6test 1030 GeoidKarney('egm84-15.pgm').height(30.127, 94.738) kind 2: -41.529
6test 1031 GeoidKarney('egm84-15.pgm').height(46.296, -174.479) kind 2: -1.377
6test 1032 GeoidKarney('egm84-15.pgm').height(34.99, 15.052) kind 2: 35.263  FAILED, KNOWN, expected 35.280
6test 1033 GeoidKarney('egm84-15.pgm').height(-51.287, 90.565) kind 2: 12.958
6test 1034 GeoidKarney('egm84-15.pgm').height(34.217, 141.302) kind 2: 18.423  FAILED, KNOWN, expected 18.307
6test 1035 GeoidKarney('egm84-15.pgm').height(-40.423, -142.787) kind 2: -10.400
6test 1036 GeoidKarney('egm84-15.pgm').height(-17.854, -170.216) kind 2: 28.649  FAILED, KNOWN, expected 28.638
6test 1037 GeoidKarney('egm84-15.pgm').height(47.803, 112.701) kind 2: -24.060  FAILED, KNOWN, expected -24.059
6test 1038 GeoidKarney('egm84-15.pgm').height(-23.276, 133.454) kind 2: 18.800  FAILED, KNOWN, expected 18.806
6test 1039 GeoidKarney('egm84-15.pgm').height(-26.884, -36.571) kind 2: -6.808  FAILED, KNOWN, expected -6.820
6test 1040 GeoidKarney('egm84-15.pgm').height(-37.106, 31.128) kind 2: 31.485  FAILED, KNOWN, expected 31.486
6test 1041 GeoidKarney('egm84-15.pgm').height(-75.363, -173.674) kind 2: -62.021  FAILED, KNOWN, expected -62.024
6test 1042 GeoidKarney('egm84-15.pgm').height(-18.305, 69.016) kind 2: -24.246  FAILED, KNOWN, expected -24.248
6test 1043 GeoidKarney('egm84-15.pgm').height(39.527, 23.58) kind 2: 43.246  FAILED, KNOWN, expected 43.255
6test 1044 GeoidKarney('egm84-15.pgm').height(68.903, 30.97) kind 2: 18.496  FAILED, KNOWN, expected 18.498
6test 1045 GeoidKarney('egm84-15.pgm').height(53.937, 168.318) kind 2: 4.100  FAILED, KNOWN, expected 4.067
6test 1046 GeoidKarney('egm84-15.pgm').height(-38.6, 64.812) kind 2: 25.456  FAILED, KNOWN, expected 25.454
6test 1047 GeoidKarney('egm84-15.pgm').height(-41.396, -69.739) kind 2: 26.619  FAILED, KNOWN, expected 26.657
6test 1048 GeoidKarney('egm84-15.pgm').height(50.158, 72.319) kind 2: -32.003  FAILED, KNOWN, expected -31.966
6test 1049 GeoidKarney('egm84-15.pgm').height(27.692, 176.153) kind 2: -4.422  FAILED, KNOWN, expected -4.415
6test 1050 GeoidKarney('egm84-15.pgm').height(-48.419, 170.454) kind 2: -6.717  FAILED, KNOWN, expected -6.741
6test 1051 GeoidKarney('egm84-15.pgm').height(-65.346, -124.976) kind 2: -34.915  FAILED, KNOWN, expected -34.900
6test 1052 GeoidKarney('egm84-15.pgm').height(-51.873, 167.266) kind 2: -14.214  FAILED, KNOWN, expected -14.223
6test 1053 GeoidKarney('egm84-15.pgm').height(-7.263, 84.308) kind 2: -79.313  FAILED, KNOWN, expected -79.317
6test 1054 GeoidKarney('egm84-15.pgm').height(-1.461, -105.458) kind 2: -16.163
6test 1055 GeoidKarney('egm84-15.pgm').height(7.684, 161.873) kind 2: 36.296  FAILED, KNOWN, expected 36.287
6test 1056 GeoidKarney('egm84-15.pgm').height(-31.475, -158.52) kind 2: 4.066  FAILED, KNOWN, expected 4.068
6test 1057 GeoidKarney('egm84-15.pgm').height(-36.187, 62.917) kind 2: 24.401  FAILED, KNOWN, expected 24.407
6test 1058 GeoidKarney('egm84-15.pgm').height(16.003, 141.687) kind 2: 53.051  FAILED, KNOWN, expected 53.054
6test 1059 GeoidKarney('egm84-15.pgm').height(30.182, 86.261) kind 2: -30.616  FAILED, KNOWN, expected -30.622
6test 1060 GeoidKarney('egm84-15.pgm').height(-77.304, 159.498) kind 2: -53.544  FAILED, KNOWN, expected -53.540
6test 1061 GeoidKarney('egm84-15.pgm').height(39.536, 139.795) kind 2: 36.274  FAILED, KNOWN, expected 36.262
6test 1062 GeoidKarney('egm84-15.pgm').height(8.569, 134.618) kind 2: 64.339  FAILED, KNOWN, expected 64.369
6test 1063 GeoidKarney('egm84-15.pgm').height(14.473, 90.596) kind 2: -61.320  FAILED, KNOWN, expected -61.300
6test 1064 GeoidKarney('egm84-15.pgm').height(-13.138, -99.589) kind 2: -7.996  FAILED, KNOWN, expected -7.999
6test 1065 GeoidKarney('egm84-15.pgm').height(34.212, -26.307) kind 2: 41.489  FAILED, KNOWN, expected 41.477
6test 1066 GeoidKarney('egm84-15.pgm').height(21.89, 76.371) kind 2: -59.881  FAILED, KNOWN, expected -59.876
6test 1067 GeoidKarney('egm84-15.pgm').height(29.793, 120.487) kind 2: 8.422  FAILED, KNOWN, expected 8.404
6test 1068 GeoidKarney('egm84-15.pgm').height(15.724, 122.714) kind 2: 39.200  FAILED, KNOWN, expected 39.152
6test 1069 GeoidKarney('egm84-15.pgm').height(-66.208, -78.499) kind 2: -7.068  FAILED, KNOWN, expected -7.076
6test 1070 GeoidKarney('egm84-15.pgm').height(-39.507, 55.809) kind 2: 33.179  FAILED, KNOWN, expected 33.178
6test 1071 GeoidKarney('egm84-15.pgm').height(28.159, 51.476) kind 2: -23.801  FAILED, KNOWN, expected -23.832
6test 1072 GeoidKarney('egm84-15.pgm').height(-36.207, 120.205) kind 2: -38.175  FAILED, KNOWN, expected -38.206
6test 1073 GeoidKarney('egm84-15.pgm').height(30.575, -99.998) kind 2: -22.171  FAILED, KNOWN, expected -22.142
6test 1074 GeoidKarney('egm84-15.pgm').height(-16.993, 37.136) kind 2: -13.746  FAILED, KNOWN, expected -13.765
6test 1075 GeoidKarney('egm84-15.pgm').height(-11.477, 12.039) kind 2: 16.909  FAILED, KNOWN, expected 16.898
6test 1076 GeoidKarney('egm84-15.pgm').height(30.428, -144.765) kind 2: -22.479  FAILED, KNOWN, expected -22.474
6test 1077 GeoidKarney('egm84-15.pgm').height(-17.44, -92.424) kind 2: -4.710  FAILED, KNOWN, expected -4.718
6test 1078 GeoidKarney('egm84-15.pgm').height(40.203, 143.43) kind 2: 16.680  FAILED, KNOWN, expected 16.635
6test 1079 GeoidKarney('egm84-15.pgm').height(-37.098, -106.574) kind 2: -9.012
6test 1080 GeoidKarney('egm84-15.pgm').height(54.62, -68.413) kind 2: -23.556  FAILED, KNOWN, expected -23.543
6test 1081 GeoidKarney('egm84-15.pgm').height(-31.633, 148.182) kind 2: 26.240  FAILED, KNOWN, expected 26.236
6test 1082 GeoidKarney('egm84-15.pgm').height(-56.07, -141.407) kind 2: -21.963  FAILED, KNOWN, expected -21.953
6test 1083 GeoidKarney('egm84-15.pgm').height(-8.195, -52.691) kind 2: -17.959
6test 1084 GeoidKarney('egm84-15.pgm').height(17.851, 24.749) kind 2: 9.072  FAILED, KNOWN, expected 9.078
6test 1085 GeoidKarney('egm84-15.pgm').height(0.349, -108.333) kind 2: -19.160  FAILED, KNOWN, expected -19.158
6test 1086 GeoidKarney('egm84-15.pgm').height(15.038, 126.191) kind 2: 46.776
6test 1087 GeoidKarney('egm84-15.pgm').height(-21.111, -123.696) kind 2: -8.053  FAILED, KNOWN, expected -8.055
6test 1088 GeoidKarney('egm84-15.pgm').height(30.947, 173.002) kind 2: -7.681  FAILED, KNOWN, expected -7.696
6test 1089 GeoidKarney('egm84-15.pgm').height(-10.698, -144.091) kind 2: -1.052  FAILED, KNOWN, expected -1.049
6test 1090 GeoidKarney('egm84-15.pgm').height(-29.412, 124.753) kind 2: -16.081
6test 1091 GeoidKarney('egm84-15.pgm').height(38.224, -137.189) kind 2: -35.429  FAILED, KNOWN, expected -35.427
6test 1092 GeoidKarney('egm84-15.pgm').height(36.064, -132.409) kind 2: -38.648
6test 1093 GeoidKarney('egm84-15.pgm').height(29.975, 178.076) kind 2: -5.524  FAILED, KNOWN, expected -5.519
6test 1094 GeoidKarney('egm84-15.pgm').height(-21.346, 169.26) kind 2: 53.448  FAILED, KNOWN, expected 53.431
6test 1095 GeoidKarney('egm84-15.pgm').height(49.282, -152.934) kind 2: 1.977  FAILED, KNOWN, expected 1.979
6test 1096 GeoidKarney('egm84-15.pgm').height(16.349, -99.962) kind 2: -13.131  FAILED, KNOWN, expected -13.197
6test 1097 GeoidKarney('egm84-15.pgm').height(-14.293, -167.34) kind 2: 18.953  FAILED, KNOWN, expected 18.945
6test 1098 GeoidKarney('egm84-15.pgm').height(47.166, -38.523) kind 2: 45.180  FAILED, KNOWN, expected 45.187
6test 1099 GeoidKarney('egm84-15.pgm').height(-58.911, 114.347) kind 2: -17.155  FAILED, KNOWN, expected -17.145
6test 1100 GeoidKarney('egm84-15.pgm').height(-9.055, 111.294) kind 2: 13.136  FAILED, KNOWN, expected 13.146
6test 1101 GeoidKarney('egm84-15.pgm').height(18.391, 29.692) kind 2: 4.933
6test 1102 GeoidKarney('egm84-15.pgm').height(-15.074, 22.153) kind 2: 12.313  FAILED, KNOWN, expected 12.326
6test 1103 GeoidKarney('egm84-15.pgm').height(-4.235, 62.001) kind 2: -60.029  FAILED, KNOWN, expected -60.030
6test 1104 GeoidKarney('egm84-15.pgm').height(15.171, -86.583) kind 2: 3.034  FAILED, KNOWN, expected 3.110
6test 1105 GeoidKarney('egm84-15.pgm').height(79.254, 112.116) kind 2: -2.741
6test 1106 GeoidKarney('egm84-15.pgm').height(15.947, 156.093) kind 2: 32.108  FAILED, KNOWN, expected 32.085
6test 1107 GeoidKarney('egm84-15.pgm').height(68.371, -177.382) kind 2: 2.069  FAILED, KNOWN, expected 2.060
6test 1108 GeoidKarney('egm84-15.pgm').height(-41.931, -72.093) kind 2: 22.901  FAILED, KNOWN, expected 22.916
6test 1109 GeoidKarney('egm84-15.pgm').height(-1.193, -143.133) kind 2: 5.526  FAILED, KNOWN, expected 5.519
6test 1110 GeoidKarney('egm84-15.pgm').height(-37.006, 154.513) kind 2: 11.019  FAILED, KNOWN, expected 11.020
6test 1111 GeoidKarney('egm84-15.pgm').height(-22.148, 9.938) kind 2: 22.181  FAILED, KNOWN, expected 22.171
6test 1112 GeoidKarney('egm84-15.pgm').height(24.329, 109.044) kind 2: -22.957  FAILED, KNOWN, expected -22.944
6test 1113 GeoidKarney('egm84-15.pgm').height(-54.878, 114.691) kind 2: -17.583  FAILED, KNOWN, expected -17.580
6test 1114 GeoidKarney('egm84-15.pgm').height(45.601, -80.458) kind 2: -35.728  FAILED, KNOWN, expected -35.738
6test 1115 GeoidKarney('egm84-15.pgm').height(2.372, 58.974) kind 2: -61.036  FAILED, KNOWN, expected -61.040
6test 1116 GeoidKarney('egm84-15.pgm').height(15.937, 165.854) kind 2: 20.897  FAILED, KNOWN, expected 20.907
6test 1117 GeoidKarney('egm84-15.pgm').height(4.889, -24.213) kind 2: 13.865  FAILED, KNOWN, expected 13.874
6test 1118 GeoidKarney('egm84-15.pgm').height(-11.392, 179.558) kind 2: 40.920  FAILED, KNOWN, expected 40.929
6test 1119 GeoidKarney('egm84-15.pgm').height(58.246, 4.862) kind 2: 43.196  FAILED, KNOWN, expected 43.191
6test 1120 GeoidKarney('egm84-15.pgm').height(34.302, -109.109) kind 2: -22.016  FAILED, KNOWN, expected -22.006
6test 1121 GeoidKarney('egm84-15.pgm').height(-58.196, 117.306) kind 2: -20.378  FAILED, KNOWN, expected -20.375
6test 1122 GeoidKarney('egm84-15.pgm').height(44.5, 173.769) kind 2: -7.856  FAILED, KNOWN, expected -7.852
6test 1123 GeoidKarney('egm84-15.pgm').height(-28.863, -139.775) kind 2: -8.680  FAILED, KNOWN, expected -8.674
6test 1124 GeoidKarney('egm84-15.pgm').height(19.507, -96.099) kind 2: -14.089  FAILED, KNOWN, expected -14.117
6test 1125 GeoidKarney('egm84-15.pgm').height(-42.488, -73.907) kind 2: 17.249  FAILED, KNOWN, expected 17.251
6test 1126 GeoidKarney('egm84-15.pgm').height(46.138, -141.429) kind 2: -19.434  FAILED, KNOWN, expected -19.436
6test 1127 GeoidKarney('egm84-15.pgm').height(60.507, 93.743) kind 2: -31.333  FAILED, KNOWN, expected -31.330
6test 1128 GeoidKarney('egm84-15.pgm').height(26.219, -145.434) kind 2: -17.088  FAILED, KNOWN, expected -17.090
6test 1129 GeoidKarney('egm84-15.pgm').height(-28.687, 3.37) kind 2: 24.177  FAILED, KNOWN, expected 24.184
6test 1130 GeoidKarney('egm84-15.pgm').height(-15.008, 117.45) kind 2: 6.146  FAILED, KNOWN, expected 6.142
6test 1131 GeoidKarney('egm84-15.pgm').height(40.71, 144.095) kind 2: 11.771  FAILED, KNOWN, expected 11.693
6test 1132 GeoidKarney('egm84-15.pgm').height(20.823, -173.611) kind 2: 6.830  FAILED, KNOWN, expected 6.840
6test 1133 GeoidKarney('egm84-15.pgm').height(16.776, -3.009) kind 2: 31.293  FAILED, KNOWN, expected 31.298
6test 1134 GeoidKarney('egm84-15.pgm').height(41.0, -95.0) kind 2: -31.953  FAILED, KNOWN, expected -31.952
6test 1135 GeoidKarney('egm84-15.pgm').height(49.0, -120.5) kind 2: -14.946
6test 1136 GeoidKarney('egm84-15.pgm').height(49.0, -103.5) kind 2: -17.031  FAILED, KNOWN, expected -17.032
6test 1137 GeoidKarney('egm84-15.pgm').height(49.0, -86.5) kind 2: -37.962
6test 1138 GeoidKarney('egm84-15.pgm').height(49.0, -69.5) kind 2: -26.493  FAILED, KNOWN, expected -26.492
6test 1139 GeoidKarney('egm84-15.pgm').height(33.0, -120.5) kind 2: -39.543
6test 1140 GeoidKarney('egm84-15.pgm').height(33.0, -103.5) kind 2: -22.557  FAILED, KNOWN, expected -22.556
6test 1141 GeoidKarney('egm84-15.pgm').height(33.0, -86.5) kind 2: -28.710
6test 1142 GeoidKarney('egm84-15.pgm').height(33.0, -69.5) kind 2: -46.590
6test 1143 GeoidKarney('egm84-15.pgm').height() kind 2, hits 0, eps max (in 0 FAILED): 0.115669
6test 1144 GeoidKarney('egm84-15.pgm').height() kind 2, hits 0, eps mean (of 210 total): 0.010307
6test 1145 GeoidKarney('egm84-15.pgm').height() kind 2, hits 0, eps stdev (of 210 total): 0.015203
6test 1146 GeoidKarney('egm84-15.pgm').highest(): -4.5, 148.75, 81.33
6test 1147 GeoidKarney('egm84-15.pgm').lowerleft(): -90.0, -180.0, -29.712
6test 1148 GeoidKarney('egm84-15.pgm').lowerright(): -90.0, 180.0, -29.712
6test 1149 GeoidKarney('egm84-15.pgm').lowest(): 4.75, 79.25, -107.34
6test 1150 GeoidKarney('egm84-15.pgm').upperleft(): 90.0, -180.0, 13.098
6test 1151 GeoidKarney('egm84-15.pgm').upperright(): 90.0, 180.0, 13.098
6test 1152 GeoidKarney('egm84-15.pgm').dtype: ("'ushort'",)
6test 1153 GeoidKarney('egm84-15.pgm').knots: ('1038240',)
6test 1154 GeoidKarney('egm84-15.pgm').mean: ('-1.317',)
6test 1155 GeoidKarney('egm84-15.pgm').nBytes: ('None',)
6test 1156 GeoidKarney('egm84-15.pgm').smooth: ('None',)
6test 1157 GeoidKarney('egm84-15.pgm').stdev: ('29.244',)
6test 1158 GeoidKarney('egm84-15.pgm')._g2ll2(180, 360): (180, 0.0)
6test 1159 GeoidKarney('egm84-15.pgm')._ll2g2(180, 360): (180, 360)
6test 1160 GeoidKarney('egm84-15.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 1161 GeoidKarney('egm84-15.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 1162 GeoidKarney('egm84-15.pgm').toStr: GeoidKarney('egm84-15.pgm'): lowerleft(-90.0, -180.0, -29.712), upperright(90.0, 180.0, 13.098), center(0.0, 0.0, 18.33), highest(-4.5, 148.75, 81.33), lowest(4.75, 79.25, -107.34)

6test 1163 closed: True
6test 1164 copy(GeoidKarney): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 1165 GeoidKarney.copy(): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 1166 GeoidKarney('egm84-15.pgm').height(-76.981, 34.17) kind 3: 11.729
6test 1167 GeoidKarney('egm84-15.pgm').height(79.695, 88.806) kind 3: 0.271  FAILED, KNOWN, expected 0.270
6test 1168 GeoidKarney('egm84-15.pgm').height(-15.245, 168.748) kind 3: 67.074
6test 1169 GeoidKarney('egm84-15.pgm').height(-19.379, 15.855) kind 3: 25.345  FAILED, KNOWN, expected 25.344
6test 1170 GeoidKarney('egm84-15.pgm').height(43.378, -130.552) kind 3: -28.919
6test 1171 GeoidKarney('egm84-15.pgm').height(-16.075, 21.795) kind 3: 14.386
6test 1172 GeoidKarney('egm84-15.pgm').height(-11.256, -73.75) kind 3: 30.699  FAILED, KNOWN, expected 30.700
6test 1173 GeoidKarney('egm84-15.pgm').height(69.017, -15.921) kind 3: 62.226  FAILED, KNOWN, expected 62.225
6test 1174 GeoidKarney('egm84-15.pgm').height(2.221, 139.739) kind 3: 70.222
6test 1175 GeoidKarney('egm84-15.pgm').height(-9.097, 119.142) kind 3: 34.334  FAILED, KNOWN, expected 34.336
6test 1176 GeoidKarney('egm84-15.pgm').height(-28.524, -22.192) kind 3: 8.206
6test 1177 GeoidKarney('egm84-15.pgm').height(12.272, -136.424) kind 3: -20.073  FAILED, KNOWN, expected -20.074
6test 1178 GeoidKarney('egm84-15.pgm').height(-15.203, -85.604) kind 3: -3.129
6test 1179 GeoidKarney('egm84-15.pgm').height(-63.736, -77.17) kind 3: -3.216  FAILED, KNOWN, expected -3.217
6test 1180 GeoidKarney('egm84-15.pgm').height(-48.771, -90.102) kind 3: -1.532  FAILED, KNOWN, expected -1.531
6test 1181 GeoidKarney('egm84-15.pgm').height(-0.179, -126.368) kind 3: -16.741  FAILED, KNOWN, expected -16.742
6test 1182 GeoidKarney('egm84-15.pgm').height(1.586, -128.887) kind 3: -15.413  FAILED, KNOWN, expected -15.412
6test 1183 GeoidKarney('egm84-15.pgm').height(-48.781, -2.684) kind 3: 25.079  FAILED, KNOWN, expected 25.078
6test 1184 GeoidKarney('egm84-15.pgm').height(-49.092, 136.862) kind 3: -18.120
6test 1185 GeoidKarney('egm84-15.pgm').height(47.732, 17.552) kind 3: 46.225  FAILED, KNOWN, expected 46.224
6test 1186 GeoidKarney('egm84-15.pgm').height(-49.11, 85.706) kind 3: 18.649
6test 1187 GeoidKarney('egm84-15.pgm').height(-49.162, 40.321) kind 3: 44.763  FAILED, KNOWN, expected 44.764
6test 1188 GeoidKarney('egm84-15.pgm').height(3.498, 158.118) kind 3: 51.090  FAILED, KNOWN, expected 51.089
6test 1189 GeoidKarney('egm84-15.pgm').height(-35.616, 122.648) kind 3: -34.470  FAILED, KNOWN, expected -34.471
6test 1190 GeoidKarney('egm84-15.pgm').height(56.598, -96.114) kind 3: -39.125  FAILED, KNOWN, expected -39.124
6test 1191 GeoidKarney('egm84-15.pgm').height(-31.85, 149.121) kind 3: 28.142
6test 1192 GeoidKarney('egm84-15.pgm').height(-26.569, -177.792) kind 3: 49.620  FAILED, KNOWN, expected 49.619
6test 1193 GeoidKarney('egm84-15.pgm').height(76.735, -65.753) kind 3: 22.576  FAILED, KNOWN, expected 22.575
6test 1194 GeoidKarney('egm84-15.pgm').height(-21.404, -122.268) kind 3: -6.893
6test 1195 GeoidKarney('egm84-15.pgm').height(-77.133, -65.474) kind 3: -15.013  FAILED, KNOWN, expected -15.012
6test 1196 GeoidKarney('egm84-15.pgm').height(-58.812, 2.276) kind 3: 18.777  FAILED, KNOWN, expected 18.776
6test 1197 GeoidKarney('egm84-15.pgm').height(4.415, 155.683) kind 3: 53.645
6test 1198 GeoidKarney('egm84-15.pgm').height(-28.146, 107.081) kind 3: -39.073  FAILED, KNOWN, expected -39.074
6test 1199 GeoidKarney('egm84-15.pgm').height(-10.551, -126.69) kind 3: -9.645
6test 1200 GeoidKarney('egm84-15.pgm').height(-25.444, -103.337) kind 3: -2.527  FAILED, KNOWN, expected -2.528
6test 1201 GeoidKarney('egm84-15.pgm').height(24.436, 46.159) kind 3: -6.907
6test 1202 GeoidKarney('egm84-15.pgm').height(-72.889, 37.107) kind 3: 21.715  FAILED, KNOWN, expected 21.711
6test 1203 GeoidKarney('egm84-15.pgm').height(-19.629, 13.245) kind 3: 25.612  FAILED, KNOWN, expected 25.611
6test 1204 GeoidKarney('egm84-15.pgm').height(-7.602, 171.265) kind 3: 41.570  FAILED, KNOWN, expected 41.569
6test 1205 GeoidKarney('egm84-15.pgm').height(-45.364, -1.876) kind 3: 23.280
6test 1206 GeoidKarney('egm84-15.pgm').height(-7.292, -69.18) kind 3: 24.502
6test 1207 GeoidKarney('egm84-15.pgm').height(-31.566, -166.689) kind 3: 14.825  FAILED, KNOWN, expected 14.826
6test 1208 GeoidKarney('egm84-15.pgm').height(-82.751, -162.085) kind 3: -45.104
6test 1209 GeoidKarney('egm84-15.pgm').height(-40.7, 99.466) kind 3: -17.252
6test 1210 GeoidKarney('egm84-15.pgm').height(48.676, 39.69) kind 3: 12.972
6test 1211 GeoidKarney('egm84-15.pgm').height(74.817, -78.404) kind 3: 4.777  FAILED, KNOWN, expected 4.776
6test 1212 GeoidKarney('egm84-15.pgm').height(-81.032, -63.865) kind 3: -23.578  FAILED, KNOWN, expected -23.577
6test 1213 GeoidKarney('egm84-15.pgm').height(74.022, 9.432) kind 3: 43.886  FAILED, KNOWN, expected 43.885
6test 1214 GeoidKarney('egm84-15.pgm').height(-75.071, 17.579) kind 3: 17.071  FAILED, KNOWN, expected 17.072
6test 1215 GeoidKarney('egm84-15.pgm').height(-12.546, -54.851) kind 3: -6.643
6test 1216 GeoidKarney('egm84-15.pgm').height(-13.621, 42.408) kind 3: -23.326  FAILED, KNOWN, expected -23.325
6test 1217 GeoidKarney('egm84-15.pgm').height(-2.266, -91.951) kind 3: -10.699  FAILED, KNOWN, expected -10.698
6test 1218 GeoidKarney('egm84-15.pgm').height(-18.672, 42.547) kind 3: -10.268  FAILED, KNOWN, expected -10.265
6test 1219 GeoidKarney('egm84-15.pgm').height(-41.44, 157.413) kind 3: 0.690  FAILED, KNOWN, expected 0.689
6test 1220 GeoidKarney('egm84-15.pgm').height(53.686, -79.375) kind 3: -43.759  FAILED, KNOWN, expected -43.758
6test 1221 GeoidKarney('egm84-15.pgm').height(39.26, -30.351) kind 3: 57.553  FAILED, KNOWN, expected 57.554
6test 1222 GeoidKarney('egm84-15.pgm').height(-51.699, -141.493) kind 3: -16.937  FAILED, KNOWN, expected -16.936
6test 1223 GeoidKarney('egm84-15.pgm').height(36.585, 4.515) kind 3: 45.291  FAILED, KNOWN, expected 45.295
6test 1224 GeoidKarney('egm84-15.pgm').height(39.642, -54.659) kind 3: -13.585  FAILED, KNOWN, expected -13.586
6test 1225 GeoidKarney('egm84-15.pgm').height(59.761, 166.567) kind 3: 11.467  FAILED, KNOWN, expected 11.468
6test 1226 GeoidKarney('egm84-15.pgm').height(51.83, 13.357) kind 3: 42.092
6test 1227 GeoidKarney('egm84-15.pgm').height(-36.531, -175.431) kind 3: 22.830
6test 1228 GeoidKarney('egm84-15.pgm').height(-37.08, 125.264) kind 3: -32.302
6test 1229 GeoidKarney('egm84-15.pgm').height(-68.651, 92.732) kind 3: 9.228
6test 1230 GeoidKarney('egm84-15.pgm').height(35.087, 45.336) kind 3: 5.966  FAILED, KNOWN, expected 5.965
6test 1231 GeoidKarney('egm84-15.pgm').height(-61.356, -169.379) kind 3: -45.012  FAILED, KNOWN, expected -45.013
6test 1232 GeoidKarney('egm84-15.pgm').height(-36.955, 179.12) kind 3: 21.118
6test 1233 GeoidKarney('egm84-15.pgm').height(10.248, -6.714) kind 3: 30.497
6test 1234 GeoidKarney('egm84-15.pgm').height(36.868, 84.602) kind 3: -40.397  FAILED, KNOWN, expected -40.396
6test 1235 GeoidKarney('egm84-15.pgm').height(28.637, 88.933) kind 3: -31.701  FAILED, KNOWN, expected -31.704
6test 1236 GeoidKarney('egm84-15.pgm').height(54.811, -99.968) kind 3: -32.276  FAILED, KNOWN, expected -32.277
6test 1237 GeoidKarney('egm84-15.pgm').height(7.611, 145.911) kind 3: 61.024
6test 1238 GeoidKarney('egm84-15.pgm').height(59.412, 170.102) kind 3: 4.996  FAILED, KNOWN, expected 4.994
6test 1239 GeoidKarney('egm84-15.pgm').height(-61.469, 126.144) kind 3: -30.238  FAILED, KNOWN, expected -30.237
6test 1240 GeoidKarney('egm84-15.pgm').height(18.514, -137.083) kind 3: -26.006
6test 1241 GeoidKarney('egm84-15.pgm').height(7.854, -126.799) kind 3: -29.283
6test 1242 GeoidKarney('egm84-15.pgm').height(47.489, 134.183) kind 3: 22.393  FAILED, KNOWN, expected 22.394
6test 1243 GeoidKarney('egm84-15.pgm').height(-34.144, -11.922) kind 3: 17.550
6test 1244 GeoidKarney('egm84-15.pgm').height(-58.389, 117.458) kind 3: -20.623  FAILED, KNOWN, expected -20.622
6test 1245 GeoidKarney('egm84-15.pgm').height(9.773, 95.846) kind 3: -41.482  FAILED, KNOWN, expected -41.484
6test 1246 GeoidKarney('egm84-15.pgm').height(-53.12, 136.994) kind 3: -20.968
6test 1247 GeoidKarney('egm84-15.pgm').height(-50.35, 0.075) kind 3: 25.567  FAILED, KNOWN, expected 25.568
6test 1248 GeoidKarney('egm84-15.pgm').height(31.438, -170.879) kind 3: -8.581
6test 1249 GeoidKarney('egm84-15.pgm').height(37.541, -153.024) kind 3: -18.330  FAILED, KNOWN, expected -18.329
6test 1250 GeoidKarney('egm84-15.pgm').height(27.586, 2.444) kind 3: 25.000  FAILED, KNOWN, expected 25.001
6test 1251 GeoidKarney('egm84-15.pgm').height(-26.139, -106.201) kind 3: -2.941  FAILED, KNOWN, expected -2.940
6test 1252 GeoidKarney('egm84-15.pgm').height(-33.426, -14.84) kind 3: 18.229  FAILED, KNOWN, expected 18.228
6test 1253 GeoidKarney('egm84-15.pgm').height(39.586, -153.019) kind 3: -16.507
6test 1254 GeoidKarney('egm84-15.pgm').height(-60.79, -2.578) kind 3: 14.275
6test 1255 GeoidKarney('egm84-15.pgm').height(-20.131, 21.975) kind 3: 16.853  FAILED, KNOWN, expected 16.852
6test 1256 GeoidKarney('egm84-15.pgm').height(75.649, 99.921) kind 3: -6.872
6test 1257 GeoidKarney('egm84-15.pgm').height(-0.385, -23.788) kind 3: 9.005  FAILED, KNOWN, expected 9.006
6test 1258 GeoidKarney('egm84-15.pgm').height(-51.56, -50.327) kind 3: 6.294  FAILED, KNOWN, expected 6.296
6test 1259 GeoidKarney('egm84-15.pgm').height(-43.129, -167.271) kind 3: -1.482  FAILED, KNOWN, expected -1.481
6test 1260 GeoidKarney('egm84-15.pgm').height(46.374, 71.948) kind 3: -40.916  FAILED, KNOWN, expected -40.915
6test 1261 GeoidKarney('egm84-15.pgm').height(-22.783, 140.657) kind 3: 37.495
6test 1262 GeoidKarney('egm84-15.pgm').height(-12.056, 122.804) kind 3: 32.255  FAILED, KNOWN, expected 32.258
6test 1263 GeoidKarney('egm84-15.pgm').height(30.127, 94.738) kind 3: -41.528  FAILED, KNOWN, expected -41.529
6test 1264 GeoidKarney('egm84-15.pgm').height(46.296, -174.479) kind 3: -1.376  FAILED, KNOWN, expected -1.377
6test 1265 GeoidKarney('egm84-15.pgm').height(34.99, 15.052) kind 3: 35.279  FAILED, KNOWN, expected 35.280
6test 1266 GeoidKarney('egm84-15.pgm').height(-51.287, 90.565) kind 3: 12.958
6test 1267 GeoidKarney('egm84-15.pgm').height(34.217, 141.302) kind 3: 18.313  FAILED, KNOWN, expected 18.307
6test 1268 GeoidKarney('egm84-15.pgm').height(-40.423, -142.787) kind 3: -10.400
6test 1269 GeoidKarney('egm84-15.pgm').height(-17.854, -170.216) kind 3: 28.640  FAILED, KNOWN, expected 28.638
6test 1270 GeoidKarney('egm84-15.pgm').height(47.803, 112.701) kind 3: -24.059
6test 1271 GeoidKarney('egm84-15.pgm').height(-23.276, 133.454) kind 3: 18.806
6test 1272 GeoidKarney('egm84-15.pgm').height(-26.884, -36.571) kind 3: -6.819  FAILED, KNOWN, expected -6.820
6test 1273 GeoidKarney('egm84-15.pgm').height(-37.106, 31.128) kind 3: 31.486
6test 1274 GeoidKarney('egm84-15.pgm').height(-75.363, -173.674) kind 3: -62.024
6test 1275 GeoidKarney('egm84-15.pgm').height(-18.305, 69.016) kind 3: -24.247  FAILED, KNOWN, expected -24.248
6test 1276 GeoidKarney('egm84-15.pgm').height(39.527, 23.58) kind 3: 43.255
6test 1277 GeoidKarney('egm84-15.pgm').height(68.903, 30.97) kind 3: 18.499  FAILED, KNOWN, expected 18.498
6test 1278 GeoidKarney('egm84-15.pgm').height(53.937, 168.318) kind 3: 4.069  FAILED, KNOWN, expected 4.067
6test 1279 GeoidKarney('egm84-15.pgm').height(-38.6, 64.812) kind 3: 25.455  FAILED, KNOWN, expected 25.454
6test 1280 GeoidKarney('egm84-15.pgm').height(-41.396, -69.739) kind 3: 26.655  FAILED, KNOWN, expected 26.657
6test 1281 GeoidKarney('egm84-15.pgm').height(50.158, 72.319) kind 3: -31.967  FAILED, KNOWN, expected -31.966
6test 1282 GeoidKarney('egm84-15.pgm').height(27.692, 176.153) kind 3: -4.416  FAILED, KNOWN, expected -4.415
6test 1283 GeoidKarney('egm84-15.pgm').height(-48.419, 170.454) kind 3: -6.741
6test 1284 GeoidKarney('egm84-15.pgm').height(-65.346, -124.976) kind 3: -34.902  FAILED, KNOWN, expected -34.900
6test 1285 GeoidKarney('egm84-15.pgm').height(-51.873, 167.266) kind 3: -14.223
6test 1286 GeoidKarney('egm84-15.pgm').height(-7.263, 84.308) kind 3: -79.317
6test 1287 GeoidKarney('egm84-15.pgm').height(-1.461, -105.458) kind 3: -16.162  FAILED, KNOWN, expected -16.163
6test 1288 GeoidKarney('egm84-15.pgm').height(7.684, 161.873) kind 3: 36.288  FAILED, KNOWN, expected 36.287
6test 1289 GeoidKarney('egm84-15.pgm').height(-31.475, -158.52) kind 3: 4.067  FAILED, KNOWN, expected 4.068
6test 1290 GeoidKarney('egm84-15.pgm').height(-36.187, 62.917) kind 3: 24.406  FAILED, KNOWN, expected 24.407
6test 1291 GeoidKarney('egm84-15.pgm').height(16.003, 141.687) kind 3: 53.053  FAILED, KNOWN, expected 53.054
6test 1292 GeoidKarney('egm84-15.pgm').height(30.182, 86.261) kind 3: -30.621  FAILED, KNOWN, expected -30.622
6test 1293 GeoidKarney('egm84-15.pgm').height(-77.304, 159.498) kind 3: -53.540
6test 1294 GeoidKarney('egm84-15.pgm').height(39.536, 139.795) kind 3: 36.262
6test 1295 GeoidKarney('egm84-15.pgm').height(8.569, 134.618) kind 3: 64.367  FAILED, KNOWN, expected 64.369
6test 1296 GeoidKarney('egm84-15.pgm').height(14.473, 90.596) kind 3: -61.301  FAILED, KNOWN, expected -61.300
6test 1297 GeoidKarney('egm84-15.pgm').height(-13.138, -99.589) kind 3: -8.000  FAILED, KNOWN, expected -7.999
6test 1298 GeoidKarney('egm84-15.pgm').height(34.212, -26.307) kind 3: 41.479  FAILED, KNOWN, expected 41.477
6test 1299 GeoidKarney('egm84-15.pgm').height(21.89, 76.371) kind 3: -59.875  FAILED, KNOWN, expected -59.876
6test 1300 GeoidKarney('egm84-15.pgm').height(29.793, 120.487) kind 3: 8.404
6test 1301 GeoidKarney('egm84-15.pgm').height(15.724, 122.714) kind 3: 39.154  FAILED, KNOWN, expected 39.152
6test 1302 GeoidKarney('egm84-15.pgm').height(-66.208, -78.499) kind 3: -7.076
6test 1303 GeoidKarney('egm84-15.pgm').height(-39.507, 55.809) kind 3: 33.179  FAILED, KNOWN, expected 33.178
6test 1304 GeoidKarney('egm84-15.pgm').height(28.159, 51.476) kind 3: -23.832
6test 1305 GeoidKarney('egm84-15.pgm').height(-36.207, 120.205) kind 3: -38.206
6test 1306 GeoidKarney('egm84-15.pgm').height(30.575, -99.998) kind 3: -22.144  FAILED, KNOWN, expected -22.142
6test 1307 GeoidKarney('egm84-15.pgm').height(-16.993, 37.136) kind 3: -13.763  FAILED, KNOWN, expected -13.765
6test 1308 GeoidKarney('egm84-15.pgm').height(-11.477, 12.039) kind 3: 16.899  FAILED, KNOWN, expected 16.898
6test 1309 GeoidKarney('egm84-15.pgm').height(30.428, -144.765) kind 3: -22.475  FAILED, KNOWN, expected -22.474
6test 1310 GeoidKarney('egm84-15.pgm').height(-17.44, -92.424) kind 3: -4.717  FAILED, KNOWN, expected -4.718
6test 1311 GeoidKarney('egm84-15.pgm').height(40.203, 143.43) kind 3: 16.635
6test 1312 GeoidKarney('egm84-15.pgm').height(-37.098, -106.574) kind 3: -9.011  FAILED, KNOWN, expected -9.012
6test 1313 GeoidKarney('egm84-15.pgm').height(54.62, -68.413) kind 3: -23.544  FAILED, KNOWN, expected -23.543
6test 1314 GeoidKarney('egm84-15.pgm').height(-31.633, 148.182) kind 3: 26.236
6test 1315 GeoidKarney('egm84-15.pgm').height(-56.07, -141.407) kind 3: -21.955  FAILED, KNOWN, expected -21.953
6test 1316 GeoidKarney('egm84-15.pgm').height(-8.195, -52.691) kind 3: -17.959
6test 1317 GeoidKarney('egm84-15.pgm').height(17.851, 24.749) kind 3: 9.078
6test 1318 GeoidKarney('egm84-15.pgm').height(0.349, -108.333) kind 3: -19.157  FAILED, KNOWN, expected -19.158
6test 1319 GeoidKarney('egm84-15.pgm').height(15.038, 126.191) kind 3: 46.776
6test 1320 GeoidKarney('egm84-15.pgm').height(-21.111, -123.696) kind 3: -8.055
6test 1321 GeoidKarney('egm84-15.pgm').height(30.947, 173.002) kind 3: -7.695  FAILED, KNOWN, expected -7.696
6test 1322 GeoidKarney('egm84-15.pgm').height(-10.698, -144.091) kind 3: -1.048  FAILED, KNOWN, expected -1.049
6test 1323 GeoidKarney('egm84-15.pgm').height(-29.412, 124.753) kind 3: -16.082  FAILED, KNOWN, expected -16.081
6test 1324 GeoidKarney('egm84-15.pgm').height(38.224, -137.189) kind 3: -35.426  FAILED, KNOWN, expected -35.427
6test 1325 GeoidKarney('egm84-15.pgm').height(36.064, -132.409) kind 3: -38.648
6test 1326 GeoidKarney('egm84-15.pgm').height(29.975, 178.076) kind 3: -5.519
6test 1327 GeoidKarney('egm84-15.pgm').height(-21.346, 169.26) kind 3: 53.430  FAILED, KNOWN, expected 53.431
6test 1328 GeoidKarney('egm84-15.pgm').height(49.282, -152.934) kind 3: 1.978  FAILED, KNOWN, expected 1.979
6test 1329 GeoidKarney('egm84-15.pgm').height(16.349, -99.962) kind 3: -13.194  FAILED, KNOWN, expected -13.197
6test 1330 GeoidKarney('egm84-15.pgm').height(-14.293, -167.34) kind 3: 18.945
6test 1331 GeoidKarney('egm84-15.pgm').height(47.166, -38.523) kind 3: 45.185  FAILED, KNOWN, expected 45.187
6test 1332 GeoidKarney('egm84-15.pgm').height(-58.911, 114.347) kind 3: -17.146  FAILED, KNOWN, expected -17.145
6test 1333 GeoidKarney('egm84-15.pgm').height(-9.055, 111.294) kind 3: 13.145  FAILED, KNOWN, expected 13.146
6test 1334 GeoidKarney('egm84-15.pgm').height(18.391, 29.692) kind 3: 4.932  FAILED, KNOWN, expected 4.933
6test 1335 GeoidKarney('egm84-15.pgm').height(-15.074, 22.153) kind 3: 12.327  FAILED, KNOWN, expected 12.326
6test 1336 GeoidKarney('egm84-15.pgm').height(-4.235, 62.001) kind 3: -60.029  FAILED, KNOWN, expected -60.030
6test 1337 GeoidKarney('egm84-15.pgm').height(15.171, -86.583) kind 3: 3.107  FAILED, KNOWN, expected 3.110
6test 1338 GeoidKarney('egm84-15.pgm').height(79.254, 112.116) kind 3: -2.741
6test 1339 GeoidKarney('egm84-15.pgm').height(15.947, 156.093) kind 3: 32.086  FAILED, KNOWN, expected 32.085
6test 1340 GeoidKarney('egm84-15.pgm').height(68.371, -177.382) kind 3: 2.060
6test 1341 GeoidKarney('egm84-15.pgm').height(-41.931, -72.093) kind 3: 22.916
6test 1342 GeoidKarney('egm84-15.pgm').height(-1.193, -143.133) kind 3: 5.519
6test 1343 GeoidKarney('egm84-15.pgm').height(-37.006, 154.513) kind 3: 11.021  FAILED, KNOWN, expected 11.020
6test 1344 GeoidKarney('egm84-15.pgm').height(-22.148, 9.938) kind 3: 22.171
6test 1345 GeoidKarney('egm84-15.pgm').height(24.329, 109.044) kind 3: -22.945  FAILED, KNOWN, expected -22.944
6test 1346 GeoidKarney('egm84-15.pgm').height(-54.878, 114.691) kind 3: -17.579  FAILED, KNOWN, expected -17.580
6test 1347 GeoidKarney('egm84-15.pgm').height(45.601, -80.458) kind 3: -35.737  FAILED, KNOWN, expected -35.738
6test 1348 GeoidKarney('egm84-15.pgm').height(2.372, 58.974) kind 3: -61.040
6test 1349 GeoidKarney('egm84-15.pgm').height(15.937, 165.854) kind 3: 20.906  FAILED, KNOWN, expected 20.907
6test 1350 GeoidKarney('egm84-15.pgm').height(4.889, -24.213) kind 3: 13.874
6test 1351 GeoidKarney('egm84-15.pgm').height(-11.392, 179.558) kind 3: 40.928  FAILED, KNOWN, expected 40.929
6test 1352 GeoidKarney('egm84-15.pgm').height(58.246, 4.862) kind 3: 43.191
6test 1353 GeoidKarney('egm84-15.pgm').height(34.302, -109.109) kind 3: -22.006
6test 1354 GeoidKarney('egm84-15.pgm').height(-58.196, 117.306) kind 3: -20.375
6test 1355 GeoidKarney('egm84-15.pgm').height(44.5, 173.769) kind 3: -7.851  FAILED, KNOWN, expected -7.852
6test 1356 GeoidKarney('egm84-15.pgm').height(-28.863, -139.775) kind 3: -8.675  FAILED, KNOWN, expected -8.674
6test 1357 GeoidKarney('egm84-15.pgm').height(19.507, -96.099) kind 3: -14.116  FAILED, KNOWN, expected -14.117
6test 1358 GeoidKarney('egm84-15.pgm').height(-42.488, -73.907) kind 3: 17.252  FAILED, KNOWN, expected 17.251
6test 1359 GeoidKarney('egm84-15.pgm').height(46.138, -141.429) kind 3: -19.435  FAILED, KNOWN, expected -19.436
6test 1360 GeoidKarney('egm84-15.pgm').height(60.507, 93.743) kind 3: -31.331  FAILED, KNOWN, expected -31.330
6test 1361 GeoidKarney('egm84-15.pgm').height(26.219, -145.434) kind 3: -17.091  FAILED, KNOWN, expected -17.090
6test 1362 GeoidKarney('egm84-15.pgm').height(-28.687, 3.37) kind 3: 24.184
6test 1363 GeoidKarney('egm84-15.pgm').height(-15.008, 117.45) kind 3: 6.142
6test 1364 GeoidKarney('egm84-15.pgm').height(40.71, 144.095) kind 3: 11.693
6test 1365 GeoidKarney('egm84-15.pgm').height(20.823, -173.611) kind 3: 6.839  FAILED, KNOWN, expected 6.840
6test 1366 GeoidKarney('egm84-15.pgm').height(16.776, -3.009) kind 3: 31.298
6test 1367 GeoidKarney('egm84-15.pgm').height(41.0, -95.0) kind 3: -31.952
6test 1368 GeoidKarney('egm84-15.pgm').height(49.0, -120.5) kind 3: -14.946
6test 1369 GeoidKarney('egm84-15.pgm').height(49.0, -103.5) kind 3: -17.032
6test 1370 GeoidKarney('egm84-15.pgm').height(49.0, -86.5) kind 3: -37.962
6test 1371 GeoidKarney('egm84-15.pgm').height(49.0, -69.5) kind 3: -26.492
6test 1372 GeoidKarney('egm84-15.pgm').height(33.0, -120.5) kind 3: -39.543
6test 1373 GeoidKarney('egm84-15.pgm').height(33.0, -103.5) kind 3: -22.556
6test 1374 GeoidKarney('egm84-15.pgm').height(33.0, -86.5) kind 3: -28.710
6test 1375 GeoidKarney('egm84-15.pgm').height(33.0, -69.5) kind 3: -46.590
6test 1376 GeoidKarney('egm84-15.pgm').height() kind 3, hits 0, eps max (in 0 FAILED): 0.005459
6test 1377 GeoidKarney('egm84-15.pgm').height() kind 3, hits 0, eps mean (of 210 total): 0.000736
6test 1378 GeoidKarney('egm84-15.pgm').height() kind 3, hits 0, eps stdev (of 210 total): 0.000728
6test 1379 GeoidKarney('egm84-15.pgm').highest(): -4.5, 148.75, 81.33
6test 1380 GeoidKarney('egm84-15.pgm').lowerleft(): -90.0, -180.0, -29.712
6test 1381 GeoidKarney('egm84-15.pgm').lowerright(): -90.0, 180.0, -29.712
6test 1382 GeoidKarney('egm84-15.pgm').lowest(): 4.75, 79.25, -107.34
6test 1383 GeoidKarney('egm84-15.pgm').upperleft(): 90.0, -180.0, 13.098
6test 1384 GeoidKarney('egm84-15.pgm').upperright(): 90.0, 180.0, 13.098
6test 1385 GeoidKarney('egm84-15.pgm').dtype: ("'ushort'",)
6test 1386 GeoidKarney('egm84-15.pgm').knots: ('1038240',)
6test 1387 GeoidKarney('egm84-15.pgm').mean: ('-1.317',)
6test 1388 GeoidKarney('egm84-15.pgm').nBytes: ('None',)
6test 1389 GeoidKarney('egm84-15.pgm').smooth: ('None',)
6test 1390 GeoidKarney('egm84-15.pgm').stdev: ('29.244',)
6test 1391 GeoidKarney('egm84-15.pgm')._g2ll2(180, 360): (180, 0.0)
6test 1392 GeoidKarney('egm84-15.pgm')._ll2g2(180, 360): (180, 360)
6test 1393 GeoidKarney('egm84-15.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 1394 GeoidKarney('egm84-15.pgm')._swne: (-10.0, -100.0, 10.0, 100.0)
6test 1395 GeoidKarney('egm84-15.pgm').toStr: GeoidKarney('egm84-15.pgm'): lowerleft(-90.0, -180.0, -29.712), upperright(90.0, 180.0, 13.098), center(0.0, 0.0, 18.33), highest(-4.5, 148.75, 81.33), lowest(4.75, 79.25, -107.34)

6test 1396 closed: True
6test 1397 copy(GeoidKarney): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6test 1398 GeoidKarney.copy(): (<class 'pygeodesy.geoids.GeoidKarney'>, True)
6232 tests skipped (696): no scipy
631 tests skipped (727): no scipy
6778 of 1398 testGeoids.py tests (55.7%) FAILED, ALL KNOWN, 727 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 60.161 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testGreatCircle.py
6testing testGreatCircle.py 20.09.09
6testGreatCircle(pygeodesy.sphericalNvector, 23.01.18)
6test 1 InitialBearingSameLocations: 0.0
6test 2 InitialBearingEqualLocations: 0.0
6test 3 FinalBearingSameLocations: 180.0
6test 4 FinalBearingEqualLocations: 180.0
6test 5 FinalBearingCrossError: points (LatLon(43°55′51.28″N, 072°03′13.72″W)): coincident
6test 6 DistanceSameLocations: 0.0
6test 7 DistanceEqualLocations: 0.0
6test 8 DistanceEiffelToVersailles: 14084.300096  FAILED, KNOWN, expected 14084.280705
6test 9 DistanceVersaillesToEiffel: 14084.300096  FAILED, KNOWN, expected 14084.280705
6test 10 InitialBearingEiffelToVersailles: 245.13460297
6test 11 InitialBearingEiffelToVersailles(DMS): 245°08′04.5707″
6test 12 InitialBearingVersaillesToEiffel: 65.003253951
6test 13 InitialBearingVersaillesToEiffel(DMS): 65°00′11.7142″
6test 14 FinalBearingEiffelToVersailles: 245.00325395
6test 15 FinalBearingEiffelToVersailles(DMS): 245°00′11.7142″
6test 16 FinalBearingVersaillesToEiffel: 65.134602969
6test 17 FinalBearingVersaillesToEiffel(DMS): 65°08′04.5707″
6test 18 GenerateLocationVersailles: 48.804766°N, 002.120339°E
6test 19 GenerateLocationEiffel: 48.858158°N, 002.294825°E
6test 20 MidpointEiffelToVersailles: 48.831495°N, 002.207536°E
6test 21 MidpointEiffelToVersailles(DMS): 48°49′53.3817″N, 002°12′27.1279″E
6test 22 MidpointEiffelToVersailles(m): 7042.15004788  FAILED, KNOWN, expected 7042.15974330
6test 23 MidpointVersaillesToEiffel: 48.831495°N, 002.207536°E  FAILED, KNOWN, expected 48.831495°N, 002.207535°E
6test 24 MidpointVersaillesToEiffel(DMS): 48°49′53.3817″N, 002°12′27.1279″E
6test 25 MidpointVersaillesToEiffel(m): 7042.15004788  FAILED, KNOWN, expected 7042.15974330
6test 26 Intersection: 48.83569095°N, 002.221252031°E
6test 27 Intersection: 48.8356909498836°N, 002.2212520313074°E
6test 28 CrossTrackDistance200m+90°: 200.0
6test 29 CrossTrackDistance200m+270°: -200.0
6test 30 CrossTrackDistanceCloseToZero: 0.0000000
6testGreatCircle(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 31 InitialBearingSameLocations: 0.0
6test 32 InitialBearingEqualLocations: 0.0
6test 33 FinalBearingSameLocations: 180.0
6test 34 FinalBearingEqualLocations: 180.0
6test 35 FinalBearingCrossError: points (LatLon(43°55′51.28″N, 072°03′13.72″W)): coincident
6test 36 DistanceSameLocations: 0.0
6test 37 DistanceEqualLocations: 0.0
6test 38 DistanceEiffelToVersailles: 14084.300096  FAILED, KNOWN, expected 14084.280705
6test 39 DistanceVersaillesToEiffel: 14084.300096  FAILED, KNOWN, expected 14084.280705
6test 40 InitialBearingEiffelToVersailles: 245.13460297
6test 41 InitialBearingEiffelToVersailles(DMS): 245°08′04.5707″
6test 42 InitialBearingVersaillesToEiffel: 65.003253951
6test 43 InitialBearingVersaillesToEiffel(DMS): 65°00′11.7142″
6test 44 FinalBearingEiffelToVersailles: 245.00325395
6test 45 FinalBearingEiffelToVersailles(DMS): 245°00′11.7142″
6test 46 FinalBearingVersaillesToEiffel: 65.134602969
6test 47 FinalBearingVersaillesToEiffel(DMS): 65°08′04.5707″
6test 48 GenerateLocationVersailles: 48.804766°N, 002.120339°E
6test 49 GenerateLocationEiffel: 48.858158°N, 002.294825°E
6test 50 MidpointEiffelToVersailles: 48.831495°N, 002.207536°E
6test 51 MidpointEiffelToVersailles(DMS): 48°49′53.3817″N, 002°12′27.1279″E
6test 52 MidpointEiffelToVersailles(m): 7042.15004788  FAILED, KNOWN, expected 7042.15974330
6test 53 MidpointVersaillesToEiffel: 48.831495°N, 002.207536°E  FAILED, KNOWN, expected 48.831495°N, 002.207535°E
6test 54 MidpointVersaillesToEiffel(DMS): 48°49′53.3817″N, 002°12′27.1279″E
6test 55 MidpointVersaillesToEiffel(m): 7042.15004788  FAILED, KNOWN, expected 7042.15974330
6test 56 Intersection: 48.83569095°N, 002.221252031°E
6test 57 Intersection: 48.8356909498836°N, 002.2212520313074°E
6test 58 CrossTrackDistance200m+90°: 200.0
6test 59 CrossTrackDistance200m+270°: -200.0
6test 60 CrossTrackDistanceCloseToZero: 0.0000000
610 of 60 testGreatCircle.py tests (16.7%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 7.475 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testHausdorff.py
6testing testHausdorff.py 21.08.14
6test 1 randomrange[0]: ()
6test 2 randomrange[1]: (0,)
6test 3 randomrange[2]: (0, 1)
6test 4 randomrange[8]: (1, 4, 2, 6, 0, 3, 5, 7)
6test 5 randomrange[32]: (11, 6, 30, 28, 21, 9, 13, 26, 4, 29, 8, 27, 31, 15, 1, 24, 0, 25, 22, 2, 20, 17, 3, 23, 12, 19, 18, 14, 7, 10, 16, 5)
6test 6 randomrange[128]: (122, 62, 14, 24, 65, 57, 75, 84, 42, 32, 82, 43, 13, 34, 53, 104, 71, 22, 76, 15, 108, 113, 52, 79, 112, 54, 90, 106, 10, 87, 115, 123, 119, 120, 48, 61, 39, 19, 31, 94, 124, 98, 96, 3, 101, 25, 118, 30, 99, 105, 92, 66, 126, 114, 23, 117, 72, 67, 73, 64, 68, 50, 5, 74, 51, 9, 17, 21, 80, 95, 41, 37, 2, 11, 55, 127, 38, 85, 81, 109, 36, 121, 6, 102, 12, 1, 93, 91, 83, 16, 116, 103, 70, 56, 89, 35, 88, 86, 27, 20, 44, 110, 63, 28, 8, 4, 18, 45, 78, 100, 60, 125, 58, 33, 0, 7, 40, 59, 46, 69, 26, 77, 107, 47, 49, 97, 111, 29)
6test 7 HausdorffDegrees_ (degrees): (40.0, 22, 6, 90, 18.16111)
6test 8 HausdorffDegrees_ (degrees): (48.0, 38, 36, 150, 17.30667)
6test 9 HausdorffDegrees_ (degrees): (40.0, 22, 6, 90, 18.16111)
6test 10 HausdorffDegrees_ (degrees): (48.0, 38, 36, 150, 17.30667)
6test 11 HausdorffDegrees_ (degrees): (40.0, 22, 6, 90, None)
6test 12 HausdorffDegrees_ (degrees): (48.0, 38, 36, 150, None)
6test 13 HausdorffDegrees_ (degrees): (40.0, 22, 6, 90, None)
6test 14 HausdorffDegrees_ (degrees): (48.0, 38, 36, 150, None)
6test 15 copy(HausdorffDegrees_): (<class '__main__.HausdorffDegrees_'>, True)
6test 16 HausdorffDegrees_.copy(): (<class '__main__.HausdorffDegrees_'>, True)
6test 17 HausdorffRadians_ (radians): (0.69813, 22, 6, 90, 0.31697)
6test 18 HausdorffRadians_ (radians): (0.83776, 38, 36, 150, 0.30206)
6test 19 HausdorffRadians_ (radians): (0.69813, 22, 6, 90, 0.31697)
6test 20 HausdorffRadians_ (radians): (0.83776, 38, 36, 150, 0.30206)
6test 21 HausdorffRadians_ (radians): (0.69813, 22, 6, 90, None)
6test 22 HausdorffRadians_ (radians): (0.83776, 38, 36, 150, None)
6test 23 HausdorffRadians_ (radians): (0.69813, 22, 6, 90, None)
6test 24 HausdorffRadians_ (radians): (0.83776, 38, 36, 150, None)
6test 25 copy(HausdorffRadians_): (<class '__main__.HausdorffRadians_'>, True)
6test 26 HausdorffRadians_.copy(): (<class '__main__.HausdorffRadians_'>, True)
6test 27 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 90, 0.21184)
6test 28 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 150, 0.20084)
6test 29 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 90, 0.21184)
6test 30 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 150, 0.20084)
6test 31 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 90, None)
6test 32 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 150, None)
6test 33 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 90, None)
6test 34 HausdorffCosineAndoyerLambert (radians): (0.501, 35, 3, 150, None)
6test 35 copy(HausdorffCosineAndoyerLambert): (<class 'pygeodesy.hausdorff.HausdorffCosineAndoyerLambert'>, True)
6test 36 HausdorffCosineAndoyerLambert.copy(): (<class 'pygeodesy.hausdorff.HausdorffCosineAndoyerLambert'>, True)
6test 37 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 90, 0.21184)
6test 38 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 150, 0.20084)
6test 39 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 90, 0.21184)
6test 40 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 150, 0.20084)
6test 41 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 90, None)
6test 42 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 150, None)
6test 43 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 90, None)
6test 44 HausdorffCosineForsytheAndoyerLambert (radians): (0.501, 35, 3, 150, None)
6test 45 copy(HausdorffCosineForsytheAndoyerLambert): (<class 'pygeodesy.hausdorff.HausdorffCosineForsytheAndoyerLambert'>, True)
6test 46 HausdorffCosineForsytheAndoyerLambert.copy(): (<class 'pygeodesy.hausdorff.HausdorffCosineForsytheAndoyerLambert'>, True)
6test 47 HausdorffCosineLaw (radians): (0.50097, 35, 3, 90, 0.212)
6test 48 HausdorffCosineLaw (radians): (0.50097, 35, 3, 150, 0.20099)
6test 49 HausdorffCosineLaw (radians): (0.50097, 35, 3, 90, 0.212)
6test 50 HausdorffCosineLaw (radians): (0.50097, 35, 3, 150, 0.20099)
6test 51 HausdorffCosineLaw (radians): (0.50097, 35, 3, 90, None)
6test 52 HausdorffCosineLaw (radians): (0.50097, 35, 3, 150, None)
6test 53 HausdorffCosineLaw (radians): (0.50097, 35, 3, 90, None)
6test 54 HausdorffCosineLaw (radians): (0.50097, 35, 3, 150, None)
6test 55 copy(HausdorffCosineLaw): (<class 'pygeodesy.hausdorff.HausdorffCosineLaw'>, True)
6test 56 HausdorffCosineLaw.copy(): (<class 'pygeodesy.hausdorff.HausdorffCosineLaw'>, True)
6test 57 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 90, 0.05965)
6test 58 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 150, 0.05532)
6test 59 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 90, 0.05965)
6test 60 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 150, 0.05532)
6test 61 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 90, None)
6test 62 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 150, None)
6test 63 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 90, None)
6test 64 HausdorffEquirectangular (radians2): (0.25113, 35, 3, 150, None)
6test 65 copy(HausdorffEquirectangular): (<class 'pygeodesy.hausdorff.HausdorffEquirectangular'>, True)
6test 66 HausdorffEquirectangular.copy(): (<class 'pygeodesy.hausdorff.HausdorffEquirectangular'>, True)
6test 67 HausdorffEuclidean (radians): (0.52803, 56, 51, 90, 0.22571)
6test 68 HausdorffEuclidean (radians): (0.52803, 56, 51, 150, 0.21579)
6test 69 HausdorffEuclidean (radians): (0.52803, 56, 51, 90, 0.22571)
6test 70 HausdorffEuclidean (radians): (0.52803, 56, 51, 150, 0.21579)
6test 71 HausdorffEuclidean (radians): (0.52803, 56, 51, 90, None)
6test 72 HausdorffEuclidean (radians): (0.52803, 56, 51, 150, None)
6test 73 HausdorffEuclidean (radians): (0.52803, 56, 51, 90, None)
6test 74 HausdorffEuclidean (radians): (0.52803, 56, 51, 150, None)
6test 75 copy(HausdorffEuclidean): (<class 'pygeodesy.hausdorff.HausdorffEuclidean'>, True)
6test 76 HausdorffEuclidean.copy(): (<class 'pygeodesy.hausdorff.HausdorffEuclidean'>, True)
6test 77 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 90, 0.05951)
6test 78 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 150, 0.0552)
6test 79 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 90, 0.05951)
6test 80 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 150, 0.0552)
6test 81 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 90, None)
6test 82 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 150, None)
6test 83 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 90, None)
6test 84 HausdorffFlatLocal (radians2): (0.25116, 35, 3, 150, None)
6test 85 copy(HausdorffFlatLocal): (<class 'pygeodesy.hausdorff.HausdorffFlatLocal'>, True)
6test 86 HausdorffFlatLocal.copy(): (<class 'pygeodesy.hausdorff.HausdorffFlatLocal'>, True)
6test 87 HausdorffFlatPolar (radians): (0.69043, 4, 31, 90, 0.22286)
6test 88 HausdorffFlatPolar (radians): (0.69043, 4, 31, 150, 0.21318)
6test 89 HausdorffFlatPolar (radians): (0.69043, 4, 31, 90, 0.22286)
6test 90 HausdorffFlatPolar (radians): (0.69043, 4, 31, 150, 0.21318)
6test 91 HausdorffFlatPolar (radians): (0.69043, 4, 31, 90, None)
6test 92 HausdorffFlatPolar (radians): (0.69043, 4, 31, 150, None)
6test 93 HausdorffFlatPolar (radians): (0.69043, 4, 31, 90, None)
6test 94 HausdorffFlatPolar (radians): (0.69043, 4, 31, 150, None)
6test 95 copy(HausdorffFlatPolar): (<class 'pygeodesy.hausdorff.HausdorffFlatPolar'>, True)
6test 96 HausdorffFlatPolar.copy(): (<class 'pygeodesy.hausdorff.HausdorffFlatPolar'>, True)
6test 97 HausdorffHaversine (radians): (0.50097, 35, 3, 90, 0.212)
6test 98 HausdorffHaversine (radians): (0.50097, 35, 3, 150, 0.20099)
6test 99 HausdorffHaversine (radians): (0.50097, 35, 3, 90, 0.212)
6test 100 HausdorffHaversine (radians): (0.50097, 35, 3, 150, 0.20099)
6test 101 HausdorffHaversine (radians): (0.50097, 35, 3, 90, None)
6test 102 HausdorffHaversine (radians): (0.50097, 35, 3, 150, None)
6test 103 HausdorffHaversine (radians): (0.50097, 35, 3, 90, None)
6test 104 HausdorffHaversine (radians): (0.50097, 35, 3, 150, None)
6test 105 copy(HausdorffHaversine): (<class 'pygeodesy.hausdorff.HausdorffHaversine'>, True)
6test 106 HausdorffHaversine.copy(): (<class 'pygeodesy.hausdorff.HausdorffHaversine'>, True)
6test 107 HausdorffHubeny (radians2): (0.25116, 35, 3, 90, 0.05951)
6test 108 HausdorffHubeny (radians2): (0.25116, 35, 3, 150, 0.0552)
6test 109 HausdorffHubeny (radians2): (0.25116, 35, 3, 90, 0.05951)
6test 110 HausdorffHubeny (radians2): (0.25116, 35, 3, 150, 0.0552)
6test 111 HausdorffHubeny (radians2): (0.25116, 35, 3, 90, None)
6test 112 HausdorffHubeny (radians2): (0.25116, 35, 3, 150, None)
6test 113 HausdorffHubeny (radians2): (0.25116, 35, 3, 90, None)
6test 114 HausdorffHubeny (radians2): (0.25116, 35, 3, 150, None)
6test 115 copy(HausdorffHubeny): (<class 'pygeodesy.hausdorff.HausdorffHubeny'>, True)
6test 116 HausdorffHubeny.copy(): (<class 'pygeodesy.hausdorff.HausdorffHubeny'>, True)
6test 117 HausdorffThomas (radians): (0.501, 35, 3, 90, 0.21184)
6test 118 HausdorffThomas (radians): (0.501, 35, 3, 150, 0.20084)
6test 119 HausdorffThomas (radians): (0.501, 35, 3, 90, 0.21184)
6test 120 HausdorffThomas (radians): (0.501, 35, 3, 150, 0.20084)
6test 121 HausdorffThomas (radians): (0.501, 35, 3, 90, None)
6test 122 HausdorffThomas (radians): (0.501, 35, 3, 150, None)
6test 123 HausdorffThomas (radians): (0.501, 35, 3, 90, None)
6test 124 HausdorffThomas (radians): (0.501, 35, 3, 150, None)
6test 125 copy(HausdorffThomas): (<class 'pygeodesy.hausdorff.HausdorffThomas'>, True)
6test 126 HausdorffThomas.copy(): (<class 'pygeodesy.hausdorff.HausdorffThomas'>, True)
6test 127 HausdorffVincentys (radians): (0.50097, 35, 3, 90, 0.212)
6test 128 HausdorffVincentys (radians): (0.50097, 35, 3, 150, 0.20099)
6test 129 HausdorffVincentys (radians): (0.50097, 35, 3, 90, 0.212)
6test 130 HausdorffVincentys (radians): (0.50097, 35, 3, 150, 0.20099)
6test 131 HausdorffVincentys (radians): (0.50097, 35, 3, 90, None)
6test 132 HausdorffVincentys (radians): (0.50097, 35, 3, 150, None)
6test 133 HausdorffVincentys (radians): (0.50097, 35, 3, 90, None)
6test 134 HausdorffVincentys (radians): (0.50097, 35, 3, 150, None)
6test 135 copy(HausdorffVincentys): (<class 'pygeodesy.hausdorff.HausdorffVincentys'>, True)
6test 136 HausdorffVincentys.copy(): (<class 'pygeodesy.hausdorff.HausdorffVincentys'>, True)
6test 137 hausdorff_: (40.0, 22, 6, 90, 18.16111)
6test 138 hausdorff_: (48.0, 38, 36, 150, 17.30667)
6test 139 hausdorff_: (40.0, 22, 6, 90, 18.16111)
6test 140 hausdorff_: (48.0, 38, 36, 150, 17.30667)
6test 141 hausdorff_: (40.0, 22, 6, 90, None)
6test 142 hausdorff_: (48.0, 38, 36, 150, None)
6test 143 hausdorff_: (40.0, 22, 6, 90, None)
6test 144 hausdorff_: (48.0, 38, 36, 150, None)
6test 145 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 90, 1351164.35982)  FAILED, KNOWN, expected (3195418.34044, 35, 3, 90, 1351164.35981)
6test 146 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 150, 1280992.80341)
6test 147 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 90, 1351164.35982)  FAILED, KNOWN, expected (3195418.34044, 35, 3, 90, 1351164.35981)
6test 148 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 150, 1280992.80341)
6test 149 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 90, None)
6test 150 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 150, None)
6test 151 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 90, None)
6test 152 HausdorffDistanceTo (meter): (3195418.34044, 35, 3, 150, None)
6test 153 copy(HausdorffDistanceTo): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
6test 154 HausdorffDistanceTo.copy(): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
6test 155 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, 1350684.04012)
6test 156 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, 1280478.58707)
6test 157 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, 1350684.04012)
6test 158 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, 1280478.58707)
6test 159 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, None)
6test 160 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, None)
6test 161 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, None)
6test 162 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, None)
6test 163 copy(HausdorffDistanceTo): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
6test 164 HausdorffDistanceTo.copy(): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
6test 165 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, 1350684.04012)
6test 166 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, 1280478.58707)
6test 167 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, 1350684.04012)
6test 168 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, 1280478.58707)
6test 169 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, None)
6test 170 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, None)
6test 171 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, None)
6test 172 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, None)
6test 173 copy(HausdorffDistanceTo): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
6test 174 HausdorffDistanceTo.copy(): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
6test 175 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, 1350684.04012)
6test 176 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, 1280478.58707)
6test 177 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, 1350684.04012)
6test 178 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, 1280478.58707)
6test 179 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, None)
6test 180 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, None)
6test 181 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 90, None)
6test 182 HausdorffDistanceTo (meter): (3191685.70841, 35, 3, 150, None)
6test 183 copy(HausdorffDistanceTo): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
6test 184 HausdorffDistanceTo.copy(): (<class 'pygeodesy.hausdorff.HausdorffDistanceTo'>, True)
62 of 184 testHausdorff.py tests (1.1%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 16.126 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testHeights.py
6testing testHeights.py 21.09.30
6test 1 copy(HeightIDWcosineAndoyerLambert): (<class 'pygeodesy.heights.HeightIDWcosineAndoyerLambert'>, True)
6test 2 HeightIDWcosineAndoyerLambert.copy(): (<class 'pygeodesy.heights.HeightIDWcosineAndoyerLambert'>, True)
6test 3 HeightIDWcosineAndoyerLambert(wrap=False): 6.108538037
6test 4 HeightIDWcosineAndoyerLambert(float): <class 'float'>
6test 5 HeightIDWcosineAndoyerLambert(latlon): True
6test 6 HeightIDWcosineAndoyerLambert(wrap=False): 5.0
6test 7 HeightIDWcosineAndoyerLambert(float): <class 'float'>
6test 8 HeightIDWcosineAndoyerLambert(latlon): True
6test 9 HeightIDWcosineAndoyerLambert(wrap=False): (6.108538037, 5.0,)
6test 10 HeightIDWcosineAndoyerLambert(tuple): <class 'tuple'>
6test 11 HeightIDWcosineAndoyerLambert(tuple-float): <class 'float'>
6test 12 HeightIDWcosineAndoyerLambert(tuple-float): <class 'float'>
6test 13 HeightIDWcosineAndoyerLambert(wrap=False): [6.108538037, 5.0]
6test 14 HeightIDWcosineAndoyerLambert(list: <class 'list'>
6test 15 HeightIDWcosineAndoyerLambert(list-float): <class 'float'>
6test 16 HeightIDWcosineAndoyerLambert(list-float): <class 'float'>
6test 17 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 18 HeightIDWcosineAndoyerLambert.adjust: None
6test 19 HeightIDWcosineAndoyerLambert.kmin: 2
6test 20 HeightIDWcosineAndoyerLambert.wrap: False
6test 21 HeightIDWcosineAndoyerLambert.beta: 2
6test 22 HeightIDWcosineAndoyerLambert.adjust: None
6test 23 HeightIDWcosineAndoyerLambert.beta: 2
6test 24 HeightIDWcosineAndoyerLambert.kmin: 2
6test 25 HeightIDWcosineAndoyerLambert.wrap: False
6test 26 copy(HeightIDWcosineForsytheAndoyerLambert): (<class 'pygeodesy.heights.HeightIDWcosineForsytheAndoyerLambert'>, True)
6test 27 HeightIDWcosineForsytheAndoyerLambert.copy(): (<class 'pygeodesy.heights.HeightIDWcosineForsytheAndoyerLambert'>, True)
6test 28 HeightIDWcosineForsytheAndoyerLambert(wrap=False): 6.108538037
6test 29 HeightIDWcosineForsytheAndoyerLambert(float): <class 'float'>
6test 30 HeightIDWcosineForsytheAndoyerLambert(latlon): True
6test 31 HeightIDWcosineForsytheAndoyerLambert(wrap=False): 5.0
6test 32 HeightIDWcosineForsytheAndoyerLambert(float): <class 'float'>
6test 33 HeightIDWcosineForsytheAndoyerLambert(latlon): True
6test 34 HeightIDWcosineForsytheAndoyerLambert(wrap=False): (6.108538037, 5.0,)
6test 35 HeightIDWcosineForsytheAndoyerLambert(tuple): <class 'tuple'>
6test 36 HeightIDWcosineForsytheAndoyerLambert(tuple-float): <class 'float'>
6test 37 HeightIDWcosineForsytheAndoyerLambert(tuple-float): <class 'float'>
6test 38 HeightIDWcosineForsytheAndoyerLambert(wrap=False): [6.108538037, 5.0]
6test 39 HeightIDWcosineForsytheAndoyerLambert(list: <class 'list'>
6test 40 HeightIDWcosineForsytheAndoyerLambert(list-float): <class 'float'>
6test 41 HeightIDWcosineForsytheAndoyerLambert(list-float): <class 'float'>
6test 42 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 43 HeightIDWcosineForsytheAndoyerLambert.adjust: None
6test 44 HeightIDWcosineForsytheAndoyerLambert.kmin: 2
6test 45 HeightIDWcosineForsytheAndoyerLambert.wrap: False
6test 46 HeightIDWcosineForsytheAndoyerLambert.beta: 2
6test 47 HeightIDWcosineForsytheAndoyerLambert.adjust: None
6test 48 HeightIDWcosineForsytheAndoyerLambert.beta: 2
6test 49 HeightIDWcosineForsytheAndoyerLambert.kmin: 2
6test 50 HeightIDWcosineForsytheAndoyerLambert.wrap: False
6test 51 copy(HeightIDWcosineLaw): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 52 HeightIDWcosineLaw.copy(): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 53 HeightIDWcosineLaw(wrap=True): 6.108538037
6test 54 HeightIDWcosineLaw(float): <class 'float'>
6test 55 HeightIDWcosineLaw(latlon): True
6test 56 HeightIDWcosineLaw(wrap=True): 5.0
6test 57 HeightIDWcosineLaw(float): <class 'float'>
6test 58 HeightIDWcosineLaw(latlon): True
6test 59 HeightIDWcosineLaw(wrap=True): (6.108538037, 5.0,)
6test 60 HeightIDWcosineLaw(tuple): <class 'tuple'>
6test 61 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 62 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 63 HeightIDWcosineLaw(wrap=True): [6.108538037, 5.0]
6test 64 HeightIDWcosineLaw(list: <class 'list'>
6test 65 HeightIDWcosineLaw(list-float): <class 'float'>
6test 66 HeightIDWcosineLaw(list-float): <class 'float'>
6test 67 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 68 HeightIDWcosineLaw.adjust: None
6test 69 HeightIDWcosineLaw.kmin: 2
6test 70 HeightIDWcosineLaw.wrap: False
6test 71 HeightIDWcosineLaw.beta: 2
6test 72 HeightIDWcosineLaw.adjust: None
6test 73 HeightIDWcosineLaw.beta: 2
6test 74 HeightIDWcosineLaw.kmin: 2
6test 75 HeightIDWcosineLaw.wrap: False
6test 76 copy(HeightIDWcosineLaw): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 77 HeightIDWcosineLaw.copy(): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 78 HeightIDWcosineLaw(wrap=False): 6.108538037
6test 79 HeightIDWcosineLaw(float): <class 'float'>
6test 80 HeightIDWcosineLaw(latlon): True
6test 81 HeightIDWcosineLaw(wrap=False): 5.0
6test 82 HeightIDWcosineLaw(float): <class 'float'>
6test 83 HeightIDWcosineLaw(latlon): True
6test 84 HeightIDWcosineLaw(wrap=False): (6.108538037, 5.0,)
6test 85 HeightIDWcosineLaw(tuple): <class 'tuple'>
6test 86 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 87 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 88 HeightIDWcosineLaw(wrap=False): [6.108538037, 5.0]
6test 89 HeightIDWcosineLaw(list: <class 'list'>
6test 90 HeightIDWcosineLaw(list-float): <class 'float'>
6test 91 HeightIDWcosineLaw(list-float): <class 'float'>
6test 92 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 93 HeightIDWcosineLaw.adjust: None
6test 94 HeightIDWcosineLaw.kmin: 2
6test 95 HeightIDWcosineLaw.wrap: False
6test 96 HeightIDWcosineLaw.beta: 2
6test 97 HeightIDWcosineLaw.adjust: None
6test 98 HeightIDWcosineLaw.beta: 2
6test 99 HeightIDWcosineLaw.kmin: 2
6test 100 HeightIDWcosineLaw.wrap: False
6test 101 copy(HeightIDWdistanceTo): (<class 'pygeodesy.heights.HeightIDWdistanceTo'>, True)
6test 102 HeightIDWdistanceTo.copy(): (<class 'pygeodesy.heights.HeightIDWdistanceTo'>, True)
6test 103 HeightIDWdistanceTo(): 6.108538037
6test 104 HeightIDWdistanceTo(float): <class 'float'>
6test 105 HeightIDWdistanceTo(latlon): True
6test 106 HeightIDWdistanceTo(): 5.0
6test 107 HeightIDWdistanceTo(float): <class 'float'>
6test 108 HeightIDWdistanceTo(latlon): True
6test 109 HeightIDWdistanceTo(): (6.108538037, 5.0,)
6test 110 HeightIDWdistanceTo(tuple): <class 'tuple'>
6test 111 HeightIDWdistanceTo(tuple-float): <class 'float'>
6test 112 HeightIDWdistanceTo(tuple-float): <class 'float'>
6test 113 HeightIDWdistanceTo(): [6.108538037, 5.0]
6test 114 HeightIDWdistanceTo(list: <class 'list'>
6test 115 HeightIDWdistanceTo(list-float): <class 'float'>
6test 116 HeightIDWdistanceTo(list-float): <class 'float'>
6test 117 HeightError: type(other) (9.0): incompatible with sphericalTrigonometry.LatLon.distanceTo(other), invalid
6test 118 HeightIDWdistanceTo.adjust: None
6test 119 HeightIDWdistanceTo.kmin: 2
6test 120 HeightIDWdistanceTo.wrap: None
6test 121 HeightIDWdistanceTo.beta: 2
6test 122 HeightIDWdistanceTo.adjust: None
6test 123 HeightIDWdistanceTo.beta: 2
6test 124 HeightIDWdistanceTo.kmin: 2
6test 125 HeightIDWdistanceTo.wrap: None
6test 126 copy(HeightIDWeuclidean): (<class 'pygeodesy.heights.HeightIDWeuclidean'>, True)
6test 127 HeightIDWeuclidean.copy(): (<class 'pygeodesy.heights.HeightIDWeuclidean'>, True)
6test 128 HeightIDWeuclidean(adjust=False): 6.143010434
6test 129 HeightIDWeuclidean(float): <class 'float'>
6test 130 HeightIDWeuclidean(latlon): True
6test 131 HeightIDWeuclidean(adjust=False): 5.0
6test 132 HeightIDWeuclidean(float): <class 'float'>
6test 133 HeightIDWeuclidean(latlon): True
6test 134 HeightIDWeuclidean(adjust=False): (6.143010434, 5.0,)
6test 135 HeightIDWeuclidean(tuple): <class 'tuple'>
6test 136 HeightIDWeuclidean(tuple-float): <class 'float'>
6test 137 HeightIDWeuclidean(tuple-float): <class 'float'>
6test 138 HeightIDWeuclidean(adjust=False): [6.143010434, 5.0]
6test 139 HeightIDWeuclidean(list: <class 'list'>
6test 140 HeightIDWeuclidean(list-float): <class 'float'>
6test 141 HeightIDWeuclidean(list-float): <class 'float'>
6test 142 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 143 HeightIDWeuclidean.adjust: True
6test 144 HeightIDWeuclidean.kmin: 2
6test 145 HeightIDWeuclidean.wrap: None
6test 146 HeightIDWeuclidean.beta: 2
6test 147 HeightIDWeuclidean.adjust: True
6test 148 HeightIDWeuclidean.beta: 2
6test 149 HeightIDWeuclidean.kmin: 2
6test 150 HeightIDWeuclidean.wrap: None
6test 151 copy(HeightIDWequirectangular): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 152 HeightIDWequirectangular.copy(): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 153 HeightIDWequirectangular(adjust=True, wrap=True): 6.108538529
6test 154 HeightIDWequirectangular(float): <class 'float'>
6test 155 HeightIDWequirectangular(latlon): True
6test 156 HeightIDWequirectangular(adjust=True, wrap=True): 5.0
6test 157 HeightIDWequirectangular(float): <class 'float'>
6test 158 HeightIDWequirectangular(latlon): True
6test 159 HeightIDWequirectangular(adjust=True, wrap=True): (6.108538529, 5.0,)
6test 160 HeightIDWequirectangular(tuple): <class 'tuple'>
6test 161 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 162 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 163 HeightIDWequirectangular(adjust=True, wrap=True): [6.108538529, 5.0]
6test 164 HeightIDWequirectangular(list: <class 'list'>
6test 165 HeightIDWequirectangular(list-float): <class 'float'>
6test 166 HeightIDWequirectangular(list-float): <class 'float'>
6test 167 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 168 HeightIDWequirectangular.adjust: True
6test 169 HeightIDWequirectangular.kmin: 2
6test 170 HeightIDWequirectangular.wrap: False
6test 171 HeightIDWequirectangular.beta: 1
6test 172 HeightIDWequirectangular.adjust: True
6test 173 HeightIDWequirectangular.beta: 1
6test 174 HeightIDWequirectangular.kmin: 2
6test 175 HeightIDWequirectangular.wrap: False
6test 176 copy(HeightIDWequirectangular): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 177 HeightIDWequirectangular.copy(): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 178 HeightIDWequirectangular(adjust=False, wrap=True): 6.108614369
6test 179 HeightIDWequirectangular(float): <class 'float'>
6test 180 HeightIDWequirectangular(latlon): True
6test 181 HeightIDWequirectangular(adjust=False, wrap=True): 5.0
6test 182 HeightIDWequirectangular(float): <class 'float'>
6test 183 HeightIDWequirectangular(latlon): True
6test 184 HeightIDWequirectangular(adjust=False, wrap=True): (6.108614369, 5.0,)
6test 185 HeightIDWequirectangular(tuple): <class 'tuple'>
6test 186 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 187 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 188 HeightIDWequirectangular(adjust=False, wrap=True): [6.108614369, 5.0]
6test 189 HeightIDWequirectangular(list: <class 'list'>
6test 190 HeightIDWequirectangular(list-float): <class 'float'>
6test 191 HeightIDWequirectangular(list-float): <class 'float'>
6test 192 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 193 HeightIDWequirectangular.adjust: True
6test 194 HeightIDWequirectangular.kmin: 2
6test 195 HeightIDWequirectangular.wrap: False
6test 196 HeightIDWequirectangular.beta: 1
6test 197 HeightIDWequirectangular.adjust: True
6test 198 HeightIDWequirectangular.beta: 1
6test 199 HeightIDWequirectangular.kmin: 2
6test 200 HeightIDWequirectangular.wrap: False
6test 201 copy(HeightIDWflatLocal): (<class 'pygeodesy.heights.HeightIDWflatLocal'>, True)
6test 202 HeightIDWflatLocal.copy(): (<class 'pygeodesy.heights.HeightIDWflatLocal'>, True)
6test 203 HeightIDWflatLocal(wrap=False): 6.860459007
6test 204 HeightIDWflatLocal(float): <class 'float'>
6test 205 HeightIDWflatLocal(latlon): True
6test 206 HeightIDWflatLocal(wrap=False): 5.0
6test 207 HeightIDWflatLocal(float): <class 'float'>
6test 208 HeightIDWflatLocal(latlon): True
6test 209 HeightIDWflatLocal(wrap=False): (6.860459007, 5.0,)
6test 210 HeightIDWflatLocal(tuple): <class 'tuple'>
6test 211 HeightIDWflatLocal(tuple-float): <class 'float'>
6test 212 HeightIDWflatLocal(tuple-float): <class 'float'>
6test 213 HeightIDWflatLocal(wrap=False): [6.860459007, 5.0]
6test 214 HeightIDWflatLocal(list: <class 'list'>
6test 215 HeightIDWflatLocal(list-float): <class 'float'>
6test 216 HeightIDWflatLocal(list-float): <class 'float'>
6test 217 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 218 HeightIDWflatLocal.adjust: None
6test 219 HeightIDWflatLocal.kmin: 2
6test 220 HeightIDWflatLocal.wrap: False
6test 221 HeightIDWflatLocal.beta: 2
6test 222 HeightIDWflatLocal.adjust: None
6test 223 HeightIDWflatLocal.beta: 2
6test 224 HeightIDWflatLocal.kmin: 2
6test 225 HeightIDWflatLocal.wrap: False
6test 226 copy(HeightIDWflatPolar): (<class 'pygeodesy.heights.HeightIDWflatPolar'>, True)
6test 227 HeightIDWflatPolar.copy(): (<class 'pygeodesy.heights.HeightIDWflatPolar'>, True)
6test 228 HeightIDWflatPolar(wrap=False): 6.261469975
6test 229 HeightIDWflatPolar(float): <class 'float'>
6test 230 HeightIDWflatPolar(latlon): True
6test 231 HeightIDWflatPolar(wrap=False): 5.0
6test 232 HeightIDWflatPolar(float): <class 'float'>
6test 233 HeightIDWflatPolar(latlon): True
6test 234 HeightIDWflatPolar(wrap=False): (6.261469975, 5.0,)
6test 235 HeightIDWflatPolar(tuple): <class 'tuple'>
6test 236 HeightIDWflatPolar(tuple-float): <class 'float'>
6test 237 HeightIDWflatPolar(tuple-float): <class 'float'>
6test 238 HeightIDWflatPolar(wrap=False): [6.261469975, 5.0]
6test 239 HeightIDWflatPolar(list: <class 'list'>
6test 240 HeightIDWflatPolar(list-float): <class 'float'>
6test 241 HeightIDWflatPolar(list-float): <class 'float'>
6test 242 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 243 HeightIDWflatPolar.adjust: None
6test 244 HeightIDWflatPolar.kmin: 2
6test 245 HeightIDWflatPolar.wrap: False
6test 246 HeightIDWflatPolar.beta: 2
6test 247 HeightIDWflatPolar.adjust: None
6test 248 HeightIDWflatPolar.beta: 2
6test 249 HeightIDWflatPolar.kmin: 2
6test 250 HeightIDWflatPolar.wrap: False
6test 251 copy(HeightIDWhaversine): (<class 'pygeodesy.heights.HeightIDWhaversine'>, True)
6test 252 HeightIDWhaversine.copy(): (<class 'pygeodesy.heights.HeightIDWhaversine'>, True)
6test 253 HeightIDWhaversine(wrap=False): 6.108538037
6test 254 HeightIDWhaversine(float): <class 'float'>
6test 255 HeightIDWhaversine(latlon): True
6test 256 HeightIDWhaversine(wrap=False): 5.0
6test 257 HeightIDWhaversine(float): <class 'float'>
6test 258 HeightIDWhaversine(latlon): True
6test 259 HeightIDWhaversine(wrap=False): (6.108538037, 5.0,)
6test 260 HeightIDWhaversine(tuple): <class 'tuple'>
6test 261 HeightIDWhaversine(tuple-float): <class 'float'>
6test 262 HeightIDWhaversine(tuple-float): <class 'float'>
6test 263 HeightIDWhaversine(wrap=False): [6.108538037, 5.0]
6test 264 HeightIDWhaversine(list: <class 'list'>
6test 265 HeightIDWhaversine(list-float): <class 'float'>
6test 266 HeightIDWhaversine(list-float): <class 'float'>
6test 267 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 268 HeightIDWhaversine.adjust: None
6test 269 HeightIDWhaversine.kmin: 2
6test 270 HeightIDWhaversine.wrap: False
6test 271 HeightIDWhaversine.beta: 2
6test 272 HeightIDWhaversine.adjust: None
6test 273 HeightIDWhaversine.beta: 2
6test 274 HeightIDWhaversine.kmin: 2
6test 275 HeightIDWhaversine.wrap: False
6test 276 copy(HeightIDWhubeny): (<class 'pygeodesy.heights.HeightIDWhubeny'>, True)
6test 277 HeightIDWhubeny.copy(): (<class 'pygeodesy.heights.HeightIDWhubeny'>, True)
6test 278 HeightIDWhubeny(wrap=False): 6.860459007
6test 279 HeightIDWhubeny(float): <class 'float'>
6test 280 HeightIDWhubeny(latlon): True
6test 281 HeightIDWhubeny(wrap=False): 5.0
6test 282 HeightIDWhubeny(float): <class 'float'>
6test 283 HeightIDWhubeny(latlon): True
6test 284 HeightIDWhubeny(wrap=False): (6.860459007, 5.0,)
6test 285 HeightIDWhubeny(tuple): <class 'tuple'>
6test 286 HeightIDWhubeny(tuple-float): <class 'float'>
6test 287 HeightIDWhubeny(tuple-float): <class 'float'>
6test 288 HeightIDWhubeny(wrap=False): [6.860459007, 5.0]
6test 289 HeightIDWhubeny(list: <class 'list'>
6test 290 HeightIDWhubeny(list-float): <class 'float'>
6test 291 HeightIDWhubeny(list-float): <class 'float'>
6test 292 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 293 HeightIDWhubeny.adjust: None
6test 294 HeightIDWhubeny.kmin: 2
6test 295 HeightIDWhubeny.wrap: False
6test 296 HeightIDWhubeny.beta: 2
6test 297 HeightIDWhubeny.adjust: None
6test 298 HeightIDWhubeny.beta: 2
6test 299 HeightIDWhubeny.kmin: 2
6test 300 HeightIDWhubeny.wrap: False
6test 301 copy(HeightIDWthomas): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 302 HeightIDWthomas.copy(): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 303 HeightIDWthomas(wrap=True): 6.108538037
6test 304 HeightIDWthomas(float): <class 'float'>
6test 305 HeightIDWthomas(latlon): True
6test 306 HeightIDWthomas(wrap=True): 5.0
6test 307 HeightIDWthomas(float): <class 'float'>
6test 308 HeightIDWthomas(latlon): True
6test 309 HeightIDWthomas(wrap=True): (6.108538037, 5.0,)
6test 310 HeightIDWthomas(tuple): <class 'tuple'>
6test 311 HeightIDWthomas(tuple-float): <class 'float'>
6test 312 HeightIDWthomas(tuple-float): <class 'float'>
6test 313 HeightIDWthomas(wrap=True): [6.108538037, 5.0]
6test 314 HeightIDWthomas(list: <class 'list'>
6test 315 HeightIDWthomas(list-float): <class 'float'>
6test 316 HeightIDWthomas(list-float): <class 'float'>
6test 317 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 318 HeightIDWthomas.adjust: None
6test 319 HeightIDWthomas.kmin: 2
6test 320 HeightIDWthomas.wrap: False
6test 321 HeightIDWthomas.beta: 2
6test 322 HeightIDWthomas.adjust: None
6test 323 HeightIDWthomas.beta: 2
6test 324 HeightIDWthomas.kmin: 2
6test 325 HeightIDWthomas.wrap: False
6test 326 copy(HeightIDWthomas): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 327 HeightIDWthomas.copy(): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 328 HeightIDWthomas(wrap=False): 6.108538037
6test 329 HeightIDWthomas(float): <class 'float'>
6test 330 HeightIDWthomas(latlon): True
6test 331 HeightIDWthomas(wrap=False): 5.0
6test 332 HeightIDWthomas(float): <class 'float'>
6test 333 HeightIDWthomas(latlon): True
6test 334 HeightIDWthomas(wrap=False): (6.108538037, 5.0,)
6test 335 HeightIDWthomas(tuple): <class 'tuple'>
6test 336 HeightIDWthomas(tuple-float): <class 'float'>
6test 337 HeightIDWthomas(tuple-float): <class 'float'>
6test 338 HeightIDWthomas(wrap=False): [6.108538037, 5.0]
6test 339 HeightIDWthomas(list: <class 'list'>
6test 340 HeightIDWthomas(list-float): <class 'float'>
6test 341 HeightIDWthomas(list-float): <class 'float'>
6test 342 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 343 HeightIDWthomas.adjust: None
6test 344 HeightIDWthomas.kmin: 2
6test 345 HeightIDWthomas.wrap: False
6test 346 HeightIDWthomas.beta: 2
6test 347 HeightIDWthomas.adjust: None
6test 348 HeightIDWthomas.beta: 2
6test 349 HeightIDWthomas.kmin: 2
6test 350 HeightIDWthomas.wrap: False
6test 351 copy(HeightIDWvincentys): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 352 HeightIDWvincentys.copy(): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 353 HeightIDWvincentys(wrap=True): 6.108538037
6test 354 HeightIDWvincentys(float): <class 'float'>
6test 355 HeightIDWvincentys(latlon): True
6test 356 HeightIDWvincentys(wrap=True): 5.0
6test 357 HeightIDWvincentys(float): <class 'float'>
6test 358 HeightIDWvincentys(latlon): True
6test 359 HeightIDWvincentys(wrap=True): (6.108538037, 5.0,)
6test 360 HeightIDWvincentys(tuple): <class 'tuple'>
6test 361 HeightIDWvincentys(tuple-float): <class 'float'>
6test 362 HeightIDWvincentys(tuple-float): <class 'float'>
6test 363 HeightIDWvincentys(wrap=True): [6.108538037, 5.0]
6test 364 HeightIDWvincentys(list: <class 'list'>
6test 365 HeightIDWvincentys(list-float): <class 'float'>
6test 366 HeightIDWvincentys(list-float): <class 'float'>
6test 367 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 368 HeightIDWvincentys.adjust: None
6test 369 HeightIDWvincentys.kmin: 2
6test 370 HeightIDWvincentys.wrap: False
6test 371 HeightIDWvincentys.beta: 2
6test 372 HeightIDWvincentys.adjust: None
6test 373 HeightIDWvincentys.beta: 2
6test 374 HeightIDWvincentys.kmin: 2
6test 375 HeightIDWvincentys.wrap: False
6test 376 copy(HeightIDWvincentys): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 377 HeightIDWvincentys.copy(): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 378 HeightIDWvincentys(wrap=False): 6.108538037
6test 379 HeightIDWvincentys(float): <class 'float'>
6test 380 HeightIDWvincentys(latlon): True
6test 381 HeightIDWvincentys(wrap=False): 5.0
6test 382 HeightIDWvincentys(float): <class 'float'>
6test 383 HeightIDWvincentys(latlon): True
6test 384 HeightIDWvincentys(wrap=False): (6.108538037, 5.0,)
6test 385 HeightIDWvincentys(tuple): <class 'tuple'>
6test 386 HeightIDWvincentys(tuple-float): <class 'float'>
6test 387 HeightIDWvincentys(tuple-float): <class 'float'>
6test 388 HeightIDWvincentys(wrap=False): [6.108538037, 5.0]
6test 389 HeightIDWvincentys(list: <class 'list'>
6test 390 HeightIDWvincentys(list-float): <class 'float'>
6test 391 HeightIDWvincentys(list-float): <class 'float'>
6test 392 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 393 HeightIDWvincentys.adjust: None
6test 394 HeightIDWvincentys.kmin: 2
6test 395 HeightIDWvincentys.wrap: False
6test 396 HeightIDWvincentys.beta: 2
6test 397 HeightIDWvincentys.adjust: None
6test 398 HeightIDWvincentys.beta: 2
6test 399 HeightIDWvincentys.kmin: 2
6test 400 HeightIDWvincentys.wrap: False
6test 401 intersection: 02.64932°N, 002.550079°E, +2.50m
6test 402 copy(HeightIDWcosineAndoyerLambert): (<class 'pygeodesy.heights.HeightIDWcosineAndoyerLambert'>, True)
6test 403 HeightIDWcosineAndoyerLambert.copy(): (<class 'pygeodesy.heights.HeightIDWcosineAndoyerLambert'>, True)
6test 404 HeightIDWcosineAndoyerLambert(wrap=False): 2.592742938
6test 405 HeightIDWcosineAndoyerLambert(float): <class 'float'>
6test 406 HeightIDWcosineAndoyerLambert(latlon): True
6test 407 HeightIDWcosineAndoyerLambert(wrap=False): 3.0
6test 408 HeightIDWcosineAndoyerLambert(float): <class 'float'>
6test 409 HeightIDWcosineAndoyerLambert(latlon): True
6test 410 HeightIDWcosineAndoyerLambert(wrap=False): (2.592742938, 3.0,)
6test 411 HeightIDWcosineAndoyerLambert(tuple): <class 'tuple'>
6test 412 HeightIDWcosineAndoyerLambert(tuple-float): <class 'float'>
6test 413 HeightIDWcosineAndoyerLambert(tuple-float): <class 'float'>
6test 414 HeightIDWcosineAndoyerLambert(wrap=False): [2.592742938, 3.0]
6test 415 HeightIDWcosineAndoyerLambert(list: <class 'list'>
6test 416 HeightIDWcosineAndoyerLambert(list-float): <class 'float'>
6test 417 HeightIDWcosineAndoyerLambert(list-float): <class 'float'>
6test 418 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 419 HeightIDWcosineAndoyerLambert.adjust: None
6test 420 HeightIDWcosineAndoyerLambert.kmin: 2
6test 421 HeightIDWcosineAndoyerLambert.wrap: False
6test 422 HeightIDWcosineAndoyerLambert.beta: 2
6test 423 HeightIDWcosineAndoyerLambert.adjust: None
6test 424 HeightIDWcosineAndoyerLambert.beta: 2
6test 425 HeightIDWcosineAndoyerLambert.kmin: 2
6test 426 HeightIDWcosineAndoyerLambert.wrap: False
6test 427 copy(HeightIDWcosineForsytheAndoyerLambert): (<class 'pygeodesy.heights.HeightIDWcosineForsytheAndoyerLambert'>, True)
6test 428 HeightIDWcosineForsytheAndoyerLambert.copy(): (<class 'pygeodesy.heights.HeightIDWcosineForsytheAndoyerLambert'>, True)
6test 429 HeightIDWcosineForsytheAndoyerLambert(wrap=False): 2.592742938
6test 430 HeightIDWcosineForsytheAndoyerLambert(float): <class 'float'>
6test 431 HeightIDWcosineForsytheAndoyerLambert(latlon): True
6test 432 HeightIDWcosineForsytheAndoyerLambert(wrap=False): 3.0
6test 433 HeightIDWcosineForsytheAndoyerLambert(float): <class 'float'>
6test 434 HeightIDWcosineForsytheAndoyerLambert(latlon): True
6test 435 HeightIDWcosineForsytheAndoyerLambert(wrap=False): (2.592742938, 3.0,)
6test 436 HeightIDWcosineForsytheAndoyerLambert(tuple): <class 'tuple'>
6test 437 HeightIDWcosineForsytheAndoyerLambert(tuple-float): <class 'float'>
6test 438 HeightIDWcosineForsytheAndoyerLambert(tuple-float): <class 'float'>
6test 439 HeightIDWcosineForsytheAndoyerLambert(wrap=False): [2.592742938, 3.0]
6test 440 HeightIDWcosineForsytheAndoyerLambert(list: <class 'list'>
6test 441 HeightIDWcosineForsytheAndoyerLambert(list-float): <class 'float'>
6test 442 HeightIDWcosineForsytheAndoyerLambert(list-float): <class 'float'>
6test 443 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 444 HeightIDWcosineForsytheAndoyerLambert.adjust: None
6test 445 HeightIDWcosineForsytheAndoyerLambert.kmin: 2
6test 446 HeightIDWcosineForsytheAndoyerLambert.wrap: False
6test 447 HeightIDWcosineForsytheAndoyerLambert.beta: 2
6test 448 HeightIDWcosineForsytheAndoyerLambert.adjust: None
6test 449 HeightIDWcosineForsytheAndoyerLambert.beta: 2
6test 450 HeightIDWcosineForsytheAndoyerLambert.kmin: 2
6test 451 HeightIDWcosineForsytheAndoyerLambert.wrap: False
6test 452 copy(HeightIDWcosineLaw): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 453 HeightIDWcosineLaw.copy(): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 454 HeightIDWcosineLaw(wrap=True): 2.592742938
6test 455 HeightIDWcosineLaw(float): <class 'float'>
6test 456 HeightIDWcosineLaw(latlon): True
6test 457 HeightIDWcosineLaw(wrap=True): 3.0
6test 458 HeightIDWcosineLaw(float): <class 'float'>
6test 459 HeightIDWcosineLaw(latlon): True
6test 460 HeightIDWcosineLaw(wrap=True): (2.592742938, 3.0,)
6test 461 HeightIDWcosineLaw(tuple): <class 'tuple'>
6test 462 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 463 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 464 HeightIDWcosineLaw(wrap=True): [2.592742938, 3.0]
6test 465 HeightIDWcosineLaw(list: <class 'list'>
6test 466 HeightIDWcosineLaw(list-float): <class 'float'>
6test 467 HeightIDWcosineLaw(list-float): <class 'float'>
6test 468 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 469 HeightIDWcosineLaw.adjust: None
6test 470 HeightIDWcosineLaw.kmin: 2
6test 471 HeightIDWcosineLaw.wrap: False
6test 472 HeightIDWcosineLaw.beta: 2
6test 473 HeightIDWcosineLaw.adjust: None
6test 474 HeightIDWcosineLaw.beta: 2
6test 475 HeightIDWcosineLaw.kmin: 2
6test 476 HeightIDWcosineLaw.wrap: False
6test 477 copy(HeightIDWcosineLaw): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 478 HeightIDWcosineLaw.copy(): (<class 'pygeodesy.heights.HeightIDWcosineLaw'>, True)
6test 479 HeightIDWcosineLaw(wrap=False): 2.592742938
6test 480 HeightIDWcosineLaw(float): <class 'float'>
6test 481 HeightIDWcosineLaw(latlon): True
6test 482 HeightIDWcosineLaw(wrap=False): 3.0
6test 483 HeightIDWcosineLaw(float): <class 'float'>
6test 484 HeightIDWcosineLaw(latlon): True
6test 485 HeightIDWcosineLaw(wrap=False): (2.592742938, 3.0,)
6test 486 HeightIDWcosineLaw(tuple): <class 'tuple'>
6test 487 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 488 HeightIDWcosineLaw(tuple-float): <class 'float'>
6test 489 HeightIDWcosineLaw(wrap=False): [2.592742938, 3.0]
6test 490 HeightIDWcosineLaw(list: <class 'list'>
6test 491 HeightIDWcosineLaw(list-float): <class 'float'>
6test 492 HeightIDWcosineLaw(list-float): <class 'float'>
6test 493 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 494 HeightIDWcosineLaw.adjust: None
6test 495 HeightIDWcosineLaw.kmin: 2
6test 496 HeightIDWcosineLaw.wrap: False
6test 497 HeightIDWcosineLaw.beta: 2
6test 498 HeightIDWcosineLaw.adjust: None
6test 499 HeightIDWcosineLaw.beta: 2
6test 500 HeightIDWcosineLaw.kmin: 2
6test 501 HeightIDWcosineLaw.wrap: False
6test 502 copy(HeightIDWeuclidean): (<class 'pygeodesy.heights.HeightIDWeuclidean'>, True)
6test 503 HeightIDWeuclidean.copy(): (<class 'pygeodesy.heights.HeightIDWeuclidean'>, True)
6test 504 HeightIDWeuclidean(adjust=False): 2.592735541
6test 505 HeightIDWeuclidean(float): <class 'float'>
6test 506 HeightIDWeuclidean(latlon): True
6test 507 HeightIDWeuclidean(adjust=False): 3.0
6test 508 HeightIDWeuclidean(float): <class 'float'>
6test 509 HeightIDWeuclidean(latlon): True
6test 510 HeightIDWeuclidean(adjust=False): (2.592735541, 3.0,)
6test 511 HeightIDWeuclidean(tuple): <class 'tuple'>
6test 512 HeightIDWeuclidean(tuple-float): <class 'float'>
6test 513 HeightIDWeuclidean(tuple-float): <class 'float'>
6test 514 HeightIDWeuclidean(adjust=False): [2.592735541, 3.0]
6test 515 HeightIDWeuclidean(list: <class 'list'>
6test 516 HeightIDWeuclidean(list-float): <class 'float'>
6test 517 HeightIDWeuclidean(list-float): <class 'float'>
6test 518 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 519 HeightIDWeuclidean.adjust: True
6test 520 HeightIDWeuclidean.kmin: 2
6test 521 HeightIDWeuclidean.wrap: None
6test 522 HeightIDWeuclidean.beta: 2
6test 523 HeightIDWeuclidean.adjust: True
6test 524 HeightIDWeuclidean.beta: 2
6test 525 HeightIDWeuclidean.kmin: 2
6test 526 HeightIDWeuclidean.wrap: None
6test 527 copy(HeightIDWequirectangular): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 528 HeightIDWequirectangular.copy(): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 529 HeightIDWequirectangular(adjust=True, wrap=True): 2.592743455
6test 530 HeightIDWequirectangular(float): <class 'float'>
6test 531 HeightIDWequirectangular(latlon): True
6test 532 HeightIDWequirectangular(adjust=True, wrap=True): 3.0
6test 533 HeightIDWequirectangular(float): <class 'float'>
6test 534 HeightIDWequirectangular(latlon): True
6test 535 HeightIDWequirectangular(adjust=True, wrap=True): (2.592743455, 3.0,)
6test 536 HeightIDWequirectangular(tuple): <class 'tuple'>
6test 537 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 538 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 539 HeightIDWequirectangular(adjust=True, wrap=True): [2.592743455, 3.0]
6test 540 HeightIDWequirectangular(list: <class 'list'>
6test 541 HeightIDWequirectangular(list-float): <class 'float'>
6test 542 HeightIDWequirectangular(list-float): <class 'float'>
6test 543 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 544 HeightIDWequirectangular.adjust: True
6test 545 HeightIDWequirectangular.kmin: 2
6test 546 HeightIDWequirectangular.wrap: False
6test 547 HeightIDWequirectangular.beta: 1
6test 548 HeightIDWequirectangular.adjust: True
6test 549 HeightIDWequirectangular.beta: 1
6test 550 HeightIDWequirectangular.kmin: 2
6test 551 HeightIDWequirectangular.wrap: False
6test 552 copy(HeightIDWequirectangular): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 553 HeightIDWequirectangular.copy(): (<class 'pygeodesy.heights.HeightIDWequirectangular'>, True)
6test 554 HeightIDWequirectangular(adjust=False, wrap=True): 2.592732915
6test 555 HeightIDWequirectangular(float): <class 'float'>
6test 556 HeightIDWequirectangular(latlon): True
6test 557 HeightIDWequirectangular(adjust=False, wrap=True): 3.0
6test 558 HeightIDWequirectangular(float): <class 'float'>
6test 559 HeightIDWequirectangular(latlon): True
6test 560 HeightIDWequirectangular(adjust=False, wrap=True): (2.592732915, 3.0,)
6test 561 HeightIDWequirectangular(tuple): <class 'tuple'>
6test 562 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 563 HeightIDWequirectangular(tuple-float): <class 'float'>
6test 564 HeightIDWequirectangular(adjust=False, wrap=True): [2.592732915, 3.0]
6test 565 HeightIDWequirectangular(list: <class 'list'>
6test 566 HeightIDWequirectangular(list-float): <class 'float'>
6test 567 HeightIDWequirectangular(list-float): <class 'float'>
6test 568 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 569 HeightIDWequirectangular.adjust: True
6test 570 HeightIDWequirectangular.kmin: 2
6test 571 HeightIDWequirectangular.wrap: False
6test 572 HeightIDWequirectangular.beta: 1
6test 573 HeightIDWequirectangular.adjust: True
6test 574 HeightIDWequirectangular.beta: 1
6test 575 HeightIDWequirectangular.kmin: 2
6test 576 HeightIDWequirectangular.wrap: False
6test 577 copy(HeightIDWflatLocal): (<class 'pygeodesy.heights.HeightIDWflatLocal'>, True)
6test 578 HeightIDWflatLocal.copy(): (<class 'pygeodesy.heights.HeightIDWflatLocal'>, True)
6test 579 HeightIDWflatLocal(wrap=False): 2.689429914
6test 580 HeightIDWflatLocal(float): <class 'float'>
6test 581 HeightIDWflatLocal(latlon): True
6test 582 HeightIDWflatLocal(wrap=False): 3.0
6test 583 HeightIDWflatLocal(float): <class 'float'>
6test 584 HeightIDWflatLocal(latlon): True
6test 585 HeightIDWflatLocal(wrap=False): (2.689429914, 3.0,)
6test 586 HeightIDWflatLocal(tuple): <class 'tuple'>
6test 587 HeightIDWflatLocal(tuple-float): <class 'float'>
6test 588 HeightIDWflatLocal(tuple-float): <class 'float'>
6test 589 HeightIDWflatLocal(wrap=False): [2.689429914, 3.0]
6test 590 HeightIDWflatLocal(list: <class 'list'>
6test 591 HeightIDWflatLocal(list-float): <class 'float'>
6test 592 HeightIDWflatLocal(list-float): <class 'float'>
6test 593 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 594 HeightIDWflatLocal.adjust: None
6test 595 HeightIDWflatLocal.kmin: 2
6test 596 HeightIDWflatLocal.wrap: False
6test 597 HeightIDWflatLocal.beta: 2
6test 598 HeightIDWflatLocal.adjust: None
6test 599 HeightIDWflatLocal.beta: 2
6test 600 HeightIDWflatLocal.kmin: 2
6test 601 HeightIDWflatLocal.wrap: False
6test 602 copy(HeightIDWflatPolar): (<class 'pygeodesy.heights.HeightIDWflatPolar'>, True)
6test 603 HeightIDWflatPolar.copy(): (<class 'pygeodesy.heights.HeightIDWflatPolar'>, True)
6test 604 HeightIDWflatPolar(wrap=False): 2.592973059
6test 605 HeightIDWflatPolar(float): <class 'float'>
6test 606 HeightIDWflatPolar(latlon): True
6test 607 HeightIDWflatPolar(wrap=False): 3.0
6test 608 HeightIDWflatPolar(float): <class 'float'>
6test 609 HeightIDWflatPolar(latlon): True
6test 610 HeightIDWflatPolar(wrap=False): (2.592973059, 3.0,)
6test 611 HeightIDWflatPolar(tuple): <class 'tuple'>
6test 612 HeightIDWflatPolar(tuple-float): <class 'float'>
6test 613 HeightIDWflatPolar(tuple-float): <class 'float'>
6test 614 HeightIDWflatPolar(wrap=False): [2.592973059, 3.0]
6test 615 HeightIDWflatPolar(list: <class 'list'>
6test 616 HeightIDWflatPolar(list-float): <class 'float'>
6test 617 HeightIDWflatPolar(list-float): <class 'float'>
6test 618 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 619 HeightIDWflatPolar.adjust: None
6test 620 HeightIDWflatPolar.kmin: 2
6test 621 HeightIDWflatPolar.wrap: False
6test 622 HeightIDWflatPolar.beta: 2
6test 623 HeightIDWflatPolar.adjust: None
6test 624 HeightIDWflatPolar.beta: 2
6test 625 HeightIDWflatPolar.kmin: 2
6test 626 HeightIDWflatPolar.wrap: False
6test 627 copy(HeightIDWhaversine): (<class 'pygeodesy.heights.HeightIDWhaversine'>, True)
6test 628 HeightIDWhaversine.copy(): (<class 'pygeodesy.heights.HeightIDWhaversine'>, True)
6test 629 HeightIDWhaversine(wrap=False): 2.592742938
6test 630 HeightIDWhaversine(float): <class 'float'>
6test 631 HeightIDWhaversine(latlon): True
6test 632 HeightIDWhaversine(wrap=False): 3.0
6test 633 HeightIDWhaversine(float): <class 'float'>
6test 634 HeightIDWhaversine(latlon): True
6test 635 HeightIDWhaversine(wrap=False): (2.592742938, 3.0,)
6test 636 HeightIDWhaversine(tuple): <class 'tuple'>
6test 637 HeightIDWhaversine(tuple-float): <class 'float'>
6test 638 HeightIDWhaversine(tuple-float): <class 'float'>
6test 639 HeightIDWhaversine(wrap=False): [2.592742938, 3.0]
6test 640 HeightIDWhaversine(list: <class 'list'>
6test 641 HeightIDWhaversine(list-float): <class 'float'>
6test 642 HeightIDWhaversine(list-float): <class 'float'>
6test 643 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 644 HeightIDWhaversine.adjust: None
6test 645 HeightIDWhaversine.kmin: 2
6test 646 HeightIDWhaversine.wrap: False
6test 647 HeightIDWhaversine.beta: 2
6test 648 HeightIDWhaversine.adjust: None
6test 649 HeightIDWhaversine.beta: 2
6test 650 HeightIDWhaversine.kmin: 2
6test 651 HeightIDWhaversine.wrap: False
6test 652 copy(HeightIDWhubeny): (<class 'pygeodesy.heights.HeightIDWhubeny'>, True)
6test 653 HeightIDWhubeny.copy(): (<class 'pygeodesy.heights.HeightIDWhubeny'>, True)
6test 654 HeightIDWhubeny(wrap=False): 2.689429914
6test 655 HeightIDWhubeny(float): <class 'float'>
6test 656 HeightIDWhubeny(latlon): True
6test 657 HeightIDWhubeny(wrap=False): 3.0
6test 658 HeightIDWhubeny(float): <class 'float'>
6test 659 HeightIDWhubeny(latlon): True
6test 660 HeightIDWhubeny(wrap=False): (2.689429914, 3.0,)
6test 661 HeightIDWhubeny(tuple): <class 'tuple'>
6test 662 HeightIDWhubeny(tuple-float): <class 'float'>
6test 663 HeightIDWhubeny(tuple-float): <class 'float'>
6test 664 HeightIDWhubeny(wrap=False): [2.689429914, 3.0]
6test 665 HeightIDWhubeny(list: <class 'list'>
6test 666 HeightIDWhubeny(list-float): <class 'float'>
6test 667 HeightIDWhubeny(list-float): <class 'float'>
6test 668 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 669 HeightIDWhubeny.adjust: None
6test 670 HeightIDWhubeny.kmin: 2
6test 671 HeightIDWhubeny.wrap: False
6test 672 HeightIDWhubeny.beta: 2
6test 673 HeightIDWhubeny.adjust: None
6test 674 HeightIDWhubeny.beta: 2
6test 675 HeightIDWhubeny.kmin: 2
6test 676 HeightIDWhubeny.wrap: False
6test 677 copy(HeightIDWthomas): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 678 HeightIDWthomas.copy(): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 679 HeightIDWthomas(wrap=True): 2.592742938
6test 680 HeightIDWthomas(float): <class 'float'>
6test 681 HeightIDWthomas(latlon): True
6test 682 HeightIDWthomas(wrap=True): 3.0
6test 683 HeightIDWthomas(float): <class 'float'>
6test 684 HeightIDWthomas(latlon): True
6test 685 HeightIDWthomas(wrap=True): (2.592742938, 3.0,)
6test 686 HeightIDWthomas(tuple): <class 'tuple'>
6test 687 HeightIDWthomas(tuple-float): <class 'float'>
6test 688 HeightIDWthomas(tuple-float): <class 'float'>
6test 689 HeightIDWthomas(wrap=True): [2.592742938, 3.0]
6test 690 HeightIDWthomas(list: <class 'list'>
6test 691 HeightIDWthomas(list-float): <class 'float'>
6test 692 HeightIDWthomas(list-float): <class 'float'>
6test 693 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 694 HeightIDWthomas.adjust: None
6test 695 HeightIDWthomas.kmin: 2
6test 696 HeightIDWthomas.wrap: False
6test 697 HeightIDWthomas.beta: 2
6test 698 HeightIDWthomas.adjust: None
6test 699 HeightIDWthomas.beta: 2
6test 700 HeightIDWthomas.kmin: 2
6test 701 HeightIDWthomas.wrap: False
6test 702 copy(HeightIDWthomas): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 703 HeightIDWthomas.copy(): (<class 'pygeodesy.heights.HeightIDWthomas'>, True)
6test 704 HeightIDWthomas(wrap=False): 2.592742938
6test 705 HeightIDWthomas(float): <class 'float'>
6test 706 HeightIDWthomas(latlon): True
6test 707 HeightIDWthomas(wrap=False): 3.0
6test 708 HeightIDWthomas(float): <class 'float'>
6test 709 HeightIDWthomas(latlon): True
6test 710 HeightIDWthomas(wrap=False): (2.592742938, 3.0,)
6test 711 HeightIDWthomas(tuple): <class 'tuple'>
6test 712 HeightIDWthomas(tuple-float): <class 'float'>
6test 713 HeightIDWthomas(tuple-float): <class 'float'>
6test 714 HeightIDWthomas(wrap=False): [2.592742938, 3.0]
6test 715 HeightIDWthomas(list: <class 'list'>
6test 716 HeightIDWthomas(list-float): <class 'float'>
6test 717 HeightIDWthomas(list-float): <class 'float'>
6test 718 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 719 HeightIDWthomas.adjust: None
6test 720 HeightIDWthomas.kmin: 2
6test 721 HeightIDWthomas.wrap: False
6test 722 HeightIDWthomas.beta: 2
6test 723 HeightIDWthomas.adjust: None
6test 724 HeightIDWthomas.beta: 2
6test 725 HeightIDWthomas.kmin: 2
6test 726 HeightIDWthomas.wrap: False
6test 727 copy(HeightIDWvincentys): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 728 HeightIDWvincentys.copy(): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 729 HeightIDWvincentys(wrap=True): 2.592742938
6test 730 HeightIDWvincentys(float): <class 'float'>
6test 731 HeightIDWvincentys(latlon): True
6test 732 HeightIDWvincentys(wrap=True): 3.0
6test 733 HeightIDWvincentys(float): <class 'float'>
6test 734 HeightIDWvincentys(latlon): True
6test 735 HeightIDWvincentys(wrap=True): (2.592742938, 3.0,)
6test 736 HeightIDWvincentys(tuple): <class 'tuple'>
6test 737 HeightIDWvincentys(tuple-float): <class 'float'>
6test 738 HeightIDWvincentys(tuple-float): <class 'float'>
6test 739 HeightIDWvincentys(wrap=True): [2.592742938, 3.0]
6test 740 HeightIDWvincentys(list: <class 'list'>
6test 741 HeightIDWvincentys(list-float): <class 'float'>
6test 742 HeightIDWvincentys(list-float): <class 'float'>
6test 743 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 744 HeightIDWvincentys.adjust: None
6test 745 HeightIDWvincentys.kmin: 2
6test 746 HeightIDWvincentys.wrap: False
6test 747 HeightIDWvincentys.beta: 2
6test 748 HeightIDWvincentys.adjust: None
6test 749 HeightIDWvincentys.beta: 2
6test 750 HeightIDWvincentys.kmin: 2
6test 751 HeightIDWvincentys.wrap: False
6test 752 copy(HeightIDWvincentys): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 753 HeightIDWvincentys.copy(): (<class 'pygeodesy.heights.HeightIDWvincentys'>, True)
6test 754 HeightIDWvincentys(wrap=False): 2.592742938
6test 755 HeightIDWvincentys(float): <class 'float'>
6test 756 HeightIDWvincentys(latlon): True
6test 757 HeightIDWvincentys(wrap=False): 3.0
6test 758 HeightIDWvincentys(float): <class 'float'>
6test 759 HeightIDWvincentys(latlon): True
6test 760 HeightIDWvincentys(wrap=False): (2.592742938, 3.0,)
6test 761 HeightIDWvincentys(tuple): <class 'tuple'>
6test 762 HeightIDWvincentys(tuple-float): <class 'float'>
6test 763 HeightIDWvincentys(tuple-float): <class 'float'>
6test 764 HeightIDWvincentys(wrap=False): [2.592742938, 3.0]
6test 765 HeightIDWvincentys(list: <class 'list'>
6test 766 HeightIDWvincentys(list-float): <class 'float'>
6test 767 HeightIDWvincentys(list-float): <class 'float'>
6test 768 HeightError: llis[0] (9.0): 'float' object has no attribute 'lon'
6test 769 HeightIDWvincentys.adjust: None
6test 770 HeightIDWvincentys.kmin: 2
6test 771 HeightIDWvincentys.wrap: False
6test 772 HeightIDWvincentys.beta: 2
6test 773 HeightIDWvincentys.adjust: None
6test 774 HeightIDWvincentys.beta: 2
6test 775 HeightIDWvincentys.kmin: 2
6test 776 HeightIDWvincentys.wrap: False
680 tests skipped (80): No module named 'scipy': required by heights.HeightLinear
6all 776 testHeights.py tests passed, 80 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 23.205 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testInterns.py
6testing testInterns.py 22.09.15 (module pygeodesy.interns 23.03.12)
6test 1 _0_ = '0': True
6test 2 _0_ = '0': 0
6test 3 _0to9_ = '0123456789': True
6test 4 _0to9_ = '0123456789': 0123456789  FAILED, KNOWN, expected 0to9
6test 5 _1_ = '1': True
6test 6 _1_ = '1': 1
6test 7 _2_ = '2': True
6test 8 _2_ = '2': 2
6test 9 _3_ = '3': True
6test 10 _3_ = '3': 3
6test 11 _4_ = '4': True
6test 12 _4_ = '4': 4
6test 13 __all__ = ('NN', 'Str_', 'machine'): False  FAILED, KNOWN, expected True
6test 14 __builtins__ = {'__name__': 'builtins', ....) for help about object.}: False  FAILED, KNOWN, expected True
6test 15 __cached__ = './pygeodesy/__pycache__/interns.cpython-39.pyc': True
6test 16 __doc__ = "Single C{str}ing constan.... L{pygeodesy.machine}.\n": True
6test 17 __file__ = './pygeodesy/interns.py': True
6test 18 __loader__ = <_frozen_importlib_extern....er object at 0x100ef8640>: False  FAILED, KNOWN, expected True
6test 19 __name__ = 'pygeodesy.interns': True
6test 20 __package__ = 'pygeodesy': True
6test 21 __spec__ = ModuleSpec(name='pygeodes....'./pygeodesy/interns.py'): False  FAILED, KNOWN, expected True
6test 22 __version__ = '23.03.12': True
6test 23 _a12_ = 'a12': True
6test 24 _a12_ = 'a12': a12
6test 25 _A_ = 'A': True
6test 26 _A_ = 'A': a
6test 27 _a_ = 'a': True
6test 28 _a_ = 'a': a
6test 29 _Airy1830_ = 'Airy1830': True
6test 30 _Airy1830_ = 'Airy1830': airy1830
6test 31 _AiryModified_ = 'AiryModified': True
6test 32 _AiryModified_ = 'AiryModified': airymodified
6test 33 _ambiguous_ = 'ambiguous': True
6test 34 _ambiguous_ = 'ambiguous': ambiguous
6test 35 _AMPERSAND_ = '&': True
6test 36 _AMPERSAND_ = '&': &  FAILED, KNOWN, expected ampersand
6test 37 _an_ = 'an': True
6test 38 _an_ = 'an': an
6test 39 _and_ = 'and': True
6test 40 _and_ = 'and': and
6test 41 _angle_ = 'angle': True
6test 42 _angle_ = 'angle': angle
6test 43 _antipodal_ = 'antipodal': True
6test 44 _antipodal_ = 'antipodal': antipodal
6test 45 _area_ = 'area': True
6test 46 _area_ = 'area': area
6test 47 _areaOf_ = 'areaOf': True
6test 48 _areaOf_ = 'areaOf': areaof
6test 49 _arg_ = 'arg': True
6test 50 _arg_ = 'arg': arg
6test 51 _AT_ = '@': True
6test 52 _AT_ = '@': @  FAILED, KNOWN, expected at
6test 53 _at_ = 'at': True
6test 54 _at_ = 'at': at
6test 55 _AtoZnoIO_ = 'ABCDEFGHJKLMNPQRSTUVWXYZ': True
6test 56 _AtoZnoIO_ = 'ABCDEFGHJKLMNPQRSTUVWXYZ': abcdefghjklmnpqrstuvwxyz  FAILED, KNOWN, expected atoznoio
6test 57 _attribute_ = 'attribute': True
6test 58 _attribute_ = 'attribute': attribute
6test 59 _azi12_ = 'azi12': True
6test 60 _azi12_ = 'azi12': azi12
6test 61 _azi1_ = 'azi1': True
6test 62 _azi1_ = 'azi1': azi1
6test 63 _azi2_ = 'azi2': True
6test 64 _azi2_ = 'azi2': azi2
6test 65 _azimuth_ = 'azimuth': True
6test 66 _azimuth_ = 'azimuth': azimuth
6test 67 _B_ = 'B': True
6test 68 _B_ = 'B': b
6test 69 _b_ = 'b': True
6test 70 _b_ = 'b': b
6test 71 _BACKSLASH_ = '\\': True
6test 72 _BACKSLASH_ = '\\': \  FAILED, KNOWN, expected backslash
6test 73 _band_ = 'band': True
6test 74 _band_ = 'band': band
6test 75 _BANG_ = '!': True
6test 76 _BANG_ = '!': !  FAILED, KNOWN, expected bang
6test 77 _BAR_ = '|': True
6test 78 _BAR_ = '|': |  FAILED, KNOWN, expected bar
6test 79 _bearing_ = 'bearing': True
6test 80 _bearing_ = 'bearing': bearing
6test 81 _Bessel1841_ = 'Bessel1841': True
6test 82 _Bessel1841_ = 'Bessel1841': bessel1841
6test 83 _by_ = 'by': True
6test 84 _by_ = 'by': by
6test 85 _C_ = 'C': True
6test 86 _C_ = 'C': c
6test 87 _c_ = 'c': True
6test 88 _c_ = 'c': c
6test 89 _cartesian_ = 'cartesian': True
6test 90 _cartesian_ = 'cartesian': cartesian
6test 91 _center_ = 'center': True
6test 92 _center_ = 'center': center
6test 93 _Clarke1866_ = 'Clarke1866': True
6test 94 _Clarke1866_ = 'Clarke1866': clarke1866
6test 95 _Clarke1880IGN_ = 'Clarke1880IGN': True
6test 96 _Clarke1880IGN_ = 'Clarke1880IGN': clarke1880ign
6test 97 _clip_ = 'clip': True
6test 98 _clip_ = 'clip': clip
6test 99 _coincident_ = 'coincident': True
6test 100 _coincident_ = 'coincident': coincident
6test 101 _colinear_ = 'colinear': True
6test 102 _colinear_ = 'colinear': colinear
6test 103 _COLON_ = ':': True
6test 104 _COLON_ = ':': :  FAILED, KNOWN, expected colon
6test 105 _COLONSPACE_ = ': ': True
6test 106 _COLONSPACE_ = ': ': :   FAILED, KNOWN, expected colonspace
6test 107 _COMMA_ = ',': True
6test 108 _COMMA_ = ',': ,  FAILED, KNOWN, expected comma
6test 109 _COMMASPACE_ = ', ': True
6test 110 _COMMASPACE_ = ', ': ,   FAILED, KNOWN, expected commaspace
6test 111 _concentric_ = 'concentric': True
6test 112 _concentric_ = 'concentric': concentric
6test 113 _convergence_ = 'convergence': True
6test 114 _convergence_ = 'convergence': convergence
6test 115 _conversion_ = 'conversion': True
6test 116 _conversion_ = 'conversion': conversion
6test 117 _convex_ = 'convex': True
6test 118 _convex_ = 'convex': convex
6test 119 _cubic_ = 'cubic': True
6test 120 _cubic_ = 'cubic': cubic
6test 121 _D_ = 'D': True
6test 122 _D_ = 'D': d
6test 123 _d_ = 'd': True
6test 124 _d_ = 'd': d
6test 125 _DASH_ = '-': True
6test 126 _DASH_ = '-': -  FAILED, KNOWN, expected dash
6test 127 _datum_ = 'datum': True
6test 128 _datum_ = 'datum': datum
6test 129 _DDOT_ = '..': True
6test 130 _DDOT_ = '..': ..  FAILED, KNOWN, expected ddot
6test 131 _decode3_ = 'decode3': True
6test 132 _decode3_ = 'decode3': decode3
6test 133 _deg_ = 'deg': True
6test 134 _deg_ = 'deg': deg
6test 135 _degrees2_ = 'degrees2': True
6test 136 _degrees2_ = 'degrees2': degrees2
6test 137 _degrees_ = 'degrees': True
6test 138 _degrees_ = 'degrees': degrees
6test 139 _DEPRECATED_ = 'DEPRECATED': True
6test 140 _DEPRECATED_ = 'DEPRECATED': deprecated
6test 141 _DEQUALSPACED_ = ' == ': True
6test 142 _DEQUALSPACED_ = ' == ':  ==   FAILED, KNOWN, expected dequalspaced
6test 143 _distance_ = 'distance': True
6test 144 _distance_ = 'distance': distance
6test 145 _distanceTo_ = 'distanceTo': True
6test 146 _distanceTo_ = 'distanceTo': distanceto
6test 147 _distant_ = 'distant': True
6test 148 _distant_ = 'distant': distant
6test 149 _DNL_ = '\n\n': True
6test 150 _DNL_ = '\n\n': 

  FAILED, KNOWN, expected dnl
6test 151 _doesn_t_exist_ = "doesn't exist": True
6test 152 _doesn_t_exist_ = "doesn't exist": doesn't exist  FAILED, KNOWN, expected doesn_t_exist
6test 153 _DOT_ = '.': True
6test 154 _DOT_ = '.': .  FAILED, KNOWN, expected dot
6test 155 _down_ = 'down': True
6test 156 _down_ = 'down': down
6test 157 _DUNDER_ = '__': True
6test 158 _DUNDER_ = '__': __  FAILED, KNOWN, expected dunder
6test 159 _E_ = 'E': True
6test 160 _E_ = 'E': e
6test 161 _e_ = 'e': True
6test 162 _e_ = 'e': e
6test 163 _east_ = 'east': True
6test 164 _east_ = 'east': east
6test 165 _easting_ = 'easting': True
6test 166 _easting_ = 'easting': easting
6test 167 _ecef_ = 'ecef': True
6test 168 _ecef_ = 'ecef': ecef
6test 169 _edge_ = 'edge': True
6test 170 _edge_ = 'edge': edge
6test 171 _elevation_ = 'elevation': True
6test 172 _elevation_ = 'elevation': elevation
6test 173 _ELLIPSIS4_ = '....': True
6test 174 _ELLIPSIS4_ = '....': ....  FAILED, KNOWN, expected ellipsis4
6test 175 _ELLIPSIS_ = '...': True
6test 176 _ELLIPSIS_ = '...': ...  FAILED, KNOWN, expected ellipsis
6test 177 _ellipsoid_ = 'ellipsoid': True
6test 178 _ellipsoid_ = 'ellipsoid': ellipsoid
6test 179 _ellipsoidal_ = 'ellipsoidal': True
6test 180 _ellipsoidal_ = 'ellipsoidal': ellipsoidal
6test 181 _enabled_ = 'enabled': True
6test 182 _enabled_ = 'enabled': enabled
6test 183 _encode_ = 'encode': True
6test 184 _encode_ = 'encode': encode
6test 185 _end_ = 'end': True
6test 186 _end_ = 'end': end
6test 187 _epoch_ = 'epoch': True
6test 188 _epoch_ = 'epoch': epoch
6test 189 _EQUAL_ = '=': True
6test 190 _EQUAL_ = '=': =  FAILED, KNOWN, expected equal
6test 191 _EQUALSPACED_ = ' = ': True
6test 192 _EQUALSPACED_ = ' = ':  =   FAILED, KNOWN, expected equalspaced
6test 193 _Error_ = 'Error': True
6test 194 _Error_ = 'Error': error
6test 195 _EW_ = 'EW': True
6test 196 _EW_ = 'EW': ew
6test 197 _exceed_PI_radians_ = 'exceed PI radians': True
6test 198 _exceed_PI_radians_ = 'exceed PI radians': exceed pi radians  FAILED, KNOWN, expected exceed_pi_radians
6test 199 _exceeds_ = 'exceeds': True
6test 200 _exceeds_ = 'exceeds': exceeds
6test 201 _exists_ = 'exists': True
6test 202 _exists_ = 'exists': exists
6test 203 _F_ = 'F': True
6test 204 _F_ = 'F': f
6test 205 _f_ = 'f': True
6test 206 _f_ = 'f': f
6test 207 _feet_ = 'feet': True
6test 208 _feet_ = 'feet': feet
6test 209 _few_ = 'few': True
6test 210 _few_ = 'few': few
6test 211 _fi_ = 'fi': True
6test 212 _fi_ = 'fi': fi
6test 213 _finite_ = 'finite': True
6test 214 _finite_ = 'finite': finite
6test 215 _from_ = 'from': True
6test 216 _from_ = 'from': from
6test 217 _g_ = 'g': True
6test 218 _g_ = 'g': g
6test 219 _gamma_ = 'gamma': True
6test 220 _gamma_ = 'gamma': gamma
6test 221 _GRS80_ = 'GRS80': True
6test 222 _GRS80_ = 'GRS80': grs80
6test 223 _H_ = 'H': True
6test 224 _H_ = 'H': h
6test 225 _h_ = 'h': True
6test 226 _h_ = 'h': h
6test 227 _height_ = 'height': True
6test 228 _height_ = 'height': height
6test 229 _hemipole_ = 'hemipole': True
6test 230 _hemipole_ = 'hemipole': hemipole
6test 231 _i_ = 'i': True
6test 232 _i_ = 'i': i
6test 233 _iadd_ = '+=': True
6test 234 _iadd_ = '+=': +=  FAILED, KNOWN, expected iadd
6test 235 _immutable_ = 'immutable': True
6test 236 _immutable_ = 'immutable': immutable
6test 237 _in_ = 'in': True
6test 238 _in_ = 'in': in
6test 239 _incompatible_ = 'incompatible': True
6test 240 _incompatible_ = 'incompatible': incompatible
6test 241 _INF_ = 'INF': True
6test 242 _INF_ = 'INF': inf
6test 243 _infinite_ = 'infinite': True
6test 244 _infinite_ = 'infinite': infinite
6test 245 _initial_ = 'initial': True
6test 246 _initial_ = 'initial': initial
6test 247 _inside_ = 'inside': True
6test 248 _inside_ = 'inside': inside
6test 249 _intersection_ = 'intersection': True
6test 250 _intersection_ = 'intersection': intersection
6test 251 _Intl1924_ = 'Intl1924': True
6test 252 _Intl1924_ = 'Intl1924': intl1924
6test 253 _invalid_ = 'invalid': True
6test 254 _invalid_ = 'invalid': invalid
6test 255 _isclockwise_ = 'isclockwise': True
6test 256 _isclockwise_ = 'isclockwise': isclockwise
6test 257 _ispolar_ = 'ispolar': True
6test 258 _ispolar_ = 'ispolar': ispolar
6test 259 _j_ = 'j': True
6test 260 _j_ = 'j': j
6test 261 _k0_ = 'k0': True
6test 262 _k0_ = 'k0': k0
6test 263 _kind_ = 'kind': True
6test 264 _kind_ = 'kind': kind
6test 265 _knots_ = 'knots': True
6test 266 _knots_ = 'knots': knots
6test 267 _Krassovski1940_ = 'Krassovski1940': True
6test 268 _Krassovski1940_ = 'Krassovski1940': krassovski1940
6test 269 _Krassowsky1940_ = 'Krassowsky1940': True
6test 270 _Krassowsky1940_ = 'Krassowsky1940': krassowsky1940
6test 271 _lam_ = 'lam': True
6test 272 _lam_ = 'lam': lam
6test 273 _LANGLE_ = '<': True
6test 274 _LANGLE_ = '<': <  FAILED, KNOWN, expected langle
6test 275 _lat0_ = 'lat0': True
6test 276 _lat0_ = 'lat0': lat0
6test 277 _lat1_ = 'lat1': True
6test 278 _lat1_ = 'lat1': lat1
6test 279 _lat2_ = 'lat2': True
6test 280 _lat2_ = 'lat2': lat2
6test 281 _lat_ = 'lat': True
6test 282 _lat_ = 'lat': lat
6test 283 _LatLon_ = 'LatLon': True
6test 284 _LatLon_ = 'LatLon': latlon
6test 285 _latlon_ = 'latlon': True
6test 286 _latlon_ = 'latlon': latlon
6test 287 _LCURLY_ = '{': True
6test 288 _LCURLY_ = '{': {  FAILED, KNOWN, expected lcurly
6test 289 _len_ = 'len': True
6test 290 _len_ = 'len': len
6test 291 _linear_ = 'linear': True
6test 292 _linear_ = 'linear': linear
6test 293 _lon0_ = 'lon0': True
6test 294 _lon0_ = 'lon0': lon0
6test 295 _lon1_ = 'lon1': True
6test 296 _lon1_ = 'lon1': lon1
6test 297 _lon2_ = 'lon2': True
6test 298 _lon2_ = 'lon2': lon2
6test 299 _lon_ = 'lon': True
6test 300 _lon_ = 'lon': lon
6test 301 _LPAREN_ = '(': True
6test 302 _LPAREN_ = '(': (  FAILED, KNOWN, expected lparen
6test 303 _LSQUARE_ = '[': True
6test 304 _LSQUARE_ = '[': [  FAILED, KNOWN, expected lsquare
6test 305 _ltp_ = 'ltp': True
6test 306 _ltp_ = 'ltp': ltp
6test 307 _M12_ = 'M12': True
6test 308 _M12_ = 'M12': m12
6test 309 _m12_ = 'm12': True
6test 310 _m12_ = 'm12': m12
6test 311 _M21_ = 'M21': True
6test 312 _M21_ = 'M21': m21
6test 313 _M_ = 'M': True
6test 314 _M_ = 'M': m
6test 315 _m_ = 'm': True
6test 316 _m_ = 'm': m
6test 317 _MANT_DIG_ = 'MANT_DIG': True
6test 318 _MANT_DIG_ = 'MANT_DIG': mant_dig
6test 319 _MAX_ = 'MAX': True
6test 320 _MAX_ = 'MAX': max
6test 321 _mean_ = 'mean': True
6test 322 _mean_ = 'mean': mean
6test 323 _meanOf_ = 'meanOf': True
6test 324 _meanOf_ = 'meanOf': meanof
6test 325 _meridional_ = 'meridional': True
6test 326 _meridional_ = 'meridional': meridional
6test 327 _meter2_ = 'meter2': True
6test 328 _meter2_ = 'meter2': meter2
6test 329 _meter_ = 'meter': True
6test 330 _meter_ = 'meter': meter
6test 331 _MGRS_ = 'MGRS': True
6test 332 _MGRS_ = 'MGRS': mgrs
6test 333 _MIN_ = 'MIN': True
6test 334 _MIN_ = 'MIN': min
6test 335 _MINUS_ = '-': True
6test 336 _MINUS_ = '-': -  FAILED, KNOWN, expected minus
6test 337 _module_ = 'module': True
6test 338 _module_ = 'module': module
6test 339 _N_ = 'N': True
6test 340 _N_ = 'N': n
6test 341 _n_ = 'n': True
6test 342 _n_ = 'n': n
6test 343 _N_A_ = 'N/A': True
6test 344 _N_A_ = 'N/A': n/a  FAILED, KNOWN, expected n_a
6test 345 _n_a_ = 'n/a': True
6test 346 _n_a_ = 'n/a': n/a  FAILED, KNOWN, expected n_a
6test 347 _NAD27_ = 'NAD27': True
6test 348 _NAD27_ = 'NAD27': nad27
6test 349 _NAD83_ = 'NAD83': True
6test 350 _NAD83_ = 'NAD83': nad83
6test 351 _name_ = 'name': True
6test 352 _name_ = 'name': name
6test 353 _NAN_ = 'NAN': True
6test 354 _NAN_ = 'NAN': nan
6test 355 _NE_ = 'NE': True
6test 356 _NE_ = 'NE': ne
6test 357 _near_ = 'near': True
6test 358 _near_ = 'near': near
6test 359 _nearestOn2_ = 'nearestOn2': True
6test 360 _nearestOn2_ = 'nearestOn2': neareston2
6test 361 _negative_ = 'negative': True
6test 362 _negative_ = 'negative': negative
6test 363 _NL_ = '\n': True
6test 364 _NL_ = '\n': 
  FAILED, KNOWN, expected nl
6test 365 _NLATvar_ = '\n@var ': True
6test 366 _NLATvar_ = '\n@var ': 
@var   FAILED, KNOWN, expected nlatvar
6test 367 _NLHASH_ = '\n# ': True
6test 368 _NLHASH_ = '\n# ': 
#   FAILED, KNOWN, expected nlhash
6test 369 _NN_ = 'NN': True
6test 370 _NN_ = 'NN': nn
6test 371 _no_ = 'no': True
6test 372 _no_ = 'no': no
6test 373 _north_ = 'north': True
6test 374 _north_ = 'north': north
6test 375 _northing_ = 'northing': True
6test 376 _northing_ = 'northing': northing
6test 377 _NorthPole_ = 'NorthPole': True
6test 378 _NorthPole_ = 'NorthPole': northpole
6test 379 _not_ = 'not': True
6test 380 _not_ = 'not': not
6test 381 _not_finite_ = 'not finite': True
6test 382 _not_finite_ = 'not finite': not finite  FAILED, KNOWN, expected not_finite
6test 383 _not_scalar_ = 'not scalar': True
6test 384 _not_scalar_ = 'not scalar': not scalar  FAILED, KNOWN, expected not_scalar
6test 385 _NOTEQUAL_ = '!=': True
6test 386 _NOTEQUAL_ = '!=': !=  FAILED, KNOWN, expected notequal
6test 387 _NS_ = 'NS': True
6test 388 _NS_ = 'NS': ns
6test 389 _NSEW_ = 'NSEW': True
6test 390 _NSEW_ = 'NSEW': nsew
6test 391 _NTF_ = 'NTF': True
6test 392 _NTF_ = 'NTF': ntf
6test 393 _null_ = 'null': True
6test 394 _null_ = 'null': null
6test 395 _number_ = 'number': True
6test 396 _number_ = 'number': number
6test 397 _numpy_ = 'numpy': True
6test 398 _numpy_ = 'numpy': numpy
6test 399 _Nv00_ = 'Nv00': True
6test 400 _Nv00_ = 'Nv00': nv00
6test 401 _NW_ = 'NW': True
6test 402 _NW_ = 'NW': nw
6test 403 _on_ = 'on': True
6test 404 _on_ = 'on': on
6test 405 _opposite_ = 'opposite': True
6test 406 _opposite_ = 'opposite': opposite
6test 407 _or_ = 'or': True
6test 408 _or_ = 'or': or
6test 409 _other_ = 'other': True
6test 410 _other_ = 'other': other
6test 411 _outside_ = 'outside': True
6test 412 _outside_ = 'outside': outside
6test 413 _overlap_ = 'overlap': True
6test 414 _overlap_ = 'overlap': overlap
6test 415 _PERCENT_ = '%': True
6test 416 _PERCENT_ = '%': %  FAILED, KNOWN, expected percent
6test 417 _PERCENTDOTSTAR_ = '%.*': True
6test 418 _PERCENTDOTSTAR_ = '%.*': %.*  FAILED, KNOWN, expected percentdotstar
6test 419 _phi_ = 'phi': True
6test 420 _phi_ = 'phi': phi
6test 421 _platform2 = <function _platform2 at 0x100f903a0>: True
6test 422 _PLUS_ = '+': True
6test 423 _PLUS_ = '+': +  FAILED, KNOWN, expected plus
6test 424 _PLUSMINUS_ = '+-': True
6test 425 _PLUSMINUS_ = '+-': +-  FAILED, KNOWN, expected plusminus
6test 426 _point_ = 'point': True
6test 427 _point_ = 'point': point
6test 428 _points_ = 'points': True
6test 429 _points_ = 'points': points
6test 430 _pole_ = 'pole': True
6test 431 _pole_ = 'pole': pole
6test 432 _precision_ = 'precision': True
6test 433 _precision_ = 'precision': precision
6test 434 _prime_vertical_ = 'prime_vertical': True
6test 435 _prime_vertical_ = 'prime_vertical': prime_vertical
6test 436 _pygeodesy_abspath_ = 'pygeodesy_abspath': True
6test 437 _pygeodesy_abspath_ = 'pygeodesy_abspath': pygeodesy_abspath
6test 438 _PyPy__ = 'PyPy ': True
6test 439 _PyPy__ = 'PyPy ': pypy   FAILED, KNOWN, expected pypy
6test 440 _Python_ = 'Python': True
6test 441 _Python_ = 'Python': python
6test 442 _python_ = 'python': True
6test 443 _python_ = 'python': python
6test 444 _QUOTE1_ = "'": True
6test 445 _QUOTE1_ = "'": '  FAILED, KNOWN, expected quote1
6test 446 _QUOTE2_ = '"': True
6test 447 _QUOTE2_ = '"': "  FAILED, KNOWN, expected quote2
6test 448 _R_ = 'R': True
6test 449 _R_ = 'R': r
6test 450 _radians2_ = 'radians2': True
6test 451 _radians2_ = 'radians2': radians2
6test 452 _radians_ = 'radians': True
6test 453 _radians_ = 'radians': radians
6test 454 _radius1_ = 'radius1': True
6test 455 _radius1_ = 'radius1': radius1
6test 456 _radius2_ = 'radius2': True
6test 457 _radius2_ = 'radius2': radius2
6test 458 _radius_ = 'radius': True
6test 459 _radius_ = 'radius': radius
6test 460 _range_ = 'range': True
6test 461 _range_ = 'range': range
6test 462 _RANGLE_ = '>': True
6test 463 _RANGLE_ = '>': >  FAILED, KNOWN, expected rangle
6test 464 _RCURLY_ = '}': True
6test 465 _RCURLY_ = '}': }  FAILED, KNOWN, expected rcurly
6test 466 _reciprocal_ = 'reciprocal': True
6test 467 _reciprocal_ = 'reciprocal': reciprocal
6test 468 _reframe_ = 'reframe': True
6test 469 _reframe_ = 'reframe': reframe
6test 470 _resolution_ = 'resolution': True
6test 471 _resolution_ = 'resolution': resolution
6test 472 _rIn_ = 'rIn': True
6test 473 _rIn_ = 'rIn': rin
6test 474 _RPAREN_ = ')': True
6test 475 _RPAREN_ = ')': )  FAILED, KNOWN, expected rparen
6test 476 _RSQUARE_ = ']': True
6test 477 _RSQUARE_ = ']': ]  FAILED, KNOWN, expected rsquare
6test 478 _S12_ = 'S12': True
6test 479 _S12_ = 'S12': s12
6test 480 _s12_ = 's12': True
6test 481 _s12_ = 's12': s12
6test 482 _S_ = 'S': True
6test 483 _S_ = 'S': s
6test 484 _s_ = 's': True
6test 485 _s_ = 's': s
6test 486 _scalar_ = 'scalar': True
6test 487 _scalar_ = 'scalar': scalar
6test 488 _scale0_ = 'scale0': True
6test 489 _scale0_ = 'scale0': scale0
6test 490 _scale_ = 'scale': True
6test 491 _scale_ = 'scale': scale
6test 492 _scipy_ = 'scipy': True
6test 493 _scipy_ = 'scipy': scipy
6test 494 _SE_ = 'SE': True
6test 495 _SE_ = 'SE': se
6test 496 _semi_circular_ = 'semi-circular': True
6test 497 _semi_circular_ = 'semi-circular': semi-circular  FAILED, KNOWN, expected semi_circular
6test 498 _sep_ = 'sep': True
6test 499 _sep_ = 'sep': sep
6test 500 _sets_ = 'sets': True
6test 501 _sets_ = 'sets': sets
6test 502 _singular_ = 'singular': True
6test 503 _singular_ = 'singular': singular
6test 504 _SLASH_ = '/': True
6test 505 _SLASH_ = '/': /  FAILED, KNOWN, expected slash
6test 506 _small_ = 'small': True
6test 507 _small_ = 'small': small
6test 508 _SouthPole_ = 'SouthPole': True
6test 509 _SouthPole_ = 'SouthPole': southpole
6test 510 _SPACE_ = ' ': True
6test 511 _SPACE_ = ' ':    FAILED, KNOWN, expected space
6test 512 _specified_ = 'specified': True
6test 513 _specified_ = 'specified': specified
6test 514 _Sphere_ = 'Sphere': True
6test 515 _Sphere_ = 'Sphere': sphere
6test 516 _spherical_ = 'spherical': True
6test 517 _spherical_ = 'spherical': spherical
6test 518 _STAR_ = '*': True
6test 519 _STAR_ = '*': *  FAILED, KNOWN, expected star
6test 520 _start_ = 'start': True
6test 521 _start_ = 'start': start
6test 522 _std_ = 'std': True
6test 523 _std_ = 'std': std
6test 524 _stdev_ = 'stdev': True
6test 525 _stdev_ = 'stdev': stdev
6test 526 _supported_ = 'supported': True
6test 527 _supported_ = 'supported': supported
6test 528 _SW_ = 'SW': True
6test 529 _SW_ = 'SW': sw
6test 530 _sx_ = 'sx': True
6test 531 _sx_ = 'sx': sx
6test 532 _sy_ = 'sy': True
6test 533 _sy_ = 'sy': sy
6test 534 _sz_ = 'sz': True
6test 535 _sz_ = 'sz': sz
6test 536 _tbd_ = 'tbd': True
6test 537 _tbd_ = 'tbd': tbd
6test 538 _TILDE_ = '~': True
6test 539 _TILDE_ = '~': ~  FAILED, KNOWN, expected tilde
6test 540 _till_ = 'till': True
6test 541 _till_ = 'till': till
6test 542 _to_ = 'to': True
6test 543 _to_ = 'to': to
6test 544 _tolerance_ = 'tolerance': True
6test 545 _tolerance_ = 'tolerance': tolerance
6test 546 _too_ = 'too': True
6test 547 _too_ = 'too': too
6test 548 _transform_ = 'transform': True
6test 549 _transform_ = 'transform': transform
6test 550 _tx_ = 'tx': True
6test 551 _tx_ = 'tx': tx
6test 552 _ty_ = 'ty': True
6test 553 _ty_ = 'ty': ty
6test 554 _tz_ = 'tz': True
6test 555 _tz_ = 'tz': tz
6test 556 _UNDER_ = '_': True
6test 557 _UNDER_ = '_': _  FAILED, KNOWN, expected under
6test 558 _units_ = 'units': True
6test 559 _units_ = 'units': units
6test 560 _up_ = 'up': True
6test 561 _up_ = 'up': up
6test 562 _UPS_ = 'UPS': True
6test 563 _UPS_ = 'UPS': ups
6test 564 _utf_8_ = 'utf-8': True
6test 565 _utf_8_ = 'utf-8': utf-8  FAILED, KNOWN, expected utf_8
6test 566 _UTM_ = 'UTM': True
6test 567 _UTM_ = 'UTM': utm
6test 568 _V_ = 'V': True
6test 569 _V_ = 'V': v
6test 570 _valid_ = 'valid': True
6test 571 _valid_ = 'valid': valid
6test 572 _value_ = 'value': True
6test 573 _value_ = 'value': value
6test 574 _version2 = <function _version2 at 0x100f90670>: True
6test 575 _version_ = 'version': True
6test 576 _version_ = 'version': version
6test 577 _vs_ = 'vs': True
6test 578 _vs_ = 'vs': vs
6test 579 _W_ = 'W': True
6test 580 _W_ = 'W': w
6test 581 _WGS72_ = 'WGS72': True
6test 582 _WGS72_ = 'WGS72': wgs72
6test 583 _WGS84_ = 'WGS84': True
6test 584 _WGS84_ = 'WGS84': wgs84
6test 585 _width_ = 'width': True
6test 586 _width_ = 'width': width
6test 587 _with_ = 'with': True
6test 588 _with_ = 'with': with
6test 589 _X_ = 'X': True
6test 590 _X_ = 'X': x
6test 591 _x_ = 'x': True
6test 592 _x_ = 'x': x
6test 593 _xyz_ = 'xyz': True
6test 594 _xyz_ = 'xyz': xyz
6test 595 _Y_ = 'Y': True
6test 596 _Y_ = 'Y': y
6test 597 _y_ = 'y': True
6test 598 _y_ = 'y': y
6test 599 _Z_ = 'Z': True
6test 600 _Z_ = 'Z': z
6test 601 _z_ = 'z': True
6test 602 _z_ = 'z': z
6test 603 _zone_ = 'zone': True
6test 604 _zone_ = 'zone': zone
6test 605 .tillC: ABC
6test 606 .fromX: XYZ
6test 607 .fromH.tillJ: HJ
6test 608 .fromN.tillP: NP
659 of 608 testInterns.py tests (9.7%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 5.494 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testIters.py
6testing testIters.py 21.09.30 (module pygeodesy.iters 22.10.11)
6test 1 i : 7
6test 2 dedup: False
6test 3 i : 0
6test 4 p0: True
6test 5 dedup: True
6test 6 copies: [0, 1, 2, 3, 4, 5, 6, 7]
6test 7 i : 0
6test 8 copies: 9
6test 9 p0: True
6test 10 copies: True
6test 11 copies: (0, 1, 2, 3, 4, 5, 6, 7)
6test 12 iter: 1
6test 13 iter: 2
6test 14 iter: 3
6test 15 re-iter: PointsError('points (0): too few')
6all 15 testIters.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 411.034 us

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testKarney.py
6testing testKarney.py 22.09.12 (module pygeodesy.karney 22.10.24)
6103 tests skipped (103): no geographiclib
6testDirect(pygeodesy.geodesicx, 22.09.15)
6test 1 Direct.lat2: -11.174909999999993  FAILED, KNOWN, expected -11.174910000000001
6test 2 Direct.lon2: -69.959209999999999
6test 3 Direct.azi2: 129.289270889708774
6test 4 Direct.a12: 80.507297142819738
6test 5 Direct.m12: 6273170.205530384555459  FAILED, KNOWN, expected 6273170.205530383624136
6test 6 Direct.M12: 0.166063184473861
6test 7 Direct.M21: 0.164791169456130  FAILED, KNOWN, expected 0.164791169456129
6test 8 Direct.S12: 12841384694976.431640625000000
6test 9 Direct.lat2: 77.031959999999998
6test 10 Direct.lon2: 197.182339999999954  FAILED, KNOWN, expected 197.182340000000011
6test 11 Direct.azi2: 109.112041110671470  FAILED, KNOWN, expected 109.112041110671512
6test 12 Direct.a12: 36.892740690445883  FAILED, KNOWN, expected 36.892740690445891
6test 13 Direct.m12: 3828869.334438759367913  FAILED, KNOWN, expected 3828869.334438760764897
6test 14 Direct.M12: 0.800763496080926
6test 15 Direct.M21: 0.801010069842010
6test 16 Direct.S12: 61674961290615.578125000000000  FAILED, KNOWN, expected 61674961290615.617187500000000
6test 17 Direct.lat2: 41.841380000000001
6test 18 Direct.lon2: 98.566350000000000
6test 19 Direct.azi2: -41.843599514404673  FAILED, KNOWN, expected -41.843599514404659
6test 20 Direct.a12: 75.629304910115238  FAILED, KNOWN, expected 75.629304910115223
6test 21 Direct.m12: 6161154.577311059460044  FAILED, KNOWN, expected 6161154.577311061322689
6test 22 Direct.M12: 0.248163392339504
6test 23 Direct.M21: 0.249302512036279
6test 24 Direct.S12: -6637997720646.717773437500000  FAILED, KNOWN, expected -6637997720646.716796875000000
6test 25 Direct.lat2: -12.706309999999990  FAILED, KNOWN, expected -12.706310000000000
6test 26 Direct.lon2: 285.903439999999989
6test 27 Direct.azi2: 2.512956620913672  FAILED, KNOWN, expected 2.512956620913668
6test 28 Direct.a12: 100.278634181155780  FAILED, KNOWN, expected 100.278634181155752
6test 29 Direct.m12: 6289939.567044666968286  FAILED, KNOWN, expected 6289939.567044668830931
6test 30 Direct.M12: -0.171994902747004
6test 31 Direct.M21: -0.177225695263457
6test 32 Direct.S12: -121287239862139.718750000000000  FAILED, KNOWN, expected -121287239862139.750000000000000
6test 33 Direct.lat2: -15.847839999999952  FAILED, KNOWN, expected -15.847840000000000
6test 34 Direct.lon2: 5.935569999999984  FAILED, KNOWN, expected 5.935570000000000
6test 35 Direct.azi2: -20.787484651536978  FAILED, KNOWN, expected -20.787484651536989
6test 36 Direct.a12: 144.640108810286307  FAILED, KNOWN, expected 144.640108810286250
6test 37 Direct.m12: 3732902.158387714996934  FAILED, KNOWN, expected 3732902.158387718722224
6test 38 Direct.M12: -0.812736387000705
6test 39 Direct.M21: -0.812998005191545
6test 40 Direct.S12: 97825992354058.703125000000000
6testInverse(pygeodesy.geodesicx, 22.09.15)
6test 41 Inverse.lat2: -11.174910000000001
6test 42 Inverse.lon2: -69.959209999999999
6test 43 Inverse.azi1: 111.098748429560331
6test 44 Inverse.azi2: 129.289270889708774
6test 45 Inverse.s12: 8935244.560481829568744
6test 46 Inverse.a12: 80.507297142819738
6test 47 Inverse.m12: 6273170.205530384555459  FAILED, KNOWN, expected 6273170.205530383624136
6test 48 Inverse.M12: 0.166063184473861
6test 49 Inverse.M21: 0.164791169456130  FAILED, KNOWN, expected 0.164791169456129
6test 50 Inverse.S12: 12841384694976.433593750000000  FAILED, KNOWN, expected 12841384694976.431640625000000
6test 51 Inverse.lat2: 77.031959999999998
6test 52 Inverse.lon2: 197.182340000000011
6test 53 Inverse.azi1: 22.020059880982817  FAILED, KNOWN, expected 22.020059880982799
6test 54 Inverse.azi2: 109.112041110671527  FAILED, KNOWN, expected 109.112041110671512
6test 55 Inverse.s12: 4105086.171392444986850  FAILED, KNOWN, expected 4105086.171392440795898
6test 56 Inverse.a12: 36.892740690445905  FAILED, KNOWN, expected 36.892740690445891
6test 57 Inverse.m12: 3828869.334438761696219  FAILED, KNOWN, expected 3828869.334438760764897
6test 58 Inverse.M12: 0.800763496080926
6test 59 Inverse.M21: 0.801010069842010
6test 60 Inverse.S12: 61674961290615.617187500000000
6test 61 Inverse.lat2: 41.841380000000001
6test 62 Inverse.lon2: 98.566350000000000
6test 63 Inverse.azi1: -32.444568764331891
6test 64 Inverse.azi2: -41.843599514404659
6test 65 Inverse.s12: 8394328.894657669588923  FAILED, KNOWN, expected 8394328.894657671451569
6test 66 Inverse.a12: 75.629304910115223
6test 67 Inverse.m12: 6161154.577311060391366  FAILED, KNOWN, expected 6161154.577311061322689
6test 68 Inverse.M12: 0.248163392339504
6test 69 Inverse.M21: 0.249302512036279
6test 70 Inverse.S12: -6637997720646.715820312500000  FAILED, KNOWN, expected -6637997720646.716796875000000
6test 71 Inverse.lat2: -12.706310000000000
6test 72 Inverse.lon2: 285.903439999999989
6test 73 Inverse.azi1: 173.734912408784027
6test 74 Inverse.azi2: 2.512956620913676  FAILED, KNOWN, expected 2.512956620913668
6test 75 Inverse.s12: 11150344.231208024546504
6test 76 Inverse.a12: 100.278634181155766  FAILED, KNOWN, expected 100.278634181155752
6test 77 Inverse.m12: 6289939.567044666968286  FAILED, KNOWN, expected 6289939.567044668830931
6test 78 Inverse.M12: -0.171994902747004
6test 79 Inverse.M21: -0.177225695263457
6test 80 Inverse.S12: -121287239862139.718750000000000  FAILED, KNOWN, expected -121287239862139.750000000000000
6test 81 Inverse.lat2: -15.847840000000000
6test 82 Inverse.lon2: 5.935570000000000
6test 83 Inverse.azi1: -159.033557661192930
6test 84 Inverse.azi2: -20.787484651536985  FAILED, KNOWN, expected -20.787484651536989
6test 85 Inverse.s12: 16076603.163118060678244  FAILED, KNOWN, expected 16076603.163118068128824
6test 86 Inverse.a12: 144.640108810286250
6test 87 Inverse.m12: 3732902.158387719187886  FAILED, KNOWN, expected 3732902.158387718722224
6test 88 Inverse.M12: -0.812736387000705
6test 89 Inverse.M21: -0.812998005191545
6test 90 Inverse.S12: 97825992354058.703125000000000
6testGeodCalc(pygeodesy.ellipsoidalExact, 22.07.07)
6test 91 area: 13662703680020
6test 92 perimeter: 16830891.356049
6testMask(pygeodesy.geodesicx, 22.09.15)
6test 93 Geodesic.EMPTY: 0
6test 94 Geodesic.LATITUDE: 128
6test 95 Geodesic.LONGITUDE: 256
6test 96 Geodesic.AZIMUTH: 512
6test 97 Geodesic.DISTANCE: 1024
6test 98 Geodesic.STANDARD: 3968
6test 99 Geodesic.DISTANCE_IN: 2048
6test 100 Geodesic.REDUCEDLENGTH: 4096
6test 101 Geodesic.GEODESICSCALE: 8192
6test 102 Geodesic.AREA: 16384
6test 103 Geodesic.ALL: 32640
6test 104 Geodesic.LONG_UNROLL: 65536
6102 tests skipped (205): no GeodSolve
6testMath(pygeodesy.karney, 22.10.24)
6test 105 _diff182(-180, -180): 0.0  FAILED, KNOWN, expected -0.0
6test 106 _diff182(-180, -90): 90.0
6test 107 _diff182(-180, 0): 180.0
6test 108 _diff182(-180, 90): -90.0
6test 109 _diff182(-180, 180): 0.0
6test 110 _diff182(-90, -180): -90.0
6test 111 _diff182(-90, -90): 0.0  FAILED, KNOWN, expected -0.0
6test 112 _diff182(-90, 0): 90.0
6test 113 _diff182(-90, 90): 180.0
6test 114 _diff182(-90, 180): -90.0
6test 115 _diff182(0, -180): -180.0
6test 116 _diff182(0, -90): -90.0
6test 117 _diff182(0, 0): 0.0  FAILED, KNOWN, expected -0.0
6test 118 _diff182(0, 90): 90.0
6test 119 _diff182(0, 180): 180.0
6test 120 _diff182(90, -180): 90.0
6test 121 _diff182(90, -90): -180.0
6test 122 _diff182(90, 0): -90.0
6test 123 _diff182(90, 90): 0.0  FAILED, KNOWN, expected -0.0
6test 124 _diff182(90, 180): 90.0
6test 125 _diff182(180, -180): -0.0
6test 126 _diff182(180, -90): 90.0
6test 127 _diff182(180, 0): -180.0
6test 128 _diff182(180, 90): -90.0
6test 129 _diff182(180, 180): 0.0  FAILED, KNOWN, expected -0.0
6test 130 _norm180(-361): -1.0
6test 131  wrap180(-361): -1.0
6test 132 _norm180(-360): -0.0
6test 133  wrap180(-360): 0.0  FAILED, KNOWN, expected -0.0
6test 134 _norm180(-180): -180.0  FAILED, KNOWN, expected 180.0
6test 135  wrap180(-180): -180.0  FAILED, KNOWN, expected 180.0
6test 136 _norm180(-90): -90.0
6test 137  wrap180(-90): -90.0
6test 138 _norm180(0): 0.0
6test 139  wrap180(0): 0.0
6test 140 _norm180(0): 0.0
6test 141  wrap180(0): 0.0
6test 142 _norm180(90): 90.0
6test 143  wrap180(90): 90.0
6test 144 _norm180(180): 180.0
6test 145  wrap180(180): 180.0
6test 146 _norm180(360): 0.0
6test 147  wrap180(360): 0.0
6test 148 _norm180(361): 1.0
6test 149  wrap180(361): 1.0
6test 150 _fsum2_: 1.0e-20
6test 151 _fsum2_: 0.0
6test 152 _fsum2_: -8.0e-20  FAILED, KNOWN, expected 1.0e-20
6test 153 _fsum2_: 1.0e-20
6test 154 _fsum2_: -3.6893488147419103e+19  FAILED, KNOWN, expected 1.0
6test 155 _fsum2_: 1.002978273411373e+18
6test 156 unroll(-30, 0): (30.0, 0.0)
6test 157 unroll(-30, 30): (60.0, 30.0)
6test 158 unroll(-30, 60): (90.0, 60.0)
6test 159 unroll(-30, 90): (120.0, 90.0)
6test 160 unroll(-30, 120): (150.0, 120.0)
6test 161 unroll(-30, 150): (180.0, 150.0)
6test 162 unroll(-30, 180): (-150.0, -180.0)
6test 163 unroll(-30, 210): (-120.0, -150.0)
6test 164 unroll(-30, 240): (-90.0, -120.0)
6test 165 unroll(-30, 270): (-60.0, -90.0)
6test 166 unroll(-30, 300): (-30.0, -60.0)
6test 167 unroll(-30, 330): (0.0, -30.0)
6test 168 unroll(-30, 360): (30.0, 0.0)
650 of 168 testKarney.py tests (29.8%) FAILED, ALL KNOWN, 205 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 809.383 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testKtm.py
6testing testKtm.py 22.06.15 (module pygeodesy.ktm 22.09.15)
6test 1 _TM: KTransverseMercator(ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=7)
6test 2 forward 0N (80.000, 0.000) -/-: 0.0, 8881585.815988, 0.0, 0.9996
6test 3 reverse 0N (80.000, 0.000) -/-: 0.0
6test 4 forward 3N (79.890, 8.374) -/-: 163544.38007, 8881136.361771, 8.245542, 0.999927
6test 5 reverse 3N (79.890, 8.374) -/-: 1.7763568394002505e-15
6test 6 forward 6N (79.562, 16.725) -/-: 333788.634116, 8880946.730424, 16.462884, 1.000962
6test 7 reverse 6N (79.562, 16.725) -/-: 2.0097183471152322e-14
6test 8 forward 9N (79.015, 25.030) -/-: 516782.400098, 8884389.933155, 24.625783, 1.002865
6test 9 reverse 9N (79.015, 25.030) -/-: 2.1316282072803006e-14
6test 10 forward 12N (78.252, 33.266) -/-: 717349.637417, 8896761.249834, 32.712011, 1.005894
6test 11 reverse 12N (78.252, 33.266) -/-: 4.4938668397781776e-14
6test 12 forward 15N (77.274, 41.411) -/-: 938645.229361, 8924845.3123, 40.705476, 1.010384
6test 13 reverse 15N (77.274, 41.411) -/-: 7.105427357601002e-15
6test 14 forward 18N (76.085, 49.443) -/-: 1181870.215451, 8976407.252949, 48.598167, 1.016714
6test 15 reverse 18N (76.085, 49.443) -/-: 3.8263897345803626e-14
6test 16 forward 21N (74.686, 57.339) -/-: 1446137.252018, 9059670.735504, 56.391495, 1.025259
6test 17 reverse 21N (74.686, 57.339) -/-: 5.859285502108464e-14
6test 18 forward 24N (73.084, 65.078) -/-: 1728450.251911, 9182823.938232, 64.096558, 1.036319
6test 19 reverse 24N (73.084, 65.078) -/-: 1.4210854715202004e-14
6test 20 forward 27N (71.281, 72.638) -/-: 2023752.790526, 9353559.771346, 71.732868, 1.050046
6test 21 reverse 27N (71.281, 72.638) -/-: 1.4210854715202004e-14
6test 22 forward 30N (69.282, 80.000) -/-: 2325015.074835, 9578621.128889, 79.325231, 1.066355
6test 23 reverse 30N (69.282, 80.000) -/-: 1.4210854715202004e-14
6test 24 forward 33N (67.094, 87.142) -/-: 2623368.28288, 9863301.12097, 86.898617, 1.084836
6test 25 reverse 33N (67.094, 87.142) -/-: 0.0
6test 26 forward 36N (64.721, 94.046) -/-: 2908348.733697, 10210857.598605, 94.471204, 1.104695
6test 27 reverse 36N (64.721, 94.046) -/-: 0.0
6test 28 forward 39N (62.172, 100.691) -/-: 3168362.707459, 10621853.317461, 102.04623, 1.124739
6test 29 reverse 39N (62.172, 100.691) -/-: 1.4210854715202004e-14
6test 30 forward 42N (59.452, 107.061) -/-: 3391492.622467, 11093528.387239, 109.604086, 1.14345
6test 31 reverse 42N (59.452, 107.061) -/-: 1.4210854715202004e-14
6test 32 forward 45N (56.569, 113.137) -/-: 3566696.824822, 11619422.467571, 117.096854, 1.159166
6test 33 reverse 45N (56.569, 113.137) -/-: 7.105427357601002e-15
6test 34 forward 48N (53.530, 118.903) -/-: 3685290.742854, 12189522.028618, 124.447841, 1.170375
6test 35 reverse 48N (53.530, 118.903) -/-: 1.4210854715202004e-14
6test 36 forward 51N (50.346, 124.343) -/-: 3742386.824274, 12791126.616764, 131.557863, 1.176031
6test 37 reverse 51N (50.346, 124.343) -/-: 1.4210854715202004e-14
6test 38 forward 54N (47.023, 129.443) -/-: 3737846.053669, 13410380.03778, 138.317827, 1.175799
6test 39 reverse 54N (47.023, 129.443) -/-: 2.842170943040401e-14
6test 40 forward 57N (43.571, 134.187) -/-: 3676387.634221, 14034104.572541, 144.624552, 1.170121
6test 41 reverse 57N (43.571, 134.187) -/-: 0.0
6test 42 forward 60N (40.000, 138.564) -/-: 3566810.754496, 14651410.305646, 150.395289, 1.16007
6test 43 reverse 60N (40.000, 138.564) -/-: 0.0
6test 44 forward 63N (36.319, 142.561) -/-: 3420621.906486, 15254653.660248, 155.577129, 1.147079
6test 45 reverse 63N (36.319, 142.561) -/-: 7.105427357601002e-15
6test 46 forward 66N (32.539, 146.167) -/-: 3250522.133697, 15839614.666766, 160.149958, 1.132638
6test 47 reverse 66N (32.539, 146.167) -/-: 7.105427357601002e-15
6test 48 forward 69N (28.669, 149.373) -/-: 3069132.144368, 16405050.640186, 164.124094, 1.118063
6test 49 reverse 69N (28.669, 149.373) -/-: 3.552713678800501e-15
6test 50 forward 72N (24.721, 152.169) -/-: 2888128.173431, 16951919.948156, 167.534978, 1.104377
6test 51 reverse 72N (24.721, 152.169) -/-: 1.0658141036401503e-14
6test 52 forward 75N (20.706, 154.548) -/-: 2717773.256417, 17482549.021439, 170.437193, 1.09228
6test 53 reverse 75N (20.706, 154.548) -/-: 1.0658141036401503e-14
6test 54 forward 78N (16.633, 156.504) -/-: 2566730.586316, 17999918.486885, 172.899178, 1.082187
6test 55 reverse 78N (16.633, 156.504) -/-: 1.7763568394002505e-14
6test 56 forward 81N (12.515, 158.030) -/-: 2442031.891673, 18507145.758, 174.99917, 1.074303
6test 57 reverse 81N (12.515, 158.030) -/-: 8.881784197001252e-15
6test 58 forward 84N (8.362, 159.124) -/-: 2349105.316925, 19007174.828239, 176.822266, 1.068689
6test 59 reverse 84N (8.362, 159.124) -/-: 1.7763568394002505e-14
6test 60 forward 87N (4.187, 159.781) -/-: 2291809.478825, 19502649.329559, 178.458273, 1.06534
6test 61 reverse 87N (4.187, 159.781) -/-: 7.993605777301127e-15
6test 62 forward 90N (0.000, 160.000) -/-: 2272454.379192, -19995929.886042, -180.0, 1.064227
6test 63 reverse 90N (0.000, 160.000) -/-: 2.402002211154445e-14
6test 64 forward 93N (-4.187, 159.781) -/-: 2291809.478825, -19502649.329559, -178.458273, 1.06534
6test 65 reverse 93N (-4.187, 159.781) -/-: 6.217248937900877e-15
6test 66 forward 96N (-8.362, 159.124) -/-: 2349105.316925, -19007174.828239, -176.822266, 1.068689
6test 67 reverse 96N (-8.362, 159.124) -/-: 1.5987211554602254e-14
6test 68 forward 99N (-12.515, 158.030) -/-: 2442031.891673, -18507145.758, -174.99917, 1.074303
6test 69 reverse 99N (-12.515, 158.030) -/-: 3.552713678800501e-15
6test 70 forward 102N (-16.633, 156.504) -/-: 2566730.586316, -17999918.486885, -172.899178, 1.082187
6test 71 reverse 102N (-16.633, 156.504) -/-: 2.842170943040401e-14
6test 72 forward 105N (-20.706, 154.548) -/-: 2717773.256417, -17482549.021439, -170.437193, 1.09228
6test 73 reverse 105N (-20.706, 154.548) -/-: 1.0658141036401503e-14
6test 74 forward 108N (-24.721, 152.169) -/-: 2888128.173431, -16951919.948156, -167.534978, 1.104377
6test 75 reverse 108N (-24.721, 152.169) -/-: 7.105427357601002e-15
6test 76 forward 111N (-28.669, 149.373) -/-: 3069132.144368, -16405050.640186, -164.124094, 1.118063
6test 77 reverse 111N (-28.669, 149.373) -/-: 1.4210854715202004e-14
6test 78 forward 114N (-32.539, 146.167) -/-: 3250522.133697, -15839614.666766, -160.149958, 1.132638
6test 79 reverse 114N (-32.539, 146.167) -/-: 7.105427357601002e-15
6test 80 forward 117N (-36.319, 142.561) -/-: 3420621.906486, -15254653.660248, -155.577129, 1.147079
6test 81 reverse 117N (-36.319, 142.561) -/-: 7.105427357601002e-15
6test 82 forward 120N (-40.000, 138.564) -/-: 3566810.754496, -14651410.305646, -150.395289, 1.16007
6test 83 reverse 120N (-40.000, 138.564) -/-: 0.0
6test 84 forward 123N (-43.571, 134.187) -/-: 3676387.634221, -14034104.572541, -144.624552, 1.170121
6test 85 reverse 123N (-43.571, 134.187) -/-: 0.0
6test 86 forward 126N (-47.023, 129.443) -/-: 3737846.053669, -13410380.03778, -138.317827, 1.175799
6test 87 reverse 126N (-47.023, 129.443) -/-: 2.842170943040401e-14
6test 88 forward 129N (-50.346, 124.343) -/-: 3742386.824274, -12791126.616764, -131.557863, 1.176031
6test 89 reverse 129N (-50.346, 124.343) -/-: 1.4210854715202004e-14
6test 90 forward 132N (-53.530, 118.903) -/-: 3685290.742854, -12189522.028618, -124.447841, 1.170375
6test 91 reverse 132N (-53.530, 118.903) -/-: 1.4210854715202004e-14
6test 92 forward 135N (-56.569, 113.137) -/-: 3566696.824822, -11619422.467571, -117.096854, 1.159166
6test 93 reverse 135N (-56.569, 113.137) -/-: 1.4210854715202004e-14
6test 94 forward 138N (-59.452, 107.061) -/-: 3391492.622467, -11093528.387239, -109.604086, 1.14345
6test 95 reverse 138N (-59.452, 107.061) -/-: 1.4210854715202004e-14
6test 96 forward 141N (-62.172, 100.691) -/-: 3168362.707459, -10621853.317461, -102.04623, 1.124739
6test 97 reverse 141N (-62.172, 100.691) -/-: 1.4210854715202004e-14
6test 98 forward 144N (-64.721, 94.046) -/-: 2908348.733697, -10210857.598605, -94.471204, 1.104695
6test 99 reverse 144N (-64.721, 94.046) -/-: 0.0
6test 100 forward 147N (-67.094, 87.142) -/-: 2623368.28288, -9863301.12097, -86.898617, 1.084836
6test 101 reverse 147N (-67.094, 87.142) -/-: 0.0
6test 102 forward 150N (-69.282, 80.000) -/-: 2325015.074835, -9578621.128889, -79.325231, 1.066355
6test 103 reverse 150N (-69.282, 80.000) -/-: 4.263256414560601e-14
6test 104 forward 153N (-71.281, 72.638) -/-: 2023752.790526, -9353559.771346, -71.732868, 1.050046
6test 105 reverse 153N (-71.281, 72.638) -/-: 1.4210854715202004e-14
6test 106 forward 156N (-73.084, 65.078) -/-: 1728450.251911, -9182823.938232, -64.096558, 1.036319
6test 107 reverse 156N (-73.084, 65.078) -/-: 1.4210854715202004e-14
6test 108 forward 159N (-74.686, 57.339) -/-: 1446137.252018, -9059670.735504, -56.391495, 1.025259
6test 109 reverse 159N (-74.686, 57.339) -/-: 1.4210854715202004e-14
6test 110 forward 162N (-76.085, 49.443) -/-: 1181870.215451, -8976407.252949, -48.598167, 1.016714
6test 111 reverse 162N (-76.085, 49.443) -/-: 3.8263897345803626e-14
6test 112 forward 165N (-77.274, 41.411) -/-: 938645.229361, -8924845.3123, -40.705476, 1.010384
6test 113 reverse 165N (-77.274, 41.411) -/-: 7.105427357601002e-15
6test 114 forward 168N (-78.252, 33.266) -/-: 717349.637417, -8896761.249834, -32.712011, 1.005894
6test 115 reverse 168N (-78.252, 33.266) -/-: 2.1316282072803006e-14
6test 116 forward 171N (-79.015, 25.030) -/-: 516782.400098, -8884389.933155, -24.625783, 1.002865
6test 117 reverse 171N (-79.015, 25.030) -/-: 2.842170943040401e-14
6test 118 forward 174N (-79.562, 16.725) -/-: 333788.634116, -8880946.730424, -16.462884, 1.000962
6test 119 reverse 174N (-79.562, 16.725) -/-: 1.7763568394002505e-14
6test 120 forward 177N (-79.890, 8.374) -/-: 163544.38007, -8881136.361771, -8.245542, 0.999927
6test 121 reverse 177N (-79.890, 8.374) -/-: 1.7763568394002505e-15
6test 122 forward 180N (-80.000, 0.000) -/-: 0.0, -8881585.815988, 0.0, 0.9996
6test 123 reverse 180N (-80.000, 0.000) -/-: 0.0
6test 124 forward 183N (-79.890, -8.374) -/-: -163544.38007, -8881136.361771, 8.245542, 0.999927
6test 125 reverse 183N (-79.890, -8.374) -/-: 1.7763568394002505e-15
6test 126 forward 186N (-79.562, -16.725) -/-: -333788.634116, -8880946.730424, 16.462884, 1.000962
6test 127 reverse 186N (-79.562, -16.725) -/-: 2.0097183471152322e-14
6test 128 forward 189N (-79.015, -25.030) -/-: -516782.400098, -8884389.933155, 24.625783, 1.002865
6test 129 reverse 189N (-79.015, -25.030) -/-: 2.1316282072803006e-14
6test 130 forward 192N (-78.252, -33.266) -/-: -717349.637417, -8896761.249834, 32.712011, 1.005894
6test 131 reverse 192N (-78.252, -33.266) -/-: 4.4938668397781776e-14
6test 132 forward 195N (-77.274, -41.411) -/-: -938645.229361, -8924845.3123, 40.705476, 1.010384
6test 133 reverse 195N (-77.274, -41.411) -/-: 7.105427357601002e-15
6test 134 forward 198N (-76.085, -49.443) -/-: -1181870.215451, -8976407.252949, 48.598167, 1.016714
6test 135 reverse 198N (-76.085, -49.443) -/-: 3.8263897345803626e-14
6test 136 forward 201N (-74.686, -57.339) -/-: -1446137.252018, -9059670.735504, 56.391495, 1.025259
6test 137 reverse 201N (-74.686, -57.339) -/-: 5.859285502108464e-14
6test 138 forward 204N (-73.084, -65.078) -/-: -1728450.251911, -9182823.938232, 64.096558, 1.036319
6test 139 reverse 204N (-73.084, -65.078) -/-: 1.4210854715202004e-14
6test 140 forward 207N (-71.281, -72.638) -/-: -2023752.790526, -9353559.771346, 71.732868, 1.050046
6test 141 reverse 207N (-71.281, -72.638) -/-: 1.4210854715202004e-14
6test 142 forward 210N (-69.282, -80.000) -/-: -2325015.074835, -9578621.128889, 79.325231, 1.066355
6test 143 reverse 210N (-69.282, -80.000) -/-: 1.4210854715202004e-14
6test 144 forward 213N (-67.094, -87.142) -/-: -2623368.28288, -9863301.12097, 86.898617, 1.084836
6test 145 reverse 213N (-67.094, -87.142) -/-: 0.0
6test 146 forward 216N (-64.721, -94.046) -/-: -2908348.733697, -10210857.598605, 94.471204, 1.104695
6test 147 reverse 216N (-64.721, -94.046) -/-: 0.0
6test 148 forward 219N (-62.172, -100.691) -/-: -3168362.707459, -10621853.317461, 102.04623, 1.124739
6test 149 reverse 219N (-62.172, -100.691) -/-: 1.4210854715202004e-14
6test 150 forward 222N (-59.452, -107.061) -/-: -3391492.622467, -11093528.387239, 109.604086, 1.14345
6test 151 reverse 222N (-59.452, -107.061) -/-: 1.4210854715202004e-14
6test 152 forward 225N (-56.569, -113.137) -/-: -3566696.824822, -11619422.467571, 117.096854, 1.159166
6test 153 reverse 225N (-56.569, -113.137) -/-: 7.105427357601002e-15
6test 154 forward 228N (-53.530, -118.903) -/-: -3685290.742854, -12189522.028618, 124.447841, 1.170375
6test 155 reverse 228N (-53.530, -118.903) -/-: 1.4210854715202004e-14
6test 156 forward 231N (-50.346, -124.343) -/-: -3742386.824274, -12791126.616764, 131.557863, 1.176031
6test 157 reverse 231N (-50.346, -124.343) -/-: 1.4210854715202004e-14
6test 158 forward 234N (-47.023, -129.443) -/-: -3737846.053669, -13410380.03778, 138.317827, 1.175799
6test 159 reverse 234N (-47.023, -129.443) -/-: 2.842170943040401e-14
6test 160 forward 237N (-43.571, -134.187) -/-: -3676387.634221, -14034104.572541, 144.624552, 1.170121
6test 161 reverse 237N (-43.571, -134.187) -/-: 0.0
6test 162 forward 240N (-40.000, -138.564) -/-: -3566810.754496, -14651410.305646, 150.395289, 1.16007
6test 163 reverse 240N (-40.000, -138.564) -/-: 0.0
6test 164 forward 243N (-36.319, -142.561) -/-: -3420621.906486, -15254653.660248, 155.577129, 1.147079
6test 165 reverse 243N (-36.319, -142.561) -/-: 7.105427357601002e-15
6test 166 forward 246N (-32.539, -146.167) -/-: -3250522.133697, -15839614.666766, 160.149958, 1.132638
6test 167 reverse 246N (-32.539, -146.167) -/-: 7.105427357601002e-15
6test 168 forward 249N (-28.669, -149.373) -/-: -3069132.144368, -16405050.640186, 164.124094, 1.118063
6test 169 reverse 249N (-28.669, -149.373) -/-: 3.552713678800501e-15
6test 170 forward 252N (-24.721, -152.169) -/-: -2888128.173431, -16951919.948156, 167.534978, 1.104377
6test 171 reverse 252N (-24.721, -152.169) -/-: 1.0658141036401503e-14
6test 172 forward 255N (-20.706, -154.548) -/-: -2717773.256417, -17482549.021439, 170.437193, 1.09228
6test 173 reverse 255N (-20.706, -154.548) -/-: 1.0658141036401503e-14
6test 174 forward 258N (-16.633, -156.504) -/-: -2566730.586316, -17999918.486885, 172.899178, 1.082187
6test 175 reverse 258N (-16.633, -156.504) -/-: 1.7763568394002505e-14
6test 176 forward 261N (-12.515, -158.030) -/-: -2442031.891673, -18507145.758, 174.99917, 1.074303
6test 177 reverse 261N (-12.515, -158.030) -/-: 8.881784197001252e-15
6test 178 forward 264N (-8.362, -159.124) -/-: -2349105.316925, -19007174.828239, 176.822266, 1.068689
6test 179 reverse 264N (-8.362, -159.124) -/-: 1.7763568394002505e-14
6test 180 forward 267N (-4.187, -159.781) -/-: -2291809.478825, -19502649.329559, 178.458273, 1.06534
6test 181 reverse 267N (-4.187, -159.781) -/-: 7.993605777301127e-15
6test 182 forward 270N (0.000, -160.000) -/-: -2272454.379192, -19995929.886042, 180.0, 1.064227
6test 183 reverse 270N (0.000, -160.000) -/-: 2.402002211154445e-14
6test 184 forward 273N (4.187, -159.781) -/-: -2291809.478825, 19502649.329559, -178.458273, 1.06534
6test 185 reverse 273N (4.187, -159.781) -/-: 6.217248937900877e-15
6test 186 forward 276N (8.362, -159.124) -/-: -2349105.316925, 19007174.828239, -176.822266, 1.068689
6test 187 reverse 276N (8.362, -159.124) -/-: 1.5987211554602254e-14
6test 188 forward 279N (12.515, -158.030) -/-: -2442031.891673, 18507145.758, -174.99917, 1.074303
6test 189 reverse 279N (12.515, -158.030) -/-: 3.552713678800501e-15
6test 190 forward 282N (16.633, -156.504) -/-: -2566730.586316, 17999918.486885, -172.899178, 1.082187
6test 191 reverse 282N (16.633, -156.504) -/-: 2.842170943040401e-14
6test 192 forward 285N (20.706, -154.548) -/-: -2717773.256417, 17482549.021439, -170.437193, 1.09228
6test 193 reverse 285N (20.706, -154.548) -/-: 1.0658141036401503e-14
6test 194 forward 288N (24.721, -152.169) -/-: -2888128.173431, 16951919.948156, -167.534978, 1.104377
6test 195 reverse 288N (24.721, -152.169) -/-: 7.105427357601002e-15
6test 196 forward 291N (28.669, -149.373) -/-: -3069132.144368, 16405050.640186, -164.124094, 1.118063
6test 197 reverse 291N (28.669, -149.373) -/-: 1.4210854715202004e-14
6test 198 forward 294N (32.539, -146.167) -/-: -3250522.133697, 15839614.666766, -160.149958, 1.132638
6test 199 reverse 294N (32.539, -146.167) -/-: 7.105427357601002e-15
6test 200 forward 297N (36.319, -142.561) -/-: -3420621.906486, 15254653.660248, -155.577129, 1.147079
6test 201 reverse 297N (36.319, -142.561) -/-: 7.105427357601002e-15
6test 202 forward 300N (40.000, -138.564) -/-: -3566810.754496, 14651410.305646, -150.395289, 1.16007
6test 203 reverse 300N (40.000, -138.564) -/-: 0.0
6test 204 forward 303N (43.571, -134.187) -/-: -3676387.634221, 14034104.572541, -144.624552, 1.170121
6test 205 reverse 303N (43.571, -134.187) -/-: 0.0
6test 206 forward 306N (47.023, -129.443) -/-: -3737846.053669, 13410380.03778, -138.317827, 1.175799
6test 207 reverse 306N (47.023, -129.443) -/-: 2.842170943040401e-14
6test 208 forward 309N (50.346, -124.343) -/-: -3742386.824274, 12791126.616764, -131.557863, 1.176031
6test 209 reverse 309N (50.346, -124.343) -/-: 1.4210854715202004e-14
6test 210 forward 312N (53.530, -118.903) -/-: -3685290.742854, 12189522.028618, -124.447841, 1.170375
6test 211 reverse 312N (53.530, -118.903) -/-: 1.4210854715202004e-14
6test 212 forward 315N (56.569, -113.137) -/-: -3566696.824822, 11619422.467571, -117.096854, 1.159166
6test 213 reverse 315N (56.569, -113.137) -/-: 1.4210854715202004e-14
6test 214 forward 318N (59.452, -107.061) -/-: -3391492.622467, 11093528.387239, -109.604086, 1.14345
6test 215 reverse 318N (59.452, -107.061) -/-: 1.4210854715202004e-14
6test 216 forward 321N (62.172, -100.691) -/-: -3168362.707459, 10621853.317461, -102.04623, 1.124739
6test 217 reverse 321N (62.172, -100.691) -/-: 1.4210854715202004e-14
6test 218 forward 324N (64.721, -94.046) -/-: -2908348.733697, 10210857.598605, -94.471204, 1.104695
6test 219 reverse 324N (64.721, -94.046) -/-: 0.0
6test 220 forward 327N (67.094, -87.142) -/-: -2623368.28288, 9863301.12097, -86.898617, 1.084836
6test 221 reverse 327N (67.094, -87.142) -/-: 0.0
6test 222 forward 330N (69.282, -80.000) -/-: -2325015.074835, 9578621.128889, -79.325231, 1.066355
6test 223 reverse 330N (69.282, -80.000) -/-: 4.263256414560601e-14
6test 224 forward 333N (71.281, -72.638) -/-: -2023752.790526, 9353559.771346, -71.732868, 1.050046
6test 225 reverse 333N (71.281, -72.638) -/-: 1.4210854715202004e-14
6test 226 forward 336N (73.084, -65.078) -/-: -1728450.251911, 9182823.938232, -64.096558, 1.036319
6test 227 reverse 336N (73.084, -65.078) -/-: 1.4210854715202004e-14
6test 228 forward 339N (74.686, -57.339) -/-: -1446137.252018, 9059670.735504, -56.391495, 1.025259
6test 229 reverse 339N (74.686, -57.339) -/-: 1.4210854715202004e-14
6test 230 forward 342N (76.085, -49.443) -/-: -1181870.215451, 8976407.252949, -48.598167, 1.016714
6test 231 reverse 342N (76.085, -49.443) -/-: 3.8263897345803626e-14
6test 232 forward 345N (77.274, -41.411) -/-: -938645.229361, 8924845.3123, -40.705476, 1.010384
6test 233 reverse 345N (77.274, -41.411) -/-: 7.105427357601002e-15
6test 234 forward 348N (78.252, -33.266) -/-: -717349.637417, 8896761.249834, -32.712011, 1.005894
6test 235 reverse 348N (78.252, -33.266) -/-: 2.1316282072803006e-14
6test 236 forward 351N (79.015, -25.030) -/-: -516782.400098, 8884389.933155, -24.625783, 1.002865
6test 237 reverse 351N (79.015, -25.030) -/-: 2.842170943040401e-14
6test 238 forward 354N (79.562, -16.725) -/-: -333788.634116, 8880946.730424, -16.462884, 1.000962
6test 239 reverse 354N (79.562, -16.725) -/-: 1.7763568394002505e-14
6test 240 forward 357N (79.890, -8.374) -/-: -163544.38007, 8881136.361771, -8.245542, 0.999927
6test 241 reverse 357N (79.890, -8.374) -/-: 1.7763568394002505e-15
6test 242 forward 360N (80.000, 0.000) -/-: 0.0, 8881585.815988, 0.0, 0.9996
6test 243 reverse 360N (80.000, 0.000) -/-: 0.0
6test 244 max: 5.859285502108464e-14  FAILED, KNOWN, expected 6e-14
6test 245 forward: 6208422.5374, 5452954.287187, 41.077484, 1.511911
6test 246 reverse: 30.244228, 60.169664, 41.479185, 1.510346
6test 247 _TM: KTransverseMercator(ellipsoid=Ellipsoid(name='Sphere', a=6371008.771415, b=6371008.771415, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371008.771415, L=10007557.17611675, R1=6371008.771415, R2=6371008.771415, R3=6371008.771415, Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=4)
6test 248 forward 0N (80.000, 0.000) -/-: 0.0, 8892048.136219, 0.0, 0.9996
6test 249 reverse 0N (80.000, 0.000) -/-: 0.0
6test 250 forward 3N (79.890, 8.374) -/-: 162830.781916, 8891598.152508, 8.245541, 0.999927
6test 251 reverse 3N (79.890, 8.374) -/-: 3.552713678800501e-15
6test 252 forward 6N (79.562, 16.725) -/-: 332334.438121, 8891401.702739, 16.462875, 1.000961
6test 253 reverse 6N (79.562, 16.725) -/-: 3.552713678800501e-15
6test 254 forward 9N (79.015, 25.030) -/-: 514536.969405, 8894816.626946, 24.625748, 1.002864
6test 255 reverse 9N (79.015, 25.030) -/-: 3.552713678800501e-15
6test 256 forward 12N (78.252, 33.266) -/-: 714245.109628, 8907114.580812, 32.711919, 1.005893
6test 257 reverse 12N (78.252, 33.266) -/-: 1.4210854715202004e-14
6test 258 forward 15N (77.274, 41.411) -/-: 934605.427053, 8935050.398758, 40.705275, 1.010384
6test 259 reverse 15N (77.274, 41.411) -/-: 2.1316282072803006e-14
6test 260 forward 18N (76.085, 49.443) -/-: 1176821.393989, 8986356.098856, 48.597784, 1.016715
6test 261 reverse 18N (76.085, 49.443) -/-: 7.105427357601002e-15
6test 262 forward 21N (74.686, 57.339) -/-: 1440020.023752, 9069222.197918, 56.390849, 1.025263
6test 263 reverse 21N (74.686, 57.339) -/-: 1.4210854715202004e-14
6test 264 forward 24N (73.084, 65.078) -/-: 1721232.03303, 9191807.409386, 64.095597, 1.036332
6test 265 reverse 24N (73.084, 65.078) -/-: 4.4938668397781776e-14
6test 266 forward 27N (71.281, 72.638) -/-: 2015439.94304, 9361783.139474, 71.731644, 1.050076
6test 267 reverse 27N (71.281, 72.638) -/-: 1.4210854715202004e-14
6test 268 forward 30N (69.282, 80.000) -/-: 2315663.380439, 9585883.63353, 79.324018, 1.066413
6test 269 reverse 30N (69.282, 80.000) -/-: 0.0
6test 270 forward 33N (67.094, 87.142) -/-: 2613089.50746, 9869411.258858, 86.898056, 1.084934
6test 271 reverse 33N (67.094, 87.142) -/-: 1.4210854715202004e-14
6test 272 forward 36N (64.721, 94.046) -/-: 2897310.302591, 10215654.794479, 94.472414, 1.104843
6test 273 reverse 36N (64.721, 94.046) -/-: 4.4938668397781776e-14
6test 274 forward 39N (62.172, 100.691) -/-: 3156777.9732, 10625229.653451, 102.050793, 1.12494
6test 275 reverse 39N (62.172, 100.691) -/-: 1.4210854715202004e-14
6test 276 forward 42N (59.452, 107.061) -/-: 3379601.994821, 11095444.501021, 109.613799, 1.143688
6test 277 reverse 42N (59.452, 107.061) -/-: 2.0097183471152322e-14
6test 278 forward 45N (56.569, 113.137) -/-: 3554744.82183, 11619912.294696, 117.113212, 1.159405
6test 279 reverse 45N (56.569, 113.137) -/-: 1.5888218580782548e-14
6test 280 forward 48N (53.530, 118.903) -/-: 3673507.549162, 12188686.186502, 124.471401, 1.170561
6test 281 reverse 48N (53.530, 118.903) -/-: 1.4210854715202004e-14
6test 282 forward 51N (50.346, 124.343) -/-: 3730980.59573, 12789121.454112, 131.587794, 1.176106
6test 283 reverse 51N (50.346, 124.343) -/-: 1.5888218580782548e-14
6test 284 forward 54N (47.023, 129.443) -/-: 3727003.760242, 13407411.821957, 138.351947, 1.175719
6test 285 reverse 54N (47.023, 129.443) -/-: 0.0
6test 286 forward 57N (43.571, 134.187) -/-: 3666275.084648, 14030431.844036, 144.659906, 1.16987
6test 287 reverse 57N (43.571, 134.187) -/-: 0.0
6test 288 forward 60N (40.000, 138.564) -/-: 3557564.445775, 14647347.719581, 150.428973, 1.159665
6test 289 reverse 60N (40.000, 138.564) -/-: 0.0
6test 290 forward 63N (36.319, 142.561) -/-: 3412334.48396, 15250567.642625, 155.606964, 1.146559
6test 291 reverse 63N (36.319, 142.561) -/-: 0.0
6test 292 forward 66N (32.539, 146.167) -/-: 3243229.892204, 15835907.12812, 160.174784, 1.132049
6test 293 reverse 66N (32.539, 146.167) -/-: 3.1776437161565096e-14
6test 294 forward 69N (28.669, 149.373) -/-: 3062811.744735, 16402134.803105, 164.143685, 1.117448
6test 295 reverse 69N (28.669, 149.373) -/-: 3.552713678800501e-15
6test 296 forward 72N (24.721, 152.169) -/-: 2882703.816659, 16950195.447611, 167.549757, 1.103767
6test 297 reverse 72N (24.721, 152.169) -/-: 0.0
6test 298 forward 75N (20.706, 154.548) -/-: 2713130.658999, 17482381.525728, 170.447906, 1.091693
6test 299 reverse 75N (20.706, 154.548) -/-: 1.0658141036401503e-14
6test 300 forward 78N (16.633, 156.504) -/-: 2562732.651149, 18001625.534999, 172.906642, 1.081633
6test 301 reverse 78N (16.633, 156.504) -/-: 7.105427357601002e-15
6test 302 forward 81N (12.515, 158.030) -/-: 2438532.075646, 18510987.984533, 175.004113, 1.07378
6test 303 reverse 81N (12.515, 158.030) -/-: 3.552713678800501e-15
6test 304 forward 84N (8.362, 159.124) -/-: 2345956.628332, 19013350.872509, 176.82525, 1.068192
6test 305 reverse 84N (8.362, 159.124) -/-: 8.881784197001252e-15
6test 306 forward 87N (4.187, 159.781) -/-: 2288868.720832, 19511292.939628, 178.459673, 1.064859
6test 307 reverse 87N (4.187, 159.781) -/-: 1.9539925233402755e-14
6test 308 forward 90N (0.000, 160.000) -/-: 2269582.383311, -20007108.306493, -180.0, 1.063752
6test 309 reverse 90N (0.000, 160.000) -/-: 0.0
6test 310 forward 93N (-4.187, 159.781) -/-: 2288868.720832, -19511292.939628, -178.459673, 1.064859
6test 311 reverse 93N (-4.187, 159.781) -/-: 3.019806626980426e-14
6test 312 forward 96N (-8.362, 159.124) -/-: 2345956.628332, -19013350.872509, -176.82525, 1.068192
6test 313 reverse 96N (-8.362, 159.124) -/-: 1.0658141036401503e-14
6test 314 forward 99N (-12.515, 158.030) -/-: 2438532.075646, -18510987.984533, -175.004113, 1.07378
6test 315 reverse 99N (-12.515, 158.030) -/-: 8.881784197001252e-15
6test 316 forward 102N (-16.633, 156.504) -/-: 2562732.651149, -18001625.534999, -172.906642, 1.081633
6test 317 reverse 102N (-16.633, 156.504) -/-: 3.552713678800501e-15
6test 318 forward 105N (-20.706, 154.548) -/-: 2713130.658999, -17482381.525728, -170.447906, 1.091693
6test 319 reverse 105N (-20.706, 154.548) -/-: 1.0658141036401503e-14
6test 320 forward 108N (-24.721, 152.169) -/-: 2882703.816659, -16950195.447611, -167.549757, 1.103767
6test 321 reverse 108N (-24.721, 152.169) -/-: 3.552713678800501e-15
6test 322 forward 111N (-28.669, 149.373) -/-: 3062811.744735, -16402134.803105, -164.143685, 1.117448
6test 323 reverse 111N (-28.669, 149.373) -/-: 1.0658141036401503e-14
6test 324 forward 114N (-32.539, 146.167) -/-: 3243229.892204, -15835907.12812, -160.174784, 1.132049
6test 325 reverse 114N (-32.539, 146.167) -/-: 3.1776437161565096e-14
6test 326 forward 117N (-36.319, 142.561) -/-: 3412334.48396, -15250567.642625, -155.606964, 1.146559
6test 327 reverse 117N (-36.319, 142.561) -/-: 0.0
6test 328 forward 120N (-40.000, 138.564) -/-: 3557564.445775, -14647347.719581, -150.428973, 1.159665
6test 329 reverse 120N (-40.000, 138.564) -/-: 0.0
6test 330 forward 123N (-43.571, 134.187) -/-: 3666275.084648, -14030431.844036, -144.659906, 1.16987
6test 331 reverse 123N (-43.571, 134.187) -/-: 0.0
6test 332 forward 126N (-47.023, 129.443) -/-: 3727003.760242, -13407411.821957, -138.351947, 1.175719
6test 333 reverse 126N (-47.023, 129.443) -/-: 0.0
6test 334 forward 129N (-50.346, 124.343) -/-: 3730980.59573, -12789121.454112, -131.587794, 1.176106
6test 335 reverse 129N (-50.346, 124.343) -/-: 1.5888218580782548e-14
6test 336 forward 132N (-53.530, 118.903) -/-: 3673507.549162, -12188686.186502, -124.471401, 1.170561
6test 337 reverse 132N (-53.530, 118.903) -/-: 1.4210854715202004e-14
6test 338 forward 135N (-56.569, 113.137) -/-: 3554744.82183, -11619912.294696, -117.113212, 1.159405
6test 339 reverse 135N (-56.569, 113.137) -/-: 7.105427357601002e-15
6test 340 forward 138N (-59.452, 107.061) -/-: 3379601.994821, -11095444.501021, -109.613799, 1.143688
6test 341 reverse 138N (-59.452, 107.061) -/-: 2.0097183471152322e-14
6test 342 forward 141N (-62.172, 100.691) -/-: 3156777.9732, -10625229.653451, -102.050793, 1.12494
6test 343 reverse 141N (-62.172, 100.691) -/-: 1.4210854715202004e-14
6test 344 forward 144N (-64.721, 94.046) -/-: 2897310.302591, -10215654.794479, -94.472414, 1.104843
6test 345 reverse 144N (-64.721, 94.046) -/-: 4.4938668397781776e-14
6test 346 forward 147N (-67.094, 87.142) -/-: 2613089.50746, -9869411.258858, -86.898056, 1.084934
6test 347 reverse 147N (-67.094, 87.142) -/-: 1.4210854715202004e-14
6test 348 forward 150N (-69.282, 80.000) -/-: 2315663.380439, -9585883.63353, -79.324018, 1.066413
6test 349 reverse 150N (-69.282, 80.000) -/-: 2.842170943040401e-14
6test 350 forward 153N (-71.281, 72.638) -/-: 2015439.94304, -9361783.139474, -71.731644, 1.050076
6test 351 reverse 153N (-71.281, 72.638) -/-: 1.4210854715202004e-14
6test 352 forward 156N (-73.084, 65.078) -/-: 1721232.03303, -9191807.409386, -64.095597, 1.036332
6test 353 reverse 156N (-73.084, 65.078) -/-: 4.4938668397781776e-14
6test 354 forward 159N (-74.686, 57.339) -/-: 1440020.023752, -9069222.197918, -56.390849, 1.025263
6test 355 reverse 159N (-74.686, 57.339) -/-: 1.5888218580782548e-14
6test 356 forward 162N (-76.085, 49.443) -/-: 1176821.393989, -8986356.098856, -48.597784, 1.016715
6test 357 reverse 162N (-76.085, 49.443) -/-: 1.4210854715202004e-14
6test 358 forward 165N (-77.274, 41.411) -/-: 934605.427053, -8935050.398758, -40.705275, 1.010384
6test 359 reverse 165N (-77.274, 41.411) -/-: 2.1316282072803006e-14
6test 360 forward 168N (-78.252, 33.266) -/-: 714245.109628, -8907114.580812, -32.711919, 1.005893
6test 361 reverse 168N (-78.252, 33.266) -/-: 1.4210854715202004e-14
6test 362 forward 171N (-79.015, 25.030) -/-: 514536.969405, -8894816.626946, -24.625748, 1.002864
6test 363 reverse 171N (-79.015, 25.030) -/-: 3.552713678800501e-15
6test 364 forward 174N (-79.562, 16.725) -/-: 332334.438121, -8891401.702739, -16.462875, 1.000961
6test 365 reverse 174N (-79.562, 16.725) -/-: 3.552713678800501e-15
6test 366 forward 177N (-79.890, 8.374) -/-: 162830.781916, -8891598.152508, -8.245541, 0.999927
6test 367 reverse 177N (-79.890, 8.374) -/-: 1.7763568394002505e-15
6test 368 forward 180N (-80.000, 0.000) -/-: 0.0, -8892048.136219, 0.0, 0.9996
6test 369 reverse 180N (-80.000, 0.000) -/-: 0.0
6test 370 forward 183N (-79.890, -8.374) -/-: -162830.781916, -8891598.152508, 8.245541, 0.999927
6test 371 reverse 183N (-79.890, -8.374) -/-: 3.552713678800501e-15
6test 372 forward 186N (-79.562, -16.725) -/-: -332334.438121, -8891401.702739, 16.462875, 1.000961
6test 373 reverse 186N (-79.562, -16.725) -/-: 3.552713678800501e-15
6test 374 forward 189N (-79.015, -25.030) -/-: -514536.969405, -8894816.626946, 24.625748, 1.002864
6test 375 reverse 189N (-79.015, -25.030) -/-: 3.552713678800501e-15
6test 376 forward 192N (-78.252, -33.266) -/-: -714245.109628, -8907114.580812, 32.711919, 1.005893
6test 377 reverse 192N (-78.252, -33.266) -/-: 1.4210854715202004e-14
6test 378 forward 195N (-77.274, -41.411) -/-: -934605.427053, -8935050.398758, 40.705275, 1.010384
6test 379 reverse 195N (-77.274, -41.411) -/-: 2.1316282072803006e-14
6test 380 forward 198N (-76.085, -49.443) -/-: -1176821.393989, -8986356.098856, 48.597784, 1.016715
6test 381 reverse 198N (-76.085, -49.443) -/-: 7.105427357601002e-15
6test 382 forward 201N (-74.686, -57.339) -/-: -1440020.023752, -9069222.197918, 56.390849, 1.025263
6test 383 reverse 201N (-74.686, -57.339) -/-: 1.4210854715202004e-14
6test 384 forward 204N (-73.084, -65.078) -/-: -1721232.03303, -9191807.409386, 64.095597, 1.036332
6test 385 reverse 204N (-73.084, -65.078) -/-: 4.4938668397781776e-14
6test 386 forward 207N (-71.281, -72.638) -/-: -2015439.94304, -9361783.139474, 71.731644, 1.050076
6test 387 reverse 207N (-71.281, -72.638) -/-: 1.4210854715202004e-14
6test 388 forward 210N (-69.282, -80.000) -/-: -2315663.380439, -9585883.63353, 79.324018, 1.066413
6test 389 reverse 210N (-69.282, -80.000) -/-: 0.0
6test 390 forward 213N (-67.094, -87.142) -/-: -2613089.50746, -9869411.258858, 86.898056, 1.084934
6test 391 reverse 213N (-67.094, -87.142) -/-: 1.4210854715202004e-14
6test 392 forward 216N (-64.721, -94.046) -/-: -2897310.302591, -10215654.794479, 94.472414, 1.104843
6test 393 reverse 216N (-64.721, -94.046) -/-: 4.4938668397781776e-14
6test 394 forward 219N (-62.172, -100.691) -/-: -3156777.9732, -10625229.653451, 102.050793, 1.12494
6test 395 reverse 219N (-62.172, -100.691) -/-: 1.4210854715202004e-14
6test 396 forward 222N (-59.452, -107.061) -/-: -3379601.994821, -11095444.501021, 109.613799, 1.143688
6test 397 reverse 222N (-59.452, -107.061) -/-: 2.0097183471152322e-14
6test 398 forward 225N (-56.569, -113.137) -/-: -3554744.82183, -11619912.294696, 117.113212, 1.159405
6test 399 reverse 225N (-56.569, -113.137) -/-: 1.5888218580782548e-14
6test 400 forward 228N (-53.530, -118.903) -/-: -3673507.549162, -12188686.186502, 124.471401, 1.170561
6test 401 reverse 228N (-53.530, -118.903) -/-: 1.4210854715202004e-14
6test 402 forward 231N (-50.346, -124.343) -/-: -3730980.59573, -12789121.454112, 131.587794, 1.176106
6test 403 reverse 231N (-50.346, -124.343) -/-: 1.5888218580782548e-14
6test 404 forward 234N (-47.023, -129.443) -/-: -3727003.760242, -13407411.821957, 138.351947, 1.175719
6test 405 reverse 234N (-47.023, -129.443) -/-: 0.0
6test 406 forward 237N (-43.571, -134.187) -/-: -3666275.084648, -14030431.844036, 144.659906, 1.16987
6test 407 reverse 237N (-43.571, -134.187) -/-: 0.0
6test 408 forward 240N (-40.000, -138.564) -/-: -3557564.445775, -14647347.719581, 150.428973, 1.159665
6test 409 reverse 240N (-40.000, -138.564) -/-: 0.0
6test 410 forward 243N (-36.319, -142.561) -/-: -3412334.48396, -15250567.642625, 155.606964, 1.146559
6test 411 reverse 243N (-36.319, -142.561) -/-: 0.0
6test 412 forward 246N (-32.539, -146.167) -/-: -3243229.892204, -15835907.12812, 160.174784, 1.132049
6test 413 reverse 246N (-32.539, -146.167) -/-: 3.1776437161565096e-14
6test 414 forward 249N (-28.669, -149.373) -/-: -3062811.744735, -16402134.803105, 164.143685, 1.117448
6test 415 reverse 249N (-28.669, -149.373) -/-: 3.552713678800501e-15
6test 416 forward 252N (-24.721, -152.169) -/-: -2882703.816659, -16950195.447611, 167.549757, 1.103767
6test 417 reverse 252N (-24.721, -152.169) -/-: 0.0
6test 418 forward 255N (-20.706, -154.548) -/-: -2713130.658999, -17482381.525728, 170.447906, 1.091693
6test 419 reverse 255N (-20.706, -154.548) -/-: 1.0658141036401503e-14
6test 420 forward 258N (-16.633, -156.504) -/-: -2562732.651149, -18001625.534999, 172.906642, 1.081633
6test 421 reverse 258N (-16.633, -156.504) -/-: 7.105427357601002e-15
6test 422 forward 261N (-12.515, -158.030) -/-: -2438532.075646, -18510987.984533, 175.004113, 1.07378
6test 423 reverse 261N (-12.515, -158.030) -/-: 3.552713678800501e-15
6test 424 forward 264N (-8.362, -159.124) -/-: -2345956.628332, -19013350.872509, 176.82525, 1.068192
6test 425 reverse 264N (-8.362, -159.124) -/-: 8.881784197001252e-15
6test 426 forward 267N (-4.187, -159.781) -/-: -2288868.720832, -19511292.939628, 178.459673, 1.064859
6test 427 reverse 267N (-4.187, -159.781) -/-: 1.9539925233402755e-14
6test 428 forward 270N (0.000, -160.000) -/-: -2269582.383311, -20007108.306493, 180.0, 1.063752
6test 429 reverse 270N (0.000, -160.000) -/-: 0.0
6test 430 forward 273N (4.187, -159.781) -/-: -2288868.720832, 19511292.939628, -178.459673, 1.064859
6test 431 reverse 273N (4.187, -159.781) -/-: 3.019806626980426e-14
6test 432 forward 276N (8.362, -159.124) -/-: -2345956.628332, 19013350.872509, -176.82525, 1.068192
6test 433 reverse 276N (8.362, -159.124) -/-: 1.0658141036401503e-14
6test 434 forward 279N (12.515, -158.030) -/-: -2438532.075646, 18510987.984533, -175.004113, 1.07378
6test 435 reverse 279N (12.515, -158.030) -/-: 8.881784197001252e-15
6test 436 forward 282N (16.633, -156.504) -/-: -2562732.651149, 18001625.534999, -172.906642, 1.081633
6test 437 reverse 282N (16.633, -156.504) -/-: 3.552713678800501e-15
6test 438 forward 285N (20.706, -154.548) -/-: -2713130.658999, 17482381.525728, -170.447906, 1.091693
6test 439 reverse 285N (20.706, -154.548) -/-: 1.0658141036401503e-14
6test 440 forward 288N (24.721, -152.169) -/-: -2882703.816659, 16950195.447611, -167.549757, 1.103767
6test 441 reverse 288N (24.721, -152.169) -/-: 3.552713678800501e-15
6test 442 forward 291N (28.669, -149.373) -/-: -3062811.744735, 16402134.803105, -164.143685, 1.117448
6test 443 reverse 291N (28.669, -149.373) -/-: 1.0658141036401503e-14
6test 444 forward 294N (32.539, -146.167) -/-: -3243229.892204, 15835907.12812, -160.174784, 1.132049
6test 445 reverse 294N (32.539, -146.167) -/-: 3.1776437161565096e-14
6test 446 forward 297N (36.319, -142.561) -/-: -3412334.48396, 15250567.642625, -155.606964, 1.146559
6test 447 reverse 297N (36.319, -142.561) -/-: 0.0
6test 448 forward 300N (40.000, -138.564) -/-: -3557564.445775, 14647347.719581, -150.428973, 1.159665
6test 449 reverse 300N (40.000, -138.564) -/-: 0.0
6test 450 forward 303N (43.571, -134.187) -/-: -3666275.084648, 14030431.844036, -144.659906, 1.16987
6test 451 reverse 303N (43.571, -134.187) -/-: 0.0
6test 452 forward 306N (47.023, -129.443) -/-: -3727003.760242, 13407411.821957, -138.351947, 1.175719
6test 453 reverse 306N (47.023, -129.443) -/-: 0.0
6test 454 forward 309N (50.346, -124.343) -/-: -3730980.59573, 12789121.454112, -131.587794, 1.176106
6test 455 reverse 309N (50.346, -124.343) -/-: 1.5888218580782548e-14
6test 456 forward 312N (53.530, -118.903) -/-: -3673507.549162, 12188686.186502, -124.471401, 1.170561
6test 457 reverse 312N (53.530, -118.903) -/-: 1.4210854715202004e-14
6test 458 forward 315N (56.569, -113.137) -/-: -3554744.82183, 11619912.294696, -117.113212, 1.159405
6test 459 reverse 315N (56.569, -113.137) -/-: 7.105427357601002e-15
6test 460 forward 318N (59.452, -107.061) -/-: -3379601.994821, 11095444.501021, -109.613799, 1.143688
6test 461 reverse 318N (59.452, -107.061) -/-: 2.0097183471152322e-14
6test 462 forward 321N (62.172, -100.691) -/-: -3156777.9732, 10625229.653451, -102.050793, 1.12494
6test 463 reverse 321N (62.172, -100.691) -/-: 1.4210854715202004e-14
6test 464 forward 324N (64.721, -94.046) -/-: -2897310.302591, 10215654.794479, -94.472414, 1.104843
6test 465 reverse 324N (64.721, -94.046) -/-: 4.4938668397781776e-14
6test 466 forward 327N (67.094, -87.142) -/-: -2613089.50746, 9869411.258858, -86.898056, 1.084934
6test 467 reverse 327N (67.094, -87.142) -/-: 1.4210854715202004e-14
6test 468 forward 330N (69.282, -80.000) -/-: -2315663.380439, 9585883.63353, -79.324018, 1.066413
6test 469 reverse 330N (69.282, -80.000) -/-: 2.842170943040401e-14
6test 470 forward 333N (71.281, -72.638) -/-: -2015439.94304, 9361783.139474, -71.731644, 1.050076
6test 471 reverse 333N (71.281, -72.638) -/-: 1.4210854715202004e-14
6test 472 forward 336N (73.084, -65.078) -/-: -1721232.03303, 9191807.409386, -64.095597, 1.036332
6test 473 reverse 336N (73.084, -65.078) -/-: 4.4938668397781776e-14
6test 474 forward 339N (74.686, -57.339) -/-: -1440020.023752, 9069222.197918, -56.390849, 1.025263
6test 475 reverse 339N (74.686, -57.339) -/-: 1.5888218580782548e-14
6test 476 forward 342N (76.085, -49.443) -/-: -1176821.393989, 8986356.098856, -48.597784, 1.016715
6test 477 reverse 342N (76.085, -49.443) -/-: 1.4210854715202004e-14
6test 478 forward 345N (77.274, -41.411) -/-: -934605.427053, 8935050.398758, -40.705275, 1.010384
6test 479 reverse 345N (77.274, -41.411) -/-: 2.1316282072803006e-14
6test 480 forward 348N (78.252, -33.266) -/-: -714245.109628, 8907114.580812, -32.711919, 1.005893
6test 481 reverse 348N (78.252, -33.266) -/-: 1.4210854715202004e-14
6test 482 forward 351N (79.015, -25.030) -/-: -514536.969405, 8894816.626946, -24.625748, 1.002864
6test 483 reverse 351N (79.015, -25.030) -/-: 3.552713678800501e-15
6test 484 forward 354N (79.562, -16.725) -/-: -332334.438121, 8891401.702739, -16.462875, 1.000961
6test 485 reverse 354N (79.562, -16.725) -/-: 3.552713678800501e-15
6test 486 forward 357N (79.890, -8.374) -/-: -162830.781916, 8891598.152508, -8.245541, 0.999927
6test 487 reverse 357N (79.890, -8.374) -/-: 1.7763568394002505e-15
6test 488 forward 360N (80.000, 0.000) -/-: 0.0, 8892048.136219, 0.0, 0.9996
6test 489 reverse 360N (80.000, 0.000) -/-: 0.0
6test 490 max: 4.4938668397781776e-14  FAILED, KNOWN, expected 5e-14
6test 491 forward: 6196225.831883, 5458228.732328, 40.893395, 1.511253
6test 492 reverse: 30.172556, 60.208316, 41.279729, 1.511925
6test 493 _TM: ExactTransverseMercator(datum='WGS84', extendp=False, k0=0.9996, lon0=0.0)
6test 494 forward 0N (80.000, 0.000) 3/3: 0.0, 8881585.815988, 0.0, 0.9996
6test 495 reverse 0N (80.000, 0.000) 3/3: 0.0
6test 496 forward 3N (79.890, 8.374) 3/4: 163544.38007, 8881136.361771, 8.245542, 0.999927
6test 497 reverse 3N (79.890, 8.374) 3/3: 3.552713678800501e-15
6test 498 forward 6N (79.562, 16.725) 3/4: 333788.634116, 8880946.730424, 16.462884, 1.000962
6test 499 reverse 6N (79.562, 16.725) 3/3: 1.0658141036401503e-14
6test 500 forward 9N (79.015, 25.030) 3/4: 516782.400098, 8884389.933155, 24.625783, 1.002865
6test 501 reverse 9N (79.015, 25.030) 3/3: 1.5888218580782548e-14
6test 502 forward 12N (78.252, 33.266) 3/4: 717349.637417, 8896761.249834, 32.712011, 1.005894
6test 503 reverse 12N (78.252, 33.266) 3/3: 1.4210854715202004e-14
6test 504 forward 15N (77.274, 41.411) 3/4: 938645.229361, 8924845.3123, 40.705476, 1.010384
6test 505 reverse 15N (77.274, 41.411) 3/3: 7.105427357601002e-15
6test 506 forward 18N (76.085, 49.443) 3/4: 1181870.215451, 8976407.252949, 48.598167, 1.016714
6test 507 reverse 18N (76.085, 49.443) 3/3: 5.1728291973635394e-14
6test 508 forward 21N (74.686, 57.339) 3/4: 1446137.252018, 9059670.735504, 56.391495, 1.025259
6test 509 reverse 21N (74.686, 57.339) 3/3: 2.0097183471152322e-14
6test 510 forward 24N (73.084, 65.078) 3/4: 1728450.251911, 9182823.938232, 64.096558, 1.036319
6test 511 reverse 24N (73.084, 65.078) 3/3: 2.842170943040401e-14
6test 512 forward 27N (71.281, 72.638) 3/4: 2023752.790526, 9353559.771346, 71.732868, 1.050046
6test 513 reverse 27N (71.281, 72.638) 3/3: 2.842170943040401e-14
6test 514 forward 30N (69.282, 80.000) 3/4: 2325015.074835, 9578621.128889, 79.325231, 1.066355
6test 515 reverse 30N (69.282, 80.000) 3/4: 3.1776437161565096e-14
6test 516 forward 33N (67.094, 87.142) 3/4: 2623368.28288, 9863301.12097, 86.898617, 1.084836
6test 517 reverse 33N (67.094, 87.142) 3/4: 0.0
6test 518 forward 36N (64.721, 94.046) 3/4: 2908348.733697, 10210857.598605, 94.471204, 1.104695
6test 519 reverse 36N (64.721, 94.046) 3/4: 0.0
6test 520 forward 39N (62.172, 100.691) 3/4: 3168362.707459, 10621853.317461, 102.04623, 1.124739
6test 521 reverse 39N (62.172, 100.691) 3/4: 7.105427357601002e-15
6test 522 forward 42N (59.452, 107.061) 3/4: 3391492.622467, 11093528.387239, 109.604086, 1.14345
6test 523 reverse 42N (59.452, 107.061) 3/4: 2.0097183471152322e-14
6test 524 forward 45N (56.569, 113.137) 3/4: 3566696.824822, 11619422.467571, 117.096854, 1.159166
6test 525 reverse 45N (56.569, 113.137) 3/4: 7.105427357601002e-15
6test 526 forward 48N (53.530, 118.903) 3/4: 3685290.742854, 12189522.028618, 124.447841, 1.170375
6test 527 reverse 48N (53.530, 118.903) 3/4: 1.4210854715202004e-14
6test 528 forward 51N (50.346, 124.343) 3/4: 3742386.824274, 12791126.616764, 131.557863, 1.176031
6test 529 reverse 51N (50.346, 124.343) 3/4: 1.4210854715202004e-14
6test 530 forward 54N (47.023, 129.443) 3/4: 3737846.053669, 13410380.03778, 138.317827, 1.175799
6test 531 reverse 54N (47.023, 129.443) 3/4: 2.929642751054232e-14
6test 532 forward 57N (43.571, 134.187) 3/4: 3676387.634221, 14034104.572541, 144.624552, 1.170121
6test 533 reverse 57N (43.571, 134.187) 3/4: 7.105427357601002e-15
6test 534 forward 60N (40.000, 138.564) 3/4: 3566810.754496, 14651410.305646, 150.395289, 1.16007
6test 535 reverse 60N (40.000, 138.564) 3/4: 2.1316282072803006e-14
6test 536 forward 63N (36.319, 142.561) 3/4: 3420621.906486, 15254653.660248, 155.577129, 1.147079
6test 537 reverse 63N (36.319, 142.561) 3/4: 0.0
6test 538 forward 66N (32.539, 146.167) 3/4: 3250522.133697, 15839614.666766, 160.149958, 1.132638
6test 539 reverse 66N (32.539, 146.167) 3/4: 2.1316282072803006e-14
6test 540 forward 69N (28.669, 149.373) 3/4: 3069132.144368, 16405050.640186, 164.124094, 1.118063
6test 541 reverse 69N (28.669, 149.373) 3/4: 1.0658141036401503e-14
6test 542 forward 72N (24.721, 152.169) 3/4: 2888128.173431, 16951919.948156, 167.534978, 1.104377
6test 543 reverse 72N (24.721, 152.169) 3/4: 2.842170943040401e-14
6test 544 forward 75N (20.706, 154.548) 3/4: 2717773.256417, 17482549.021439, 170.437193, 1.09228
6test 545 reverse 75N (20.706, 154.548) 3/4: 1.0658141036401503e-14
6test 546 forward 78N (16.633, 156.504) 3/4: 2566730.586316, 17999918.486885, 172.899178, 1.082187
6test 547 reverse 78N (16.633, 156.504) 3/4: 3.552713678800501e-15
6test 548 forward 81N (12.515, 158.030) 3/4: 2442031.891673, 18507145.758, 174.99917, 1.074303
6test 549 reverse 81N (12.515, 158.030) 3/4: 5.329070518200751e-15
6test 550 forward 84N (8.362, 159.124) 3/4: 2349105.316925, 19007174.828239, 176.822266, 1.068689
6test 551 reverse 84N (8.362, 159.124) 3/4: 8.881784197001252e-15
6test 552 forward 87N (4.187, 159.781) 3/4: 2291809.478825, 19502649.329559, 178.458273, 1.06534
6test 553 reverse 87N (4.187, 159.781) 3/4: 9.769962616701378e-15
6test 554 forward 90N (0.000, 160.000) 3/4: 2272454.379192, -19995929.886042, -180.0, 1.064227
6test 555 reverse 90N (0.000, 160.000) 3/3: 0.0
6test 556 forward 93N (-4.187, 159.781) 3/4: 2291809.478825, -19502649.329559, -178.458273, 1.06534
6test 557 reverse 93N (-4.187, 159.781) 3/4: 4.440892098500626e-15
6test 558 forward 96N (-8.362, 159.124) 3/4: 2349105.316925, -19007174.828239, -176.822266, 1.068689
6test 559 reverse 96N (-8.362, 159.124) 3/4: 1.0658141036401503e-14
6test 560 forward 99N (-12.515, 158.030) 3/4: 2442031.891673, -18507145.758, -174.99917, 1.074303
6test 561 reverse 99N (-12.515, 158.030) 3/4: 1.4210854715202004e-14
6test 562 forward 102N (-16.633, 156.504) 3/4: 2566730.586316, -17999918.486885, -172.899178, 1.082187
6test 563 reverse 102N (-16.633, 156.504) 3/4: 1.4210854715202004e-14
6test 564 forward 105N (-20.706, 154.548) 3/4: 2717773.256417, -17482549.021439, -170.437193, 1.09228
6test 565 reverse 105N (-20.706, 154.548) 3/4: 1.0658141036401503e-14
6test 566 forward 108N (-24.721, 152.169) 3/4: 2888128.173431, -16951919.948156, -167.534978, 1.104377
6test 567 reverse 108N (-24.721, 152.169) 3/4: 7.105427357601002e-15
6test 568 forward 111N (-28.669, 149.373) 3/4: 3069132.144368, -16405050.640186, -164.124094, 1.118063
6test 569 reverse 111N (-28.669, 149.373) 3/4: 0.0
6test 570 forward 114N (-32.539, 146.167) 3/4: 3250522.133697, -15839614.666766, -160.149958, 1.132638
6test 571 reverse 114N (-32.539, 146.167) 3/4: 2.1316282072803006e-14
6test 572 forward 117N (-36.319, 142.561) 3/4: 3420621.906486, -15254653.660248, -155.577129, 1.147079
6test 573 reverse 117N (-36.319, 142.561) 3/4: 0.0
6test 574 forward 120N (-40.000, 138.564) 3/4: 3566810.754496, -14651410.305646, -150.395289, 1.16007
6test 575 reverse 120N (-40.000, 138.564) 3/4: 3.552713678800501e-14
6test 576 forward 123N (-43.571, 134.187) 3/4: 3676387.634221, -14034104.572541, -144.624552, 1.170121
6test 577 reverse 123N (-43.571, 134.187) 3/4: 7.105427357601002e-15
6test 578 forward 126N (-47.023, 129.443) 3/4: 3737846.053669, -13410380.03778, -138.317827, 1.175799
6test 579 reverse 126N (-47.023, 129.443) 3/4: 2.929642751054232e-14
6test 580 forward 129N (-50.346, 124.343) 3/4: 3742386.824274, -12791126.616764, -131.557863, 1.176031
6test 581 reverse 129N (-50.346, 124.343) 3/4: 1.4210854715202004e-14
6test 582 forward 132N (-53.530, 118.903) 3/4: 3685290.742854, -12189522.028618, -124.447841, 1.170375
6test 583 reverse 132N (-53.530, 118.903) 3/4: 1.4210854715202004e-14
6test 584 forward 135N (-56.569, 113.137) 3/4: 3566696.824822, -11619422.467571, -117.096854, 1.159166
6test 585 reverse 135N (-56.569, 113.137) 3/4: 1.5888218580782548e-14
6test 586 forward 138N (-59.452, 107.061) 3/4: 3391492.622467, -11093528.387239, -109.604086, 1.14345
6test 587 reverse 138N (-59.452, 107.061) 3/4: 2.0097183471152322e-14
6test 588 forward 141N (-62.172, 100.691) 3/4: 3168362.707459, -10621853.317461, -102.04623, 1.124739
6test 589 reverse 141N (-62.172, 100.691) 3/4: 7.105427357601002e-15
6test 590 forward 144N (-64.721, 94.046) 3/4: 2908348.733697, -10210857.598605, -94.471204, 1.104695
6test 591 reverse 144N (-64.721, 94.046) 3/4: 0.0
6test 592 forward 147N (-67.094, 87.142) 3/4: 2623368.28288, -9863301.12097, -86.898617, 1.084836
6test 593 reverse 147N (-67.094, 87.142) 3/4: 0.0
6test 594 forward 150N (-69.282, 80.000) 3/4: 2325015.074835, -9578621.128889, -79.325231, 1.066355
6test 595 reverse 150N (-69.282, 80.000) 3/4: 5.684341886080802e-14
6test 596 forward 153N (-71.281, 72.638) 3/4: 2023752.790526, -9353559.771346, -71.732868, 1.050046
6test 597 reverse 153N (-71.281, 72.638) 3/3: 2.842170943040401e-14
6test 598 forward 156N (-73.084, 65.078) 3/4: 1728450.251911, -9182823.938232, -64.096558, 1.036319
6test 599 reverse 156N (-73.084, 65.078) 3/3: 2.842170943040401e-14
6test 600 forward 159N (-74.686, 57.339) 3/4: 1446137.252018, -9059670.735504, -56.391495, 1.025259
6test 601 reverse 159N (-74.686, 57.339) 3/3: 2.5618982671915014e-14
6test 602 forward 162N (-76.085, 49.443) 3/4: 1181870.215451, -8976407.252949, -48.598167, 1.016714
6test 603 reverse 162N (-76.085, 49.443) 3/3: 4.4938668397781776e-14
6test 604 forward 165N (-77.274, 41.411) 3/4: 938645.229361, -8924845.3123, -40.705476, 1.010384
6test 605 reverse 165N (-77.274, 41.411) 3/3: 7.105427357601002e-15
6test 606 forward 168N (-78.252, 33.266) 3/4: 717349.637417, -8896761.249834, -32.712011, 1.005894
6test 607 reverse 168N (-78.252, 33.266) 3/3: 3.1776437161565096e-14
6test 608 forward 171N (-79.015, 25.030) 3/4: 516782.400098, -8884389.933155, -24.625783, 1.002865
6test 609 reverse 171N (-79.015, 25.030) 3/3: 1.7763568394002505e-14
6test 610 forward 174N (-79.562, 16.725) 3/4: 333788.634116, -8880946.730424, -16.462884, 1.000962
6test 611 reverse 174N (-79.562, 16.725) 3/3: 1.7763568394002505e-14
6test 612 forward 177N (-79.890, 8.374) 3/4: 163544.38007, -8881136.361771, -8.245542, 0.999927
6test 613 reverse 177N (-79.890, 8.374) 3/3: 1.7763568394002505e-15
6test 614 forward 180N (-80.000, 0.000) 3/3: 0.0, -8881585.815988, 0.0, 0.9996
6test 615 reverse 180N (-80.000, 0.000) 3/3: 0.0
6test 616 forward 183N (-79.890, -8.374) 3/4: -163544.38007, -8881136.361771, 8.245542, 0.999927
6test 617 reverse 183N (-79.890, -8.374) 3/3: 3.552713678800501e-15
6test 618 forward 186N (-79.562, -16.725) 3/4: -333788.634116, -8880946.730424, 16.462884, 1.000962
6test 619 reverse 186N (-79.562, -16.725) 3/3: 1.0658141036401503e-14
6test 620 forward 189N (-79.015, -25.030) 3/4: -516782.400098, -8884389.933155, 24.625783, 1.002865
6test 621 reverse 189N (-79.015, -25.030) 3/3: 1.5888218580782548e-14
6test 622 forward 192N (-78.252, -33.266) 3/4: -717349.637417, -8896761.249834, 32.712011, 1.005894
6test 623 reverse 192N (-78.252, -33.266) 3/3: 1.4210854715202004e-14
6test 624 forward 195N (-77.274, -41.411) 3/4: -938645.229361, -8924845.3123, 40.705476, 1.010384
6test 625 reverse 195N (-77.274, -41.411) 3/3: 7.105427357601002e-15
6test 626 forward 198N (-76.085, -49.443) 3/4: -1181870.215451, -8976407.252949, 48.598167, 1.016714
6test 627 reverse 198N (-76.085, -49.443) 3/3: 5.1728291973635394e-14
6test 628 forward 201N (-74.686, -57.339) 3/4: -1446137.252018, -9059670.735504, 56.391495, 1.025259
6test 629 reverse 201N (-74.686, -57.339) 3/3: 2.0097183471152322e-14
6test 630 forward 204N (-73.084, -65.078) 3/4: -1728450.251911, -9182823.938232, 64.096558, 1.036319
6test 631 reverse 204N (-73.084, -65.078) 3/3: 2.842170943040401e-14
6test 632 forward 207N (-71.281, -72.638) 3/4: -2023752.790526, -9353559.771346, 71.732868, 1.050046
6test 633 reverse 207N (-71.281, -72.638) 3/3: 2.842170943040401e-14
6test 634 forward 210N (-69.282, -80.000) 3/4: -2325015.074835, -9578621.128889, 79.325231, 1.066355
6test 635 reverse 210N (-69.282, -80.000) 3/4: 3.1776437161565096e-14
6test 636 forward 213N (-67.094, -87.142) 3/4: -2623368.28288, -9863301.12097, 86.898617, 1.084836
6test 637 reverse 213N (-67.094, -87.142) 3/4: 0.0
6test 638 forward 216N (-64.721, -94.046) 3/4: -2908348.733697, -10210857.598605, 94.471204, 1.104695
6test 639 reverse 216N (-64.721, -94.046) 3/4: 0.0
6test 640 forward 219N (-62.172, -100.691) 3/4: -3168362.707459, -10621853.317461, 102.04623, 1.124739
6test 641 reverse 219N (-62.172, -100.691) 3/4: 7.105427357601002e-15
6test 642 forward 222N (-59.452, -107.061) 3/4: -3391492.622467, -11093528.387239, 109.604086, 1.14345
6test 643 reverse 222N (-59.452, -107.061) 3/4: 2.0097183471152322e-14
6test 644 forward 225N (-56.569, -113.137) 3/4: -3566696.824822, -11619422.467571, 117.096854, 1.159166
6test 645 reverse 225N (-56.569, -113.137) 3/4: 7.105427357601002e-15
6test 646 forward 228N (-53.530, -118.903) 3/4: -3685290.742854, -12189522.028618, 124.447841, 1.170375
6test 647 reverse 228N (-53.530, -118.903) 3/4: 1.4210854715202004e-14
6test 648 forward 231N (-50.346, -124.343) 3/4: -3742386.824274, -12791126.616764, 131.557863, 1.176031
6test 649 reverse 231N (-50.346, -124.343) 3/4: 1.4210854715202004e-14
6test 650 forward 234N (-47.023, -129.443) 3/4: -3737846.053669, -13410380.03778, 138.317827, 1.175799
6test 651 reverse 234N (-47.023, -129.443) 3/4: 2.929642751054232e-14
6test 652 forward 237N (-43.571, -134.187) 3/4: -3676387.634221, -14034104.572541, 144.624552, 1.170121
6test 653 reverse 237N (-43.571, -134.187) 3/4: 7.105427357601002e-15
6test 654 forward 240N (-40.000, -138.564) 3/4: -3566810.754496, -14651410.305646, 150.395289, 1.16007
6test 655 reverse 240N (-40.000, -138.564) 3/4: 2.1316282072803006e-14
6test 656 forward 243N (-36.319, -142.561) 3/4: -3420621.906486, -15254653.660248, 155.577129, 1.147079
6test 657 reverse 243N (-36.319, -142.561) 3/4: 0.0
6test 658 forward 246N (-32.539, -146.167) 3/4: -3250522.133697, -15839614.666766, 160.149958, 1.132638
6test 659 reverse 246N (-32.539, -146.167) 3/4: 2.1316282072803006e-14
6test 660 forward 249N (-28.669, -149.373) 3/4: -3069132.144368, -16405050.640186, 164.124094, 1.118063
6test 661 reverse 249N (-28.669, -149.373) 3/4: 1.0658141036401503e-14
6test 662 forward 252N (-24.721, -152.169) 3/4: -2888128.173431, -16951919.948156, 167.534978, 1.104377
6test 663 reverse 252N (-24.721, -152.169) 3/4: 2.842170943040401e-14
6test 664 forward 255N (-20.706, -154.548) 3/4: -2717773.256417, -17482549.021439, 170.437193, 1.09228
6test 665 reverse 255N (-20.706, -154.548) 3/4: 1.0658141036401503e-14
6test 666 forward 258N (-16.633, -156.504) 3/4: -2566730.586316, -17999918.486885, 172.899178, 1.082187
6test 667 reverse 258N (-16.633, -156.504) 3/4: 3.552713678800501e-15
6test 668 forward 261N (-12.515, -158.030) 3/4: -2442031.891673, -18507145.758, 174.99917, 1.074303
6test 669 reverse 261N (-12.515, -158.030) 3/4: 5.329070518200751e-15
6test 670 forward 264N (-8.362, -159.124) 3/4: -2349105.316925, -19007174.828239, 176.822266, 1.068689
6test 671 reverse 264N (-8.362, -159.124) 3/4: 8.881784197001252e-15
6test 672 forward 267N (-4.187, -159.781) 3/4: -2291809.478825, -19502649.329559, 178.458273, 1.06534
6test 673 reverse 267N (-4.187, -159.781) 3/4: 9.769962616701378e-15
6test 674 forward 270N (0.000, -160.000) 3/4: -2272454.379192, -19995929.886042, 180.0, 1.064227
6test 675 reverse 270N (0.000, -160.000) 3/3: 0.0
6test 676 forward 273N (4.187, -159.781) 3/4: -2291809.478825, 19502649.329559, -178.458273, 1.06534
6test 677 reverse 273N (4.187, -159.781) 3/4: 4.440892098500626e-15
6test 678 forward 276N (8.362, -159.124) 3/4: -2349105.316925, 19007174.828239, -176.822266, 1.068689
6test 679 reverse 276N (8.362, -159.124) 3/4: 1.0658141036401503e-14
6test 680 forward 279N (12.515, -158.030) 3/4: -2442031.891673, 18507145.758, -174.99917, 1.074303
6test 681 reverse 279N (12.515, -158.030) 3/4: 1.4210854715202004e-14
6test 682 forward 282N (16.633, -156.504) 3/4: -2566730.586316, 17999918.486885, -172.899178, 1.082187
6test 683 reverse 282N (16.633, -156.504) 3/4: 1.4210854715202004e-14
6test 684 forward 285N (20.706, -154.548) 3/4: -2717773.256417, 17482549.021439, -170.437193, 1.09228
6test 685 reverse 285N (20.706, -154.548) 3/4: 1.0658141036401503e-14
6test 686 forward 288N (24.721, -152.169) 3/4: -2888128.173431, 16951919.948156, -167.534978, 1.104377
6test 687 reverse 288N (24.721, -152.169) 3/4: 7.105427357601002e-15
6test 688 forward 291N (28.669, -149.373) 3/4: -3069132.144368, 16405050.640186, -164.124094, 1.118063
6test 689 reverse 291N (28.669, -149.373) 3/4: 0.0
6test 690 forward 294N (32.539, -146.167) 3/4: -3250522.133697, 15839614.666766, -160.149958, 1.132638
6test 691 reverse 294N (32.539, -146.167) 3/4: 2.1316282072803006e-14
6test 692 forward 297N (36.319, -142.561) 3/4: -3420621.906486, 15254653.660248, -155.577129, 1.147079
6test 693 reverse 297N (36.319, -142.561) 3/4: 0.0
6test 694 forward 300N (40.000, -138.564) 3/4: -3566810.754496, 14651410.305646, -150.395289, 1.16007
6test 695 reverse 300N (40.000, -138.564) 3/4: 3.552713678800501e-14
6test 696 forward 303N (43.571, -134.187) 3/4: -3676387.634221, 14034104.572541, -144.624552, 1.170121
6test 697 reverse 303N (43.571, -134.187) 3/4: 7.105427357601002e-15
6test 698 forward 306N (47.023, -129.443) 3/4: -3737846.053669, 13410380.03778, -138.317827, 1.175799
6test 699 reverse 306N (47.023, -129.443) 3/4: 2.929642751054232e-14
6test 700 forward 309N (50.346, -124.343) 3/4: -3742386.824274, 12791126.616764, -131.557863, 1.176031
6test 701 reverse 309N (50.346, -124.343) 3/4: 1.4210854715202004e-14
6test 702 forward 312N (53.530, -118.903) 3/4: -3685290.742854, 12189522.028618, -124.447841, 1.170375
6test 703 reverse 312N (53.530, -118.903) 3/4: 1.4210854715202004e-14
6test 704 forward 315N (56.569, -113.137) 3/4: -3566696.824822, 11619422.467571, -117.096854, 1.159166
6test 705 reverse 315N (56.569, -113.137) 3/4: 1.5888218580782548e-14
6test 706 forward 318N (59.452, -107.061) 3/4: -3391492.622467, 11093528.387239, -109.604086, 1.14345
6test 707 reverse 318N (59.452, -107.061) 3/4: 2.0097183471152322e-14
6test 708 forward 321N (62.172, -100.691) 3/4: -3168362.707459, 10621853.317461, -102.04623, 1.124739
6test 709 reverse 321N (62.172, -100.691) 3/4: 7.105427357601002e-15
6test 710 forward 324N (64.721, -94.046) 3/4: -2908348.733697, 10210857.598605, -94.471204, 1.104695
6test 711 reverse 324N (64.721, -94.046) 3/4: 0.0
6test 712 forward 327N (67.094, -87.142) 3/4: -2623368.28288, 9863301.12097, -86.898617, 1.084836
6test 713 reverse 327N (67.094, -87.142) 3/4: 0.0
6test 714 forward 330N (69.282, -80.000) 3/4: -2325015.074835, 9578621.128889, -79.325231, 1.066355
6test 715 reverse 330N (69.282, -80.000) 3/4: 5.684341886080802e-14
6test 716 forward 333N (71.281, -72.638) 3/4: -2023752.790526, 9353559.771346, -71.732868, 1.050046
6test 717 reverse 333N (71.281, -72.638) 3/3: 2.842170943040401e-14
6test 718 forward 336N (73.084, -65.078) 3/4: -1728450.251911, 9182823.938232, -64.096558, 1.036319
6test 719 reverse 336N (73.084, -65.078) 3/3: 2.842170943040401e-14
6test 720 forward 339N (74.686, -57.339) 3/4: -1446137.252018, 9059670.735504, -56.391495, 1.025259
6test 721 reverse 339N (74.686, -57.339) 3/3: 2.5618982671915014e-14
6test 722 forward 342N (76.085, -49.443) 3/4: -1181870.215451, 8976407.252949, -48.598167, 1.016714
6test 723 reverse 342N (76.085, -49.443) 3/3: 4.4938668397781776e-14
6test 724 forward 345N (77.274, -41.411) 3/4: -938645.229361, 8924845.3123, -40.705476, 1.010384
6test 725 reverse 345N (77.274, -41.411) 3/3: 7.105427357601002e-15
6test 726 forward 348N (78.252, -33.266) 3/4: -717349.637417, 8896761.249834, -32.712011, 1.005894
6test 727 reverse 348N (78.252, -33.266) 3/3: 3.1776437161565096e-14
6test 728 forward 351N (79.015, -25.030) 3/4: -516782.400098, 8884389.933155, -24.625783, 1.002865
6test 729 reverse 351N (79.015, -25.030) 3/3: 1.7763568394002505e-14
6test 730 forward 354N (79.562, -16.725) 3/4: -333788.634116, 8880946.730424, -16.462884, 1.000962
6test 731 reverse 354N (79.562, -16.725) 3/3: 1.7763568394002505e-14
6test 732 forward 357N (79.890, -8.374) 3/4: -163544.38007, 8881136.361771, -8.245542, 0.999927
6test 733 reverse 357N (79.890, -8.374) 3/3: 1.7763568394002505e-15
6test 734 forward 360N (80.000, 0.000) 3/3: 0.0, 8881585.815988, 0.0, 0.9996
6test 735 reverse 360N (80.000, 0.000) 3/3: 0.0
6test 736 max: 5.684341886080802e-14  FAILED, KNOWN, expected 9e-14
6test 737 forward: 6208422.5374, 5452954.287187, 41.077484, 1.511911
6test 738 reverse: 30.244228, 60.169664, 41.479185, 1.510346
63 of 738 testKtm.py tests (0.4%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 602.655 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testLatLon.py
6testing testLatLon.py 22.09.20
6testLatLon(pygeodesy.sphericalNvector, 23.01.18)
6test 1 isEllipsoidal: False
6test 2 isSpherical: True
6test 3 lat/lonDMS: 52.20472°N, 000.14056°E
6test 4 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 5 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 6 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 7 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 8 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 9 isequalTo: True
6test 10 isequalTo: True
6test 11 latlon2: 52.20472, 0.14056
6test 12 latlon2: 52.2047, 0.1406
6test 13 latlon2: 52.205, 0.141
6test 14 latlon2: 52.2, 0.14
6test 15 latlon2: 52.2, 0.1
6test 16 latlon2: 52.0, 0.0
6test 17 chordTo: 12036677.26
6test 18 chordTo: 12036463.78
6test 19 initialBearingTo: 156.1666
6test 20 initialBearingTo: 65.8921
6test 21 initialBearingTo: 0.0
6test 22 initialBearingTo: 180.0
6test 23 finalBearingTo: 157.8904
6test 24 finalBearingTo: 93.8581
6test 25 bearingTo2: 156.1666, 157.8904
6test 26 ispolar: True
6test 27 copy: True
6test 28 __eq__: True
6test 29 __ne__: False
6test 30 equirectangularTo: 404329.56
6test 31 distanceTo: 404279.720589
6test 32 distanceTo: 404279.720589
6test 33 distanceTo: 2145
6test 34 distanceTo: 18013602.92
6test 35 distanceTo: 20015114.35
6test 36 intermediateTo: 51.372084°N, 000.707337°E
6test 37 intermediateTo: True
6test 38 intermediateTo: 404279.721
6test 39 intermediateTo+5: 35.160975°N, 008.989542°E
6test 40 intermediateTo+5: 5.000
6test 41 intermediateTo-4: 64.911647°N, 013.726301°W
6test 42 intermediateTo-4: 4.000
6test 43 intermediateTo-h: 125.000
6test 44 intermediateChordTo: 51.372294°N, 000.707192°E
6test 45 intermediateChordTo: True
6test 46 intermediateChordTo-h: 125.000
6test 47 midpointTo: 50.536327°N, 001.274614°E
6test 48 destination: 51.513546°N, 000.098345°W
6test 49 destination: 51°30′49″N, 000°05′54″W
6test 50 destination: 34°37′N, 116°33′W
6test 51 destination: 34.613647°N, 116.55116°W
6test 52 destination: 0.604122N, 2.034201W
6test 53 destination: 31.96383509°N, 064.37329146°E
6test 54 alongTrackDistanceTo: can't multiply sequence by non-int of type 'float'  FAILED, KNOWN, expected incompatible ...
6test 55 alongTrackDistanceTo: 62331.58
6test 56 alongTrackDistanceTo: 99.588
6test 57 alongTrackDistanceTo: -7702.7
6test 58 alongTrackDistanceTo: 7587.6
6test 59 crossTrackDistanceTo: -305.66528160755445  FAILED, KNOWN, expected TypeError
6test 60 crossTrackDistanceTo: -307.55
6test 61 crossTrackDistanceTo: 7.4524
6test 62 greatCircle: (-0.79408, 0.12856, 0.59406)
6test 63 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4773243.784965, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 64 neareston6: (LatLon(45°30′03.93″N, 002°00′00.0″E), 38968.531578, 1.501091, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 65 chordTo: 124799.103
6test 66 cosineAndoyerLambertTo: 124801.098
6test 67 cosineAndoyerLambertTo: 124801.098
6test 68 cosineForsyheAndoyerLambertTo: 124801.098
6test 69 cosineForsyheAndoyerLambertTo: 124801.098
6test 70 cosineLawTo: 124801.098
6test 71 cosineLawTo: 124801.098
6test 72 equirectangularTo: 124804.754
6test 73 equirectangularTo: 124804.754
6test 74 euclideanTo: 130015.089
6test 75 euclideanTo: 130015.089
6test 76 flatLocalTo: 124804.754
6test 77 flatLocalTo: 124804.754
6test 78 flatPolarTo: 133663.257
6test 79 flatPolarTo: 133663.257
6test 80 hartzell: 53.3206°N, 001.7297°W
6test 81 hartzell: 53.3206°N, 001.7297°W
6test 82 height4: 0.0
6test 83 height4: (3803904.2, -114870.8, 5109488.3, 0.0)
6test 84 height4: 53°19′14.2″N, 001°43′46.9″W
6test 85 height4: 53°19′14.2″N, 001°43′46.9″W
6test 86 haversineTo: 124801.098
6test 87 haversineTo: 124801.098
6test 88 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 89 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 90 thomasTo: 124801.098
6test 91 thomasTo: 124801.098
6test 92 vincentysTo: 124801.098
6test 93 vincentysTo: 124801.098
6test 94 greatCircleTo: (-0.79408, 0.12859, 0.59406)
6test 95 isclockwise: False
6test 96 isclockwise*: False
6test 97 isclockwise: True
6test 98 isclockwise*: True
6test 99 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 100 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 101 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 102 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 103 isconvex: False
6test 104 isconvex*: False
6test 105 isconvex: True
6test 106 isconvex*: True
6test 107 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 108 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 109 isenclosedBy1: True
6test 110 isenclosedBy1*: True
6test 111 isenclosedBy2: False
6test 112 isenclosedBy2*: False
6test 113 isenclosedBy3: False
6test 114 isenclosedBy3*: False
6test 115 isenclosedBy4: False
6test 116 isenclosedBy4*: False
6test 117 isenclosedBy5: False
6test 118 isenclosedBy5*: False
6test 119 isenclosedBy6: True
6test 120 isenclosedBy6*: True
6test 121 isenclosedBy7: True
6test 122 isenclosedBy7*: True
6test 123 isenclosedBy-CCW: True
6test 124 isenclosedBy-CW : True
6test 125 isenclosedBy-CCW: True
6test 126 initialBearingTo: 102.432182
6test 127 compassAngleTo: 100.017
6test 128 compassAngleTo: 105.599
6test 129 initialBearingTo: 288.715918
6test 130 compassAngleTo: 280.017
6test 131 compassAngleTo: 285.599
6test 132 equirectangularTo: 592.185
6test 133 distanceTo: 591.831
6test 134 compassAngleTo: 0.0
6test 135 compassAngleTo: 45.0
6test 136 compassAngleTo: 90.0
6test 137 compassAngleTo: 180.0
6test 138 compassAngleTo: 225.0
6test 139 compassAngleTo: 315.0
6test 140 compassAngleTo: 270.0
6test 141 compassAngleTo: 359.4
6test 142 latlon2: (53.0, 1.0)
6test 143 philam2: (0.93, 0.02)
6test 144 compassAngleTo: 31
6test 145 compassAngleTo: 45

6test 146 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 147 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 148 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 149 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 150 isequalTo: <class 'bool'>
6test 151 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 152 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 153 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 154 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 155 compassAngleTo: <class 'float'>
6test 156 cosineLawTo: <class 'float'>
6test 157 euclideanTo: <class 'float'>
6test 158 flatLocalTo: <class 'float'>
6test 159 flatPolarTo: <class 'float'>
6test 160 haversineTo: <class 'float'>
6test 161 hubenyTo: <class 'float'>
6test 162 vincentysTo: <class 'float'>
6test 163 toVector: (0.615661, 0.0, 0.788011)
6test 164 toVector3d: (0.61566, 0.0, 0.78801)
6test 165 trilaterate5 (pygeodesy.sphericalNvector) .min: 223.305
6test 166 trilaterate5 (pygeodesy.sphericalNvector) .point: 42.67456065°N, 002.49539502°E
6test 167 trilaterate5 (pygeodesy.sphericalNvector) .min- is .maxPoint: True
6test 168 trilaterate5 (pygeodesy.sphericalNvector) .n: 1
6test 169 trilaterate5 (pygeodesy.sphericalNvector) .error: sphericalNvector.LatLon.trilaterate5(area=True, wrap=False), MRO(nvectorBase.LatLonNvectorBase, sphericalBase.LatLonSphericalBase, latlonBase.LatLonBase, named._NamedBase, named._Named): not implemented
6test 170 radii11: Radii11Tuple(rA=7701.409157, rB=1361.530045, rC=499.257353, cR=4886.694635, rIn=739.915482, riS=179.523525, roS=6087.250896, a=1860.787398, b=8200.666509, c=9062.939201, s=9562.196554)
622 tests skipped (22): No module named 'numpy': required by vector2d._numpy
6test 171 area cw/ccw: 1.0
6testLatLon(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 172 isEllipsoidal: False
6test 173 isSpherical: True
6test 174 lat/lonDMS: 52.20472°N, 000.14056°E
6test 175 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 176 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 177 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 178 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 179 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 180 isequalTo: True
6test 181 isequalTo: True
6test 182 latlon2: 52.20472, 0.14056
6test 183 latlon2: 52.2047, 0.1406
6test 184 latlon2: 52.205, 0.141
6test 185 latlon2: 52.2, 0.14
6test 186 latlon2: 52.2, 0.1
6test 187 latlon2: 52.0, 0.0
6test 188 chordTo: 12036677.26
6test 189 chordTo: 12036463.78
6test 190 initialBearingTo: 156.1666
6test 191 initialBearingTo: 65.8921
6test 192 initialBearingTo: 0.0
6test 193 initialBearingTo: 180.0
6test 194 finalBearingTo: 157.8904
6test 195 finalBearingTo: 93.8581
6test 196 bearingTo2: 156.1666, 157.8904
6test 197 ispolar: True
6test 198 copy: True
6test 199 __eq__: True
6test 200 __ne__: False
6test 201 equirectangularTo: 404329.56
6test 202 distanceTo: 404279.720589
6test 203 distanceTo: 404279.720589
6test 204 distanceTo: 2145
6test 205 antipodal: False
6test 206 distanceTo dateline: 19967403.498  FAILED, KNOWN, expected 19119590.551
6test 207 distanceTo unrolled: 19967403.498  FAILED, KNOWN, expected 19119590.551
6test 208 antipodal: False
6test 209 distanceTo dateline: 9491735
6test 210 distanceTo unrolled: 9491735
6test 211 distanceTo: 18013602.92
6test 212 distanceTo: 20015114.35
6test 213 intermediateTo: 51.372084°N, 000.707337°E
6test 214 intermediateTo: True
6test 215 intermediateTo: 404279.721
6test 216 intermediateTo+5: 35.160975°N, 008.989542°E
6test 217 intermediateTo+5: 5.000
6test 218 intermediateTo-4: 64.911647°N, 013.726301°W
6test 219 intermediateTo-4: 4.000
6test 220 intermediateTo-h: 125.000
6test 221 midpointTo: 50.536327°N, 001.274614°E
6test 222 destination: 51.513546°N, 000.098345°W
6test 223 destination: 51°30′49″N, 000°05′54″W
6test 224 destination: 34°37′N, 116°33′W
6test 225 destination: 34.613647°N, 116.55116°W
6test 226 destination: 0.604122N, 2.034201W
6test 227 destination: 31.96383509°N, 064.37329146°E
6test 228 alongTrackDistanceTo: type(end) (96): incompatible with sphericalTrigonometry.LatLon.alongTrackDistanceTo(end)  FAILED, KNOWN, expected incompatible ...
6test 229 alongTrackDistanceTo: 62331.58
6test 230 alongTrackDistanceTo: 99.588
6test 231 alongTrackDistanceTo: -7702.7
6test 232 alongTrackDistanceTo: 7587.6
6test 233 crossTrackDistanceTo: type(end) (96): incompatible with sphericalTrigonometry.LatLon.crossTrackDistanceTo(end)  FAILED, KNOWN, expected incompatible ...
6test 234 crossTrackDistanceTo: -307.55
6test 235 crossTrackDistanceTo: 7.4524
6test 236 greatCircle: (-0.79408, 0.12856, 0.59406)
6test 237 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4773243.784965, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 238 neareston6: (LatLon(45°30′03.93″N, 002°00′00.0″E), 38968.531578, 1.501091, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 239 chordTo: 124799.103
6test 240 cosineAndoyerLambertTo: 124801.098
6test 241 cosineAndoyerLambertTo: 124801.098
6test 242 cosineForsyheAndoyerLambertTo: 124801.098
6test 243 cosineForsyheAndoyerLambertTo: 124801.098
6test 244 cosineLawTo: 124801.098
6test 245 cosineLawTo: 124801.098
6test 246 equirectangularTo: 124804.754
6test 247 equirectangularTo: 124804.754
6test 248 euclideanTo: 130015.089
6test 249 euclideanTo: 130015.089
6test 250 flatLocalTo: 124804.754
6test 251 flatLocalTo: 124804.754
6test 252 flatPolarTo: 133663.257
6test 253 flatPolarTo: 133663.257
6test 254 hartzell: 53.3206°N, 001.7297°W
6test 255 hartzell: 53.3206°N, 001.7297°W
6test 256 height4: 0.0
6test 257 height4: (3803904.2, -114870.8, 5109488.3, 0.0)
6test 258 height4: 53°19′14.2″N, 001°43′46.9″W
6test 259 height4: 53°19′14.2″N, 001°43′46.9″W
6test 260 haversineTo: 124801.098
6test 261 haversineTo: 124801.098
6test 262 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 263 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 264 thomasTo: 124801.098
6test 265 thomasTo: 124801.098
6test 266 vincentysTo: 124801.098
6test 267 vincentysTo: 124801.098
6test 268 isclockwise: False
6test 269 isclockwise*: False
6test 270 isclockwise: True
6test 271 isclockwise*: True
6test 272 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 273 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 274 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 275 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 276 isconvex: False
6test 277 isconvex*: False
6test 278 isconvex: True
6test 279 isconvex*: True
6test 280 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 281 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 282 isenclosedBy1: True
6test 283 isenclosedBy1*: True
6test 284 isenclosedBy2: False
6test 285 isenclosedBy2*: False
6test 286 isenclosedBy3: False
6test 287 isenclosedBy3*: False
6test 288 isenclosedBy4: False
6test 289 isenclosedBy4*: False
6test 290 isenclosedBy5: False
6test 291 isenclosedBy5*: False
6test 292 isenclosedBy6: True
6test 293 isenclosedBy6*: True
6test 294 isenclosedBy7: True
6test 295 isenclosedBy7*: True
6test 296 isenclosedBy-CCW: True
6test 297 isenclosedBy-CW : True
6test 298 isenclosedBy-CCW: True
6test 299 initialBearingTo: 102.432182
6test 300 compassAngleTo: 100.017
6test 301 compassAngleTo: 105.599
6test 302 initialBearingTo: 288.715918
6test 303 compassAngleTo: 280.017
6test 304 compassAngleTo: 285.599
6test 305 equirectangularTo: 592.185
6test 306 distanceTo: 591.831
6test 307 bearingTo: 0.0
6test 308 compassAngleTo: 0.0
6test 309 bearingTo: 45.0
6test 310 compassAngleTo: 45.0
6test 311 bearingTo: 90.0
6test 312 compassAngleTo: 90.0
6test 313 bearingTo: 180.0
6test 314 compassAngleTo: 180.0
6test 315 bearingTo: 225.0
6test 316 compassAngleTo: 225.0
6test 317 bearingTo: 315.0
6test 318 compassAngleTo: 315.0
6test 319 bearingTo: 270.0
6test 320 compassAngleTo: 270.0
6test 321 bearingTo: 0.0  FAILED, KNOWN, expected 359.4
6test 322 compassAngleTo: 359.4
6test 323 latlon2: (53.0, 1.0)
6test 324 philam2: (0.93, 0.02)
6test 325 bearingTo: 31
6test 326 compassAngleTo: 31
6test 327 compassAngleTo: 45

6test 328 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 329 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
./test/testLatLon.py:617: DeprecationWarning: function L{pygeodesy.ellipsoidalVincenty.areaOf} has been DEPRECATED, use function L{ellipsoidalExact.areaOf} or L{ellipsoidalKarney.areaOf}.
  r = a(reversed(b))
./test/testLatLon.py:618: DeprecationWarning: function L{pygeodesy.ellipsoidalVincenty.areaOf} has been DEPRECATED, use function L{ellipsoidalExact.areaOf} or L{ellipsoidalKarney.areaOf}.
  f = a(b)  # ccw
6test 330 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 331 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 332 isequalTo: <class 'bool'>
6test 333 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 334 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 335 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 336 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 337 compassAngleTo: <class 'float'>
6test 338 cosineLawTo: <class 'float'>
6test 339 euclideanTo: <class 'float'>
6test 340 flatLocalTo: <class 'float'>
6test 341 flatPolarTo: <class 'float'>
6test 342 haversineTo: <class 'float'>
6test 343 hubenyTo: <class 'float'>
6test 344 vincentysTo: <class 'float'>
6test 345 toNvector: (0.61566, 0.0, 0.78801)
6test 346 toVector: (0.615661, 0.0, 0.788011)
6test 347 toVector3d: (0.61566, 0.0, 0.78801)
6test 348 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 313.671
6test 349 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.66937229°N, 002.48639477°E
6test 350 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 1591.044
6test 351 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.65153054°N, 002.46822157°E
6test 352 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 3
6test 353 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 133.815
6test 354 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 160.242
6test 355 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.67817811°N, 002.49966641°E
6test 356 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 2
6test 357 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 2403.293
6test 358 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 2403.293
6test 359 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.66135649°N, 002.47981645°E
6test 360 trilaterate5 (pygeodesy.sphericalTrigonometry) .min- is .maxPoint: True
6test 361 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 1
6test 362 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 1340.608
6test 363 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.69128229°N, 002.50129001°E
6test 364 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 1499.220
6test 365 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.64295864°N, 002.44242391°E
6test 366 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 3
6test 367 radii11: Radii11Tuple(rA=7237.243793, rB=1825.695409, rC=2.255158, cR=57690.493993, rIn=57.33247, riS=2.087691, roS=2.443616, a=1827.950567, b=7239.49895, c=9062.939201, s=9065.194359)
627 tests skipped (49): No module named 'numpy': required by vector2d._numpy
6test 368 radii11: Radii11Tuple(rA=7237.243793, rB=1825.695409, rC=2.255158, cR=57690.493993, rIn=57.33247, riS=2.087691, roS=2.443616, a=1827.950567, b=7239.49895, c=9062.939201, s=9065.194359)
622 tests skipped (71): No module named 'numpy': required by vector2d._numpy
6test 369 area cw/ccw: 1.0
6testLatLon(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 370 isEllipsoidal: True
6test 371 isSpherical: False
6test 372 lat/lonDMS: 52.20472°N, 000.14056°E
6test 373 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 374 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 375 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 376 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 377 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 378 isequalTo: True
6test 379 isequalTo: True
6test 380 latlon2: 52.20472, 0.14056
6test 381 latlon2: 52.2047, 0.1406
6test 382 latlon2: 52.205, 0.141
6test 383 latlon2: 52.2, 0.14
6test 384 latlon2: 52.2, 0.1
6test 385 latlon2: 52.0, 0.0
6test 386 chordTo: 12029263.15
6test 387 chordTo: 12029049.69
6test 388 copy: True
6test 389 __eq__: True
6test 390 __ne__: False
6test 391 equirectangularTo: 404329.56
6test 392 distanceTo: 404279.720589
6test 393 distanceTo: 404279.720589
6test 394 distanceTo: 3972863
6test 395 distanceTo: 18013602.92
6test 396 distanceTo: 20015114.35  FAILED, KNOWN, expected 20003931.46
6test 397 intermediateTo: 51.372294°N, 000.707192°E
6test 398 intermediateTo: True
6test 399 intermediateTo: 404279.721
6test 400 intermediateTo+5: 35.560239°N, 008.833512°E
6test 401 intermediateTo+5: 4.885
6test 402 intermediateTo-4: 64.570387°N, 013.156352°W
6test 403 intermediateTo-4: 3.885
6test 404 intermediateTo-h: 125.000
6test 405 midpointTo: 50.536327°N, 001.274614°E
6test 406 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 407 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 408 chordTo: 125203.963
6test 409 cosineAndoyerLambertTo: 125205.962
6test 410 cosineAndoyerLambertTo: 125205.962
6test 411 cosineForsyheAndoyerLambertTo: 125205.965
6test 412 cosineForsyheAndoyerLambertTo: 125205.965
6test 413 cosineLawTo: 124801.098
6test 414 cosineLawTo: 124801.098
6test 415 equirectangularTo: 124804.754
6test 416 equirectangularTo: 124804.754
6test 417 euclideanTo: 130015.089
6test 418 euclideanTo: 130015.089
6test 419 flatLocalTo: 125209.633
6test 420 flatLocalTo: 125209.633
6test 421 flatPolarTo: 133663.257
6test 422 flatPolarTo: 133663.257
6test 423 hartzell: 53.3206°N, 001.7297°W
6test 424 hartzell: 53.349541°N, 001.7297°W
6test 425 height4: 1.0413519725444986e-09  FAILED, KNOWN, expected 0.0
6test 426 height4: (3820333.9, -115367.0, 5097204.4, -6584.9)
6test 427 height4: 53°19′14.2″N, 001°43′46.9″W
6test 428 height4: 53°19′14.2″N, 001°43′46.9″W
6test 429 haversineTo: 124801.098
6test 430 haversineTo: 124801.098
6test 431 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 432 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 433 thomasTo: 125206.188
6test 434 thomasTo: 125206.188
6test 435 vincentysTo: 124801.098
6test 436 vincentysTo: 124801.098
6test 437 isclockwise: False
6test 438 isclockwise*: False
6test 439 isclockwise: True
6test 440 isclockwise*: True
6test 441 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 442 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 443 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 444 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 445 isconvex: False
6test 446 isconvex*: False
6test 447 isconvex: True
6test 448 isconvex*: True
6test 449 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 450 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 451 isenclosedBy1: True
6test 452 isenclosedBy1*: True
6test 453 isenclosedBy2: False
6test 454 isenclosedBy2*: False
6test 455 isenclosedBy3: False
6test 456 isenclosedBy3*: False
6test 457 isenclosedBy4: False
6test 458 isenclosedBy4*: False
6test 459 isenclosedBy5: False
6test 460 isenclosedBy5*: False
6test 461 isenclosedBy6: True
6test 462 isenclosedBy6*: True
6test 463 isenclosedBy7: True
6test 464 isenclosedBy7*: True
6test 465 compassAngleTo: 100.017
6test 466 compassAngleTo: 105.599
6test 467 compassAngleTo: 280.017
6test 468 compassAngleTo: 285.599
6test 469 equirectangularTo: 592.185
6test 470 distanceTo: 591.831
6test 471 compassAngleTo: 0.0
6test 472 compassAngleTo: 45.0
6test 473 compassAngleTo: 90.0
6test 474 compassAngleTo: 180.0
6test 475 compassAngleTo: 225.0
6test 476 compassAngleTo: 315.0
6test 477 compassAngleTo: 270.0
6test 478 compassAngleTo: 359.4
6test 479 latlon2: (53.0, 1.0)
6test 480 philam2: (0.93, 0.02)
6test 481 compassAngleTo: 31
6test 482 compassAngleTo: 45

6test 483 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 484 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 485 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 486 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 487 isequalTo: <class 'bool'>
6test 488 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 489 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 490 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 491 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 492 compassAngleTo: <class 'float'>
6test 493 cosineLawTo: <class 'float'>
6test 494 euclideanTo: <class 'float'>
6test 495 flatLocalTo: <class 'float'>
6test 496 flatPolarTo: <class 'float'>
6test 497 haversineTo: <class 'float'>
6test 498 hubenyTo: <class 'float'>
6test 499 vincentysTo: <class 'float'>
6test 500 toVector: (0.615661, 0.0, 0.788011)
6test 501 toVector3d: (0.61566, 0.0, 0.78801)
6test 502 trilaterate5 (pygeodesy.ellipsoidalNvector) .min: 223.305
6test 503 trilaterate5 (pygeodesy.ellipsoidalNvector) .point: 42.67456065°N, 002.49539502°E
6test 504 trilaterate5 (pygeodesy.ellipsoidalNvector) .min- is .maxPoint: True
6test 505 trilaterate5 (pygeodesy.ellipsoidalNvector) .n: 1
6test 506 trilaterate5 (pygeodesy.ellipsoidalNvector) .error: ellipsoidalNvector.LatLon.trilaterate5(area=True, wrap=False), MRO(nvectorBase.LatLonNvectorBase, ellipsoidalBase.LatLonEllipsoidalBase, latlonBase.LatLonBase, named._NamedBase, named._Named): not implemented
6test 507 radii11: Radii11Tuple(rA=7705.84217, rB=1367.057272, rC=498.160185, cR=4897.488519, rIn=740.470746, riS=179.544791, roS=5964.029657, a=1865.217457, b=8204.002354, c=9072.899442, s=9571.059626)
622 tests skipped (93): No module named 'numpy': required by vector2d._numpy
6testLatLon(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 508 isEllipsoidal: True
6test 509 isSpherical: False
6test 510 lat/lonDMS: 52.20472°N, 000.14056°E
6test 511 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 512 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 513 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 514 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 515 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 516 isequalTo: True
6test 517 isequalTo: True
6test 518 latlon2: 52.20472, 0.14056
6test 519 latlon2: 52.2047, 0.1406
6test 520 latlon2: 52.205, 0.141
6test 521 latlon2: 52.2, 0.14
6test 522 latlon2: 52.2, 0.1
6test 523 latlon2: 52.0, 0.0
6test 524 chordTo: 12029263.15
6test 525 chordTo: 12029049.69
6test 526 initialBearingTo: 156.1106
6test 527 initialBearingTo: 65.9335
6test 528 initialBearingTo: 0.0
6test 529 initialBearingTo: 180.0
6test 530 finalBearingTo: 157.8345
6test 531 finalBearingTo: 93.9034
6test 532 bearingTo2: 156.1106, 157.8345
6test 533 ispolar: True
6test 534 copy: True
6test 535 __eq__: True
6test 536 __ne__: False
6test 537 equirectangularTo: 404329.56
6test 538 distanceTo: 404607.805988
6test 539 distanceTo: 404607.805988
6test 540 distanceTo: 3981601
6test 541 antipodal: False
6test 542 distanceTo dateline: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 543 distanceTo unrolled: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 544 antipodal: False
6test 545 distanceTo dateline: 9513998
6test 546 distanceTo unrolled: 9513998
6test 547 distanceTo: 18012714.66
6test 548 distanceTo: ambiguous: LatLon(00°00′00.0″N, 000°00′00.0″E) antipodal to LatLon(00°00′00.0″N, 180°00′00.0″E)  FAILED, KNOWN, expected ambiguous, antipodal ...
6test 549 distanceTo3 dateline: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 550 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 551 distanceTo3 dateline: no convergence (2.01617e-12): epsilon (1e-12) and iterations (100), LatLon(41°19′12.0″S, 174°48′36.0″E) to LatLon(40°57′36.0″N, 005°30′00.0″W)  FAILED, KNOWN, expected no convergence ...
6test 552 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 553 intermediateTo: 51.372275°N, 000.707253°E
6test 554 intermediateTo: True
6test 555 intermediateTo: 404607.806
6test 556 intermediateTo+5: 35.139582°N, 008.994368°E
6test 557 intermediateTo+5: 5.000
6test 558 intermediateTo-4: 64.894124°N, 013.705689°W
6test 559 intermediateTo-4: 4.000
6test 560 intermediateTo-h: 125.000
6test 561 midpointTo: 50.536583°N, 001.274507°E
6test 562 destination: 51.513526°N, 000.098038°W
6test 563 destination: 51°30′49″N, 000°05′53″W
6test 564 destination: 33°57′N, 118°24′W
6test 565 destination: 33.950367°N, 118.399012°W
6test 566 destination: 0.592546N, 2.066453W
6test 567 destination: 32.11195529°N, 064.56074722°E  FAILED, KNOWN, expected 32.11195529°N, 063.95925278°E
6test 568 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 569 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 570 chordTo: 125203.963
6test 571 cosineAndoyerLambertTo: 125205.962
6test 572 cosineAndoyerLambertTo: 125205.962
6test 573 cosineForsyheAndoyerLambertTo: 125205.965
6test 574 cosineForsyheAndoyerLambertTo: 125205.965
6test 575 cosineLawTo: 124801.098
6test 576 cosineLawTo: 124801.098
6test 577 equirectangularTo: 124804.754
6test 578 equirectangularTo: 124804.754
6test 579 euclideanTo: 130015.089
6test 580 euclideanTo: 130015.089
6test 581 flatLocalTo: 125209.633
6test 582 flatLocalTo: 125209.633
6test 583 flatPolarTo: 133663.257
6test 584 flatPolarTo: 133663.257
6test 585 hartzell: 53.3206°N, 001.7297°W
6test 586 hartzell: 53.349541°N, 001.7297°W
6test 587 height4: 1.0413519725444986e-09  FAILED, KNOWN, expected 0.0
6test 588 height4: (3820333.9, -115367.0, 5097204.4, -6584.9)
6test 589 height4: 53°19′14.2″N, 001°43′46.9″W
6test 590 height4: 53°19′14.2″N, 001°43′46.9″W
6test 591 haversineTo: 124801.098
6test 592 haversineTo: 124801.098
6test 593 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 594 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 595 thomasTo: 125206.188
6test 596 thomasTo: 125206.188
6test 597 vincentysTo: 124801.098
6test 598 vincentysTo: 124801.098
6test 599 isclockwise: False
6test 600 isclockwise*: False
6test 601 isclockwise: True
6test 602 isclockwise*: True
6test 603 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 604 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 605 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 606 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 607 isconvex: False
6test 608 isconvex*: False
6test 609 isconvex: True
6test 610 isconvex*: True
6test 611 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 612 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 613 isenclosedBy1: True
6test 614 isenclosedBy1*: True
6test 615 isenclosedBy2: False
6test 616 isenclosedBy2*: False
6test 617 isenclosedBy3: False
6test 618 isenclosedBy3*: False
6test 619 isenclosedBy4: False
6test 620 isenclosedBy4*: False
6test 621 isenclosedBy5: False
6test 622 isenclosedBy5*: False
6test 623 isenclosedBy6: True
6test 624 isenclosedBy6*: True
6test 625 isenclosedBy7: True
6test 626 isenclosedBy7*: True
6test 627 initialBearingTo: 102.392291
6test 628 compassAngleTo: 100.017
6test 629 compassAngleTo: 105.599
6test 630 initialBearingTo: 288.676039
6test 631 compassAngleTo: 280.017
6test 632 compassAngleTo: 285.599
6test 633 equirectangularTo: 592.185
6test 634 distanceTo: 593.571
6test 635 bearingTo: 0.0
6test 636 compassAngleTo: 0.0
6test 637 bearingTo: 45.2  FAILED, KNOWN, expected 45.0
6test 638 compassAngleTo: 45.0
6test 639 bearingTo: 90.0
6test 640 compassAngleTo: 90.0
6test 641 bearingTo: 180.0
6test 642 compassAngleTo: 180.0
6test 643 bearingTo: 225.2  FAILED, KNOWN, expected 225.0
6test 644 compassAngleTo: 225.0
6test 645 bearingTo: 314.8  FAILED, KNOWN, expected 315.0
6test 646 compassAngleTo: 315.0
6test 647 bearingTo: 270.0
6test 648 compassAngleTo: 270.0
6test 649 bearingTo: 360.0  FAILED, KNOWN, expected 359.4
6test 650 compassAngleTo: 359.4
6test 651 latlon2: (53.0, 1.0)
6test 652 philam2: (0.93, 0.02)
6test 653 bearingTo: 31
6test 654 compassAngleTo: 31
6test 655 compassAngleTo: 45

6test 656 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 657 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 658 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 659 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 660 isequalTo: <class 'bool'>
6test 661 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 662 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 663 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 664 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 665 compassAngleTo: <class 'float'>
6test 666 cosineLawTo: <class 'float'>
6test 667 euclideanTo: <class 'float'>
6test 668 flatLocalTo: <class 'float'>
6test 669 flatPolarTo: <class 'float'>
6test 670 haversineTo: <class 'float'>
6test 671 hubenyTo: <class 'float'>
6test 672 vincentysTo: <class 'float'>
6test 673 toNvector: (0.615661, 0.0, 0.788011)
6test 674 toVector: (0.615661, 0.0, 0.788011)
6test 675 toVector3d: (0.61566, 0.0, 0.78801)
6test 676 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 305.091  FAILED, KNOWN, expected 311.234
6test 677 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.66933643°N, 002.48620262°E  FAILED, KNOWN, expected 42.66938776°N, 002.48641176°E
6test 678 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 1592.545  FAILED, KNOWN, expected 1586.951
6test 679 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.65141232°N, 002.46816989°E  FAILED, KNOWN, expected 42.65153156°N, 002.46821899°E
6test 680 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 3
6test 681 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 127.229  FAILED, KNOWN, expected 137.897
6test 682 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 152.612  FAILED, KNOWN, expected 148.175
6test 683 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 684 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 2
6test 685 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 2400.293  FAILED, KNOWN, expected 2399.908
6test 686 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 2400.293  FAILED, KNOWN, expected 2399.908
6test 687 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.66128984°N, 002.47973818°E  FAILED, KNOWN, expected 42.6613586°N, 002.47981223°E
6test 688 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min- is .maxPoint: True
6test 689 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 1
6test 690 trilaterate5 (pygeodesy.ellipsoidalVincenty) .min: 1343.743  FAILED, KNOWN, expected 1332.749
6test 691 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.69131964°N, 002.50112167°E  FAILED, KNOWN, expected 42.69124153°N, 002.50124031°E
6test 692 trilaterate5 (pygeodesy.ellipsoidalVincenty) .max: 1445.554  FAILED, KNOWN, expected 1450.709
6test 693 trilaterate5 (pygeodesy.ellipsoidalVincenty) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 694 trilaterate5 (pygeodesy.ellipsoidalVincenty) .n: 2
6test 695 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
627 tests skipped (120): No module named 'numpy': required by vector2d._numpy
6test 696 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
622 tests skipped (142): No module named 'numpy': required by vector2d._numpy
6test 697 area cw/ccw: 1.0
6testLatLon(pygeodesy.ellipsoidalExact, 22.07.07)
6test 698 isEllipsoidal: True
6test 699 isSpherical: False
6test 700 lat/lonDMS: 52.20472°N, 000.14056°E
6test 701 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 702 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 703 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 704 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 705 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 706 isequalTo: True
6test 707 isequalTo: True
6test 708 latlon2: 52.20472, 0.14056
6test 709 latlon2: 52.2047, 0.1406
6test 710 latlon2: 52.205, 0.141
6test 711 latlon2: 52.2, 0.14
6test 712 latlon2: 52.2, 0.1
6test 713 latlon2: 52.0, 0.0
6test 714 chordTo: 12029263.15
6test 715 chordTo: 12029049.69
6test 716 initialBearingTo: 156.1106
6test 717 initialBearingTo: 65.9335
6test 718 initialBearingTo: 0.0
6test 719 initialBearingTo: 180.0
6test 720 finalBearingTo: 157.8345
6test 721 finalBearingTo: 93.9034
6test 722 bearingTo2: 156.1106, 157.8345
6test 723 ispolar: True
6test 724 copy: True
6test 725 __eq__: True
6test 726 __ne__: False
6test 727 equirectangularTo: 404329.56
6test 728 distanceTo: 404607.805988
6test 729 distanceTo: 404607.805988
6test 730 distanceTo: 3981601
6test 731 antipodal: False
6test 732 distanceTo dateline: 19959679.267
6test 733 distanceTo unrolled: 19959679.267
6test 734 antipodal: False
6test 735 distanceTo dateline: 9513998
6test 736 distanceTo unrolled: 9513998
6test 737 distanceTo: 18003740.39
6test 738 distanceTo: 0.00  FAILED, KNOWN, expected 20003931.46
6test 739 distanceTo3 dateline: 19959679.2674, 161.0677, 18.8252
6test 740 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 741 distanceTo3 dateline: 19959679.2674, 161.0677, 18.8252
6test 742 distanceTo3 dateline: 9513997.9901, 42.9164, 138.8903
6test 743 intermediateTo: 51.372275°N, 000.707253°E
6test 744 intermediateTo: True
6test 745 intermediateTo: 404607.806
6test 746 intermediateTo+5: 35.139582°N, 008.994368°E
6test 747 intermediateTo+5: 5.000
6test 748 intermediateTo-4: 64.894124°N, 013.705689°W
6test 749 intermediateTo-4: 4.000
6test 750 intermediateTo-h: 125.000
6test 751 midpointTo: 50.536583°N, 001.274507°E
6test 752 destination: 51.513526°N, 000.098038°W
6test 753 destination: 51°30′49″N, 000°05′53″W
6test 754 destination: 33°57′N, 118°24′W
6test 755 destination: 33.950367°N, 118.399012°W
6test 756 destination: 0.592546N, 2.066453W
6test 757 destination: 32.11195529°N, 064.56074722°E  FAILED, KNOWN, expected 32.11195529°N, 063.95925278°E
6test 758 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 759 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 760 chordTo: 125203.963
6test 761 cosineAndoyerLambertTo: 125205.962
6test 762 cosineAndoyerLambertTo: 125205.962
6test 763 cosineForsyheAndoyerLambertTo: 125205.965
6test 764 cosineForsyheAndoyerLambertTo: 125205.965
6test 765 cosineLawTo: 124801.098
6test 766 cosineLawTo: 124801.098
6test 767 equirectangularTo: 124804.754
6test 768 equirectangularTo: 124804.754
6test 769 euclideanTo: 130015.089
6test 770 euclideanTo: 130015.089
6test 771 flatLocalTo: 125209.633
6test 772 flatLocalTo: 125209.633
6test 773 flatPolarTo: 133663.257
6test 774 flatPolarTo: 133663.257
6test 775 hartzell: 53.3206°N, 001.7297°W
6test 776 hartzell: 53.349541°N, 001.7297°W
6test 777 height4: 1.0413519725444986e-09  FAILED, KNOWN, expected 0.0
6test 778 height4: (3820333.9, -115367.0, 5097204.4, -6584.9)
6test 779 height4: 53°19′14.2″N, 001°43′46.9″W
6test 780 height4: 53°19′14.2″N, 001°43′46.9″W
6test 781 haversineTo: 124801.098
6test 782 haversineTo: 124801.098
6test 783 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 784 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 785 thomasTo: 125206.188
6test 786 thomasTo: 125206.188
6test 787 vincentysTo: 124801.098
6test 788 vincentysTo: 124801.098
6test 789 isclockwise: False
6test 790 isclockwise*: False
6test 791 isclockwise: True
6test 792 isclockwise*: True
6test 793 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 794 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 795 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 796 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 797 isconvex: False
6test 798 isconvex*: False
6test 799 isconvex: True
6test 800 isconvex*: True
6test 801 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 802 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 803 isenclosedBy1: True
6test 804 isenclosedBy1*: True
6test 805 isenclosedBy2: False
6test 806 isenclosedBy2*: False
6test 807 isenclosedBy3: False
6test 808 isenclosedBy3*: False
6test 809 isenclosedBy4: False
6test 810 isenclosedBy4*: False
6test 811 isenclosedBy5: False
6test 812 isenclosedBy5*: False
6test 813 isenclosedBy6: True
6test 814 isenclosedBy6*: True
6test 815 isenclosedBy7: True
6test 816 isenclosedBy7*: True
6test 817 initialBearingTo: 102.392291
6test 818 compassAngleTo: 100.017
6test 819 compassAngleTo: 105.599
6test 820 initialBearingTo: 288.676039
6test 821 compassAngleTo: 280.017
6test 822 compassAngleTo: 285.599
6test 823 equirectangularTo: 592.185
6test 824 distanceTo: 593.571
6test 825 bearingTo: 0.0
6test 826 compassAngleTo: 0.0
6test 827 bearingTo: 45.2  FAILED, KNOWN, expected 45.0
6test 828 compassAngleTo: 45.0
6test 829 bearingTo: 90.0
6test 830 compassAngleTo: 90.0
6test 831 bearingTo: 180.0
6test 832 compassAngleTo: 180.0
6test 833 bearingTo: 225.2  FAILED, KNOWN, expected 225.0
6test 834 compassAngleTo: 225.0
6test 835 bearingTo: 314.8  FAILED, KNOWN, expected 315.0
6test 836 compassAngleTo: 315.0
6test 837 bearingTo: 270.0
6test 838 compassAngleTo: 270.0
6test 839 bearingTo: 0.0  FAILED, KNOWN, expected 359.4
6test 840 compassAngleTo: 359.4
6test 841 latlon2: (53.0, 1.0)
6test 842 philam2: (0.93, 0.02)
6test 843 bearingTo: 31
6test 844 compassAngleTo: 31
6test 845 compassAngleTo: 45

6test 846 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 847 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 848 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 849 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 850 isequalTo: <class 'bool'>
6test 851 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 852 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 853 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 854 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 855 compassAngleTo: <class 'float'>
6test 856 cosineLawTo: <class 'float'>
6test 857 euclideanTo: <class 'float'>
6test 858 flatLocalTo: <class 'float'>
6test 859 flatPolarTo: <class 'float'>
6test 860 haversineTo: <class 'float'>
6test 861 hubenyTo: <class 'float'>
6test 862 vincentysTo: <class 'float'>
6test 863 toNvector: (0.615661, 0.0, 0.788011)
6test 864 toVector: (0.615661, 0.0, 0.788011)
6test 865 toVector3d: (0.61566, 0.0, 0.78801)
6test 866 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 305.091  FAILED, KNOWN, expected 311.234
6test 867 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.66933643°N, 002.48620262°E  FAILED, KNOWN, expected 42.66938776°N, 002.48641176°E
6test 868 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 1592.545  FAILED, KNOWN, expected 1586.951
6test 869 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.65141232°N, 002.46816989°E  FAILED, KNOWN, expected 42.65153156°N, 002.46821899°E
6test 870 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 3
6test 871 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 127.229  FAILED, KNOWN, expected 137.897
6test 872 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 152.612  FAILED, KNOWN, expected 148.175
6test 873 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 874 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 2
6test 875 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 2400.293  FAILED, KNOWN, expected 2399.908
6test 876 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 2400.293  FAILED, KNOWN, expected 2399.908
6test 877 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.66128984°N, 002.47973818°E  FAILED, KNOWN, expected 42.6613586°N, 002.47981223°E
6test 878 trilaterate5 (pygeodesy.ellipsoidalExact) .min- is .maxPoint: True
6test 879 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 1
6test 880 trilaterate5 (pygeodesy.ellipsoidalExact) .min: 1343.743  FAILED, KNOWN, expected 1332.749
6test 881 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.69131964°N, 002.50112167°E  FAILED, KNOWN, expected 42.69124153°N, 002.50124031°E
6test 882 trilaterate5 (pygeodesy.ellipsoidalExact) .max: 1445.554  FAILED, KNOWN, expected 1450.709
6test 883 trilaterate5 (pygeodesy.ellipsoidalExact) .point: 42.67815375°N, 002.49950041°E  FAILED, KNOWN, expected 42.67811504°N, 002.49959193°E
6test 884 trilaterate5 (pygeodesy.ellipsoidalExact) .n: 2
6test 885 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
627 tests skipped (169): No module named 'numpy': required by vector2d._numpy
6test 886 radii11: Radii11Tuple(rA=7244.792747, rB=1828.106695, rC=2.25502, cR=57792.067128, rIn=57.366968, riS=2.087668, roS=2.443334, a=1830.361715, b=7247.047766, c=9072.899442, s=9075.154461)
622 tests skipped (191): No module named 'numpy': required by vector2d._numpy
6test 887 area cw/ccw: 1.0
691 of 887 testLatLon.py tests (10.3%) FAILED, incl. 89 KNOWN plus 2 DeprecationWarnings, 191 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 5.438 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testLatLonBase.py
6testing testLatLonBase.py 22.09.21
6testLatLon(pygeodesy.sphericalNvector, 23.01.18)
6test 1 lat, lon: 50.06632°N, 005.71475°W
6test 2 lat, lon: 50.066389°N, 005.714722°W
6test 3 isequalTo: True
6test 4 isequalTo3: True
6test 5 latlon: (52.205, 0.119)
6test 6 latlonheight: (52.205, 0.119, 0)
6test 7 phimlam: (0.911149, 0.002077)
6test 8 phimlamheight: (0.911149, 0.002077, 0)
6test 9 isequalTo: False
6test 10 antipode1: 52.205°S, 179.881°W
6test 11 antipode2: True
6test 12 antipode3: 52.205°N, 000.119°E
6test 13 antipode4: True
6test 14 antipode5: 52.205°N, 000.119°E
6test 15 isnormal1: True
6test 16 isnormal2: False
6test 17 normal1: False
6test 18 normal2: True
6test 19 toStr: 51°28′40″N, 000°00′06″W
6test 20 toStr: 51.4778°N, 000.0016°W
6test 21 precision: 0
6test 22 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 23 isequalTo: True
6test 24 isequalTo3: False
6test 25 latlon: (51.4778, -0.0016)
6test 26 phimlam: (0.898457, -0.000028)
6test 27 isequalTo: True
6test 28 isequalTo3: True
6test 29 latlon: (51.4778, -0.0016)
6test 30 latlonheight: (51.4778, -0.0016, 42.0)
6test 31 phimlam: (0.898457, -0.000028)
6test 32 phimlamheight: (0.898457, -0.000028, 42.0)
6test 33 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 34 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 35 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 36 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 37 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb...., Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
6test 38 rhumbLine: TMorder=6, azi12=105.484906, exact=False, lat1=51.4778, lon1=-0.0016, rhumb...., Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
6test 39 rhumbAzimuthTo: 107.563
6test 40 rhumbDestination: 50.964155°N, 001.853°E
6test 41 rhumbDestination: True
6test 42 rhumbDistanceTo: 42186.1
6test 43 rhumbMidpointo-0.5: 51.069759°N, 001.625988°E
6test 44 rhumbMidpointo: True
6test 45 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 46 rhumbMidpointo-0.25: 51.09838°N, 001.482038°E
6test 47 rhumbMidpointo-0.75: 51.041139°N, 001.769848°E
6test 48 rhumbMidpointo-1.0: 51.012519°N, 001.913619°E
6test 49 rhumbMidpointo-2.0: 50.898038°N, 002.48782°E
6testLatLon(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 50 lat, lon: 50.06632°N, 005.71475°W
6test 51 lat, lon: 50.066389°N, 005.714722°W
6test 52 isequalTo: True
6test 53 isequalTo3: True
6test 54 latlon: (52.205, 0.119)
6test 55 latlonheight: (52.205, 0.119, 0)
6test 56 phimlam: (0.911149, 0.002077)
6test 57 phimlamheight: (0.911149, 0.002077, 0)
6test 58 isequalTo: False
6test 59 antipode1: 52.205°S, 179.881°W
6test 60 antipode2: True
6test 61 antipode3: 52.205°N, 000.119°E
6test 62 antipode4: True
6test 63 antipode5: 52.205°N, 000.119°E
6test 64 isnormal1: True
6test 65 isnormal2: False
6test 66 normal1: False
6test 67 normal2: True
6test 68 toStr: 51°28′40″N, 000°00′06″W
6test 69 toStr: 51.4778°N, 000.0016°W
6test 70 precision: 0
6test 71 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 72 isequalTo: True
6test 73 isequalTo3: False
6test 74 latlon: (51.4778, -0.0016)
6test 75 phimlam: (0.898457, -0.000028)
6test 76 isequalTo: True
6test 77 isequalTo3: True
6test 78 latlon: (51.4778, -0.0016)
6test 79 latlonheight: (51.4778, -0.0016, 42.0)
6test 80 phimlam: (0.898457, -0.000028)
6test 81 phimlamheight: (0.898457, -0.000028, 42.0)
6test 82 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 83 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 84 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 85 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 86 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb...., Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
6test 87 rhumbLine: TMorder=6, azi12=105.484906, exact=False, lat1=51.4778, lon1=-0.0016, rhumb...., Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
6test 88 rhumbAzimuthTo: 107.563
6test 89 rhumbDestination: 50.964155°N, 001.853°E
6test 90 rhumbDestination: True
6test 91 rhumbDistanceTo: 42186.1
6test 92 rhumbMidpointo-0.5: 51.069759°N, 001.625988°E
6test 93 rhumbMidpointo: True
6test 94 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 95 rhumbMidpointo-0.25: 51.09838°N, 001.482038°E
6test 96 rhumbMidpointo-0.75: 51.041139°N, 001.769848°E
6test 97 rhumbMidpointo-1.0: 51.012519°N, 001.913619°E
6test 98 rhumbMidpointo-2.0: 50.898038°N, 002.48782°E
6testLatLon(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 99 lat, lon: 50.06632°N, 005.71475°W
6test 100 lat, lon: 50.066389°N, 005.714722°W
6test 101 isequalTo: True
6test 102 isequalTo3: True
6test 103 latlon: (52.205, 0.119)
6test 104 latlonheight: (52.205, 0.119, 0)
6test 105 phimlam: (0.911149, 0.002077)
6test 106 phimlamheight: (0.911149, 0.002077, 0)
6test 107 isequalTo: False
6test 108 antipode1: 52.205°S, 179.881°W
6test 109 antipode2: True
6test 110 antipode3: 52.205°N, 000.119°E
6test 111 antipode4: True
6test 112 antipode5: 52.205°N, 000.119°E
6test 113 isnormal1: True
6test 114 isnormal2: False
6test 115 normal1: False
6test 116 normal2: True
6test 117 toStr: 51°28′40″N, 000°00′06″W
6test 118 toStr: 51.4778°N, 000.0016°W
6test 119 precision: 0
6test 120 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 121 isequalTo: True
6test 122 isequalTo3: False
6test 123 latlon: (51.4778, -0.0016)
6test 124 phimlam: (0.898457, -0.000028)
6test 125 isequalTo: True
6test 126 isequalTo3: True
6test 127 latlon: (51.4778, -0.0016)
6test 128 latlonheight: (51.4778, -0.0016, 42.0)
6test 129 phimlam: (0.898457, -0.000028)
6test 130 phimlamheight: (0.898457, -0.000028, 42.0)
6test 131 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 132 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 133 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 134 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 135 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 136 rhumbLine: TMorder=6, azi12=113.805696, exact=False, lat1=51.4778, lon1=-0.0016, rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 137 rhumbAzimuthTo: 116.661
6test 138 rhumbDestination: 50.964234°N, 001.851383°E
6test 139 rhumbDestination: True
6test 140 rhumbDistanceTo: 40413.1
6test 141 rhumbMidpointo-0.5: 51.045501°N, 001.595726°E
6test 142 rhumbMidpointo: True
6test 143 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 144 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 145 rhumbMidpointo-0.75: 51.00475°N, 001.724419°E
6test 146 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 147 rhumbMidpointo-2.0: 50.800995°N, 002.366201°E
6testLatLon(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 148 lat, lon: 50.06632°N, 005.71475°W
6test 149 lat, lon: 50.066389°N, 005.714722°W
6test 150 isequalTo: True
6test 151 isequalTo3: True
6test 152 latlon: (52.205, 0.119)
6test 153 latlonheight: (52.205, 0.119, 0)
6test 154 phimlam: (0.911149, 0.002077)
6test 155 phimlamheight: (0.911149, 0.002077, 0)
6test 156 isequalTo: False
6test 157 antipode1: 52.205°S, 179.881°W
6test 158 antipode2: True
6test 159 antipode3: 52.205°N, 000.119°E
6test 160 antipode4: True
6test 161 antipode5: 52.205°N, 000.119°E
6test 162 isnormal1: True
6test 163 isnormal2: False
6test 164 normal1: False
6test 165 normal2: True
6test 166 toStr: 51°28′40″N, 000°00′06″W
6test 167 toStr: 51.4778°N, 000.0016°W
6test 168 precision: 0
6test 169 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 170 isequalTo: True
6test 171 isequalTo3: False
6test 172 latlon: (51.4778, -0.0016)
6test 173 phimlam: (0.898457, -0.000028)
6test 174 isequalTo: True
6test 175 isequalTo3: True
6test 176 latlon: (51.4778, -0.0016)
6test 177 latlonheight: (51.4778, -0.0016, 42.0)
6test 178 phimlam: (0.898457, -0.000028)
6test 179 phimlamheight: (0.898457, -0.000028, 42.0)
6test 180 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 181 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 182 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 183 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 184 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 185 rhumbLine: TMorder=6, azi12=113.805696, exact=False, lat1=51.4778, lon1=-0.0016, rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 186 rhumbAzimuthTo: 116.661
6test 187 rhumbDestination: 50.964234°N, 001.851383°E
6test 188 rhumbDestination: True
6test 189 rhumbDistanceTo: 40413.1
6test 190 rhumbMidpointo-0.5: 51.045501°N, 001.595726°E
6test 191 rhumbMidpointo: True
6test 192 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 193 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 194 rhumbMidpointo-0.75: 51.00475°N, 001.724419°E
6test 195 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 196 rhumbMidpointo-2.0: 50.800995°N, 002.366201°E
6testLatLon(pygeodesy.ellipsoidalKarney, 22.07.07)
6test 197 lat, lon: 50.06632°N, 005.71475°W
6test 198 lat, lon: 50.066389°N, 005.714722°W
6test 199 isequalTo: True
6test 200 isequalTo3: True
6test 201 latlon: (52.205, 0.119)
6test 202 latlonheight: (52.205, 0.119, 0)
6test 203 phimlam: (0.911149, 0.002077)
6test 204 phimlamheight: (0.911149, 0.002077, 0)
6test 205 isequalTo: False
6test 206 antipode1: 52.205°S, 179.881°W
6test 207 antipode2: True
6test 208 antipode3: 52.205°N, 000.119°E
6test 209 antipode4: True
6test 210 antipode5: 52.205°N, 000.119°E
6test 211 isnormal1: True
6test 212 isnormal2: False
6test 213 normal1: False
6test 214 normal2: True
6test 215 toStr: 51°28′40″N, 000°00′06″W
6test 216 toStr: 51.4778°N, 000.0016°W
6test 217 precision: 0
6test 218 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 219 isequalTo: True
6test 220 isequalTo3: False
6test 221 latlon: (51.4778, -0.0016)
6test 222 phimlam: (0.898457, -0.000028)
6test 223 isequalTo: True
6test 224 isequalTo3: True
6test 225 latlon: (51.4778, -0.0016)
6test 226 latlonheight: (51.4778, -0.0016, 42.0)
6test 227 phimlam: (0.898457, -0.000028)
6test 228 phimlamheight: (0.898457, -0.000028, 42.0)
6test 229 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 230 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 231 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 232 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 233 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 234 rhumbLine: TMorder=6, azi12=113.805696, exact=False, lat1=51.4778, lon1=-0.0016, rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 235 rhumbAzimuthTo: 116.661
6test 236 rhumbDestination: 50.964234°N, 001.851383°E
6test 237 rhumbDestination: True
6test 238 rhumbDistanceTo: 40413.1
6test 239 rhumbMidpointo-0.5: 51.045501°N, 001.595726°E
6test 240 rhumbMidpointo: True
6test 241 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 242 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 243 rhumbMidpointo-0.75: 51.00475°N, 001.724419°E
6test 244 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 245 rhumbMidpointo-2.0: 50.800995°N, 002.366201°E
6testLatLon(pygeodesy.ellipsoidalExact, 22.07.07)
6test 246 lat, lon: 50.06632°N, 005.71475°W
6test 247 lat, lon: 50.066389°N, 005.714722°W
6test 248 isequalTo: True
6test 249 isequalTo3: True
6test 250 latlon: (52.205, 0.119)
6test 251 latlonheight: (52.205, 0.119, 0)
6test 252 phimlam: (0.911149, 0.002077)
6test 253 phimlamheight: (0.911149, 0.002077, 0)
6test 254 isequalTo: False
6test 255 antipode1: 52.205°S, 179.881°W
6test 256 antipode2: True
6test 257 antipode3: 52.205°N, 000.119°E
6test 258 antipode4: True
6test 259 antipode5: 52.205°N, 000.119°E
6test 260 isnormal1: True
6test 261 isnormal2: False
6test 262 normal1: False
6test 263 normal2: True
6test 264 toStr: 51°28′40″N, 000°00′06″W
6test 265 toStr: 51.4778°N, 000.0016°W
6test 266 precision: 0
6test 267 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 268 isequalTo: True
6test 269 isequalTo3: False
6test 270 latlon: (51.4778, -0.0016)
6test 271 phimlam: (0.898457, -0.000028)
6test 272 isequalTo: True
6test 273 isequalTo3: True
6test 274 latlon: (51.4778, -0.0016)
6test 275 latlonheight: (51.4778, -0.0016, 42.0)
6test 276 phimlam: (0.898457, -0.000028)
6test 277 phimlamheight: (0.898457, -0.000028, 42.0)
6test 278 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 279 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 280 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 281 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 282 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 283 rhumbLine: TMorder=6, azi12=113.805696, exact=False, lat1=51.4778, lon1=-0.0016, rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 284 rhumbAzimuthTo: 116.661
6test 285 rhumbDestination: 50.964234°N, 001.851383°E
6test 286 rhumbDestination: True
6test 287 rhumbDistanceTo: 40413.1
6test 288 rhumbMidpointo-0.5: 51.045501°N, 001.595726°E
6test 289 rhumbMidpointo: True
6test 290 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 291 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 292 rhumbMidpointo-0.75: 51.00475°N, 001.724419°E
6test 293 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 294 rhumbMidpointo-2.0: 50.800995°N, 002.366201°E
6testLatLonEllipsoidalBase(pygeodesy.ellipsoidalBase, 22.10.04)
6test 295 lat, lon: 50.06632°N, 005.71475°W
6test 296 lat, lon: 50.066389°N, 005.714722°W
6test 297 isequalTo: True
6test 298 isequalTo3: True
6test 299 latlon: (52.205, 0.119)
6test 300 latlonheight: (52.205, 0.119, 0)
6test 301 phimlam: (0.911149, 0.002077)
6test 302 phimlamheight: (0.911149, 0.002077, 0)
6test 303 isequalTo: False
6test 304 antipode1: 52.205°S, 179.881°W
6test 305 antipode2: True
6test 306 antipode3: 52.205°N, 000.119°E
6test 307 antipode4: True
6test 308 antipode5: 52.205°N, 000.119°E
6test 309 isnormal1: True
6test 310 isnormal2: False
6test 311 normal1: False
6test 312 normal2: True
6test 313 toStr: 51°28′40″N, 000°00′06″W
6test 314 toStr: 51.4778°N, 000.0016°W
6test 315 precision: 0
6test 316 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 317 isequalTo: True
6test 318 isequalTo3: False
6test 319 latlon: (51.4778, -0.0016)
6test 320 phimlam: (0.898457, -0.000028)
6test 321 isequalTo: True
6test 322 isequalTo3: True
6test 323 latlon: (51.4778, -0.0016)
6test 324 latlonheight: (51.4778, -0.0016, 42.0)
6test 325 phimlam: (0.898457, -0.000028)
6test 326 phimlamheight: (0.898457, -0.000028, 42.0)
6test 327 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 328 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 329 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 330 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 331 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 332 rhumbLine: TMorder=6, azi12=113.805696, exact=False, lat1=51.4778, lon1=-0.0016, rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 333 rhumbAzimuthTo: 116.661
6test 334 rhumbDestination: 50.964234°N, 001.851383°E
6test 335 rhumbDestination: True
6test 336 rhumbDistanceTo: 40413.1
6test 337 rhumbMidpointo-0.5: 51.045501°N, 001.595726°E
6test 338 rhumbMidpointo: True
6test 339 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 340 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 341 rhumbMidpointo-0.75: 51.00475°N, 001.724419°E
6test 342 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 343 rhumbMidpointo-2.0: 50.800995°N, 002.366201°E
6testLatLonEllipsoidalBaseDI(pygeodesy.ellipsoidalBaseDI, 22.10.12)
6test 344 lat, lon: 50.06632°N, 005.71475°W
6test 345 lat, lon: 50.066389°N, 005.714722°W
6test 346 isequalTo: True
6test 347 isequalTo3: True
6test 348 latlon: (52.205, 0.119)
6test 349 latlonheight: (52.205, 0.119, 0)
6test 350 phimlam: (0.911149, 0.002077)
6test 351 phimlamheight: (0.911149, 0.002077, 0)
6test 352 isequalTo: False
6test 353 antipode1: 52.205°S, 179.881°W
6test 354 antipode2: True
6test 355 antipode3: 52.205°N, 000.119°E
6test 356 antipode4: True
6test 357 antipode5: 52.205°N, 000.119°E
6test 358 isnormal1: True
6test 359 isnormal2: False
6test 360 normal1: False
6test 361 normal2: True
6test 362 toStr: 51°28′40″N, 000°00′06″W
6test 363 toStr: 51.4778°N, 000.0016°W
6test 364 precision: 0
6test 365 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 366 isequalTo: True
6test 367 isequalTo3: False
6test 368 latlon: (51.4778, -0.0016)
6test 369 phimlam: (0.898457, -0.000028)
6test 370 isequalTo: True
6test 371 isequalTo3: True
6test 372 latlon: (51.4778, -0.0016)
6test 373 latlonheight: (51.4778, -0.0016, 42.0)
6test 374 phimlam: (0.898457, -0.000028)
6test 375 phimlamheight: (0.898457, -0.000028, 42.0)
6test 376 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 377 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 378 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 379 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 380 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 381 rhumbLine: TMorder=6, azi12=113.805696, exact=False, lat1=51.4778, lon1=-0.0016, rhumb....biaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=6)
6test 382 rhumbAzimuthTo: 116.661
6test 383 rhumbDestination: 50.964234°N, 001.851383°E
6test 384 rhumbDestination: True
6test 385 rhumbDistanceTo: 40413.1
6test 386 rhumbMidpointo-0.5: 51.045501°N, 001.595726°E
6test 387 rhumbMidpointo: True
6test 388 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 389 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 390 rhumbMidpointo-0.75: 51.00475°N, 001.724419°E
6test 391 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 392 rhumbMidpointo-2.0: 50.800995°N, 002.366201°E
6testLatLonBase(pygeodesy.latlonBase, 23.03.12)
6test 393 lat, lon: 50.06632°N, 005.71475°W
6test 394 lat, lon: 50.066389°N, 005.714722°W
6test 395 isequalTo: True
6test 396 isequalTo3: True
6test 397 latlon: (52.205, 0.119)
6test 398 latlonheight: (52.205, 0.119, 0)
6test 399 phimlam: (0.911149, 0.002077)
6test 400 phimlamheight: (0.911149, 0.002077, 0)
6test 401 isequalTo: False
6test 402 antipode1: 52.205°S, 179.881°W
6test 403 antipode2: True
6test 404 antipode3: 52.205°N, 000.119°E
6test 405 antipode4: True
6test 406 antipode5: 52.205°N, 000.119°E
6test 407 isnormal1: True
6test 408 isnormal2: False
6test 409 normal1: False
6test 410 normal2: True
6test 411 toStr: 51°28′40″N, 000°00′06″W
6test 412 toStr: 51.4778°N, 000.0016°W
6test 413 precision: 0
6test 414 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 415 isequalTo: True
6test 416 isequalTo3: False
6test 417 latlon: (51.4778, -0.0016)
6test 418 phimlam: (0.898457, -0.000028)
6test 419 isequalTo: True
6test 420 isequalTo3: True
6test 421 latlon: (51.4778, -0.0016)
6test 422 latlonheight: (51.4778, -0.0016, 42.0)
6test 423 phimlam: (0.898457, -0.000028)
6test 424 phimlamheight: (0.898457, -0.000028, 42.0)
6test 425 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 426 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 427 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 428 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6testLatLonNvectorBase(pygeodesy.nvectorBase, 22.10.05)
6test 429 lat, lon: 50.06632°N, 005.71475°W
6test 430 lat, lon: 50.066389°N, 005.714722°W
6test 431 isequalTo: True
6test 432 isequalTo3: True
6test 433 latlon: (52.205, 0.119)
6test 434 latlonheight: (52.205, 0.119, 0)
6test 435 phimlam: (0.911149, 0.002077)
6test 436 phimlamheight: (0.911149, 0.002077, 0)
6test 437 isequalTo: False
6test 438 antipode1: 52.205°S, 179.881°W
6test 439 antipode2: True
6test 440 antipode3: 52.205°N, 000.119°E
6test 441 antipode4: True
6test 442 antipode5: 52.205°N, 000.119°E
6test 443 isnormal1: True
6test 444 isnormal2: False
6test 445 normal1: False
6test 446 normal2: True
6test 447 toStr: 51°28′40″N, 000°00′06″W
6test 448 toStr: 51.4778°N, 000.0016°W
6test 449 precision: 0
6test 450 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 451 isequalTo: True
6test 452 isequalTo3: False
6test 453 latlon: (51.4778, -0.0016)
6test 454 phimlam: (0.898457, -0.000028)
6test 455 isequalTo: True
6test 456 isequalTo3: True
6test 457 latlon: (51.4778, -0.0016)
6test 458 latlonheight: (51.4778, -0.0016, 42.0)
6test 459 phimlam: (0.898457, -0.000028)
6test 460 phimlamheight: (0.898457, -0.000028, 42.0)
6test 461 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 462 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 463 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 464 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6testLatLonSphericalBase(pygeodesy.sphericalBase, 23.01.18)
6test 465 lat, lon: 50.06632°N, 005.71475°W
6test 466 lat, lon: 50.066389°N, 005.714722°W
6test 467 isequalTo: True
6test 468 isequalTo3: True
6test 469 latlon: (52.205, 0.119)
6test 470 latlonheight: (52.205, 0.119, 0)
6test 471 phimlam: (0.911149, 0.002077)
6test 472 phimlamheight: (0.911149, 0.002077, 0)
6test 473 isequalTo: False
6test 474 antipode1: 52.205°S, 179.881°W
6test 475 antipode2: True
6test 476 antipode3: 52.205°N, 000.119°E
6test 477 antipode4: True
6test 478 antipode5: 52.205°N, 000.119°E
6test 479 isnormal1: True
6test 480 isnormal2: False
6test 481 normal1: False
6test 482 normal2: True
6test 483 toStr: 51°28′40″N, 000°00′06″W
6test 484 toStr: 51.4778°N, 000.0016°W
6test 485 precision: 0
6test 486 toStr: 51°28′40″N, 000°00′06″W, +42.00m
6test 487 isequalTo: True
6test 488 isequalTo3: False
6test 489 latlon: (51.4778, -0.0016)
6test 490 phimlam: (0.898457, -0.000028)
6test 491 isequalTo: True
6test 492 isequalTo3: True
6test 493 latlon: (51.4778, -0.0016)
6test 494 latlonheight: (51.4778, -0.0016, 42.0)
6test 495 phimlam: (0.898457, -0.000028)
6test 496 phimlamheight: (0.898457, -0.000028, 42.0)
6test 497 latlon: LatLon2Tuple(lat=51.4778, lon=-0.0016)
6test 498 latlonheight: LatLon3Tuple(lat=51.4778, lon=-0.0016, height=42.0)
6test 499 phimlam: PhiLam2Tuple(phi=0.898457, lam=-0.000028)
6test 500 phimlamheight: PhiLam3Tuple(phi=0.898457, lam=-0.000028, height=42.0)
6test 501 rhumbLine: TMorder=6, azi12=30.0, exact=False, lat1=51.4778, lon1=-0.0016, rhumb=Rhumb...., Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
6test 502 rhumbLine: TMorder=6, azi12=105.484906, exact=False, lat1=51.4778, lon1=-0.0016, rhumb...., Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
6test 503 rhumbAzimuthTo: 107.563
6test 504 rhumbDestination: 50.964155°N, 001.853°E
6test 505 rhumbDestination: True
6test 506 rhumbDistanceTo: 42186.1
6test 507 rhumbMidpointo-0.5: 51.069759°N, 001.625988°E
6test 508 rhumbMidpointo: True
6test 509 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 510 rhumbMidpointo-0.25: 51.09838°N, 001.482038°E
6test 511 rhumbMidpointo-0.75: 51.041139°N, 001.769848°E
6test 512 rhumbMidpointo-1.0: 51.012519°N, 001.913619°E
6test 513 rhumbMidpointo-2.0: 50.898038°N, 002.48782°E
6all 513 testLatLonBase.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 193.606 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testLazily.py
6testing testLazily.py 22.06.27
6test 1 a_b2e: function
6test 2 a_b2e2: function
6test 3 a_b2e22: function
6test 4 a_b2e32: function
6test 5 a_b2f: function
6test 6 a_b2f2: function
6test 7 a_b2f_: function
6test 8 a_b2n: function
6test 9 a_f2b: function
6test 10 a_f2Tuple: class
6test 11 a_f_2b: function
6test 12 acos1: function
6test 13 acre2ha: function
6test 14 acre2m2: function
6test 15 Aer: class
6test 16 Aer4Tuple: class
6test 17 albers: module
6test 18 Albers7Tuple: class
6test 19 AlbersEqualArea: class
6test 20 AlbersEqualArea2: class
6test 21 AlbersEqualArea4: class
6test 22 AlbersEqualAreaCylindrical: class
6test 23 AlbersEqualAreaNorth: class
6test 24 AlbersEqualAreaSouth: class
6test 25 AlbersError: class
6test 26 anStr: function
6test 27 anstr: function
6test 28 antipode: function
6test 29 antipode_: function
6test 30 Area3Tuple: class
6test 31 areaof: function
6test 32 areaOf: function
6test 33 asin1: function
6test 34 atan2b: function
6test 35 atan2d: function
6test 36 atand: function
6test 37 Attitude: class
6test 38 Attitude4Tuple: class
6test 39 AttitudeError: class
6test 40 attrs: function
6test 41 azimuthal: module
6test 42 Azimuthal7Tuple: class
6test 43 AzimuthalError: class
6test 44 b_f2a: function
6test 45 b_f_2a: function
6test 46 Band: class
6test 47 bases: module
6test 48 basics: module
6test 49 Bearing: class
6test 50 bearing: function
6test 51 Bearing2Tuple: class
6test 52 Bearing_: class
6test 53 bearing_: function
6test 54 bearingDMS: function
6test 55 BetaOmega2Tuple: class
6test 56 BetaOmega3Tuple: class
6test 57 Bool: class
6test 58 BooleanFHP: class
6test 59 BooleanGH: class
6test 60 booleans: module
6test 61 bounds: function
6test 62 Bounds2Tuple: class
6test 63 Bounds4Tuple: class
6test 64 boundsOf: function
6test 65 callername: function
6test 66 Caps: class pygeodesy.karney.Caps
6test 67 cartesianBase: module
6test 68 cassini: function
6test 69 CassiniSoldner: class
6test 70 cbrt: function
6test 71 cbrt2: function
6test 72 centroidOf: function
6test 73 chain2m: function
6test 74 ChLV: class
6test 75 ChLV9Tuple: class
6test 76 ChLVa: class
6test 77 ChLVe: class
6test 78 ChLVEN2Tuple: class
6test 79 ChLVYX2Tuple: class
6test 80 ChLVyx2Tuple: class
6test 81 circin6: function
6test 82 Circin6Tuple: class
6test 83 circle4: function
6test 84 Circle4Tuple: class
6test 85 circum3: function
6test 86 Circum3Tuple: class
6test 87 circum4_: function
6test 88 Circum4Tuple: class
6test 89 classname: function
6test 90 classnaming: function
6test 91 clipCS3: function
6test 92 ClipCS3Tuple: class
6test 93 clipCS4: function
6test 94 ClipCS4Tuple: class
6test 95 clipDegrees: function
6test 96 clipDMS: function
6test 97 ClipError: class
6test 98 clipFHP4: function
6test 99 ClipFHP4Tuple: class
6test 100 clipGH4: function
6test 101 ClipGH4Tuple: class
6test 102 clipLB6: function
6test 103 ClipLB6Tuple: class
6test 104 clipRadians: function
6test 105 clips: function
6test 106 clipSH: function
6test 107 clipSH3: function
6test 108 ClipSH3Tuple: class
6test 109 clipStr: function
6test 110 clipy: module
6test 111 collins: function
6test 112 collins5: function
6test 113 Collins5Tuple: class
6test 114 compassAngle: function
6test 115 compassDMS: function
6test 116 compassPoint: function
6test 117 Conic: class
6test 118 Conics: class pygeodesy.lcc.Conics
6test 119 constants: module
6test 120 copysign0: function
6test 121 copytype: function
6test 122 cosineAndoyerLambert: function
6test 123 cosineAndoyerLambert_: function
6test 124 cosineForsytheAndoyerLambert: function
6test 125 cosineForsytheAndoyerLambert_: function
6test 126 cosineLaw: function
6test 127 cosineLaw_: function
6test 128 cot: function
6test 129 cot_: function
6test 130 cotd: function
6test 131 cotd_: function
6test 132 CrossError: class
6test 133 crosserrors: function
6test 134 Css: class
6test 135 css: module
6test 136 CSSError: class
6test 137 Curvature2Tuple: class
6test 138 date2epoch: function
6test 139 Datum: class
6test 140 datum: module
6test 141 Datums: class pygeodesy.datums.Datums
6test 142 datums: module
6test 143 decodeEPSG2: function
6test 144 degDMS: function
6test 145 degrees: class builtin_function_or_method
6test 146 Degrees: class
6test 147 degrees180: function
6test 148 Degrees2: class
6test 149 degrees2grades: function
6test 150 degrees2m: function
6test 151 degrees360: function
6test 152 degrees90: function
6test 153 Degrees_: class
6test 154 deprecated: module
6test 155 deprecated_class: function
6test 156 deprecated_function: function
6test 157 deprecated_method: function
6test 158 deprecated_property_RO: function
6test 159 deprecated_Property_RO: function
6test 160 DeprecationWarnings: class pygeodesy.props.DeprecationWarnings
6test 161 Destination2Tuple: class
6test 162 Destination3Tuple: class
6test 163 DIG: int
6test 164 Direct9Tuple: class
6test 165 Distance: class
6test 166 Distance2Tuple: class
6test 167 Distance3Tuple: class
6test 168 Distance4Tuple: class
6test 169 Distance_: class
6test 170 dms: module
6test 171 e22f: function
6test 172 e2f: function
6test 173 EasNor2Tuple: class
6test 174 EasNor3Tuple: class
6test 175 EasNorAziRk4Tuple: class
6test 176 EasNorAziRkEqu6Tuple: class
6test 177 EasNorExact4Tuple: class
6test 178 EasNorRadius3Tuple: class
6test 179 Easting: class
6test 180 ecef: module
6test 181 Ecef9Tuple: class
6test 182 EcefCartesian: function
6test 183 EcefError: class
6test 184 EcefFarrell21: class
6test 185 EcefFarrell22: class
6test 186 EcefKarney: class
6test 187 EcefMatrix: class
6test 188 EcefSudano: class
6test 189 EcefVeness: class
6test 190 EcefYou: class
6test 191 egmGeoidHeights: function
6test 192 elevation2: function
6test 193 Elevation2Tuple: class
6test 194 elevations: module
6test 195 Ellipsoid: class
6test 196 Ellipsoid2: class
6test 197 ellipsoidalBase: module
6test 198 ellipsoidalBaseDI: module
6test 199 ellipsoidalExact: module
6test 200 ellipsoidalGeodSolve: module
6test 201 ellipsoidalKarney: module
6test 202 ellipsoidalNvector: module
6test 203 ellipsoidalVincenty: module
6test 204 ellipsoids: module
6test 205 Ellipsoids: class pygeodesy.ellipsoids.Ellipsoids
6test 206 Elliptic: class
6test 207 elliptic: module
6test 208 Elliptic3Tuple: class
6test 209 EllipticError: class
6test 210 encodeEPSG: function
6test 211 enstr2: function
6test 212 enStr2: function
6test 213 Enu: class
6test 214 Enu4Tuple: class
6test 215 Epoch: class
6test 216 epoch2date: function
6test 217 EPS: float
6test 218 EPS0: float
6test 219 EPS02: float
6test 220 EPS1: float
6test 221 EPS1_2: float
6test 222 EPS2: float
6test 223 EPS4: float
6test 224 EPS_2: float
6test 225 epsg: module
6test 226 Epsg: class
6test 227 EPSGError: class
6test 228 equidistant: function
6test 229 Equidistant: class
6test 230 EquidistantExact: class
6test 231 EquidistantGeodSolve: class
6test 232 EquidistantKarney: class
6test 233 equirectangular: function
6test 234 equirectangular3: function
6test 235 equirectangular_: function
6test 236 errors: module
6test 237 etm: module
6test 238 Etm: class
6test 239 ETMError: class
6test 240 euclid: function
6test 241 euclid_: function
6test 242 euclidean: function
6test 243 euclidean_: function
6test 244 ExactTransverseMercator: class
6test 245 exception_chaining: function
6test 246 excessAbc: function
6test 247 excessGirard: function
6test 248 excessKarney: function
6test 249 excessKarney_: function
6test 250 excessLHuilier: function
6test 251 excessQuad: function
6test 252 excessQuad_: function
6test 253 f2e2: function
6test 254 f2e22: function
6test 255 f2e32: function
6test 256 f2f2: function
6test 257 f2f_: function
6test 258 f2n: function
6test 259 f_2f: function
6test 260 F__E: str
6test 261 F__E_: str
6test 262 F__E__: str
6test 263 F__F: str
6test 264 F__F_: str
6test 265 F__F__: str
6test 266 F__G: str
6test 267 F__G_: str
6test 268 F__G__: str
6test 269 F_D: str
6test 270 F_D60: str
6test 271 F_D60_: str
6test 272 F_D60__: str
6test 273 F_D_: str
6test 274 F_D__: str
6test 275 F_DEG: str
6test 276 F_DEG_: str
6test 277 F_DEG__: str
6test 278 F_DM: str
6test 279 F_DM_: str
6test 280 F_DM__: str
6test 281 F_DMS: str
6test 282 F_DMS_: str
6test 283 F_DMS__: str
6test 284 F_MIN: str
6test 285 F_MIN_: str
6test 286 F_MIN__: str
6test 287 F_RAD: str
6test 288 F_RAD_: str
6test 289 F_RAD__: str
6test 290 F_SEC: str
6test 291 F_SEC_: str
6test 292 F_SEC__: str
6test 293 facos1: function
6test 294 false2f: function
6test 295 falsed2f: function
6test 296 fasin1: function
6test 297 fatan: function
6test 298 fatan1: function
6test 299 fatan2: function
6test 300 fathom2m: function
6test 301 favg: function
6test 302 Fcbrt: class
6test 303 Fcook: class
6test 304 Fdot: class
6test 305 fdot: function
6test 306 fdot3: function
6test 307 Feet: class
6test 308 fhorner: function
6test 309 Fhorner: class
6test 310 Fhypot: class
6test 311 fidw: function
6test 312 FIx: class
6test 313 flatLocal: function
6test 314 flatLocal_: function
6test 315 flatPolar: function
6test 316 flatPolar_: function
6test 317 Flinear: class
6test 318 Float: class
6test 319 float0: function
6test 320 float_: function
6test 321 Float_: class
6test 322 fmath: module
6test 323 fmean: function
6test 324 fmean_: function
6test 325 Fn_rt: class
6test 326 Footprint5Tuple: class
6test 327 formy: module
6test 328 Forward4Tuple: class
6test 329 fpolynomial: function
6test 330 Fpolynomial: class
6test 331 Fpowers: class
6test 332 fpowers: function
6test 333 fprod: class builtin_function_or_method
6test 334 fractional: function
6test 335 frange: function
6test 336 frechet: module
6test 337 Frechet: class
6test 338 Frechet6Tuple: class
6test 339 frechet_: function
6test 340 FrechetCosineAndoyerLambert: class
6test 341 FrechetCosineForsytheAndoyerLambert: class
6test 342 FrechetCosineLaw: class
6test 343 FrechetDegrees: class
6test 344 FrechetDistanceTo: class
6test 345 FrechetEquirectangular: class
6test 346 FrechetError: class
6test 347 FrechetEuclidean: class
6test 348 FrechetExact: class
6test 349 FrechetFlatLocal: class
6test 350 FrechetFlatPolar: class
6test 351 FrechetHaversine: class
6test 352 FrechetHubeny: class
6test 353 FrechetKarney: class
6test 354 FrechetRadians: class
6test 355 FrechetThomas: class
6test 356 FrechetVincentys: class
6test 357 freduce: class builtin_function_or_method
6test 358 fremainder: function
6test 359 Frustum: class
6test 360 Fsqrt: class
6test 361 fstats: module
6test 362 fStr: function
6test 363 fstr: function
6test 364 fstrzs: function
6test 365 fStrzs: function
6test 366 fsum: function
6test 367 Fsum: class
6test 368 fsum1: function
6test 369 fsum1_: function
6test 370 Fsum2Tuple: class
6test 371 fsum_: function
6test 372 fsums: module
6test 373 ft2m: function
6test 374 furlong2m: function
6test 375 Fwelford: class
6test 376 Garef: class
6test 377 gars: module
6test 378 GARSError: class
6test 379 GDict: class
6test 380 GeodesicAreaExact: class
6test 381 GeodesicError: class
6test 382 GeodesicExact: class
6test 383 GeodesicLineExact: class
6test 384 GeodesicLineSolve: class
6test 385 GeodesicSolve: class
6test 386 geodesicx: module
6test 387 geodsolve: module
6test 388 GeodSolve12Tuple: class
6test 389 Geohash: class
6test 390 geohash: module
6test 391 GeohashError: class
6test 392 GeoidError: class
6test 393 GeoidG2012B: class
6test 394 geoidHeight2: function
6test 395 GeoidHeight2Tuple: class
6test 396 GeoidHeight5Tuple: class
6test 397 GeoidKarney: class
6test 398 GeoidPGM: class
6test 399 geoids: module
6test 400 Georef: class
6test 401 gnomonic: function
6test 402 Gnomonic: class
6test 403 GnomonicExact: class
6test 404 GnomonicGeodSolve: class
6test 405 GnomonicKarney: class
6test 406 grades: function
6test 407 grades2degrees: function
6test 408 grades2radians: function
6test 409 grades400: function
6test 410 gx: module
6test 411 gxarea: module
6test 412 gxline: module
6test 413 halfs2: function
6test 414 hartzell: function
6test 415 hartzell4: function
6test 416 Hausdorff: class
6test 417 hausdorff: module
6test 418 Hausdorff6Tuple: class
6test 419 hausdorff_: function
6test 420 HausdorffCosineAndoyerLambert: class
6test 421 HausdorffCosineForsytheAndoyerLambert: class
6test 422 HausdorffCosineLaw: class
6test 423 HausdorffDegrees: class
6test 424 HausdorffDistanceTo: class
6test 425 HausdorffEquirectangular: class
6test 426 HausdorffError: class
6test 427 HausdorffEuclidean: class
6test 428 HausdorffExact: class
6test 429 HausdorffFlatLocal: class
6test 430 HausdorffFlatPolar: class
6test 431 HausdorffHaversine: class
6test 432 HausdorffHubeny: class
6test 433 HausdorffKarney: class
6test 434 HausdorffRadians: class
6test 435 HausdorffThomas: class
6test 436 HausdorffVincentys: class
6test 437 haversine: function
6test 438 haversine_: function
6test 439 Height: class
6test 440 Height_: class
6test 441 HeightCubic: class
6test 442 HeightError: class
6test 443 HeightIDW: function
6test 444 HeightIDW2: function
6test 445 HeightIDW3: function
6test 446 HeightIDWcosineAndoyerLambert: class
6test 447 HeightIDWcosineForsytheAndoyerLambert: class
6test 448 HeightIDWcosineLaw: class
6test 449 HeightIDWdistanceTo: class
6test 450 HeightIDWequirectangular: class
6test 451 HeightIDWeuclidean: class
6test 452 HeightIDWflatLocal: class
6test 453 HeightIDWflatPolar: class
6test 454 HeightIDWhaversine: class
6test 455 HeightIDWhubeny: class
6test 456 HeightIDWkarney: class
6test 457 HeightIDWthomas: class
6test 458 HeightIDWvincentys: class
6test 459 HeightLinear: class
6test 460 HeightLSQBiSpline: class
6test 461 heightOf: function
6test 462 heights: module
6test 463 HeightSmoothBiSpline: class
6test 464 HeightX: class
6test 465 Helmert7Tuple: class
6test 466 horizon: function
6test 467 hstr: function
6test 468 hubeny: function
6test 469 hubeny_: function
6test 470 hypot: function
6test 471 hypot1: function
6test 472 hypot2: function
6test 473 hypot2_: function
6test 474 hypot3: function
6test 475 hypot_: class builtin_function_or_method
6test 476 INF: float
6test 477 instr: function
6test 478 inStr: function
6test 479 Int: class
6test 480 INT0: int
6test 481 Int_: class
6test 482 interns: module
6test 483 intersection3d3: function
6test 484 Intersection3Tuple: class
6test 485 IntersectionError: class
6test 486 intersections2: function
6test 487 Inverse10Tuple: class
6test 488 isantipode: function
6test 489 isantipode_: function
6test 490 isbool: function
6test 491 isclass: function
6test 492 isclockwise: function
6test 493 isclose: function
6test 494 iscolinearWith: function
6test 495 iscomplex: function
6test 496 isconvex: function
6test 497 isconvex_: function
6test 498 isDEPRECATED: function
6test 499 isenclosedby: function
6test 500 isenclosedBy: function
6test 501 isError: function
6test 502 isfinite: function
6test 503 isfloat: function
6test 504 isidentifier: class method_descriptor
6test 505 isinf: class builtin_function_or_method
6test 506 isinstanceof: function
6test 507 isint: function
6test 508 isint0: function
6test 509 iskeyword: class builtin_function_or_method
6test 510 isLazy: int
6test 511 isnan: class builtin_function_or_method
6test 512 isnear0: function
6test 513 isnear1: function
6test 514 isnear90: function
6test 515 isneg0: function
6test 516 isninf: function
6test 517 isnon0: function
6test 518 isnormal: function
6test 519 isnormal_: function
6test 520 isNumpy2: function
6test 521 isodd: function
6test 522 isPoints2: function
6test 523 ispolar: function
6test 524 isscalar: function
6test 525 issequence: function
6test 526 isstr: function
6test 527 issubclassof: function
6test 528 isTuple2: function
6test 529 istuplist: function
6test 530 itemsorted: function
6test 531 iterNumpy2: function
6test 532 iterNumpy2over: function
6test 533 iters: module
6test 534 Jacobi2Tuple: class
6test 535 JacobiConformal: class
6test 536 joined: function
6test 537 joined_: function
6test 538 karney: module
6test 539 km2m: function
6test 540 ktm: module
6test 541 KTMError: class
6test 542 KTransverseMercator: class
6test 543 Lam: class
6test 544 Lam_: class
6test 545 LambertEqualArea: class
6test 546 Lat: class
6test 547 Lat_: class
6test 548 latDMS: function
6test 549 latlon2n_xyz: function
6test 550 LatLon2psxy: class
6test 551 LatLon2PsxyIter: class
6test 552 LatLon2Tuple: class
6test 553 LatLon3Tuple: class
6test 554 LatLon4Tuple: class
6test 555 LatLon_: class
6test 556 LatLonAziRk4Tuple: class
6test 557 latlonBase: module
6test 558 LatLonDatum3Tuple: class
6test 559 LatLonDatum5Tuple: class
6test 560 latlonDMS: function
6test 561 latlonDMS_: function
6test 562 LatLonExact4Tuple: class
6test 563 LatLonFHP: class
6test 564 LatLonGH: class
6test 565 LatLonPrec3Tuple: class
6test 566 LatLonPrec5Tuple: class
6test 567 lazily: module
6test 568 LazyImportError: class
6test 569 Lcc: class
6test 570 lcc: module
6test 571 LCCError: class
6test 572 len2: function
6test 573 LenError: class
6test 574 LimitError: class
6test 575 limiterrors: function
6test 576 Local9Tuple: class
6test 577 LocalCartesian: class
6test 578 LocalError: class
6test 579 Lon: class
6test 580 Lon_: class
6test 581 lonDMS: function
6test 582 lrstrip: function
6test 583 ltp: module
6test 584 Ltp: class
6test 585 ltpTuples: module
6test 586 luneOf: function
6test 587 m2chain: function
6test 588 m2degrees: function
6test 589 m2fathom: function
6test 590 m2ft: function
6test 591 m2furlong: function
6test 592 m2km: function
6test 593 m2NM: function
6test 594 m2radians: function
6test 595 m2SM: function
6test 596 m2toise: function
6test 597 m2yard: function
6test 598 machine: function
6test 599 MANT_DIG: int
6test 600 MANTIS: int
6test 601 map1: function
6test 602 map2: function
6test 603 MAX: float
6test 604 meeus2: function
6test 605 Meeus2Tuple: class
6test 606 Meter: class
6test 607 Meter2: class
6test 608 Meter3: class
6test 609 Meter_: class
6test 610 Mgrs: class
6test 611 mgrs: module
6test 612 Mgrs4Tuple: class
6test 613 Mgrs6Tuple: class
6test 614 MGRSError: class
6test 615 MIN: float
6test 616 modulename: function
6test 617 n2e2: function
6test 618 n2f: function
6test 619 n2f_: function
6test 620 n_xyz2latlon: function
6test 621 n_xyz2philam: function
6test 622 named: module
6test 623 namedTuples: module
6test 624 nameof: function
6test 625 NAN: float
6test 626 nearestOn: function
6test 627 NearestOn2Tuple: class
6test 628 nearestOn3: function
6test 629 NearestOn3Tuple: class
6test 630 nearestOn4: function
6test 631 NearestOn4Tuple: class
6test 632 nearestOn5: function
6test 633 NearestOn5Tuple: class
6test 634 nearestOn6: function
6test 635 NearestOn6Tuple: class
6test 636 NearestOn8Tuple: class
6test 637 Ned: class
6test 638 Ned3Tuple: class
6test 639 Ned4Tuple: class
6test 640 neg: function
6test 641 NEG0: float
6test 642 neg_: function
6test 643 Neighbors8Dict: class
6test 644 NINF: float
6test 645 NM2m: function
6test 646 NN: str
6test 647 norm2: function
6test 648 norm_: function
6test 649 normal: function
6test 650 normal_: function
6test 651 normDMS: function
6test 652 Northing: class
6test 653 notImplemented: function
6test 654 notOverloaded: function
6test 655 Number_: class
6test 656 Numpy2LatLon: class
6test 657 NumPyError: class
6test 658 nvector: module
6test 659 nvectorBase: module
6test 660 OK: str
6test 661 opposing: function
6test 662 opposing_: function
6test 663 Orthographic: class
6test 664 Osgr: class
6test 665 osgr: module
6test 666 OSGRError: class
6test 667 pairs: function
6test 668 parse3d: function
6test 669 parse3llh: function
6test 670 parseDDDMMSS: function
6test 671 parseDMS: function
6test 672 parseDMS2: function
6test 673 ParseError: class
6test 674 parseETM5: function
6test 675 parseMGRS: function
6test 676 parseOSGR: function
6test 677 parseRad: function
6test 678 parseUPS5: function
6test 679 parseUTM: function
6test 680 parseUTM5: function
6test 681 parseUTMUPS5: function
6test 682 parseWM: function
6test 683 perimeterof: function
6test 684 perimeterOf: function
6test 685 PGMError: class
6test 686 Phi: class
6test 687 Phi_: class
6test 688 philam2n_xyz: function
6test 689 PhiLam2Tuple: class
6test 690 PhiLam3Tuple: class
6test 691 PhiLam4Tuple: class
6test 692 PI: float
6test 693 PI2: float
6test 694 PI3: float
6test 695 PI3_2: float
6test 696 PI4: float
6test 697 PI_2: float
6test 698 PI_3: float
6test 699 PI_4: float
6test 700 pierlot: function
6test 701 Point3Tuple: class
6test 702 points: module
6test 703 points2: function
6test 704 Points2Tuple: class
6test 705 PointsError: class
6test 706 PointsIter: class
6test 707 polygon: function
6test 708 PolygonArea: class
6test 709 precision: function
6test 710 Precision_: class
6test 711 print_: function
6test 712 printf: function
6test 713 Property: class
6test 714 property_doc_: function
6test 715 property_RO: class
6test 716 Property_RO: class
6test 717 props: module
6test 718 pygeodesy_abspath: str
6test 719 quadOf: function
6test 720 R_FM: float
6test 721 R_GM: float
6test 722 R_KM: float
6test 723 R_M: float
6test 724 R_MA: float
6test 725 R_MB: float
6test 726 R_NM: float
6test 727 R_QM: float
6test 728 R_SM: float
6test 729 R_VM: float
6test 730 Radians: class
6test 731 radians: class builtin_function_or_method
6test 732 Radians2: class
6test 733 radians2m: function
6test 734 Radians_: class
6test 735 radiansPI: function
6test 736 radiansPI2: function
6test 737 radiansPI_2: function
6test 738 radical2: function
6test 739 Radical2Tuple: class
6test 740 radii11: function
6test 741 Radii11Tuple: class
6test 742 Radius: class
6test 743 Radius_: class
6test 744 randomrangenerator: function
6test 745 RangeError: class
6test 746 rangerrors: function
6test 747 RefFrame: class
6test 748 RefFrameError: function
6test 749 RefFrames: class pygeodesy.trf.RefFrames
6test 750 remainder: class builtin_function_or_method
6test 751 reprs: function
6test 752 ResectionError: class
6test 753 resections: module
6test 754 ResidualError: class
6test 755 Resolutions2Tuple: class
6test 756 Reverse4Tuple: class
6test 757 Rhumb: class
6test 758 Rhumb7Tuple: class
6test 759 Rhumb8Tuple: class
6test 760 RhumbError: class
6test 761 RhumbLine: class
6test 762 RhumbLineSolve: class
6test 763 RhumbOrder2Tuple: class
6test 764 rhumbsolve: module
6test 765 RhumbSolve: class
6test 766 RhumbSolve7Tuple: class
6test 767 rhumbx: module
6test 768 S_DEG: str
6test 769 S_DMS: int
6test 770 S_MIN: str
6test 771 S_RAD: str
6test 772 S_SEC: str
6test 773 S_SEP: str
6test 774 Scalar: class
6test 775 scalar: function
6test 776 Scalar_: class
6test 777 SciPyError: class
6test 778 SciPyWarning: class
6test 779 Shape2Tuple: class
6test 780 signBit: function
6test 781 signOf: function
6test 782 simplify: module
6test 783 simplify1: function
6test 784 simplify2: function
6test 785 simplifyRDP: function
6test 786 simplifyRDPm: function
6test 787 simplifyRW: function
6test 788 simplifyVW: function
6test 789 simplifyVWm: function
6test 790 sincos2: function
6test 791 sincos2_: function
6test 792 sincos2d: function
6test 793 sincos2d_: function
6test 794 sincostan3: function
6test 795 SM2m: function
6test 796 snellius3: function
6test 797 soddy4: function
6test 798 Soddy4Tuple: class
6test 799 solveBase: module
6test 800 sphericalBase: module
6test 801 sphericalNvector: module
6test 802 sphericalTrigonometry: module
6test 803 splice: function
6test 804 sqrt0: function
6test 805 sqrt3: function
6test 806 sqrt_a: function
6test 807 Stereographic: class
6test 808 Str: class
6test 809 str2ub: function
6test 810 Str_: class
6test 811 streprs: module
6test 812 strs: function
6test 813 Survey3Tuple: class
6test 814 tan_2: function
6test 815 tand: function
6test 816 tand_: function
6test 817 tanPI_2_2: function
6test 818 thomas: function
6test 819 thomas_: function
6test 820 tienstra: function
6test 821 tienstra7: function
6test 822 Tienstra7Tuple: class
6test 823 toCss: function
6test 824 toDMS: function
6test 825 toEtm8: function
6test 826 toise2m: function
6test 827 toLcc: function
6test 828 toMgrs: function
6test 829 toOsgr: function
6test 830 toUps8: function
6test 831 toUtm: function
6test 832 toUtm8: function
6test 833 toUtmUps8: function
6test 834 toWm: function
6test 835 Transform: class
6test 836 Transform7Tuple: class
6test 837 Transforms: class pygeodesy.datums.Transforms
6test 838 trf: module
6test 839 TRFError: class
6test 840 trfXform: function
6test 841 triAngle: function
6test 842 triAngle4: function
6test 843 TriAngle4Tuple: class
6test 844 Triangle7Tuple: class
6test 845 Triangle8Tuple: class
6test 846 TriangleError: class
6test 847 Triaxial: class
6test 848 Triaxial_: class
6test 849 TriaxialError: class
6test 850 Triaxials: class pygeodesy.triaxials.Triaxials
6test 851 triaxials: module
6test 852 trilaterate2d2: function
6test 853 trilaterate3d2: function
6test 854 Trilaterate5Tuple: class
6test 855 triSide: function
6test 856 triSide2: function
6test 857 TriSide2Tuple: class
6test 858 triSide4: function
6test 859 TriSide4Tuple: class
6test 860 truncate: function
6test 861 Tuple2LatLon: class
6test 862 tyr3d: function
6test 863 ub2str: function
6test 864 UnitError: class
6test 865 units: module
6test 866 unitsBase: module
6test 867 unroll180: function
6test 868 unrollPI: function
6test 869 unsign0: function
6test 870 unsigned0: function
6test 871 unStr: function
6test 872 unstr: function
6test 873 Ups: class
6test 874 ups: module
6test 875 UPSError: class
6test 876 upsZoneBand5: function
6test 877 utily: module
6test 878 utm: module
6test 879 Utm: class
6test 880 UTMError: class
6test 881 UtmUps: function
6test 882 utmups: module
6test 883 UtmUps2Tuple: class
6test 884 UtmUps4Tuple: class
6test 885 UtmUps5Tuple: class
6test 886 UtmUps8Tuple: class
6test 887 utmupsBase: module
6test 888 UTMUPSError: class
6test 889 UtmUpsLatLon5Tuple: class
6test 890 utmupsValidate: function
6test 891 utmupsValidateOK: function
6test 892 utmupsZoneBand5: function
6test 893 utmZoneBand2: function
6test 894 utmZoneBand5: function
6test 895 vector2d: module
6test 896 Vector2Tuple: class
6test 897 vector3d: module
6test 898 Vector3d: class
6test 899 vector3dBase: module
6test 900 Vector3Tuple: class
6test 901 Vector4Tuple: class
6test 902 VectorError: class
6test 903 version: str
6test 904 VincentyError: class
6test 905 vincentys: function
6test 906 vincentys_: function
6test 907 webmercator: module
6test 908 WebMercatorError: class
6test 909 wgrs: module
6test 910 WGRSError: class
6test 911 wildberger3: function
6test 912 Wm: class
6test 913 wrap180: function
6test 914 wrap360: function
6test 915 wrap90: function
6test 916 wrapPI: function
6test 917 wrapPI2: function
6test 918 wrapPI_2: function
6test 919 Xyz4Tuple: class
6test 920 XyzLocal: class
6test 921 yard2m: function
6test 922 Zone: class
6test 923 isLazy: 0
6test 924 missing in lazily._all_imports: None
6test 925 missing in pygeodesy.__all__: None
6test 926 cmd: /usr/local/bin/python3.9 -c 'import pygeodesy, sys; sys.exit(0 if pygeodesy.isLazy == %s else 1)'
6test 927 PYGEODESY_LAZY_IMPORT=0: 0
6test 928 PYGEODESY_LAZY_IMPORT=1: 0
6test 929 PYGEODESY_LAZY_IMPORT=2: 0
6test 930 PYGEODESY_LAZY_IMPORT=3: 0
6test 931 PYGEODESY_LAZY_IMPORT=4: 0
6test 932 sys: <module 'sys' (built-in)>
6test 933 builtins: <module 'builtins' (built-in)>
6test 934 _frozen_importlib: <module 'importlib._bootstrap' (frozen)>
6test 935 _imp: <module '_imp' (built-in)>
6test 936 _thread: <module '_thread' (built-in)>
6test 937 _warnings: <module '_warnings' (built-in)>
6test 938 _weakref: <module '_weakref' (built-in)>
6test 939 _io: <module 'io' (built-in)>
6test 940 marshal: <module 'marshal' (built-in)>
6test 941 posix: <module 'posix' (built-in)>
6test 942 _frozen_importlib_external: <module 'importlib._bootstrap_external' (frozen)>
6test 943 time: <module 'time' (built-in)>
6test 944 zipimport: <module 'zipimport' (frozen)>
6test 945 _codecs: <module '_codecs' (built-in)>
6test 946 codecs: <module 'codecs' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/codecs.py'>
6test 947 encodings.aliases: <module 'encodings.aliases' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/encodings/aliases.py'>
6test 948 encodings: <module 'encodings' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/encodings/__init__.py'>
6test 949 encodings.utf_8: <module 'encodings.utf_8' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/encodings/utf_8.py'>
6test 950 _signal: <module '_signal' (built-in)>
6test 951 encodings.latin_1: <module 'encodings.latin_1' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/encodings/latin_1.py'>
6test 952 _abc: <module '_abc' (built-in)>
6test 953 abc: <module 'abc' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/abc.py'>
6test 954 io: <module 'io' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/io.py'>
6test 955 __main__: <module '__main__' from './test/testLazily.py'>
6test 956 warnings: <module 'warnings' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/warnings.py'>
6test 957 _stat: <module '_stat' (built-in)>
6test 958 stat: <module 'stat' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/stat.py'>
6test 959 _collections_abc: <module '_collections_abc' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_collections_abc.py'>
6test 960 genericpath: <module 'genericpath' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/genericpath.py'>
6test 961 posixpath: <module 'posixpath' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/posixpath.py'>
6test 962 os.path: <module 'posixpath' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/posixpath.py'>
6test 963 os: <module 'os' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py'>
6test 964 _sitebuiltins: <module '_sitebuiltins' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_sitebuiltins.py'>
6test 965 _locale: <module '_locale' (built-in)>
6test 966 _bootlocale: <module '_bootlocale' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_bootlocale.py'>
6test 967 types: <module 'types' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/types.py'>
6test 968 importlib._bootstrap: <module 'importlib._bootstrap' (frozen)>
6test 969 importlib._bootstrap_external: <module 'importlib._bootstrap_external' (frozen)>
6test 970 importlib: <module 'importlib' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/importlib/__init__.py'>
6test 971 importlib.machinery: <module 'importlib.machinery' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/importlib/machinery.py'>
6test 972 _heapq: <module '_heapq' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_heapq.cpython-39-darwin.so'>
6test 973 heapq: <module 'heapq' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/heapq.py'>
6test 974 itertools: <module 'itertools' (built-in)>
6test 975 keyword: <module 'keyword' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/keyword.py'>
6test 976 _operator: <module '_operator' (built-in)>
6test 977 operator: <module 'operator' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/operator.py'>
6test 978 reprlib: <module 'reprlib' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/reprlib.py'>
6test 979 _collections: <module '_collections' (built-in)>
6test 980 collections: <module 'collections' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/collections/__init__.py'>
6test 981 collections.abc: <module 'collections.abc' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/collections/abc.py'>
6test 982 _functools: <module '_functools' (built-in)>
6test 983 functools: <module 'functools' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/functools.py'>
6test 984 contextlib: <module 'contextlib' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/contextlib.py'>
6test 985 enum: <module 'enum' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/enum.py'>
6test 986 _sre: <module '_sre' (built-in)>
6test 987 sre_constants: <module 'sre_constants' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/sre_constants.py'>
6test 988 sre_parse: <module 'sre_parse' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/sre_parse.py'>
6test 989 sre_compile: <module 'sre_compile' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/sre_compile.py'>
6test 990 copyreg: <module 'copyreg' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/copyreg.py'>
6test 991 re: <module 're' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/re.py'>
6test 992 typing.io: <class 'typing.io'>
6test 993 typing.re: <class 'typing.re'>
6test 994 typing: <module 'typing' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/typing.py'>
6test 995 importlib.abc: <module 'importlib.abc' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/importlib/abc.py'>
6test 996 importlib.util: <module 'importlib.util' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/importlib/util.py'>
6test 997 sphinxcontrib: <module 'sphinxcontrib' (namespace)>
6test 998 zope: <module 'zope' (namespace)>
6test 999 site: <module 'site' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site.py'>
6test 1000 _weakrefset: <module '_weakrefset' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_weakrefset.py'>
6test 1001 weakref: <module 'weakref' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/weakref.py'>
6test 1002 pkgutil: <module 'pkgutil' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/pkgutil.py'>
6test 1003 runpy: <module 'runpy' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/runpy.py'>
6test 1004 coverage.version: <module 'coverage.version' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/version.py'>
6test 1005 atexit: <module 'atexit' (built-in)>
6test 1006 _ast: <module '_ast' (built-in)>
6test 1007 ast: <module 'ast' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/ast.py'>
6test 1008 _opcode: <module '_opcode' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_opcode.cpython-39-darwin.so'>
6test 1009 opcode: <module 'opcode' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/opcode.py'>
6test 1010 dis: <module 'dis' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/dis.py'>
6test 1011 token: <module 'token' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/token.py'>
6test 1012 tokenize: <module 'tokenize' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/tokenize.py'>
6test 1013 linecache: <module 'linecache' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/linecache.py'>
6test 1014 inspect: <module 'inspect' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/inspect.py'>
6test 1015 errno: <module 'errno' (built-in)>
6test 1016 signal: <module 'signal' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/signal.py'>
6test 1017 threading: <module 'threading' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/threading.py'>
6test 1018 pwd: <module 'pwd' (built-in)>
6test 1019 grp: <module 'grp' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/grp.cpython-39-darwin.so'>
6test 1020 _posixsubprocess: <module '_posixsubprocess' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_posixsubprocess.cpython-39-darwin.so'>
6test 1021 select: <module 'select' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/select.cpython-39-darwin.so'>
6test 1022 math: <module 'math' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>
6test 1023 selectors: <module 'selectors' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/selectors.py'>
6test 1024 subprocess: <module 'subprocess' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/subprocess.py'>
6test 1025 platform: <module 'platform' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/platform.py'>
6test 1026 traceback: <module 'traceback' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/traceback.py'>
6test 1027 coverage.env: <module 'coverage.env' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/env.py'>
6test 1028 _hashlib: <module '_hashlib' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_hashlib.cpython-39-darwin.so'>
6test 1029 _blake2: <module '_blake2' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_blake2.cpython-39-darwin.so'>
6test 1030 hashlib: <module 'hashlib' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/hashlib.py'>
6test 1031 fnmatch: <module 'fnmatch' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/fnmatch.py'>
6test 1032 ntpath: <module 'ntpath' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/ntpath.py'>
6test 1033 configparser: <module 'configparser' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/configparser.py'>
6test 1034 _struct: <module '_struct' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_struct.cpython-39-darwin.so'>
6test 1035 struct: <module 'struct' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/struct.py'>
6test 1036 _compat_pickle: <module '_compat_pickle' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_compat_pickle.py'>
6test 1037 _pickle: <module '_pickle' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_pickle.cpython-39-darwin.so'>
6test 1038 pickle: <module 'pickle' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/pickle.py'>
6test 1039 shlex: <module 'shlex' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/shlex.py'>
6test 1040 coverage.backward: <module 'coverage.backward' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/backward.py'>
6test 1041 locale: <module 'locale' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/locale.py'>
6test 1042 coverage.misc: <module 'coverage.misc' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/misc.py'>
6test 1043 coverage.files: <module 'coverage.files' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/files.py'>
6test 1044 coverage.report: <module 'coverage.report' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/report.py'>
6test 1045 coverage.annotate: <module 'coverage.annotate' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/annotate.py'>
6test 1046 coverage.debug: <module 'coverage.debug' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/debug.py'>
6test 1047 coverage.pytracer: <module 'coverage.pytracer' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/pytracer.py'>
6test 1048 coverage.tracer: <module 'coverage.tracer' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/tracer.cpython-39-darwin.so'>
6test 1049 coverage.collector: <module 'coverage.collector' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/collector.py'>
6test 1050 coverage.config: <module 'coverage.config' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/config.py'>
6test 1051 glob: <module 'glob' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/glob.py'>
6test 1052 _json: <module '_json' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_json.cpython-39-darwin.so'>
6test 1053 json.scanner: <module 'json.scanner' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/scanner.py'>
6test 1054 json.decoder: <module 'json.decoder' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/decoder.py'>
6test 1055 json.encoder: <module 'json.encoder' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/encoder.py'>
6test 1056 json: <module 'json' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/__init__.py'>
6test 1057 textwrap: <module 'textwrap' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/textwrap.py'>
6test 1058 gettext: <module 'gettext' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/gettext.py'>
6test 1059 optparse: <module 'optparse' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/optparse.py'>
6test 1060 _bisect: <module '_bisect' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_bisect.cpython-39-darwin.so'>
6test 1061 bisect: <module 'bisect' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bisect.py'>
6test 1062 _random: <module '_random' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_random.cpython-39-darwin.so'>
6test 1063 _sha512: <module '_sha512' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_sha512.cpython-39-darwin.so'>
6test 1064 random: <module 'random' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/random.py'>
6test 1065 _socket: <module '_socket' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_socket.cpython-39-darwin.so'>
6test 1066 array: <module 'array' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/array.cpython-39-darwin.so'>
6test 1067 socket: <module 'socket' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/socket.py'>
6test 1068 coverage.data: <module 'coverage.data' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/data.py'>
6test 1069 _datetime: <module '_datetime' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_datetime.cpython-39-darwin.so'>
6test 1070 datetime: <module 'datetime' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/datetime.py'>
6test 1071 zlib: <module 'zlib' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/zlib.cpython-39-darwin.so'>
6test 1072 _compression: <module '_compression' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/_compression.py'>
6test 1073 _bz2: <module '_bz2' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_bz2.cpython-39-darwin.so'>
6test 1074 bz2: <module 'bz2' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bz2.py'>
6test 1075 _lzma: <module '_lzma' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_lzma.cpython-39-darwin.so'>
6test 1076 lzma: <module 'lzma' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lzma.py'>
6test 1077 shutil: <module 'shutil' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/shutil.py'>
6test 1078 coverage.results: <module 'coverage.results' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/results.py'>
6test 1079 coverage.templite: <module 'coverage.templite' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/templite.py'>
6test 1080 coverage.html: <module 'coverage.html' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/html.py'>
6test 1081 coverage.plugin: <module 'coverage.plugin' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/plugin.py'>
6test 1082 coverage.plugin_support: <module 'coverage.plugin_support' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/plugin_support.py'>
6test 1083 coverage.bytecode: <module 'coverage.bytecode' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/bytecode.py'>
6test 1084 coverage.phystokens: <module 'coverage.phystokens' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/phystokens.py'>
6test 1085 coverage.parser: <module 'coverage.parser' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/parser.py'>
6test 1086 coverage.python: <module 'coverage.python' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/python.py'>
6test 1087 coverage.summary: <module 'coverage.summary' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/summary.py'>
6test 1088 xml: <module 'xml' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/xml/__init__.py'>
6test 1089 xml.dom.domreg: <module 'xml.dom.domreg' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/xml/dom/domreg.py'>
6test 1090 xml.dom: <module 'xml.dom' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/xml/dom/__init__.py'>
6test 1091 xml.dom.minicompat: <module 'xml.dom.minicompat' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/xml/dom/minicompat.py'>
6test 1092 copy: <module 'copy' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/copy.py'>
6test 1093 xml.dom.NodeFilter: <module 'xml.dom.NodeFilter' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/xml/dom/NodeFilter.py'>
6test 1094 xml.dom.xmlbuilder: <module 'xml.dom.xmlbuilder' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/xml/dom/xmlbuilder.py'>
6test 1095 xml.dom.minidom: <module 'xml.dom.minidom' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/xml/dom/minidom.py'>
6test 1096 coverage.xmlreport: <module 'coverage.xmlreport' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/xmlreport.py'>
6test 1097 multiprocessing.process: <module 'multiprocessing.process' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/multiprocessing/process.py'>
6test 1098 multiprocessing.reduction: <module 'multiprocessing.reduction' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/multiprocessing/reduction.py'>
6test 1099 multiprocessing.context: <module 'multiprocessing.context' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/multiprocessing/context.py'>
6test 1100 __mp_main__: <module 'coverage.__main__' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/__main__.py'>
6test 1101 multiprocessing: <module 'multiprocessing' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/multiprocessing/__init__.py'>
6test 1102 coverage.multiproc: <module 'coverage.multiproc' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/multiproc.py'>
6test 1103 coverage.control: <module 'coverage.control' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/control.py'>
6test 1104 coverage: <module 'coverage' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/__init__.py'>
6test 1105 __future__: <module '__future__' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/__future__.py'>
6test 1106 coverage.execfile: <module 'coverage.execfile' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/execfile.py'>
6test 1107 coverage.cmdline: <module 'coverage.cmdline' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/coverage-4.5.4-py3.9-macosx-10.9-universal2.egg/coverage/cmdline.py'>
6test 1108 pygeodesy.interns: <module 'pygeodesy.interns' from './pygeodesy/interns.py'>
6test 1109 pygeodesy.lazily: <module 'pygeodesy.lazily' from './pygeodesy/lazily.py'>
6test 1110 pygeodesy.errors: <module 'pygeodesy.errors' from './pygeodesy/errors.py'>
6test 1111 numbers: <module 'numbers' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/numbers.py'>
6test 1112 pygeodesy.basics: <module 'pygeodesy.basics' from './pygeodesy/basics.py'>
6test 1113 pygeodesy.props: <module 'pygeodesy.props' from './pygeodesy/props.py'>
6test 1114 pygeodesy.streprs: <module 'pygeodesy.streprs' from './pygeodesy/streprs.py'>
6test 1115 pygeodesy.named: <module 'pygeodesy.named' from './pygeodesy/named.py'>
6test 1116 pygeodesy.unitsBase: <module 'pygeodesy.unitsBase' from './pygeodesy/unitsBase.py'>
6test 1117 pygeodesy.constants: <module 'pygeodesy.constants' from './pygeodesy/constants.py'>
6test 1118 _string: <module '_string' (built-in)>
6test 1119 string: <module 'string' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/string.py'>
6test 1120 pygeodesy.dms: <module 'pygeodesy.dms' from './pygeodesy/dms.py'>
6test 1121 pygeodesy.units: <module 'pygeodesy.units' from './pygeodesy/units.py'>
6test 1122 pygeodesy.fsums: <module 'pygeodesy.fsums' from './pygeodesy/fsums.py'>
6test 1123 pygeodesy.fmath: <module 'pygeodesy.fmath' from './pygeodesy/fmath.py'>
6test 1124 pygeodesy.namedTuples: <module 'pygeodesy.namedTuples' from './pygeodesy/namedTuples.py'>
6test 1125 pygeodesy.utily: <module 'pygeodesy.utily' from './pygeodesy/utily.py'>
6test 1126 pygeodesy.ellipsoids: <module 'pygeodesy.ellipsoids' from './pygeodesy/ellipsoids.py'>
6test 1127 pygeodesy.datums: <module 'pygeodesy.datums' from './pygeodesy/datums.py'>
6test 1128 pygeodesy.karney: <module 'pygeodesy.karney' from './pygeodesy/karney.py'>
6test 1129 pygeodesy.albers: <module 'pygeodesy.albers' from './pygeodesy/albers.py'>
6test 1130 pygeodesy.iters: <module 'pygeodesy.iters' from './pygeodesy/iters.py'>
6test 1131 pygeodesy.vector3dBase: <module 'pygeodesy.vector3dBase' from './pygeodesy/vector3dBase.py'>
6test 1132 pygeodesy.vector3d: <module 'pygeodesy.vector3d' from './pygeodesy/vector3d.py'>
6test 1133 pygeodesy.cartesianBase: <module 'pygeodesy.cartesianBase' from './pygeodesy/cartesianBase.py'>
6test 1134 pygeodesy.formy: <module 'pygeodesy.formy' from './pygeodesy/formy.py'>
6test 1135 pygeodesy.vector2d: <module 'pygeodesy.vector2d' from './pygeodesy/vector2d.py'>
6test 1136 pygeodesy.latlonBase: <module 'pygeodesy.latlonBase' from './pygeodesy/latlonBase.py'>
6test 1137 pygeodesy.ellipsoidalBase: <module 'pygeodesy.ellipsoidalBase' from './pygeodesy/ellipsoidalBase.py'>
6test 1138 pygeodesy.azimuthal: <module 'pygeodesy.azimuthal' from './pygeodesy/azimuthal.py'>
6test 1139 pygeodesy.deprecated: <module 'pygeodesy.deprecated' from './pygeodesy/deprecated/__init__.py'>
6test 1140 pygeodesy.deprecated.bases: <module 'pygeodesy.deprecated.bases' from './pygeodesy/deprecated/bases.py'>
6test 1141 pygeodesy.booleans: <module 'pygeodesy.booleans' from './pygeodesy/booleans.py'>
6test 1142 pygeodesy.nvectorBase: <module 'pygeodesy.nvectorBase' from './pygeodesy/nvectorBase.py'>
6test 1143 pygeodesy.points: <module 'pygeodesy.points' from './pygeodesy/points.py'>
6test 1144 pygeodesy.clipy: <module 'pygeodesy.clipy' from './pygeodesy/clipy.py'>
6test 1145 pygeodesy.css: <module 'pygeodesy.css' from './pygeodesy/css.py'>
6test 1146 pygeodesy.deprecated.datum: <module 'pygeodesy.deprecated.datum' from './pygeodesy/deprecated/datum.py'>
6test 1147 pygeodesy.ecef: <module 'pygeodesy.ecef' from './pygeodesy/ecef.py'>
6test 1148 urllib: <module 'urllib' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/urllib/__init__.py'>
6test 1149 binascii: <module 'binascii' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/binascii.cpython-39-darwin.so'>
6test 1150 base64: <module 'base64' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/base64.py'>
6test 1151 email: <module 'email' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/__init__.py'>
6test 1152 http: <module 'http' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/http/__init__.py'>
6test 1153 email.errors: <module 'email.errors' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/errors.py'>
6test 1154 email.quoprimime: <module 'email.quoprimime' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/quoprimime.py'>
6test 1155 email.base64mime: <module 'email.base64mime' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/base64mime.py'>
6test 1156 quopri: <module 'quopri' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/quopri.py'>
6test 1157 email.encoders: <module 'email.encoders' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/encoders.py'>
6test 1158 email.charset: <module 'email.charset' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/charset.py'>
6test 1159 email.header: <module 'email.header' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/header.py'>
6test 1160 urllib.parse: <module 'urllib.parse' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/urllib/parse.py'>
6test 1161 calendar: <module 'calendar' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/calendar.py'>
6test 1162 email._parseaddr: <module 'email._parseaddr' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/_parseaddr.py'>
6test 1163 email.utils: <module 'email.utils' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/utils.py'>
6test 1164 email._policybase: <module 'email._policybase' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/_policybase.py'>
6test 1165 email.feedparser: <module 'email.feedparser' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/feedparser.py'>
6test 1166 email.parser: <module 'email.parser' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/parser.py'>
6test 1167 uu: <module 'uu' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/uu.py'>
6test 1168 email._encoded_words: <module 'email._encoded_words' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/_encoded_words.py'>
6test 1169 email.iterators: <module 'email.iterators' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/iterators.py'>
6test 1170 email.message: <module 'email.message' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/email/message.py'>
6test 1171 _ssl: <module '_ssl' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_ssl.cpython-39-darwin.so'>
6test 1172 ssl: <module 'ssl' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/ssl.py'>
6test 1173 http.client: <module 'http.client' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/http/client.py'>
6test 1174 tempfile: <module 'tempfile' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/tempfile.py'>
6test 1175 urllib.response: <module 'urllib.response' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/urllib/response.py'>
6test 1176 urllib.error: <module 'urllib.error' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/urllib/error.py'>
6test 1177 _scproxy: <module '_scproxy' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/_scproxy.cpython-39-darwin.so'>
6test 1178 urllib.request: <module 'urllib.request' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/urllib/request.py'>
6test 1179 pygeodesy.elevations: <module 'pygeodesy.elevations' from './pygeodesy/elevations.py'>
6test 1180 pygeodesy.ellipsoidalBaseDI: <module 'pygeodesy.ellipsoidalBaseDI' from './pygeodesy/ellipsoidalBaseDI.py'>
6test 1181 pygeodesy.ellipsoidalExact: <module 'pygeodesy.ellipsoidalExact' from './pygeodesy/ellipsoidalExact.py'>
6test 1182 pygeodesy.ellipsoidalGeodSolve: <module 'pygeodesy.ellipsoidalGeodSolve' from './pygeodesy/ellipsoidalGeodSolve.py'>
6test 1183 pygeodesy.ellipsoidalKarney: <module 'pygeodesy.ellipsoidalKarney' from './pygeodesy/ellipsoidalKarney.py'>
6test 1184 pygeodesy.ltpTuples: <module 'pygeodesy.ltpTuples' from './pygeodesy/ltpTuples.py'>
6test 1185 pygeodesy.ellipsoidalNvector: <module 'pygeodesy.ellipsoidalNvector' from './pygeodesy/ellipsoidalNvector.py'>
6test 1186 pygeodesy.ellipsoidalVincenty: <module 'pygeodesy.ellipsoidalVincenty' from './pygeodesy/ellipsoidalVincenty.py'>
6test 1187 pygeodesy.elliptic: <module 'pygeodesy.elliptic' from './pygeodesy/elliptic.py'>
6test 1188 pygeodesy.utmupsBase: <module 'pygeodesy.utmupsBase' from './pygeodesy/utmupsBase.py'>
6test 1189 pygeodesy.ups: <module 'pygeodesy.ups' from './pygeodesy/ups.py'>
6test 1190 pygeodesy.utm: <module 'pygeodesy.utm' from './pygeodesy/utm.py'>
6test 1191 pygeodesy.epsg: <module 'pygeodesy.epsg' from './pygeodesy/epsg.py'>
6test 1192 pygeodesy.etm: <module 'pygeodesy.etm' from './pygeodesy/etm.py'>
6test 1193 pygeodesy.frechet: <module 'pygeodesy.frechet' from './pygeodesy/frechet.py'>
6test 1194 pygeodesy.fstats: <module 'pygeodesy.fstats' from './pygeodesy/fstats.py'>
6test 1195 pygeodesy.gars: <module 'pygeodesy.gars' from './pygeodesy/gars.py'>
6test 1196 pygeodesy.geodesicx.gxbases: <module 'pygeodesy.geodesicx.gxbases' from './pygeodesy/geodesicx/gxbases.py'>
6test 1197 pygeodesy.geodesicx.gxline: <module 'pygeodesy.geodesicx.gxline' from './pygeodesy/geodesicx/gxline.py'>
6test 1198 pygeodesy.geodesicx.gx: <module 'pygeodesy.geodesicx.gx' from './pygeodesy/geodesicx/gx.py'>
6test 1199 pygeodesy.geodesicx.gxarea: <module 'pygeodesy.geodesicx.gxarea' from './pygeodesy/geodesicx/gxarea.py'>
6test 1200 pygeodesy.geodesicx: <module 'pygeodesy.geodesicx' from './pygeodesy/geodesicx/__init__.py'>
6test 1201 pygeodesy.solveBase: <module 'pygeodesy.solveBase' from './pygeodesy/solveBase.py'>
6test 1202 pygeodesy.geodsolve: <module 'pygeodesy.geodsolve' from './pygeodesy/geodsolve.py'>
6test 1203 pygeodesy.geohash: <module 'pygeodesy.geohash' from './pygeodesy/geohash.py'>
6test 1204 pygeodesy.heights: <module 'pygeodesy.heights' from './pygeodesy/heights.py'>
6test 1205 pygeodesy.geoids: <module 'pygeodesy.geoids' from './pygeodesy/geoids.py'>
6test 1206 pygeodesy.hausdorff: <module 'pygeodesy.hausdorff' from './pygeodesy/hausdorff.py'>
6test 1207 cmath: <module 'cmath' from '/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload/cmath.cpython-39-darwin.so'>
6test 1208 pygeodesy.ktm: <module 'pygeodesy.ktm' from './pygeodesy/ktm.py'>
6test 1209 pygeodesy.lcc: <module 'pygeodesy.lcc' from './pygeodesy/lcc.py'>
6test 1210 pygeodesy.ltp: <module 'pygeodesy.ltp' from './pygeodesy/ltp.py'>
6test 1211 pygeodesy.mgrs: <module 'pygeodesy.mgrs' from './pygeodesy/mgrs.py'>
6test 1212 pygeodesy.deprecated.nvector: <module 'pygeodesy.deprecated.nvector' from './pygeodesy/deprecated/nvector.py'>
6test 1213 pygeodesy.osgr: <module 'pygeodesy.osgr' from './pygeodesy/osgr.py'>
6test 1214 pygeodesy.resections: <module 'pygeodesy.resections' from './pygeodesy/resections.py'>
6test 1215 pygeodesy.rhumbx: <module 'pygeodesy.rhumbx' from './pygeodesy/rhumbx.py'>
6test 1216 pygeodesy.rhumbsolve: <module 'pygeodesy.rhumbsolve' from './pygeodesy/rhumbsolve.py'>
6test 1217 pygeodesy.simplify: <module 'pygeodesy.simplify' from './pygeodesy/simplify.py'>
6test 1218 pygeodesy.sphericalBase: <module 'pygeodesy.sphericalBase' from './pygeodesy/sphericalBase.py'>
6test 1219 pygeodesy.sphericalNvector: <module 'pygeodesy.sphericalNvector' from './pygeodesy/sphericalNvector.py'>
6test 1220 pygeodesy.sphericalTrigonometry: <module 'pygeodesy.sphericalTrigonometry' from './pygeodesy/sphericalTrigonometry.py'>
6test 1221 pygeodesy.trf: <module 'pygeodesy.trf' from './pygeodesy/trf.py'>
6test 1222 pygeodesy.triaxials: <module 'pygeodesy.triaxials' from './pygeodesy/triaxials.py'>
6test 1223 pygeodesy.utmups: <module 'pygeodesy.utmups' from './pygeodesy/utmups.py'>
6test 1224 pygeodesy.webmercator: <module 'pygeodesy.webmercator' from './pygeodesy/webmercator.py'>
6test 1225 pygeodesy.wgrs: <module 'pygeodesy.wgrs' from './pygeodesy/wgrs.py'>
6test 1226 pygeodesy: <module 'pygeodesy' from './pygeodesy/__init__.py'>
6test 1227 base: <module 'base' from './test/base.py'>
6all 1227 testLazily.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 179.415 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testLcc.py
6testing testLcc.py 22.09.02 (module pygeodesy.lcc 22.09.12)
6testLcc(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1 lb1: 448251.0 5411932.0001
6test 2 lb1: 448251, 5411932
6test 3 lb1: [E:448251, N:5411932]
6test 4 lb1: WRF_Lb.WGS84
6test 5 lb1: lb1
6test 6 lb1: (81.929348, -79.558697)
6test 7 lb1: (1.429937, -1.388561)
6test 8 LatLon: 46.5°N, 003.0°E
6test 9 LatLon: 46°30′00.0″N, 003°00′00.0″E
6test 10 toLcc1: 700000 6600000
6test 11 toLcc1: 46.5°N, 003.0°E
6test 12 lb2: 1894411 1564650
6test 13 lb2: Clarke1866
6test 14 lb2: lb2
6test 15 toLatLon2: 35.0°N, 075.0°W
6test 16 toLatLon2: 35°00′00.0007″N, 074°59′59.9997″W
6test 17 toLatLon2: NAD27
6test 18 toLcc2: 1894410.9 1564649.5
6test 19 toLcc2: [E:1894411, N:1564649]
6test 20 toLcc2: Snyder.NAD27

6test 21 Be08Lb: 49.833334°N, 003.025883°E
6test 22 Be08Lb: GRS80

6test 23 Be08Lb: 49.833334°N, 004.359216°E
6test 24 Be08Lb: GRS80

6test 25 Be08Lb: 49.833334°N, 005.692549°E
6test 26 Be08Lb: GRS80

6test 27 Be08Lb: 51.166667°N, 003.025883°E
6test 28 Be08Lb: GRS80

6test 29 Be08Lb: 51.166667°N, 004.359216°E
6test 30 Be08Lb: GRS80

6test 31 Be08Lb: 51.166667°N, 005.692549°E
6test 32 Be08Lb: GRS80

6test 33 Be72Lb: 49.833334°N, 003.034153°E
6test 34 Be72Lb: NAD83

6test 35 Be72Lb: 49.833334°N, 004.367487°E
6test 36 Be72Lb: NAD83

6test 37 Be72Lb: 49.833334°N, 005.70082°E
6test 38 Be72Lb: NAD83

6test 39 Be72Lb: 51.166667°N, 003.034153°E
6test 40 Be72Lb: NAD83

6test 41 Be72Lb: 51.166667°N, 004.367487°E
6test 42 Be72Lb: NAD83

6test 43 Be72Lb: 51.166667°N, 005.70082°E
6test 44 Be72Lb: NAD83

6test 45 Fr93Lb: 49.0°N, 002.0°W
6test 46 Fr93Lb: WGS84

6test 47 Fr93Lb: 49.0°N, 003.0°E
6test 48 Fr93Lb: WGS84

6test 49 Fr93Lb: 49.0°N, 008.0°E
6test 50 Fr93Lb: WGS84

6test 51 Fr93Lb: 44.0°N, 002.0°W
6test 52 Fr93Lb: WGS84

6test 53 Fr93Lb: 44.0°N, 003.0°E
6test 54 Fr93Lb: WGS84

6test 55 Fr93Lb: 44.0°N, 008.0°E
6test 56 Fr93Lb: WGS84

6test 57 MaNLb: 31.73°N, 008.54°W
6test 58 MaNLb: NTF

6test 59 MaNLb: 31.73°N, 005.4°W
6test 60 MaNLb: NTF

6test 61 MaNLb: 31.73°N, 002.26°W
6test 62 MaNLb: NTF

6test 63 MaNLb: 34.87°N, 008.54°W
6test 64 MaNLb: NTF

6test 65 MaNLb: 34.87°N, 005.4°W
6test 66 MaNLb: NTF

6test 67 MaNLb: 34.87°N, 002.26°W
6test 68 MaNLb: NTF

6test 69 MxLb: 17.5°N, 114.0°W
6test 70 MxLb: WGS84

6test 71 MxLb: 17.5°N, 102.0°W
6test 72 MxLb: WGS84

6test 73 MxLb: 17.5°N, 090.0°W
6test 74 MxLb: WGS84

6test 75 MxLb: 29.5°N, 114.0°W
6test 76 MxLb: WGS84

6test 77 MxLb: 29.5°N, 102.0°W
6test 78 MxLb: WGS84

6test 79 MxLb: 29.5°N, 090.0°W
6test 80 MxLb: WGS84

6test 81 PyT_Lb: 45.898939°N, 000.540154°E
6test 82 PyT_Lb: NTF

6test 83 PyT_Lb: 45.898939°N, 002.337229°E
6test 84 PyT_Lb: NTF

6test 85 PyT_Lb: 45.898939°N, 004.134305°E
6test 86 PyT_Lb: NTF

6test 87 PyT_Lb: 47.696014°N, 000.540154°E
6test 88 PyT_Lb: NTF

6test 89 PyT_Lb: 47.696014°N, 002.337229°E
6test 90 PyT_Lb: NTF

6test 91 PyT_Lb: 47.696014°N, 004.134305°E
6test 92 PyT_Lb: NTF

6test 93 Snyder: 33.0°N, 108.0°W
6test 94 Snyder: NAD27

6test 95 Snyder: 33.0°N, 096.0°W
6test 96 Snyder: NAD27

6test 97 Snyder: 33.0°N, 084.0°W
6test 98 Snyder: NAD27

6test 99 Snyder: 45.0°N, 108.0°W
6test 100 Snyder: NAD27

6test 101 Snyder: 45.0°N, 096.0°W
6test 102 Snyder: NAD27

6test 103 Snyder: 45.0°N, 084.0°W
6test 104 Snyder: NAD27

6test 105 USA_Lb: 33.0°N, 108.0°W
6test 106 USA_Lb: WGS84

6test 107 USA_Lb: 33.0°N, 096.0°W
6test 108 USA_Lb: WGS84

6test 109 USA_Lb: 33.0°N, 084.0°W
6test 110 USA_Lb: WGS84

6test 111 USA_Lb: 45.0°N, 108.0°W
6test 112 USA_Lb: WGS84

6test 113 USA_Lb: 45.0°N, 096.0°W
6test 114 USA_Lb: WGS84

6test 115 USA_Lb: 45.0°N, 084.0°W
6test 116 USA_Lb: WGS84

6test 117 WRF_Lb: 33.0°N, 109.0°W
6test 118 WRF_Lb: WGS84

6test 119 WRF_Lb: 33.0°N, 097.0°W
6test 120 WRF_Lb: WGS84

6test 121 WRF_Lb: 33.0°N, 085.0°W
6test 122 WRF_Lb: WGS84

6test 123 WRF_Lb: 45.0°N, 109.0°W
6test 124 WRF_Lb: WGS84

6test 125 WRF_Lb: 45.0°N, 097.0°W
6test 126 WRF_Lb: WGS84

6test 127 WRF_Lb: 45.0°N, 085.0°W
6test 128 WRF_Lb: WGS84

6testLcc(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 129 lb1: 448251.0 5411932.0001
6test 130 lb1: 448251, 5411932
6test 131 lb1: [E:448251, N:5411932]
6test 132 lb1: WRF_Lb.WGS84
6test 133 lb1: lb1
6test 134 lb1: (81.929348, -79.558697)
6test 135 lb1: (1.429937, -1.388561)
6test 136 LatLon: 46.5°N, 003.0°E
6test 137 LatLon: 46°30′00.0″N, 003°00′00.0″E
6test 138 toLcc1: 700000 6600000
6test 139 toLcc1: 46.5°N, 003.0°E
6test 140 lb2: 1894411 1564650
6test 141 lb2: Clarke1866
6test 142 lb2: lb2
6test 143 toLatLon2: 35.0°N, 075.0°W
6test 144 toLatLon2: 35°00′00.0007″N, 074°59′59.9997″W
6test 145 toLatLon2: NAD27
6test 146 toLcc2: 1894410.9 1564649.5
6test 147 toLcc2: [E:1894411, N:1564649]
6test 148 toLcc2: Snyder.NAD27

6test 149 Be08Lb: 49.833334°N, 003.025883°E
6test 150 Be08Lb: GRS80

6test 151 Be08Lb: 49.833334°N, 004.359216°E
6test 152 Be08Lb: GRS80

6test 153 Be08Lb: 49.833334°N, 005.692549°E
6test 154 Be08Lb: GRS80

6test 155 Be08Lb: 51.166667°N, 003.025883°E
6test 156 Be08Lb: GRS80

6test 157 Be08Lb: 51.166667°N, 004.359216°E
6test 158 Be08Lb: GRS80

6test 159 Be08Lb: 51.166667°N, 005.692549°E
6test 160 Be08Lb: GRS80

6test 161 Be72Lb: 49.833334°N, 003.034153°E
6test 162 Be72Lb: NAD83

6test 163 Be72Lb: 49.833334°N, 004.367487°E
6test 164 Be72Lb: NAD83

6test 165 Be72Lb: 49.833334°N, 005.70082°E
6test 166 Be72Lb: NAD83

6test 167 Be72Lb: 51.166667°N, 003.034153°E
6test 168 Be72Lb: NAD83

6test 169 Be72Lb: 51.166667°N, 004.367487°E
6test 170 Be72Lb: NAD83

6test 171 Be72Lb: 51.166667°N, 005.70082°E
6test 172 Be72Lb: NAD83

6test 173 Fr93Lb: 49.0°N, 002.0°W
6test 174 Fr93Lb: WGS84

6test 175 Fr93Lb: 49.0°N, 003.0°E
6test 176 Fr93Lb: WGS84

6test 177 Fr93Lb: 49.0°N, 008.0°E
6test 178 Fr93Lb: WGS84

6test 179 Fr93Lb: 44.0°N, 002.0°W
6test 180 Fr93Lb: WGS84

6test 181 Fr93Lb: 44.0°N, 003.0°E
6test 182 Fr93Lb: WGS84

6test 183 Fr93Lb: 44.0°N, 008.0°E
6test 184 Fr93Lb: WGS84

6test 185 MaNLb: 31.73°N, 008.54°W
6test 186 MaNLb: NTF

6test 187 MaNLb: 31.73°N, 005.4°W
6test 188 MaNLb: NTF

6test 189 MaNLb: 31.73°N, 002.26°W
6test 190 MaNLb: NTF

6test 191 MaNLb: 34.87°N, 008.54°W
6test 192 MaNLb: NTF

6test 193 MaNLb: 34.87°N, 005.4°W
6test 194 MaNLb: NTF

6test 195 MaNLb: 34.87°N, 002.26°W
6test 196 MaNLb: NTF

6test 197 MxLb: 17.5°N, 114.0°W
6test 198 MxLb: WGS84

6test 199 MxLb: 17.5°N, 102.0°W
6test 200 MxLb: WGS84

6test 201 MxLb: 17.5°N, 090.0°W
6test 202 MxLb: WGS84

6test 203 MxLb: 29.5°N, 114.0°W
6test 204 MxLb: WGS84

6test 205 MxLb: 29.5°N, 102.0°W
6test 206 MxLb: WGS84

6test 207 MxLb: 29.5°N, 090.0°W
6test 208 MxLb: WGS84

6test 209 PyT_Lb: 45.898939°N, 000.540154°E
6test 210 PyT_Lb: NTF

6test 211 PyT_Lb: 45.898939°N, 002.337229°E
6test 212 PyT_Lb: NTF

6test 213 PyT_Lb: 45.898939°N, 004.134305°E
6test 214 PyT_Lb: NTF

6test 215 PyT_Lb: 47.696014°N, 000.540154°E
6test 216 PyT_Lb: NTF

6test 217 PyT_Lb: 47.696014°N, 002.337229°E
6test 218 PyT_Lb: NTF

6test 219 PyT_Lb: 47.696014°N, 004.134305°E
6test 220 PyT_Lb: NTF

6test 221 Snyder: 33.0°N, 108.0°W
6test 222 Snyder: NAD27

6test 223 Snyder: 33.0°N, 096.0°W
6test 224 Snyder: NAD27

6test 225 Snyder: 33.0°N, 084.0°W
6test 226 Snyder: NAD27

6test 227 Snyder: 45.0°N, 108.0°W
6test 228 Snyder: NAD27

6test 229 Snyder: 45.0°N, 096.0°W
6test 230 Snyder: NAD27

6test 231 Snyder: 45.0°N, 084.0°W
6test 232 Snyder: NAD27

6test 233 USA_Lb: 33.0°N, 108.0°W
6test 234 USA_Lb: WGS84

6test 235 USA_Lb: 33.0°N, 096.0°W
6test 236 USA_Lb: WGS84

6test 237 USA_Lb: 33.0°N, 084.0°W
6test 238 USA_Lb: WGS84

6test 239 USA_Lb: 45.0°N, 108.0°W
6test 240 USA_Lb: WGS84

6test 241 USA_Lb: 45.0°N, 096.0°W
6test 242 USA_Lb: WGS84

6test 243 USA_Lb: 45.0°N, 084.0°W
6test 244 USA_Lb: WGS84

6test 245 WRF_Lb: 33.0°N, 109.0°W
6test 246 WRF_Lb: WGS84

6test 247 WRF_Lb: 33.0°N, 097.0°W
6test 248 WRF_Lb: WGS84

6test 249 WRF_Lb: 33.0°N, 085.0°W
6test 250 WRF_Lb: WGS84

6test 251 WRF_Lb: 45.0°N, 109.0°W
6test 252 WRF_Lb: WGS84

6test 253 WRF_Lb: 45.0°N, 097.0°W
6test 254 WRF_Lb: WGS84

6test 255 WRF_Lb: 45.0°N, 085.0°W
6test 256 WRF_Lb: WGS84

6testConic(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 257 SnyderN: name='SnyderN', lat0=23, lon0=-96, par1=33, par2=45, E0=0, N0=0, k0=1, SP=2, datum=Datum(name='NAD27', ellipsoid=Ellipsoids.Clarke1866, transform=Transforms.NAD27)
6test 258 _SnyderN: name='_SnyderN', lat0=23, lon0=-96, par1=33, E0=0, N0=0, k0=1, SP=1, datum=Datum(name='NAD27', ellipsoid=Ellipsoids.Clarke1866, transform=Transforms.NAD27)
6test 259 _SnyderN: name='_SnyderN', lat0=23, lon0=-96, par1=33, E0=0, N0=0, k0=1, SP=1, datum=Datum(name='NAD83', ellipsoid=Ellipsoids.GRS80, transform=Transforms.NAD83)
6test 260 _SnyderN .auth: ''
6test 261 _SnyderN .opt3: 0.0
6test 262 _SnyderN .latlon0: (23.0, -96.0)
6test 263 _SnyderN .philam0: (0.401426, -1.675516)
6testConic(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 264 SnyderV: name='SnyderV', lat0=23, lon0=-96, par1=33, par2=45, E0=0, N0=0, k0=1, SP=2, datum=Datum(name='NAD27', ellipsoid=Ellipsoids.Clarke1866, transform=Transforms.NAD27)
6test 265 _SnyderV: name='_SnyderV', lat0=23, lon0=-96, par1=33, E0=0, N0=0, k0=1, SP=1, datum=Datum(name='NAD27', ellipsoid=Ellipsoids.Clarke1866, transform=Transforms.NAD27)
6test 266 _SnyderV: name='_SnyderV', lat0=23, lon0=-96, par1=33, E0=0, N0=0, k0=1, SP=1, datum=Datum(name='NAD83', ellipsoid=Ellipsoids.GRS80, transform=Transforms.NAD83)
6test 267 _SnyderV .auth: ''
6test 268 _SnyderV .opt3: 0.0
6test 269 _SnyderV .latlon0: (23.0, -96.0)
6test 270 _SnyderV .philam0: (0.401426, -1.675516)
6all 270 testLcc.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 22.092 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testLtp.py
./pygeodesy/deprecated/__init__.py:87: DeprecationWarning: class L{pygeodesy.deprecated.EcefCartesian} has been DEPRECATED, use class L{LocalCartesian}.
  deprecated_class(self.__class__)
./test/testLtp.py:42: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.forward} has been DEPRECATED, use method L{LocalCartesian.forward}.
  t = c.forward(33.3, 44.4, 6000)
./test/testLtp.py:46: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.reverse} has been DEPRECATED, use method L{LocalCartesian.reverse}.
  t = c.reverse(37288.97, 33374.29, 5783.65)
./test/testLtp.py:55: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.forward} has been DEPRECATED, use method L{LocalCartesian.forward}.
  t = c.forward(LatLon_(50.9, 1.8, name='Calais'))  # Local9Tuple
./test/testLtp.py:59: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.reverse} has been DEPRECATED, use method L{LocalCartesian.reverse}.
  t = c.reverse(-37518.64, 229949.65, -4260.43)  # Local9Tuple
./test/testLtp.py:63: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.reverse} has been DEPRECATED, use method L{LocalCartesian.reverse}.
  t = c.reverse(-38e3, 230e3, -4e3)
./test/testLtp.py:67: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.forward} has been DEPRECATED, use method L{LocalCartesian.forward}.
  t = c.forward(50.9, 1.79, 264.92)  # Local9Tuple
./test/testLtp.py:75: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.reverse} has been DEPRECATED, use method L{LocalCartesian.reverse}.
  t = Z.reverse(M).toLatLon(datum=None)  # Matterhorn Xyz to LatLon
./test/testLtp.py:77: DeprecationWarning: method L{pygeodesy.deprecated.EcefCartesian.forward} has been DEPRECATED, use method L{LocalCartesian.forward}.
  self.test('xyz', Z.forward(t).xyz.toStr(prec=1), '(-7134.8, -4556.3, 2852.4)', known=Sudano)
6testing testLtp.py 22.10.04
6test 1 EcefCartesian: {}
6test 2 name: Test
6test 3 toStr: EcefCartesian(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test')  FAILED, KNOWN, expected EcefCartesian
6test 4 copy(EcefCartesian): (<class 'pygeodesy.deprecated.EcefCartesian.<locals>.EcefCartesian'>, True)
6test 5 EcefCartesian.copy(): (<class 'pygeodesy.deprecated.EcefCartesian.<locals>.EcefCartesian'>, True)
6test 6 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test'
6test 7 forward: 37288.97, 33374.29, 5783.65
6test 8 name: Test
6test 9 reverse: 33.3, 44.4, 6000.0
6test 10 name: Test
6test 11 name: Paris
6test 12 Paris: 48.833, 2.333, 0.0
6test 13 forward: -37518.64, 229949.65, -4260.43
6test 14 name: Calais
6test 15 reverse: 50.9, 1.8, -0.0
6test 16 name: Paris
6test 17 reverse: -38000.0, 230000.0, -4000.0
6test 18 reverse: 50.9, 1.79, 264.92
6test 19 forward: -38223.7, 229964.2, -4000.0
6test 20 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'  FAILED, KNOWN, expected EcefCartesian
6test 21 Matterhorn: (45.976, 7.658, 4531.01)
6test 22 xyz: (-7134.8, -4556.3, 2852.4)
6test 23 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 24 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 2, None, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))  FAILED, KNOWN, expected Ecef9Tuple
6test 25 _local2ecef: Ecef9Tuple
6test 26 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, EcefCartesian(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009608, C=2, M=None, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84)), None)  FAILED, KNOWN, expected Local9Tuple
6test 27 _ecef2local: Local9Tuple
6test 28 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 29 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 30 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 31 Ned: [-4556.3, -7134.8, -2852.4]
6test 32 Enu: [-7134.8, -4556.3, 2852.4]
6test 33 Ned: [-4556.3, -7134.8, -2852.4]
6test 34 Frustum: 90.0, 90.0
6test 35 hfov: 90.0
6test 36 vfov: 90.0
6test 37 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 38 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 39 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 40 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 41 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 42 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 43 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 44 alt: 0.0
6test 45 tilt: -10.0
6test 46 roll: -20.0
6test 47 yaw: 330.0
6test 48 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 49 rotate: (-0.005694, 1.334382, 1.104261)
6test 50 tyr3d: (0.0, 0.0, 0.0)
6test 51 tyr3d: (0.0, -2.0, 0.0)
6test 52 tyr3d: (0.0, -2.0, 0.0)
6test 53 tyr3d: (0.0, 0.0, -2.0)
6test 54 LocalCartesian: {}
6test 55 name: Test
6test 56 toStr: LocalCartesian(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test')  FAILED, KNOWN, expected LocalCartesian
6test 57 copy(LocalCartesian): (<class 'pygeodesy.ltp.LocalCartesian'>, True)
6test 58 LocalCartesian.copy(): (<class 'pygeodesy.ltp.LocalCartesian'>, True)
6test 59 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test'
6test 60 forward: 37288.97, 33374.29, 5783.65
6test 61 name: Test
6test 62 reverse: 33.3, 44.4, 6000.0
6test 63 name: Test
6test 64 name: Paris
6test 65 Paris: 48.833, 2.333, 0.0
6test 66 forward: -37518.64, 229949.65, -4260.43
6test 67 name: Calais
6test 68 reverse: 50.9, 1.8, -0.0
6test 69 name: Paris
6test 70 reverse: -38000.0, 230000.0, -4000.0
6test 71 reverse: 50.9, 1.79, 264.92
6test 72 forward: -38223.7, 229964.2, -4000.0
6test 73 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'  FAILED, KNOWN, expected LocalCartesian
6test 74 Matterhorn: (45.976, 7.658, 4531.01)
6test 75 xyz: (-7134.8, -4556.3, 2852.4)
6test 76 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 77 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 2, None, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))  FAILED, KNOWN, expected Ecef9Tuple
6test 78 _local2ecef: Ecef9Tuple
6test 79 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, LocalCartesian(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009608, C=2, M=None, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84)), None)  FAILED, KNOWN, expected Local9Tuple
6test 80 _ecef2local: Local9Tuple
6test 81 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 82 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 83 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 84 Ned: [-4556.3, -7134.8, -2852.4]
6test 85 Enu: [-7134.8, -4556.3, 2852.4]
6test 86 Ned: [-4556.3, -7134.8, -2852.4]
6test 87 Frustum: 90.0, 90.0
6test 88 hfov: 90.0
6test 89 vfov: 90.0
6test 90 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 91 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 92 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 93 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 94 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 95 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 96 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 97 alt: 0.0
6test 98 tilt: -10.0
6test 99 roll: -20.0
6test 100 yaw: 330.0
6test 101 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 102 rotate: (-0.005694, 1.334382, 1.104261)
6test 103 tyr3d: (0.0, 0.0, 0.0)
6test 104 tyr3d: (0.0, -2.0, 0.0)
6test 105 tyr3d: (0.0, -2.0, 0.0)
6test 106 tyr3d: (0.0, 0.0, -2.0)
6test 107 Ltp: {}
6test 108 name: Test
6test 109 toStr: Ltp(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test')  FAILED, KNOWN, expected Ltp
6test 110 copy(Ltp): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 111 Ltp.copy(): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 112 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test'
6test 113 forward: 37288.97, 33374.29, 5783.65
6test 114 name: Test
6test 115 reverse: 33.3, 44.4, 6000.0
6test 116 name: Test
6test 117 name: Paris
6test 118 Paris: 48.833, 2.333, 0.0
6test 119 forward: -37518.64, 229949.65, -4260.43
6test 120 name: Calais
6test 121 reverse: 50.9, 1.8, -0.0
6test 122 name: Paris
6test 123 reverse: -38000.0, 230000.0, -4000.0
6test 124 reverse: 50.9, 1.79, 264.92
6test 125 forward: -38223.7, 229964.2, -4000.0
6test 126 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'  FAILED, KNOWN, expected Ltp
6test 127 Matterhorn: (45.976, 7.658, 4531.01)
6test 128 xyz: (-7134.8, -4556.3, 2852.4)
6test 129 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 130 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 2, None, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))  FAILED, KNOWN, expected Ecef9Tuple
6test 131 _local2ecef: Ecef9Tuple
6test 132 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009608, C=2, M=None, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84)), None)  FAILED, KNOWN, expected Local9Tuple
6test 133 _ecef2local: Local9Tuple
6test 134 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 135 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 136 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 137 Ned: [-4556.3, -7134.8, -2852.4]
6test 138 Enu: [-7134.8, -4556.3, 2852.4]
6test 139 Ned: [-4556.3, -7134.8, -2852.4]
6test 140 Frustum: 90.0, 90.0
6test 141 hfov: 90.0
6test 142 vfov: 90.0
6test 143 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 144 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 145 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 146 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 147 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 148 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 149 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 150 alt: 0.0
6test 151 tilt: -10.0
6test 152 roll: -20.0
6test 153 yaw: 330.0
6test 154 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 155 rotate: (-0.005694, 1.334382, 1.104261)
6test 156 tyr3d: (0.0, 0.0, 0.0)
6test 157 tyr3d: (0.0, -2.0, 0.0)
6test 158 tyr3d: (0.0, -2.0, 0.0)
6test 159 tyr3d: (0.0, 0.0, -2.0)
6test 160 Ltp: {'ecef': EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name='')}
6test 161 name: Test
6test 162 toStr: Ltp(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test')  FAILED, KNOWN, expected Ltp
6test 163 copy(Ltp): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 164 Ltp.copy(): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 165 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Test'
6test 166 forward: 37288.97, 33374.29, 5783.65
6test 167 name: Test
6test 168 reverse: 33.3, 44.4, 6000.0
6test 169 name: Test
6test 170 name: Paris
6test 171 Paris: 48.833, 2.333, 0.0
6test 172 forward: -37518.64, 229949.65, -4260.43
6test 173 name: Calais
6test 174 reverse: 50.9, 1.8, -0.0
6test 175 name: Paris
6test 176 reverse: -38000.0, 230000.0, -4000.0
6test 177 reverse: 50.9, 1.79, 264.92
6test 178 forward: -38223.7, 229964.2, -4000.0
6test 179 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'  FAILED, KNOWN, expected Ltp
6test 180 Matterhorn: (45.976, 7.658, 4531.01)
6test 181 xyz: (-7134.8, -4556.3, 2852.4)
6test 182 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 183 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 2, None, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))  FAILED, KNOWN, expected Ecef9Tuple
6test 184 _local2ecef: Ecef9Tuple
6test 185 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009608, C=2, M=None, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84)), None)  FAILED, KNOWN, expected Local9Tuple
6test 186 _ecef2local: Local9Tuple
6test 187 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 188 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 189 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 190 Ned: [-4556.3, -7134.8, -2852.4]
6test 191 Enu: [-7134.8, -4556.3, 2852.4]
6test 192 Ned: [-4556.3, -7134.8, -2852.4]
6test 193 Frustum: 90.0, 90.0
6test 194 hfov: 90.0
6test 195 vfov: 90.0
6test 196 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 197 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 198 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 199 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 200 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 201 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 202 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 203 alt: 0.0
6test 204 tilt: -10.0
6test 205 roll: -20.0
6test 206 yaw: 330.0
6test 207 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 208 rotate: (-0.005694, 1.334382, 1.104261)
6test 209 tyr3d: (0.0, 0.0, 0.0)
6test 210 tyr3d: (0.0, -2.0, 0.0)
6test 211 tyr3d: (0.0, -2.0, 0.0)
6test 212 tyr3d: (0.0, 0.0, -2.0)
6test 213 Ltp: {'ecef': EcefFarrell21(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name='')}
6test 214 name: Test
6test 215 toStr: Ltp(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefFarrell21(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test')  FAILED, KNOWN, expected Ltp
6test 216 copy(Ltp): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 217 Ltp.copy(): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 218 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefFarrell21(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test'
6test 219 forward: 37288.97, 33374.29, 5783.65
6test 220 name: Test
6test 221 reverse: 33.3, 44.4, 6000.0
6test 222 name: Test
6test 223 name: Paris
6test 224 Paris: 48.833, 2.333, 0.0
6test 225 forward: -37518.64, 229949.65, -4260.43
6test 226 name: Calais
6test 227 reverse: 50.9, 1.8, -0.0
6test 228 name: Paris
6test 229 reverse: -38000.0, 230000.0, -4000.0
6test 230 reverse: 50.9, 1.79, 264.92
6test 231 forward: -38223.7, 229964.2, -4000.0
6test 232 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefFarrell21(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'  FAILED, KNOWN, expected Ltp
6test 233 Matterhorn: (45.976, 7.658, 4531.01)
6test 234 xyz: (-7134.8, -4556.3, 2852.4)
6test 235 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 236 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 1, None, Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity))  FAILED, KNOWN, expected Ecef9Tuple
6test 237 _local2ecef: Ecef9Tuple
6test 238 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefFarrell21(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009608, C=1, M=None, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity)), None)  FAILED, KNOWN, expected Local9Tuple
6test 239 _ecef2local: Local9Tuple
6test 240 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 241 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 242 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 243 Ned: [-4556.3, -7134.8, -2852.4]
6test 244 Enu: [-7134.8, -4556.3, 2852.4]
6test 245 Ned: [-4556.3, -7134.8, -2852.4]
6test 246 Frustum: 90.0, 90.0
6test 247 hfov: 90.0
6test 248 vfov: 90.0
6test 249 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 250 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 251 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 252 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 253 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 254 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 255 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 256 alt: 0.0
6test 257 tilt: -10.0
6test 258 roll: -20.0
6test 259 yaw: 330.0
6test 260 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 261 rotate: (-0.005694, 1.334382, 1.104261)
6test 262 tyr3d: (0.0, 0.0, 0.0)
6test 263 tyr3d: (0.0, -2.0, 0.0)
6test 264 tyr3d: (0.0, -2.0, 0.0)
6test 265 tyr3d: (0.0, 0.0, -2.0)
6test 266 Ltp: {'ecef': EcefFarrell22(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name='')}
6test 267 name: Test
6test 268 toStr: Ltp(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefFarrell22(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test')  FAILED, KNOWN, expected Ltp
6test 269 copy(Ltp): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 270 Ltp.copy(): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 271 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefFarrell22(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test'
6test 272 forward: 37288.97, 33374.29, 5783.65
6test 273 name: Test
6test 274 reverse: 33.3, 44.4, 6000.0
6test 275 name: Test
6test 276 name: Paris
6test 277 Paris: 48.833, 2.333, 0.0
6test 278 forward: -37518.64, 229949.65, -4260.43
6test 279 name: Calais
6test 280 reverse: 50.9, 1.8, -0.0
6test 281 name: Paris
6test 282 reverse: -38000.0, 230000.0, -4000.0
6test 283 reverse: 50.9, 1.79, 264.92
6test 284 forward: -38223.7, 229964.2, -4000.0
6test 285 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefFarrell22(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'  FAILED, KNOWN, expected Ltp
6test 286 Matterhorn: (45.976, 7.658, 4531.01)
6test 287 xyz: (-7134.8, -4556.3, 2852.4)
6test 288 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 289 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 1, None, Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity))  FAILED, KNOWN, expected Ecef9Tuple
6test 290 _local2ecef: Ecef9Tuple
6test 291 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefFarrell22(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009609, C=1, M=None, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity)), None)  FAILED, KNOWN, expected Local9Tuple
6test 292 _ecef2local: Local9Tuple
6test 293 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 294 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 295 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 296 Ned: [-4556.3, -7134.8, -2852.4]
6test 297 Enu: [-7134.8, -4556.3, 2852.4]
6test 298 Ned: [-4556.3, -7134.8, -2852.4]
6test 299 Frustum: 90.0, 90.0
6test 300 hfov: 90.0
6test 301 vfov: 90.0
6test 302 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 303 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 304 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 305 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 306 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 307 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 308 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 309 alt: 0.0
6test 310 tilt: -10.0
6test 311 roll: -20.0
6test 312 yaw: 330.0
6test 313 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 314 rotate: (-0.005694, 1.334382, 1.104261)
6test 315 tyr3d: (0.0, 0.0, 0.0)
6test 316 tyr3d: (0.0, -2.0, 0.0)
6test 317 tyr3d: (0.0, -2.0, 0.0)
6test 318 tyr3d: (0.0, 0.0, -2.0)
6test 319 Ltp: {'ecef': EcefVeness(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name='')}
6test 320 name: Test
6test 321 toStr: Ltp(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefVeness(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test')  FAILED, KNOWN, expected Ltp
6test 322 copy(Ltp): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 323 Ltp.copy(): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 324 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefVeness(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test'
6test 325 forward: 37288.97, 33374.29, 5783.65
6test 326 name: Test
6test 327 reverse: 33.3, 44.4, 6000.0
6test 328 name: Test
6test 329 name: Paris
6test 330 Paris: 48.833, 2.333, 0.0
6test 331 forward: -37518.64, 229949.65, -4260.43
6test 332 name: Calais
6test 333 reverse: 50.9, 1.8, -0.0
6test 334 name: Paris
6test 335 reverse: -38000.0, 230000.0, -4000.0
6test 336 reverse: 50.9, 1.79, 264.92
6test 337 forward: -38223.7, 229964.2, -4000.0
6test 338 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefVeness(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'  FAILED, KNOWN, expected Ltp
6test 339 Matterhorn: (45.976, 7.658, 4531.01)
6test 340 xyz: (-7134.8, -4556.3, 2852.4)
6test 341 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 342 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 1, None, Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity))  FAILED, KNOWN, expected Ecef9Tuple
6test 343 _local2ecef: Ecef9Tuple
6test 344 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefVeness(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009608, C=1, M=None, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity)), None)  FAILED, KNOWN, expected Local9Tuple
6test 345 _ecef2local: Local9Tuple
6test 346 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 347 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 348 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 349 Ned: [-4556.3, -7134.8, -2852.4]
6test 350 Enu: [-7134.8, -4556.3, 2852.4]
6test 351 Ned: [-4556.3, -7134.8, -2852.4]
6test 352 Frustum: 90.0, 90.0
6test 353 hfov: 90.0
6test 354 vfov: 90.0
6test 355 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 356 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 357 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 358 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 359 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 360 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 361 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 362 alt: 0.0
6test 363 tilt: -10.0
6test 364 roll: -20.0
6test 365 yaw: 330.0
6test 366 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 367 rotate: (-0.005694, 1.334382, 1.104261)
6test 368 tyr3d: (0.0, 0.0, 0.0)
6test 369 tyr3d: (0.0, -2.0, 0.0)
6test 370 tyr3d: (0.0, -2.0, 0.0)
6test 371 tyr3d: (0.0, 0.0, -2.0)
6test 372 Ltp: {'ecef': EcefSudano(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name='')}
6test 373 name: Test
6test 374 toStr: Ltp(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefSudano(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test')  FAILED, KNOWN, expected Ltp
6test 375 copy(Ltp): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 376 Ltp.copy(): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 377 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefSudano(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test'
6test 378 forward: 37288.97, 33374.29, 5783.65
6test 379 name: Test
6test 380 reverse: 33.33, 44.4, 5998.84  FAILED, KNOWN, expected 33.3, 44.4, 6000.0
6test 381 name: Test
6test 382 name: Paris
6test 383 Paris: 48.833, 2.333, 0.0
6test 384 forward: -37518.64, 229949.65, -4260.43
6test 385 name: Calais
6test 386 reverse: 51.01, 1.8, -11.8  FAILED, KNOWN, expected 50.9, 1.8, -0.0
6test 387 name: Paris
6test 388 reverse: -38000.0, 230000.0, -4000.0
6test 389 reverse: 51.01, 1.79, 253.12  FAILED, KNOWN, expected 50.9, 1.79, 264.92
6test 390 forward: -38223.7, 229964.2, -4000.0
6test 391 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefSudano(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'  FAILED, KNOWN, expected Ltp
6test 392 Matterhorn: (46.06, 7.658, 4524.116)  FAILED, KNOWN, expected (45.976, 7.658, 4531.01)
6test 393 xyz: (-7124.0, 4817.7, 2845.3)  FAILED, KNOWN, expected (-7134.8, -4556.3, 2852.4)
6test 394 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 395 _local2ecef: (4403757.602, 592124.536, 4566652.082, 46.06, 7.658, 4524.116, 7, None, Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity))  FAILED, KNOWN, expected Ecef9Tuple
6test 396 _local2ecef: Ecef9Tuple
6test 397 _ecef2local: (-7134.8, -4556.3, 2852.4, 46.06, 7.658, 4524.116, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefSudano(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=46.060275, lon=7.657999, height=4524.115631, C=7, M=None, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity)), None)  FAILED, KNOWN, expected Local9Tuple
6test 398 _ecef2local: Local9Tuple
6test 399 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 400 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 401 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 402 Ned: [-4556.3, -7134.8, -2852.4]
6test 403 Enu: [-7134.8, -4556.3, 2852.4]
6test 404 Ned: [-4556.3, -7134.8, -2852.4]
6test 405 Frustum: 90.0, 90.0
6test 406 hfov: 90.0
6test 407 vfov: 90.0
6test 408 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 409 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 410 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 411 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 412 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 413 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 414 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 415 alt: 0.0
6test 416 tilt: -10.0
6test 417 roll: -20.0
6test 418 yaw: 330.0
6test 419 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 420 rotate: (-0.005694, 1.334382, 1.104261)
6test 421 tyr3d: (0.0, 0.0, 0.0)
6test 422 tyr3d: (0.0, -2.0, 0.0)
6test 423 tyr3d: (0.0, -2.0, 0.0)
6test 424 tyr3d: (0.0, 0.0, -2.0)
6test 425 Ltp: {'ecef': EcefYou(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name='')}
6test 426 name: Test
6test 427 toStr: Ltp(lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefYou(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test')  FAILED, KNOWN, expected Ltp
6test 428 copy(Ltp): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 429 Ltp.copy(): (<class 'pygeodesy.ltp.Ltp'>, True)
6test 430 New: lat0=33.0, lon0=44.0, height0=20.0, M=EcefMatrix(_0_0_=-0.694658, _0_1_=-0.391781, _0_2_=0.603289, _1_0_=0.71934, _1_1_=-0.378338, _1_2_=0.58259, _2_0_=0.0, _2_1_=0.838671, _2_2_=0.544639), ecef=EcefYou(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Test'
6test 431 forward: 37288.97, 33374.29, 5783.65
6test 432 name: Test
6test 433 reverse: 33.3, 44.4, 6000.0
6test 434 name: Test
6test 435 name: Paris
6test 436 Paris: 48.833, 2.333, 0.0
6test 437 forward: -37518.64, 229949.65, -4260.43
6test 438 name: Calais
6test 439 reverse: 50.9, 1.8, -0.0
6test 440 name: Paris
6test 441 reverse: -38000.0, 230000.0, -4000.0
6test 442 reverse: 50.9, 1.79, 264.92
6test 443 forward: -38223.7, 229964.2, -4000.0
6test 444 Zermatt: lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefYou(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'  FAILED, KNOWN, expected Ltp
6test 445 Matterhorn: (45.976, 7.658, 4531.01)
6test 446 xyz: (-7134.8, -4556.3, 2852.4)
6test 447 _local2ecef: 4403757.602, 592124.536, 4566652.082
6test 448 _local2ecef: (4403757.602, 592124.536, 4566652.082, 45.976, 7.658, 4531.01, 1, None, Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity))  FAILED, KNOWN, expected Ecef9Tuple
6test 449 _local2ecef: Ecef9Tuple
6test 450 _ecef2local: (-7134.8, -4556.3, 2852.4, 45.976, 7.658, 4531.01, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefYou(a=6378137.0, f=0.003352811, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity), name=''), name='Zermatt'), Ecef9Tuple(x=4403757.601549, y=592124.535536, z=4566652.082005, lat=45.976, lon=7.657999, height=4531.009608, C=1, M=None, datum=Datum(name='_WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.Identity)), None)  FAILED, KNOWN, expected Local9Tuple
6test 451 _ecef2local: Local9Tuple
6test 452 Xyz: (-7134.8, -4556.3, 2852.4, None)
6test 453 Aer: (-7134.912, -4444.548, 2852.474, None)
6test 454 Enu: (-7134.8, -4556.3, 2852.4, None)
6test 455 Ned: [-4556.3, -7134.8, -2852.4]
6test 456 Enu: [-7134.8, -4556.3, 2852.4]
6test 457 Ned: [-4556.3, -7134.8, -2852.4]
6test 458 Frustum: 90.0, 90.0
6test 459 hfov: 90.0
6test 460 vfov: 90.0
6test 461 footprint: (Xyz4Tuple(x=0.0, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-1000.0, z=0.0, ltp=None))
6test 462 footprint.xyzLocal5: ([X:0.0, Y:0.0, Z:0.0], [X:-1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:1000.0, Z:0.0], [X:1000.0, Y:-1000.0, Z:0.0], [X:-1000.0, Y:-1000.0, Z:0.0])
6test 463 footprint.toLatLon5: (LatLon_(00.0°N, 000.0°E), LatLon_(00.009044°N, 000.008983°W, +0.16), LatLon_(00.009044°N, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°E, +0.16), LatLon_(00.009044°S, 000.008983°W, +0.16))
6test 464 footprint: (Xyz4Tuple(x=-999.650995, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=1000.0, z=0.0, ltp=None), Xyz4Tuple(x=0.174533, y=-1000.0, z=0.0, ltp=None), Xyz4Tuple(x=-5729577.893136, y=-1000.0, z=0.0, ltp=None))
6test 465 footprint: (Xyz4Tuple(x=-414.213562, y=0.0, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=414.213562, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-414.213562, z=0.0, ltp=None), Xyz4Tuple(x=-1000.0, y=-414.213562, z=0.0, ltp=None))
6test 466 footprint: (Xyz4Tuple(x=414.213562, y=-57289.961631, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=2538.647896, z=0.0, ltp=None), Xyz4Tuple(x=0.0, y=-2299.842547, z=0.0, ltp=None), Xyz4Tuple(x=1000.0, y=-2299.842547, z=0.0, ltp=None))
6test 467 Attitude: (0.0, -10.0, 330.0, -20.0)
6test 468 alt: 0.0
6test 469 tilt: -10.0
6test 470 roll: -20.0
6test 471 yaw: 330.0
6test 472 matrix: ((0.8137976813493738, -0.44096961052988237, -0.37852230636979245), (0.46984631039295416, 0.8825641192593856, -0.01802831123629725), (0.3420201433256687, -0.16317591116653482, 0.9254165783983234))  FAILED, KNOWN, expected ((0.8137976813493737, -0.4409696105298823, -0.3785223063697926), (0.4698463103929541, 0.8825641192593856, -0.01802831123629725), (0.3420201433256688, -0.16317591116653488, 0.9254165783983233))
6test 473 rotate: (-0.005694, 1.334382, 1.104261)
6test 474 tyr3d: (0.0, 0.0, 0.0)
6test 475 tyr3d: (0.0, -2.0, 0.0)
6test 476 tyr3d: (0.0, -2.0, 0.0)
6test 477 tyr3d: (0.0, 0.0, -2.0)
6test 478 ChLV: ...
6test 479 name: Test
6test 480 ChLV_: ChLV
6test 481 forward1: (-72.039994, -147.361444, -49.552111, 46.95108, 7.438637, 0.0, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 482 Y, X, h_: (-72.03999403763596, -147.3614439740948, -49.552110733046206)
6test 483 EN2_LV95: (2599927.960006, 1199852.638556)
6test 484 yx2_LV03: (599927.960006, 199852.638556)
6test 485 reverse1: (-72.039994, -147.361444, -49.552111, 46.95108, 7.438637, 0.0, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 486 reverse2: (100000.0, 0.0, 600.0, 46.944873, 8.752874, 1431.948128, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 487 forward2: (100000.0, -0.0, 600.0, 46.944873, 8.752874, 1431.948128, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 488 Y, X, h_: (100000.00000000006, -6.093046067690011e-10, 599.9999999994027)
6test 489 EN2_LV95: (2700000.0, 1200000.0)
6test 490 yx2_LV03: (700000.0, 200000.0)
6test 491 forward3: (99920.639806, -100148.24791, -967.661696, 46.044131, 8.730497, 650.6, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 492 Y, X, h_: (99920.63980649531, -100148.24791021198, -967.6616955393074)
6test 493 EN2_LV95: (2699920.639806, 1099851.75209)
6test 494 yx2_LV03: (699920.639806, 99851.75209)
6test 495 reverse3: (99920.639806, -100148.24791, -967.661696, 46.044131, 8.730497, 650.6, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 496 forward4: (79527.502386, 12274.804229, -556.312155, 47.058043, 8.48642, 0.0, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 497 Y, X, h_: (79527.50238583283, 12274.804228940542, -556.3121548973841)
6test 498 EN2_LV95: (2679527.502386, 1212274.804229)
6test 499 yx2_LV03: (679527.502386, 212274.804229)
6test 500 reverse4: (79527.502386, 12274.804229, -556.312155, 47.058043, 8.48642, 0.0, ChLV(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...

6test 501 REFRAME1: (8.616351530455896, 46.65475067063166, 3083.406444118289)  FAILED, KNOWN, expected (8.61588452888461, 46.6532932166132, 2367.70367439557)
6test 502 REFRAME1:  0.00146 m
6test 503 REFRAME2: (10.204043023734306, 46.77783593870853, 5053.168786316335)  FAILED, KNOWN, expected (10.2046874099038, 46.7763864160066, 1546.62256775331)
6test 504 REFRAME2:  0.00145 m
6test 505 REFRAME3: (7.231565437123991, 47.39538671375251, 1150.3589295501365)  FAILED, KNOWN, expected (7.23058814336896, 47.3941353658685, 940.206020880491)
6test 506 REFRAME3:  0.00125 m
6test 507 REFRAME4: (9.843252123471997, 46.81431931429165, 4291.256736213609)  FAILED, KNOWN, expected (9.84351348200287, 46.8129146868336, 1645.59174753912)
6test 508 REFRAME4:  0.0014 m
6test 509 REFRAME5: (6.568908171267955, 46.52284580890317, 985.759710610112)  FAILED, KNOWN, expected (6.56789363190021, 46.5214647527993, 460.491580192)
6test 510 REFRAME5:  0.00138 m
6test 511 REFRAME6: (8.731242095241983, 46.04567715552447, 2216.788871436723)  FAILED, KNOWN, expected (8.73049738375132, 46.0441209510033, 650.012275829911)
6test 512 REFRAME6:  0.00156 m
6test 513 Bollinger.lat: 46°11′13.03444″N  FAILED, KNOWN, expected 46°11′12.03969″N
6test 514 Bollinger.lon: 009°07′55.69155″E  FAILED, KNOWN, expected 009°07′57.29664″E
6test 515 Zermatt: (46.01693292843192, 7.7455811694023975, 2629.545451739909)  FAILED, KNOWN, expected (46.015314107, 7.74720273, 1742.449)
6test 516 Zermatt:  0.00162 m
6test 517 Zimmerwald: (46.8784274460462, 7.466218796566257, 953.097289739065)  FAILED, KNOWN, expected (46.878427446, 7.466218797, 953.0973)
6test 518 Zimmerwald:  4.34e-10 m
6test 519 Chrischona: (47.568308646845004, 7.66954858440231, 897.4060435649002)  FAILED, KNOWN, expected (47.568308647, 7.6695485844, 897.406)
6test 520 Chrischona:  1.55e-10 m
6test 521 Pfaender: (47.516320169780975, 9.784378737247414, 3868.8598426332414)  FAILED, KNOWN, expected (47.5163201698, 9.7843787372, 3868.8599)
6test 522 Pfaender:  4.74e-11 m
6test 523 La Givrine: (46.45557406857666, 6.103316269663712, 2313.944970899141)  FAILED, KNOWN, expected (46.4555740686, 6.1033162697, 2313.94497)
6test 524 La Givrine:  3.63e-11 m
6test 525 Monte Generoso: (45.93111844449692, 9.021602047098654, 3855.4332412055323)  FAILED, KNOWN, expected (45.9311184445, 9.0216020471, 3855.4332)
6test 526 Monte Generoso:  3.08e-12 m
6test 527 ChLVa: ...
6test 528 name: Test
6test 529 ChLV_: ChLVa
6test 530 forward1: (0.329415, -0.292702, -49.554242, 46.95108, 7.438637, 0.0, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 531 Y, X, h_: (0.32941546850192266, -0.2927016084473125, -49.554241824400016)
6test 532 EN2_LV95: (2600000.329415, 1199999.707298)
6test 533 yx2_LV03: (600000.329415, 199999.707298)
6test 534 reverse1: (0.329415, -0.292702, -49.554242, 46.951078, 7.438642, -0.004239, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 535 reverse2: (100000.0, -100000.0, 600.0, 46.044127, 8.730499, 650.554, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 536 forward2: (99999.933937, -100000.44412, 600.003469, 46.044127, 8.730499, 650.554, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 537 Y, X, h_: (99999.933937317, -100000.44412018938, 600.0034685464)
6test 538 EN2_LV95: (2699999.933937, 1099999.55588)
6test 539 yx2_LV03: (699999.933937, 99999.55588)
6test 540 forward3: (99999.763621, -100000.026905, 600.049476, 46.044131, 8.730497, 650.6, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 541 Y, X, h_: (99999.76362116335, -100000.0269049639, 600.0494759100001)
6test 542 EN2_LV95: (2699999.763621, 1099999.973095)
6test 543 yx2_LV03: (699999.763621, 99999.973095)
6test 544 reverse3: (99999.763621, -100000.026905, 600.049476, 46.044127, 8.730496, 650.603479, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 545 forward4: (79602.736359, 12421.914221, -48.257243, 47.058043, 8.48642, 0.0, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 546 Y, X, h_: (79602.73635877526, 12421.914220824741, -48.25724328779257)
6test 547 EN2_LV95: (2679602.736359, 1212421.914221)
6test 548 yx2_LV03: (679602.736359, 212421.914221)
6test 549 reverse4: (79602.736359, 12421.914221, -48.257243, 47.058038, 8.486421, 0.00853, ChLVa(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...

6test 550 REFRAME1: (8.615878879495897, 46.65329026883798, 2365.31877736998)  FAILED, KNOWN, expected (8.61588452888461, 46.6532932166132, 2367.70367439557)
6test 551 REFRAME1:  5.65e-06 m
6test 552 REFRAME2: (10.204675703252203, 46.77638487390875, 1542.5231657804)  FAILED, KNOWN, expected (10.2046874099038, 46.7763864160066, 1546.62256775331)
6test 553 REFRAME2:  1.17e-05 m
6test 554 REFRAME3: (7.230597895755378, 47.394131639593425, 939.5622657947999)  FAILED, KNOWN, expected (7.23058814336896, 47.3941353658685, 940.206020880491)
6test 555 REFRAME3:  9.75e-06 m
6test 556 REFRAME4: (9.843502988079765, 46.812913925274714, 1642.70478811448)  FAILED, KNOWN, expected (9.84351348200287, 46.8129146868336, 1645.59174753912)
6test 557 REFRAME4:  1.05e-05 m
6test 558 REFRAME5: (6.5678939352793595, 46.52146855855015, 462.1027394584)  FAILED, KNOWN, expected (6.56789363190021, 46.5214647527993, 460.491580192)
6test 559 REFRAME5:  3.81e-06 m
6test 560 REFRAME6: (8.730499333333333, 46.04412677777778, 650.554)  FAILED, KNOWN, expected (8.73049738375132, 46.0441209510033, 650.012275829911)
6test 561 REFRAME6:  5.83e-06 m
6test 562 Bollinger.lat: 46°11′07.65425″N  FAILED, KNOWN, expected 46°11′12.03969″N
6test 563 Bollinger.lon: 009°07′52.99874″E  FAILED, KNOWN, expected 009°07′57.29664″E
6test 564 Zermatt: (46.01531297876282, 7.744712831892469, 1739.1724096628)  FAILED, KNOWN, expected (46.015314107, 7.74720273, 1742.449)
6test 565 Zermatt:  0.00249 m
6test 566 Zimmerwald: (46.877092307814216, 7.465275686541408, 947.6256267527999)  FAILED, KNOWN, expected (46.878427446, 7.466218797, 953.0973)
6test 567 Zimmerwald:  0.00134 m
6test 568 Chrischona: (47.56704452300608, 7.668609312668058, 503.84493534800004)  FAILED, KNOWN, expected (47.568308647, 7.6695485844, 897.406)
6test 569 Chrischona:  0.00126 m
6test 570 Pfaender: (47.51533372240414, 9.784358161933795, 1088.46794437916)  FAILED, KNOWN, expected (47.5163201698, 9.7843787372, 3868.8599)
6test 571 Pfaender:  0.000986 m
6test 572 La Givrine: (46.45409066669543, 6.1020351431347315, 1259.50889260448)  FAILED, KNOWN, expected (46.4555740686, 6.1033162697, 2313.94497)
6test 573 La Givrine:  0.00148 m
6test 574 Monte Generoso: (45.92930092608269, 9.02121992500755, 1687.1468504651998)  FAILED, KNOWN, expected (45.9311184445, 9.0216020471, 3855.4332)
6test 575 Monte Generoso:  0.00182 m
6test 576 ChLVe: ...
6test 577 name: Test
6test 578 ChLV_: ChLVe
6test 579 forward1: (-72.031251, -147.344948, -49.554242, 46.95108, 7.438637, 0.0, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 580 Y, X, h_: (-72.031251437589, -147.3449483831346, -49.554241824400016)
6test 581 EN2_LV95: (2599927.968749, 1199852.655052)
6test 582 yx2_LV03: (599927.968749, 199852.655052)
6test 583 reverse1: (-72.031251, -147.344948, -49.554242, 46.95108, 7.438637, 0.000002, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 584 reverse2: (100000.0, 0.0, 600.0, 46.944869, 8.753274, 648.29, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 585 forward2: (100000.000001, 0.0, 600.012265, 46.944869, 8.753274, 648.29, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 586 Y, X, h_: (100000.00000057962, 1.8112534442566837e-07, 600.0122653531955)
6test 587 EN2_LV95: (2700000.000001, 1200000.0)
6test 588 yx2_LV03: (700000.000001, 200000.0)
6test 589 forward3: (99914.740455, -100135.079382, 600.049476, 46.044131, 8.730497, 650.6, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 590 Y, X, h_: (99914.74045471674, -100135.07938181334, 600.0494759100001)
6test 591 EN2_LV95: (2699914.740455, 1099864.920618)
6test 592 yx2_LV03: (699914.740455, 99864.920618)
6test 593 reverse3: (99914.740455, -100135.079382, 600.049476, 46.044131, 8.730497, 650.607608, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 594 forward4: (79520.050001, 12273.439993, -48.257243, 47.058043, 8.48642, 0.0, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...
6test 595 Y, X, h_: (79520.05000103211, 12273.439993103837, -48.25724328779257)
6test 596 EN2_LV95: (2679520.050001, 1212273.439993)
6test 597 yx2_LV03: (679520.050001, 212273.439993)
6test 598 reverse4: (79520.050001, 12273.439993, -48.257243, 47.058043, 8.48642, 0.012933, ChLVe(lat0=46.952405556, lon0=7.439583333, height0=49.55, M=...

6test 599 REFRAME1: (8.617004216786864, 46.65457267826783, 2365.31877736998)  FAILED, KNOWN, expected (8.61588452888461, 46.6532932166132, 2367.70367439557)
6test 600 REFRAME1:  0.00128 m
6test 601 REFRAME2: (10.206045201491072, 46.777660119243905, 1542.5231657804)  FAILED, KNOWN, expected (10.2046874099038, 46.7763864160066, 1546.62256775331)
6test 602 REFRAME2:  0.00136 m
6test 603 REFRAME3: (7.231508661195409, 47.3955074884183, 939.5622657947999)  FAILED, KNOWN, expected (7.23058814336896, 47.3941353658685, 940.206020880491)
6test 604 REFRAME3:  0.00137 m
6test 605 REFRAME4: (9.844818386934287, 46.814198001739975, 1642.70478811448)  FAILED, KNOWN, expected (9.84351348200287, 46.8129146868336, 1645.59174753912)
6test 606 REFRAME4:  0.0013 m
6test 607 REFRAME5: (6.568709824649145, 46.5227385206423, 462.1027394584)  FAILED, KNOWN, expected (6.56789363190021, 46.5214647527993, 460.491580192)
6test 608 REFRAME5:  0.00127 m
6test 609 REFRAME6: (8.731627351611777, 46.04533300622348, 650.554)  FAILED, KNOWN, expected (8.73049738375132, 46.0441209510033, 650.012275829911)
6test 610 REFRAME6:  0.00121 m
6test 611 Bollinger.lat: 46°11′12.03969″N
6test 612 Bollinger.lon: 009°07′57.29664″E
6test 613 Bollinger.gamma: 1.3747154949761575

6test 614 Zermatt: (46.016524980589146, 7.745700583699864, 1739.1724096628)  FAILED, KNOWN, expected (46.015314107, 7.74720273, 1742.449)
6test 615 Zermatt:  0.0015 m
6test 616 Zimmerwald: (46.878408134660475, 7.46622597045386, 947.6256267527999)  FAILED, KNOWN, expected (46.878427446, 7.466218797, 953.0973)
6test 617 Zimmerwald:  1.93e-05 m
6test 618 Chrischona: (47.56844071309313, 7.669595854297879, 503.84493534800004)  FAILED, KNOWN, expected (47.568308647, 7.6695485844, 897.406)
6test 619 Chrischona:  0.000132 m
6test 620 Pfaender: (47.51669640784962, 9.785678729594727, 1088.46794437916)  FAILED, KNOWN, expected (47.5163201698, 9.7843787372, 3868.8599)
6test 621 Pfaender:  0.0013 m
6test 622 La Givrine: (46.45534732351903, 6.102781792813614, 1259.50889260448)  FAILED, KNOWN, expected (46.4555740686, 6.1033162697, 2313.94497)
6test 623 La Givrine:  0.000534 m
6test 624 Monte Generoso: (45.93048753878003, 9.022387820586593, 1687.1468504651998)  FAILED, KNOWN, expected (45.9311184445, 9.0216020471, 3855.4332)
6test 625 Monte Generoso:  0.000786 m
6102 of 625 testLtp.py tests (16.3%) FAILED, incl. 90 KNOWN plus 12 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 59.793 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testLtpTuples.py
6testing testLtpTuples.py 22.05.27
6test 1 Aer.toRepr: [A:60.0°, E:40.0°, R:1000.0]
6test 2 Aer.toStr: [60.0, 40.0, 1000.0]
6test 3 Aer.xyzLocal.toAer: [60.0, 40.0, 1000.0]
6test 4 Aer.xyzLocal.toAer: [60.0, 40.0, 1000.0]
6test 5 Aer.xyzLocal.toEnu: [663.41, 383.02, 642.79]
6test 6 Enu.xyzLocal.toAer: [60.0, 40.0, 1000.0]
6test 7 Aer.xyzLocal.toNed: [383.02, 663.41, -642.79]
6test 8 Ned.xyzLocal.toAer: [60.0, 40.0, 1000.0]
6test 9 Aer.xyzLocal.toXyz: [663.41, 383.02, 642.79]
6test 10 Xyz.xyzLocal.toAer: [60.0, 40.0, 1000.0]
6test 11 Aer.toCartesian: [4397663.96, 599165.33, 4568492.25]
6test 12 Cartesian.toLocal Aer: [60.0, 40.0, 1000.0]
6test 13 Aer.toLatLon: 46°01′13.6″N, 007°45′30.83″E, +2315.83m
6test 14 LatLon.toLocal Aer: [60.0, 40.0, 1000.0]
6test 15 Aer.azimuth: 60.0
6test 16 Aer.elevation: 40.0
6test 17 Aer.slantrange: 1000.0
6test 18 Aer.groundrange: 766.044
6test 19 Aer.east: 663.414
6test 20 Aer.north: 383.022
6test 21 Aer.up: 642.788
6test 22 Aer.down: -642.788
6test 23 Aer.x: 663.414
6test 24 Aer.y: 383.022
6test 25 Aer.z: 642.788
6test 26 Aer.xyz: 663.414, 383.022, 642.788
6test 27 Enu.toRepr: [E:100.0, N:200.0, U:1000.0]
6test 28 Enu.toStr: [100.0, 200.0, 1000.0]
6test 29 Enu.xyzLocal.toAer: [26.57, 77.4, 1024.7]
6test 30 Aer.xyzLocal.toEnu: [100.0, 200.0, 1000.0]
6test 31 Enu.xyzLocal.toEnu: [100.0, 200.0, 1000.0]
6test 32 Enu.xyzLocal.toEnu: [100.0, 200.0, 1000.0]
6test 33 Enu.xyzLocal.toNed: [200.0, 100.0, -1000.0]
6test 34 Ned.xyzLocal.toEnu: [100.0, 200.0, 1000.0]
6test 35 Enu.xyzLocal.toXyz: [100.0, 200.0, 1000.0]
6test 36 Xyz.xyzLocal.toEnu: [100.0, 200.0, 1000.0]
6test 37 Enu.toCartesian: [4398116.23, 598658.27, 4568622.18]
6test 38 Cartesian.toLocal Enu: [100.0, 200.0, 1000.0]
6test 39 Enu.toLatLon: 46°01′07.67″N, 007°45′04.65″E, +2673.00m
6test 40 LatLon.toLocal Enu: [100.0, 200.0, 1000.0]
6test 41 Enu.azimuth: 26.565
6test 42 Enu.elevation: 77.396
6test 43 Enu.slantrange: 1024.695
6test 44 Enu.groundrange: 223.607
6test 45 Enu.east: 100.0
6test 46 Enu.north: 200.0
6test 47 Enu.up: 1000.0
6test 48 Enu.down: -1000.0
6test 49 Enu.x: 100.0
6test 50 Enu.y: 200.0
6test 51 Enu.z: 1000.0
6test 52 Enu.xyz: 100.0, 200.0, 1000.0
6test 53 Ned.toRepr: [N:200.0, E:100.0, D:1000.0]
6test 54 Ned.toStr: [200.0, 100.0, 1000.0]
6test 55 Ned.xyzLocal.toAer: [26.57, -77.4, 1024.7]
6test 56 Aer.xyzLocal.toNed: [200.0, 100.0, 1000.0]
6test 57 Ned.xyzLocal.toEnu: [100.0, 200.0, -1000.0]
6test 58 Enu.xyzLocal.toNed: [200.0, 100.0, 1000.0]
6test 59 Ned.xyzLocal.toNed: [200.0, 100.0, 1000.0]
6test 60 Ned.xyzLocal.toNed: [200.0, 100.0, 1000.0]
6test 61 Ned.xyzLocal.toXyz: [100.0, 200.0, -1000.0]
6test 62 Xyz.xyzLocal.toNed: [200.0, 100.0, 1000.0]
6test 63 Ned.toCartesian: [4396740.02, 598470.98, 4567183.09]
6test 64 Cartesian.toLocal Ned: [200.0, 100.0, 1000.0]
6test 65 Ned.toLatLon: 46°01′07.68″N, 007°45′04.65″E, +673.00m
6test 66 LatLon.toLocal Ned: [200.0, 100.0, 1000.0]
6test 67 Ned.azimuth: 26.565
6test 68 Ned.elevation: -77.396
6test 69 Ned.slantrange: 1024.695
6test 70 Ned.groundrange: 223.607
6test 71 Ned.east: 100.0
6test 72 Ned.north: 200.0
6test 73 Ned.up: -1000.0
6test 74 Ned.down: 1000.0
6test 75 Ned.x: 100.0
6test 76 Ned.y: 200.0
6test 77 Ned.z: -1000.0
6test 78 Ned.xyz: 100.0, 200.0, -1000.0
6test 79 Xyz.toRepr: [X:10.0, Y:20.0, Z:100.0]
6test 80 Xyz.toStr: [10.0, 20.0, 100.0]
6test 81 Xyz.xyzLocal.toAer: [26.57, 77.4, 102.47]
6test 82 Aer.xyzLocal.toXyz: [10.0, 20.0, 100.0]
6test 83 Xyz.xyzLocal.toEnu: [10.0, 20.0, 100.0]
6test 84 Enu.xyzLocal.toXyz: [10.0, 20.0, 100.0]
6test 85 Xyz.xyzLocal.toNed: [20.0, 10.0, -100.0]
6test 86 Ned.xyzLocal.toXyz: [10.0, 20.0, 100.0]
6test 87 Xyz.xyzLocal.toXyz: [10.0, 20.0, 100.0]
6test 88 Xyz.xyzLocal.toXyz: [10.0, 20.0, 100.0]
6test 89 Xyz.toCartesian: [4397637.41, 598502.28, 4567849.59]
6test 90 Cartesian.toLocal Xyz: [10.0, 20.0, 100.0]
6test 91 Xyz.toLatLon: 46°01′01.85″N, 007°45′00.46″E, +1773.00m
6test 92 LatLon.toLocal Xyz: [10.0, 20.0, 100.0]
6test 93 Xyz.azimuth: 26.565
6test 94 Xyz.elevation: 77.396
6test 95 Xyz.slantrange: 102.47
6test 96 Xyz.groundrange: 22.361
6test 97 Xyz.east: 10.0
6test 98 Xyz.north: 20.0
6test 99 Xyz.up: 100.0
6test 100 Xyz.down: -100.0
6test 101 Xyz.x: 10.0
6test 102 Xyz.y: 20.0
6test 103 Xyz.z: 100.0
6test 104 Xyz.xyz: 10.0, 20.0, 100.0
6test 105 Local9Tuple.toRepr: Local9Tuple(x=10.0, y=20.0, z=100.0, lat=46.02, lon=7.75, height=1773.0, ltp=Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transfo
6test 106 Local9Tuple.toStr: (10.0, 20.0, 100.0, 46.02, 7.75, 1773.0, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'
6test 107 Local9Tuple.xyzLocal.toAer: [26.57, 77.4, 102.47]
6test 108 Aer.xyzLocal.toLocal9Tuple: (10.0, 20.0, 100.0, 46.02, 7.75, 1773.0, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'
6test 109 Local9Tuple.xyzLocal.toEnu: [10.0, 20.0, 100.0]
6test 110 Enu.xyzLocal.toLocal9Tuple: (10.0, 20.0, 100.0, 46.02, 7.75, 1773.0, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'
6test 111 Local9Tuple.xyzLocal.toNed: [20.0, 10.0, -100.0]
6test 112 Ned.xyzLocal.toLocal9Tuple: (10.0, 20.0, 100.0, 46.02, 7.75, 1773.0, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'
6test 113 Local9Tuple.xyzLocal.toXyz: [10.0, 20.0, 100.0]
6test 114 Xyz.xyzLocal.toLocal9Tuple: (10.0, 20.0, 100.0, 46.02, 7.75, 1773.0, Ltp(lat0=46.017, lon0=7.75, height0=1673.0, M=EcefMatrix(_0_0_=-0.134851, _0_1_=-0.712973, _0_2_=0.688102, _1_0_=0.990866, _1_1_=-0.097031, _1_2_=0.093647, _2_0_=0.0, _2_1_=0.694445, _2_2_=0.719546), ecef=EcefKarney(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name='Zermatt'
6test 115 Local9Tuple.toCartesian: [4397637.41, 598502.28, 4567849.59]
6test 116 Local9Tuple.toLatLon: 46°01′01.85″N, 007°45′00.46″E, +1773.00m
6test 117 Local9Tuple.azimuth: 26.565
6test 118 Local9Tuple.elevation: 77.396
6test 119 Local9Tuple.slantrange: 102.47
6test 120 Local9Tuple.groundrange: 22.361
6test 121 Local9Tuple.east: 10.0
6test 122 Local9Tuple.north: 20.0
6test 123 Local9Tuple.up: 100.0
6test 124 Local9Tuple.down: -100.0
6test 125 Local9Tuple.x: 10.0
6test 126 Local9Tuple.y: 20.0
6test 127 Local9Tuple.z: 100.0
6test 128 Local9Tuple.xyz: 10.0, 20.0, 100.0
6test 129 Local9Tuple.lat: 46.02
6test 130 Local9Tuple.lon: 7.75
6test 131 Local9Tuple.latlon: 46.02, 7.75
6test 132 Local9Tuple.latlonheight: 46.02, 7.75, 1773.0
6test 133 Local9Tuple.phi: 0.803
6test 134 Local9Tuple.lam: 0.135
6test 135 Local9Tuple.philam: 0.803, 0.135
6test 136 Local9Tuple.philamheight: 0.803, 0.135, 1773.0
6all 136 testLtpTuples.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 8.764 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testMgrs.py
./test/testMgrs.py:88: DeprecationWarning: property_RO L{pygeodesy.mgrs.Mgrs.en100k} has been DEPRECATED, use property C{EN}.
  self.test(a, getattr(p, a), x)
./test/testMgrs.py:88: DeprecationWarning: property_RO L{pygeodesy.mgrs.Mgrs.digraph} has been DEPRECATED, use property C{EN}.
  self.test(a, getattr(p, a), x)
./test/testMgrs.py:94: DeprecationWarning: property_RO L{pygeodesy.mgrs.Mgrs6Tuple.digraph} has been DEPRECATED, use attribute C{EN}.
  self.test('digraph', m.digraph, m.EN, nt=1)  # DEPRECATED
./test/testMgrs.py:117: DeprecationWarning: property_RO L{pygeodesy.mgrs.Mgrs4Tuple.digraph} has been DEPRECATED, use attribute C{EN}.
  self.test('digraph', t.digraph, t.EN)  # DEPRECATED
6testing testMgrs.py 22.08.03 (module pygeodesy.mgrs 22.10.04)
6test 1 Mgrs1: 42S XD 09705 38646
6test 2 Mgrs1: [Z:42S, G:XD, E:09705, N:38646]
6test 3 Mgrs2: 42S XD 19705 08646
6test 4 Mgrs2: [Z:42S, G:XD, E:19705, N:08646]
6test 5 Mgrs3: 42S XD 19000 38000
6test 6 Mgrs3: [Z:42S, G:XD, E:19000, N:38000]
6test 7 Mgrs4: 31U DQ 48251 11932
6test 8 Mgrs4: [Z:31U, G:DQ, E:48251, N:11932]
6test 9 Mgrs5: 31U DQ 48251 11932
6test 10 Mgrs5: [Z:31U, G:DQ, E:48251, N:11932]
6test 11 Mgrs6: 31U DQ 48251 11932
6test 12 Mgrs6: [Z:31U, G:DQ, E:48251, N:11932]
6test 13 Mgrs7: 31U DQ 48251 11932
6test 14 Mgrs7: [Z:31U, G:DQ, E:48251, N:11932]
6test 15 Mgrs8: 31 N 431000 4582000
6test 16 Mgrs8: (41.38657, 2.174726, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), -0.54564, 0.999659)
6test 17 Mgrs8: 31 N 431500 4582500
6test 18 Mgrs8: 31T DF 31000 82000
6test 19 Mgrs8: 41.391116°N, 002.180649°E
6test 20 Mgrs8: 31T DF 31000 82000
6test 21 Mgrs9: 31U DQ 48251 11932
6test 22 Mgrs9: [Z:31U, G:DQ, E:48251, N:11932]
6test 23 toUtm1: 31 N 448251 5411932
6test 24 toUtm1: [Z:31U, H:N, E:448251, N:5411932]
6test 25 toMgrs1: 31U DQ 48251 11932
6test 26 toMgrs1: [Z:31U, G:DQ, E:48251, N:11932]

6test 27 toUtm(None): (31, 'N', 448251.0, 5411932.0, 'U')
6test 28 easting: 48251.0
6test 29 northing: 11932.0
6test 30 EN: DQ
6test 31 en100k: DQ
6test 32 digraph: DQ
6test 33 zone: 31
6test 34 band: U
6test 35 bandLatitude: 48
6test 36 eastingnorthing: (48251.0, 11932.0)
6test 37 resolution: 1.0
6test 38 tilesize: 100000.0
6test 39 toMgrs: 31U DQ 48251 11932
6test 40 toMgrs(None): Mgrs6Tuple
6test 41 digraph: DQ

6test 42 (60.0°N, 001.0°E).toUtmUps.toMgrs: 31V CG 88455 53097
6test 43 (60.0°N, 003.0°E).toUtmUps.toMgrs: 32V JM 65640 66593
6test 44 (60.0°N, 009.0°E).toUtmUps.toMgrs: 32V NM 00000 51411
6test 45 (76.0°N, 001.0°E).toUtmUps.toMgrs: 31X DE 45999 36099
6test 46 (76.0°N, 013.0°E).toUtmUps.toMgrs: 33X VE 45999 36099
6test 47 (76.0°N, 025.0°E).toUtmUps.toMgrs: 35X ME 45999 36099
6test 48 (76.0°N, 037.0°E).toUtmUps.toMgrs: 37X DE 45999 36099
6test 49 (84.0°N, 042.0°E).toUtmUps.toMgrs: Z GC 46127 04524
6test 50 (90.0°S, 000.0°E).toUtmUps.toMgrs: B AN 00000 00000
6test 51 Mgrs: BAN00
6test 52 Mgrs4Tuple: ('B', 'AN', 0.0, 0.0)
6test 53 Mgrs4Tuple: SouthPole(zone='B', EN='AN', easting=0.0, northing=0.0)
6test 54 digraph: AN
6test 55 toMgrs.toLatLon: SouthPole(lat=-90.0, lon=0.0, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), gamma=-0.0, scale=0.994)
6test 56 Ups: 00 S 2000000 2000000
6test 57 Ups: 00 S 2000500 2000500
6test 58 Mgrs: 0.1
6test 59 Mgrs: Y UB 17770 03800
6test 60 Mgrs: [Z:Y, G:UB, E:17770, N:03800]
6test 61 toUtmUps: 00 N 1617775 1403805
6test 62 toUtmUps: [Z:00Y, H:N, E:1617775, N:1403805]
6test 63 toLatLon: (83.627518, -32.664231, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), -0.570098, 0.99708)
6test 64 toLatLon: LatLonDatum5Tuple(lat=83.627518, lon=-32.664231, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), gamma=-0.570098, scale=0.99708)
6test 65 toMgrs!: 25X EN 04160 86523
6test 66 Mgrs: B FS 77514 99182
6test 67 Mgrs: [Z:B, G:FS, E:77514, N:99182]
6test 68 toUtmUps: 00 S 2377514 2499182
6test 69 toUtmUps: [Z:00B, H:S, E:2377514, N:2499182]
6test 70 toLatLon: (-84.367192, 37.098959, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), -0.647499, 0.996406)
6test 71 toLatLon: LatLonDatum5Tuple(lat=-84.367192, lon=37.098959, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), gamma=-0.647499, scale=0.996406)
6test 72 toMgrs: B FS 77514 99182
6test 73 Mgrs: 45S XT 47000 91000
6test 74 Mgrs: [Z:45S, G:XT, E:47000, N:91000]
6test 75 toUtmUps: 45 N 647500 3791500
6test 76 toUtmUps: [Z:45S, H:N, E:647500, N:3791500]
6test 77 toLatLon: (34.254177, 88.601932, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), 0.901835, 0.999868)
6test 78 toLatLon: LatLonDatum5Tuple(lat=34.254177, lon=88.601932, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), gamma=0.901835, scale=0.999868)
6test 79 toMgrs: 45S XT 47499 91499
6test 80 Mgrs: Y XK 35000 43000
6test 81 Mgrs: [Z:Y, G:XK, E:35000, N:43000]
6test 82 toUtmUps: 00 N 1735500 2243500
6test 83 toUtmUps: [Z:00Y, H:N, E:1735500, N:2243500]
6test 84 toLatLon: (86.762629, -132.632821, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), -2.314879, 0.994794)
6test 85 toLatLon: LatLonDatum5Tuple(lat=86.762629, lon=-132.632821, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), gamma=-2.314879, scale=0.994794)
6test 86 toMgrs: Y XK 35499 43500
64 of 86 testMgrs.py tests (4.7%) FAILED, incl. 4 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 10.599 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testModules.py
6testing testModules.py 21.05.28
6testModule(pygeodesy, 23.03.12)
6test 1 pygeodesy.Aer() class (pygeodesy.ltpTuples): True
6test 2 pygeodesy.Aer4Tuple() class (pygeodesy.ltpTuples): True
6test 3 pygeodesy.Albers7Tuple() class (pygeodesy.albers): True
6test 4 pygeodesy.AlbersEqualArea() class (pygeodesy.albers): True
6test 5 pygeodesy.AlbersEqualArea2() class (pygeodesy.albers): True
6test 6 pygeodesy.AlbersEqualArea4() class (pygeodesy.albers): True
6test 7 pygeodesy.AlbersEqualAreaCylindrical() class (pygeodesy.albers): True
6test 8 pygeodesy.AlbersEqualAreaNorth() class (pygeodesy.albers): True
6test 9 pygeodesy.AlbersEqualAreaSouth() class (pygeodesy.albers): True
6test 10 pygeodesy.AlbersError() class (pygeodesy.albers): True
6test 11 pygeodesy.Area3Tuple() class (pygeodesy.karney): True
6test 12 pygeodesy.Attitude() class (pygeodesy.ltp): True
6test 13 pygeodesy.Attitude4Tuple() class (pygeodesy.ltpTuples): True
6test 14 pygeodesy.AttitudeError() class (pygeodesy.ltp): True
6test 15 pygeodesy.Azimuthal7Tuple() class (pygeodesy.azimuthal): True
6test 16 pygeodesy.AzimuthalError() class (pygeodesy.azimuthal): True
6test 17 pygeodesy.Band() class (pygeodesy.units): True
6test 18 pygeodesy.Bearing() class (pygeodesy.units): True
6test 19 pygeodesy.Bearing2Tuple() class (pygeodesy.namedTuples): True
6test 20 pygeodesy.Bearing_() class (pygeodesy.units): True
6test 21 pygeodesy.BetaOmega2Tuple() class (pygeodesy.triaxials): True
6test 22 pygeodesy.BetaOmega3Tuple() class (pygeodesy.triaxials): True
6test 23 pygeodesy.Bool() class (pygeodesy.units): True
6test 24 pygeodesy.BooleanFHP() class (pygeodesy.booleans): True
6test 25 pygeodesy.BooleanGH() class (pygeodesy.booleans): True
6test 26 pygeodesy.Bounds2Tuple() class (pygeodesy.namedTuples): True
6test 27 pygeodesy.Bounds4Tuple() class (pygeodesy.namedTuples): True
6test 28 pygeodesy.CSSError() class (pygeodesy.css): True
6test 29 pygeodesy.Caps class pygeodesy.karney.Caps (pygeodesy.karney): True
6test 30 pygeodesy.CassiniSoldner() class (pygeodesy.css): True
6test 31 pygeodesy.ChLV() class (pygeodesy.ltp): True
6test 32 pygeodesy.ChLV9Tuple() class (pygeodesy.ltpTuples): True
6test 33 pygeodesy.ChLVEN2Tuple() class (pygeodesy.ltpTuples): True
6test 34 pygeodesy.ChLVYX2Tuple() class (pygeodesy.ltpTuples): True
6test 35 pygeodesy.ChLVa() class (pygeodesy.ltp): True
6test 36 pygeodesy.ChLVe() class (pygeodesy.ltp): True
6test 37 pygeodesy.ChLVyx2Tuple() class (pygeodesy.ltpTuples): True
6test 38 pygeodesy.Circin6Tuple() class (pygeodesy.vector2d): True
6test 39 pygeodesy.Circle4Tuple() class (pygeodesy.ellipsoids): True
6test 40 pygeodesy.Circum3Tuple() class (pygeodesy.vector2d): True
6test 41 pygeodesy.Circum4Tuple() class (pygeodesy.vector2d): True
6test 42 pygeodesy.ClipCS3Tuple() class (pygeodesy.deprecated): True
6test 43 pygeodesy.ClipCS4Tuple() class (pygeodesy.clipy): True
6test 44 pygeodesy.ClipError() class (pygeodesy.errors): True
6test 45 pygeodesy.ClipFHP4Tuple() class (pygeodesy.clipy): True
6test 46 pygeodesy.ClipGH4Tuple() class (pygeodesy.clipy): True
6test 47 pygeodesy.ClipLB6Tuple() class (pygeodesy.clipy): True
6test 48 pygeodesy.ClipSH3Tuple() class (pygeodesy.clipy): True
6test 49 pygeodesy.Collins5Tuple() class (pygeodesy.resections): True
6test 50 pygeodesy.Conic() class (pygeodesy.lcc): True
6test 51 pygeodesy.Conics class pygeodesy.lcc.Conics (pygeodesy.lcc): True
6test 52 pygeodesy.CrossError() class (pygeodesy.errors): True
6test 53 pygeodesy.Css() class (pygeodesy.css): True
6test 54 pygeodesy.Curvature2Tuple() class (pygeodesy.ellipsoids): True
6test 55 pygeodesy.DIG int (pygeodesy.unitsBase): True
6test 56 pygeodesy.Datum() class (pygeodesy.datums): True
6test 57 pygeodesy.Datums class pygeodesy.datums.Datums (pygeodesy.datums): True
6test 58 pygeodesy.Degrees() class (pygeodesy.units): True
6test 59 pygeodesy.Degrees2() class (pygeodesy.units): True
6test 60 pygeodesy.Degrees_() class (pygeodesy.units): True
6test 61 pygeodesy.DeprecationWarnings class pygeodesy.props.DeprecationWarnings (pygeodesy.props): True
6test 62 pygeodesy.Destination2Tuple() class (pygeodesy.namedTuples): True
6test 63 pygeodesy.Destination3Tuple() class (pygeodesy.namedTuples): True
6test 64 pygeodesy.Direct9Tuple() class (pygeodesy.karney): True
6test 65 pygeodesy.Distance() class (pygeodesy.units): True
6test 66 pygeodesy.Distance2Tuple() class (pygeodesy.namedTuples): True
6test 67 pygeodesy.Distance3Tuple() class (pygeodesy.namedTuples): True
6test 68 pygeodesy.Distance4Tuple() class (pygeodesy.namedTuples): True
6test 69 pygeodesy.Distance_() class (pygeodesy.units): True
6test 70 pygeodesy.EPS float (pygeodesy.unitsBase): True
6test 71 pygeodesy.EPS0 float (pygeodesy.unitsBase): True
6test 72 pygeodesy.EPS02 float (pygeodesy.unitsBase): True
6test 73 pygeodesy.EPS1 float (pygeodesy.unitsBase): True
6test 74 pygeodesy.EPS1_2 float (pygeodesy.deprecated): True
6test 75 pygeodesy.EPS2 float (pygeodesy.unitsBase): True
6test 76 pygeodesy.EPS4 float (pygeodesy.unitsBase): True
6test 77 pygeodesy.EPSGError() class (pygeodesy.epsg): True
6test 78 pygeodesy.EPS_2 float (pygeodesy.unitsBase): True
6test 79 pygeodesy.ETMError() class (pygeodesy.etm): True
6test 80 pygeodesy.EasNor2Tuple() class (pygeodesy.namedTuples): True
6test 81 pygeodesy.EasNor3Tuple() class (pygeodesy.namedTuples): True
6test 82 pygeodesy.EasNorAziRk4Tuple() class (pygeodesy.css): True
6test 83 pygeodesy.EasNorAziRkEqu6Tuple() class (pygeodesy.css): True
6test 84 pygeodesy.EasNorExact4Tuple() class (pygeodesy.deprecated): True
6test 85 pygeodesy.EasNorRadius3Tuple() class (pygeodesy.webmercator): True
6test 86 pygeodesy.Easting() class (pygeodesy.units): True
6test 87 pygeodesy.Ecef9Tuple() class (pygeodesy.ecef): True
6test 88 pygeodesy.EcefCartesian() function (pygeodesy.deprecated): True
6test 89 pygeodesy.EcefError() class (pygeodesy.ecef): True
6test 90 pygeodesy.EcefFarrell21() class (pygeodesy.ecef): True
6test 91 pygeodesy.EcefFarrell22() class (pygeodesy.ecef): True
6test 92 pygeodesy.EcefKarney() class (pygeodesy.ecef): True
6test 93 pygeodesy.EcefMatrix() class (pygeodesy.ecef): True
6test 94 pygeodesy.EcefSudano() class (pygeodesy.ecef): True
6test 95 pygeodesy.EcefVeness() class (pygeodesy.ecef): True
6test 96 pygeodesy.EcefYou() class (pygeodesy.ecef): True
6test 97 pygeodesy.Elevation2Tuple() class (pygeodesy.elevations): True
6test 98 pygeodesy.Ellipsoid() class (pygeodesy.ellipsoids): True
6test 99 pygeodesy.Ellipsoid2() class (pygeodesy.ellipsoids): True
6test 100 pygeodesy.Ellipsoids class pygeodesy.ellipsoids.Ellipsoids (pygeodesy.ellipsoids): True
6test 101 pygeodesy.Elliptic() class (pygeodesy.elliptic): True
6test 102 pygeodesy.Elliptic3Tuple() class (pygeodesy.elliptic): True
6test 103 pygeodesy.EllipticError() class (pygeodesy.elliptic): True
6test 104 pygeodesy.Enu() class (pygeodesy.ltpTuples): True
6test 105 pygeodesy.Enu4Tuple() class (pygeodesy.ltpTuples): True
6test 106 pygeodesy.Epoch() class (pygeodesy.units): True
6test 107 pygeodesy.Epsg() class (pygeodesy.epsg): True
6test 108 pygeodesy.Equidistant() class (pygeodesy.azimuthal): True
6test 109 pygeodesy.EquidistantExact() class (pygeodesy.azimuthal): True
6test 110 pygeodesy.EquidistantGeodSolve() class (pygeodesy.azimuthal): True
6test 111 pygeodesy.EquidistantKarney() class (pygeodesy.azimuthal): True
6test 112 pygeodesy.Etm() class (pygeodesy.etm): True
6test 113 pygeodesy.ExactTransverseMercator() class (pygeodesy.etm): True
6test 114 pygeodesy.FIx() class (pygeodesy.units): True
6test 115 pygeodesy.F_D str: True
6test 116 pygeodesy.F_D60 str: True
6test 117 pygeodesy.F_D60_ str (pygeodesy.interns): True
6test 118 pygeodesy.F_D60__ str (pygeodesy.interns): True
6test 119 pygeodesy.F_DEG str: True
6test 120 pygeodesy.F_DEG_ str (pygeodesy.interns): True
6test 121 pygeodesy.F_DEG__ str (pygeodesy.interns): True
6test 122 pygeodesy.F_DM str: True
6test 123 pygeodesy.F_DMS str: True
6test 124 pygeodesy.F_DMS_ str (pygeodesy.interns): True
6test 125 pygeodesy.F_DMS__ str (pygeodesy.interns): True
6test 126 pygeodesy.F_DM_ str (pygeodesy.interns): True
6test 127 pygeodesy.F_DM__ str (pygeodesy.interns): True
6test 128 pygeodesy.F_D_ str (pygeodesy.interns): True
6test 129 pygeodesy.F_D__ str (pygeodesy.interns): True
6test 130 pygeodesy.F_MIN str: True
6test 131 pygeodesy.F_MIN_ str (pygeodesy.interns): True
6test 132 pygeodesy.F_MIN__ str (pygeodesy.interns): True
6test 133 pygeodesy.F_RAD str: True
6test 134 pygeodesy.F_RAD_ str (pygeodesy.interns): True
6test 135 pygeodesy.F_RAD__ str (pygeodesy.interns): True
6test 136 pygeodesy.F_SEC str: True
6test 137 pygeodesy.F_SEC_ str (pygeodesy.interns): True
6test 138 pygeodesy.F_SEC__ str (pygeodesy.interns): True
6test 139 pygeodesy.F__E str: True
6test 140 pygeodesy.F__E_ str (pygeodesy.interns): True
6test 141 pygeodesy.F__E__ str (pygeodesy.interns): True
6test 142 pygeodesy.F__F str: True
6test 143 pygeodesy.F__F_ str (pygeodesy.interns): True
6test 144 pygeodesy.F__F__ str (pygeodesy.interns): True
6test 145 pygeodesy.F__G str: True
6test 146 pygeodesy.F__G_ str (pygeodesy.interns): True
6test 147 pygeodesy.F__G__ str (pygeodesy.interns): True
6test 148 pygeodesy.Fcbrt() class (pygeodesy.fmath): True
6test 149 pygeodesy.Fcook() class (pygeodesy.fstats): True
6test 150 pygeodesy.Fdot() class (pygeodesy.fmath): True
6test 151 pygeodesy.Feet() class (pygeodesy.units): True
6test 152 pygeodesy.Fhorner() class (pygeodesy.fmath): True
6test 153 pygeodesy.Fhypot() class (pygeodesy.fmath): True
6test 154 pygeodesy.Flinear() class (pygeodesy.fstats): True
6test 155 pygeodesy.Float() class (pygeodesy.unitsBase): True
6test 156 pygeodesy.Float_() class (pygeodesy.units): True
6test 157 pygeodesy.Fn_rt() class (pygeodesy.fmath): True
6test 158 pygeodesy.Footprint5Tuple() class (pygeodesy.ltpTuples): True
6test 159 pygeodesy.Forward4Tuple() class (pygeodesy.namedTuples): True
6test 160 pygeodesy.Fpolynomial() class (pygeodesy.fmath): True
6test 161 pygeodesy.Fpowers() class (pygeodesy.fmath): True
6test 162 pygeodesy.Frechet() class (pygeodesy.frechet): True
6test 163 pygeodesy.Frechet6Tuple() class (pygeodesy.frechet): True
6test 164 pygeodesy.FrechetCosineAndoyerLambert() class (pygeodesy.frechet): True
6test 165 pygeodesy.FrechetCosineForsytheAndoyerLambert() class (pygeodesy.frechet): True
6test 166 pygeodesy.FrechetCosineLaw() class (pygeodesy.frechet): True
6test 167 pygeodesy.FrechetDegrees() class (pygeodesy.frechet): True
6test 168 pygeodesy.FrechetDistanceTo() class (pygeodesy.frechet): True
6test 169 pygeodesy.FrechetEquirectangular() class (pygeodesy.frechet): True
6test 170 pygeodesy.FrechetError() class (pygeodesy.frechet): True
6test 171 pygeodesy.FrechetEuclidean() class (pygeodesy.frechet): True
6test 172 pygeodesy.FrechetExact() class (pygeodesy.frechet): True
6test 173 pygeodesy.FrechetFlatLocal() class (pygeodesy.frechet): True
6test 174 pygeodesy.FrechetFlatPolar() class (pygeodesy.frechet): True
6test 175 pygeodesy.FrechetHaversine() class (pygeodesy.frechet): True
6test 176 pygeodesy.FrechetHubeny() class (pygeodesy.frechet): True
6test 177 pygeodesy.FrechetKarney() class (pygeodesy.frechet): True
6test 178 pygeodesy.FrechetRadians() class (pygeodesy.frechet): True
6test 179 pygeodesy.FrechetThomas() class (pygeodesy.frechet): True
6test 180 pygeodesy.FrechetVincentys() class (pygeodesy.frechet): True
6test 181 pygeodesy.Frustum() class (pygeodesy.ltp): True
6test 182 pygeodesy.Fsqrt() class (pygeodesy.fmath): True
6test 183 pygeodesy.Fsum() class (pygeodesy.fsums): True
6test 184 pygeodesy.Fsum2Tuple() class (pygeodesy.fsums): True
6test 185 pygeodesy.Fwelford() class (pygeodesy.fstats): True
6test 186 pygeodesy.GARSError() class (pygeodesy.gars): True
6test 187 pygeodesy.GDict() class (pygeodesy.karney): True
6test 188 pygeodesy.Garef() class (pygeodesy.gars): True
6test 189 pygeodesy.GeodSolve12Tuple() class (pygeodesy.geodsolve): True
6test 190 pygeodesy.GeodesicAreaExact() class (pygeodesy.geodesicx.gxarea): True
6test 191 pygeodesy.GeodesicError() class (pygeodesy.karney): True
6test 192 pygeodesy.GeodesicExact() class (pygeodesy.geodesicx.gx): True
6test 193 pygeodesy.GeodesicLineExact() class (pygeodesy.geodesicx.gx): True
6test 194 pygeodesy.GeodesicLineSolve() class (pygeodesy.geodsolve): True
6test 195 pygeodesy.GeodesicSolve() class (pygeodesy.geodsolve): True
6test 196 pygeodesy.Geohash() class (pygeodesy.geohash): True
6test 197 pygeodesy.GeohashError() class (pygeodesy.geohash): True
6test 198 pygeodesy.GeoidError() class (pygeodesy.geoids): True
6test 199 pygeodesy.GeoidG2012B() class (pygeodesy.geoids): True
6test 200 pygeodesy.GeoidHeight2Tuple() class (pygeodesy.elevations): True
6test 201 pygeodesy.GeoidHeight5Tuple() class (pygeodesy.geoids): True
6test 202 pygeodesy.GeoidKarney() class (pygeodesy.geoids): True
6test 203 pygeodesy.GeoidPGM() class (pygeodesy.geoids): True
6test 204 pygeodesy.Georef() class (pygeodesy.wgrs): True
6test 205 pygeodesy.Gnomonic() class (pygeodesy.azimuthal): True
6test 206 pygeodesy.GnomonicExact() class (pygeodesy.azimuthal): True
6test 207 pygeodesy.GnomonicGeodSolve() class (pygeodesy.azimuthal): True
6test 208 pygeodesy.GnomonicKarney() class (pygeodesy.azimuthal): True
6test 209 pygeodesy.Hausdorff() class (pygeodesy.hausdorff): True
6test 210 pygeodesy.Hausdorff6Tuple() class (pygeodesy.hausdorff): True
6test 211 pygeodesy.HausdorffCosineAndoyerLambert() class (pygeodesy.hausdorff): True
6test 212 pygeodesy.HausdorffCosineForsytheAndoyerLambert() class (pygeodesy.hausdorff): True
6test 213 pygeodesy.HausdorffCosineLaw() class (pygeodesy.hausdorff): True
6test 214 pygeodesy.HausdorffDegrees() class (pygeodesy.hausdorff): True
6test 215 pygeodesy.HausdorffDistanceTo() class (pygeodesy.hausdorff): True
6test 216 pygeodesy.HausdorffEquirectangular() class (pygeodesy.hausdorff): True
6test 217 pygeodesy.HausdorffError() class (pygeodesy.hausdorff): True
6test 218 pygeodesy.HausdorffEuclidean() class (pygeodesy.hausdorff): True
6test 219 pygeodesy.HausdorffExact() class (pygeodesy.hausdorff): True
6test 220 pygeodesy.HausdorffFlatLocal() class (pygeodesy.hausdorff): True
6test 221 pygeodesy.HausdorffFlatPolar() class (pygeodesy.hausdorff): True
6test 222 pygeodesy.HausdorffHaversine() class (pygeodesy.hausdorff): True
6test 223 pygeodesy.HausdorffHubeny() class (pygeodesy.hausdorff): True
6test 224 pygeodesy.HausdorffKarney() class (pygeodesy.hausdorff): True
6test 225 pygeodesy.HausdorffRadians() class (pygeodesy.hausdorff): True
6test 226 pygeodesy.HausdorffThomas() class (pygeodesy.hausdorff): True
6test 227 pygeodesy.HausdorffVincentys() class (pygeodesy.hausdorff): True
6test 228 pygeodesy.Height() class (pygeodesy.units): True
6test 229 pygeodesy.HeightCubic() class (pygeodesy.heights): True
6test 230 pygeodesy.HeightError() class (pygeodesy.heights): True
6test 231 pygeodesy.HeightIDW() function (pygeodesy.deprecated): True
6test 232 pygeodesy.HeightIDW2() function (pygeodesy.deprecated): True
6test 233 pygeodesy.HeightIDW3() function (pygeodesy.deprecated): True
6test 234 pygeodesy.HeightIDWcosineAndoyerLambert() class (pygeodesy.heights): True
6test 235 pygeodesy.HeightIDWcosineForsytheAndoyerLambert() class (pygeodesy.heights): True
6test 236 pygeodesy.HeightIDWcosineLaw() class (pygeodesy.heights): True
6test 237 pygeodesy.HeightIDWdistanceTo() class (pygeodesy.heights): True
6test 238 pygeodesy.HeightIDWequirectangular() class (pygeodesy.heights): True
6test 239 pygeodesy.HeightIDWeuclidean() class (pygeodesy.heights): True
6test 240 pygeodesy.HeightIDWflatLocal() class (pygeodesy.heights): True
6test 241 pygeodesy.HeightIDWflatPolar() class (pygeodesy.heights): True
6test 242 pygeodesy.HeightIDWhaversine() class (pygeodesy.heights): True
6test 243 pygeodesy.HeightIDWhubeny() class (pygeodesy.heights): True
6test 244 pygeodesy.HeightIDWkarney() class (pygeodesy.heights): True
6test 245 pygeodesy.HeightIDWthomas() class (pygeodesy.heights): True
6test 246 pygeodesy.HeightIDWvincentys() class (pygeodesy.heights): True
6test 247 pygeodesy.HeightLSQBiSpline() class (pygeodesy.heights): True
6test 248 pygeodesy.HeightLinear() class (pygeodesy.heights): True
6test 249 pygeodesy.HeightSmoothBiSpline() class (pygeodesy.heights): True
6test 250 pygeodesy.HeightX() class (pygeodesy.units): True
6test 251 pygeodesy.Height_() class (pygeodesy.units): True
6test 252 pygeodesy.Helmert7Tuple() class (pygeodesy.trf): True
6test 253 pygeodesy.INF float (pygeodesy.unitsBase): True
6test 254 pygeodesy.INT0 int (pygeodesy.unitsBase): True
6test 255 pygeodesy.Int() class (pygeodesy.unitsBase): True
6test 256 pygeodesy.Int_() class (pygeodesy.units): True
6test 257 pygeodesy.Intersection3Tuple() class (pygeodesy.namedTuples): True
6test 258 pygeodesy.IntersectionError() class (pygeodesy.errors): True
6test 259 pygeodesy.Inverse10Tuple() class (pygeodesy.karney): True
6test 260 pygeodesy.Jacobi2Tuple() class (pygeodesy.triaxials): True
6test 261 pygeodesy.JacobiConformal() class (pygeodesy.triaxials): True
6test 262 pygeodesy.KTMError() class (pygeodesy.ktm): True
6test 263 pygeodesy.KTransverseMercator() class (pygeodesy.ktm): True
6test 264 pygeodesy.LCCError() class (pygeodesy.lcc): True
6test 265 pygeodesy.Lam() class (pygeodesy.units): True
6test 266 pygeodesy.Lam_() class (pygeodesy.units): True
6test 267 pygeodesy.LambertEqualArea() class (pygeodesy.azimuthal): True
6test 268 pygeodesy.Lat() class (pygeodesy.units): True
6test 269 pygeodesy.LatLon2PsxyIter() class (pygeodesy.iters): True
6test 270 pygeodesy.LatLon2Tuple() class (pygeodesy.namedTuples): True
6test 271 pygeodesy.LatLon2psxy() class (pygeodesy.points): True
6test 272 pygeodesy.LatLon3Tuple() class (pygeodesy.namedTuples): True
6test 273 pygeodesy.LatLon4Tuple() class (pygeodesy.namedTuples): True
6test 274 pygeodesy.LatLonAziRk4Tuple() class (pygeodesy.css): True
6test 275 pygeodesy.LatLonDatum3Tuple() class (pygeodesy.namedTuples): True
6test 276 pygeodesy.LatLonDatum5Tuple() class (pygeodesy.namedTuples): True
6test 277 pygeodesy.LatLonExact4Tuple() class (pygeodesy.deprecated): True
6test 278 pygeodesy.LatLonFHP() class (pygeodesy.booleans): True
6test 279 pygeodesy.LatLonGH() class (pygeodesy.booleans): True
6test 280 pygeodesy.LatLonPrec3Tuple() class (pygeodesy.namedTuples): True
6test 281 pygeodesy.LatLonPrec5Tuple() class (pygeodesy.namedTuples): True
6test 282 pygeodesy.LatLon_() class (pygeodesy.points): True
6test 283 pygeodesy.Lat_() class (pygeodesy.units): True
6test 284 pygeodesy.LazyImportError() class (pygeodesy.lazily): True
6test 285 pygeodesy.Lcc() class (pygeodesy.lcc): True
6test 286 pygeodesy.LenError() class (pygeodesy.errors): True
6test 287 pygeodesy.LimitError() class (pygeodesy.errors): True
6test 288 pygeodesy.Local9Tuple() class (pygeodesy.ltpTuples): True
6test 289 pygeodesy.LocalCartesian() class (pygeodesy.ltp): True
6test 290 pygeodesy.LocalError() class (pygeodesy.ltp): True
6test 291 pygeodesy.Lon() class (pygeodesy.units): True
6test 292 pygeodesy.Lon_() class (pygeodesy.units): True
6test 293 pygeodesy.Ltp() class (pygeodesy.ltp): True
6test 294 pygeodesy.MANTIS int (pygeodesy.deprecated): True
6test 295 pygeodesy.MANT_DIG int (pygeodesy.unitsBase): True
6test 296 pygeodesy.MAX float (pygeodesy.unitsBase): True
6test 297 pygeodesy.MGRSError() class (pygeodesy.errors): True
6test 298 pygeodesy.MIN float (pygeodesy.unitsBase): True
6test 299 pygeodesy.Meeus2Tuple() class (pygeodesy.vector2d): True
6test 300 pygeodesy.Meter() class (pygeodesy.units): True
6test 301 pygeodesy.Meter2() class (pygeodesy.units): True
6test 302 pygeodesy.Meter3() class (pygeodesy.units): True
6test 303 pygeodesy.Meter_() class (pygeodesy.units): True
6test 304 pygeodesy.Mgrs() class (pygeodesy.mgrs): True
6test 305 pygeodesy.Mgrs4Tuple() class (pygeodesy.mgrs): True
6test 306 pygeodesy.Mgrs6Tuple() class (pygeodesy.mgrs): True
6test 307 pygeodesy.NAN float (pygeodesy.unitsBase): True
6test 308 pygeodesy.NEG0 float (pygeodesy.unitsBase): True
6test 309 pygeodesy.NINF float (pygeodesy.unitsBase): True
6test 310 pygeodesy.NM2m() function (pygeodesy.utily): True
6test 311 pygeodesy.NN str (pygeodesy.interns): True
6test 312 pygeodesy.NearestOn2Tuple() class (pygeodesy.namedTuples): True
6test 313 pygeodesy.NearestOn3Tuple() class (pygeodesy.namedTuples): True
6test 314 pygeodesy.NearestOn4Tuple() class (pygeodesy.namedTuples): True
6test 315 pygeodesy.NearestOn5Tuple() class (pygeodesy.namedTuples): True
6test 316 pygeodesy.NearestOn6Tuple() class (pygeodesy.namedTuples): True
6test 317 pygeodesy.NearestOn8Tuple() class (pygeodesy.namedTuples): True
6test 318 pygeodesy.Ned() class (pygeodesy.ltpTuples): True
6test 319 pygeodesy.Ned3Tuple() class (pygeodesy.deprecated): True
6test 320 pygeodesy.Ned4Tuple() class (pygeodesy.ltpTuples): True
6test 321 pygeodesy.Neighbors8Dict() class (pygeodesy.geohash): True
6test 322 pygeodesy.Northing() class (pygeodesy.units): True
6test 323 pygeodesy.NumPyError() class (pygeodesy.errors): True
6test 324 pygeodesy.Number_() class (pygeodesy.units): True
6test 325 pygeodesy.Numpy2LatLon() class (pygeodesy.points): True
6test 326 pygeodesy.OK str (pygeodesy.deprecated): True
6test 327 pygeodesy.OSGRError() class (pygeodesy.osgr): True
6test 328 pygeodesy.Orthographic() class (pygeodesy.azimuthal): True
6test 329 pygeodesy.Osgr() class (pygeodesy.osgr): True
6test 330 pygeodesy.PGMError() class (pygeodesy.geoids): True
6test 331 pygeodesy.PI float (pygeodesy.unitsBase): True
6test 332 pygeodesy.PI2 float (pygeodesy.unitsBase): True
6test 333 pygeodesy.PI3 float (pygeodesy.unitsBase): True
6test 334 pygeodesy.PI3_2 float (pygeodesy.unitsBase): True
6test 335 pygeodesy.PI4 float (pygeodesy.unitsBase): True
6test 336 pygeodesy.PI_2 float (pygeodesy.unitsBase): True
6test 337 pygeodesy.PI_3 float (pygeodesy.unitsBase): True
6test 338 pygeodesy.PI_4 float (pygeodesy.unitsBase): True
6test 339 pygeodesy.ParseError() class (pygeodesy.errors): True
6test 340 pygeodesy.Phi() class (pygeodesy.units): True
6test 341 pygeodesy.PhiLam2Tuple() class (pygeodesy.namedTuples): True
6test 342 pygeodesy.PhiLam3Tuple() class (pygeodesy.namedTuples): True
6test 343 pygeodesy.PhiLam4Tuple() class (pygeodesy.namedTuples): True
6test 344 pygeodesy.Phi_() class (pygeodesy.units): True
6test 345 pygeodesy.Point3Tuple() class (pygeodesy.namedTuples): True
6test 346 pygeodesy.Points2Tuple() class (pygeodesy.namedTuples): True
6test 347 pygeodesy.PointsError() class (pygeodesy.errors): True
6test 348 pygeodesy.PointsIter() class (pygeodesy.iters): True
6test 349 pygeodesy.PolygonArea() class (pygeodesy.geodesicx.gxarea): True
6test 350 pygeodesy.Precision_() class (pygeodesy.units): True
6test 351 pygeodesy.Property() class (pygeodesy.props): True
6test 352 pygeodesy.Property_RO() class (pygeodesy.props): True
6test 353 pygeodesy.R_FM float (pygeodesy.unitsBase): True
6test 354 pygeodesy.R_GM float (pygeodesy.unitsBase): True
6test 355 pygeodesy.R_KM float (pygeodesy.unitsBase): True
6test 356 pygeodesy.R_M float (pygeodesy.unitsBase): True
6test 357 pygeodesy.R_MA float (pygeodesy.unitsBase): True
6test 358 pygeodesy.R_MB float (pygeodesy.unitsBase): True
6test 359 pygeodesy.R_NM float (pygeodesy.unitsBase): True
6test 360 pygeodesy.R_QM float (pygeodesy.unitsBase): True
6test 361 pygeodesy.R_SM float (pygeodesy.unitsBase): True
6test 362 pygeodesy.R_VM float (pygeodesy.unitsBase): True
6test 363 pygeodesy.Radians() class (pygeodesy.units): True
6test 364 pygeodesy.Radians2() class (pygeodesy.units): True
6test 365 pygeodesy.Radians_() class (pygeodesy.units): True
6test 366 pygeodesy.Radical2Tuple() class (pygeodesy.formy): True
6test 367 pygeodesy.Radii11Tuple() class (pygeodesy.vector2d): True
6test 368 pygeodesy.Radius() class (pygeodesy.unitsBase): True
6test 369 pygeodesy.Radius_() class (pygeodesy.units): True
6test 370 pygeodesy.RangeError() class (pygeodesy.errors): True
6test 371 pygeodesy.RefFrame() class (pygeodesy.trf): True
6test 372 pygeodesy.RefFrameError() function (pygeodesy.deprecated): True
6test 373 pygeodesy.RefFrames class pygeodesy.trf.RefFrames (pygeodesy.trf): True
6test 374 pygeodesy.ResectionError() class (pygeodesy.resections): True
6test 375 pygeodesy.ResidualError() class (pygeodesy.fsums): True
6test 376 pygeodesy.Resolutions2Tuple() class (pygeodesy.geohash): True
6test 377 pygeodesy.Reverse4Tuple() class (pygeodesy.namedTuples): True
6test 378 pygeodesy.Rhumb() class (pygeodesy.rhumbx): True
6test 379 pygeodesy.Rhumb7Tuple() class (pygeodesy.deprecated): True
6test 380 pygeodesy.Rhumb8Tuple() class (pygeodesy.rhumbx): True
6test 381 pygeodesy.RhumbError() class (pygeodesy.rhumbx): True
6test 382 pygeodesy.RhumbLine() class (pygeodesy.rhumbx): True
6test 383 pygeodesy.RhumbLineSolve() class (pygeodesy.rhumbsolve): True
6test 384 pygeodesy.RhumbOrder2Tuple() class (pygeodesy.rhumbx): True
6test 385 pygeodesy.RhumbSolve() class (pygeodesy.rhumbsolve): True
6test 386 pygeodesy.RhumbSolve7Tuple() class (pygeodesy.rhumbsolve): True
6test 387 pygeodesy.SM2m() function (pygeodesy.utily): True
6test 388 pygeodesy.S_DEG str: True
6test 389 pygeodesy.S_DMS int: True
6test 390 pygeodesy.S_MIN str: True
6test 391 pygeodesy.S_RAD str (pygeodesy.interns): True
6test 392 pygeodesy.S_SEC str: True
6test 393 pygeodesy.S_SEP str (pygeodesy.interns): True
6test 394 pygeodesy.Scalar() class (pygeodesy.units): True
6test 395 pygeodesy.Scalar_() class (pygeodesy.units): True
6test 396 pygeodesy.SciPyError() class (pygeodesy.errors): True
6test 397 pygeodesy.SciPyWarning() class (pygeodesy.errors): True
6test 398 pygeodesy.Shape2Tuple() class (pygeodesy.points): True
6test 399 pygeodesy.Soddy4Tuple() class (pygeodesy.vector2d): True
6test 400 pygeodesy.Stereographic() class (pygeodesy.azimuthal): True
6test 401 pygeodesy.Str() class (pygeodesy.unitsBase): True
6test 402 pygeodesy.Str_() class (pygeodesy.interns): True
6test 403 pygeodesy.Survey3Tuple() class (pygeodesy.resections): True
6test 404 pygeodesy.TRFError() class (pygeodesy.errors): True
6test 405 pygeodesy.Tienstra7Tuple() class (pygeodesy.resections): True
6test 406 pygeodesy.Transform() class (pygeodesy.datums): True
6test 407 pygeodesy.Transform7Tuple() class (pygeodesy.deprecated): True
6test 408 pygeodesy.Transforms class pygeodesy.datums.Transforms (pygeodesy.datums): True
6test 409 pygeodesy.TriAngle4Tuple() class (pygeodesy.resections): True
6test 410 pygeodesy.TriSide2Tuple() class (pygeodesy.resections): True
6test 411 pygeodesy.TriSide4Tuple() class (pygeodesy.resections): True
6test 412 pygeodesy.Triangle7Tuple() class (pygeodesy.namedTuples): True
6test 413 pygeodesy.Triangle8Tuple() class (pygeodesy.namedTuples): True
6test 414 pygeodesy.TriangleError() class (pygeodesy.errors): True
6test 415 pygeodesy.Triaxial() class (pygeodesy.triaxials): True
6test 416 pygeodesy.TriaxialError() class (pygeodesy.triaxials): True
6test 417 pygeodesy.Triaxial_() class (pygeodesy.triaxials): True
6test 418 pygeodesy.Triaxials class pygeodesy.triaxials.Triaxials (pygeodesy.triaxials): True
6test 419 pygeodesy.Trilaterate5Tuple() class (pygeodesy.namedTuples): True
6test 420 pygeodesy.Tuple2LatLon() class (pygeodesy.points): True
6test 421 pygeodesy.UPSError() class (pygeodesy.ups): True
6test 422 pygeodesy.UTMError() class (pygeodesy.utm): True
6test 423 pygeodesy.UTMUPSError() class (pygeodesy.utmups): True
6test 424 pygeodesy.UnitError() class (pygeodesy.errors): True
6test 425 pygeodesy.Ups() class (pygeodesy.ups): True
6test 426 pygeodesy.Utm() class (pygeodesy.utm): True
6test 427 pygeodesy.UtmUps() function (pygeodesy.utmups): True
6test 428 pygeodesy.UtmUps2Tuple() class (pygeodesy.namedTuples): True
6test 429 pygeodesy.UtmUps4Tuple() class (pygeodesy.deprecated): True
6test 430 pygeodesy.UtmUps5Tuple() class (pygeodesy.namedTuples): True
6test 431 pygeodesy.UtmUps8Tuple() class (pygeodesy.namedTuples): True
6test 432 pygeodesy.UtmUpsLatLon5Tuple() class (pygeodesy.namedTuples): True
6test 433 pygeodesy.Vector2Tuple() class (pygeodesy.namedTuples): True
6test 434 pygeodesy.Vector3Tuple() class (pygeodesy.namedTuples): True
6test 435 pygeodesy.Vector3d() class (pygeodesy.vector3d): True
6test 436 pygeodesy.Vector4Tuple() class (pygeodesy.namedTuples): True
6test 437 pygeodesy.VectorError() class (pygeodesy.errors): True
6test 438 pygeodesy.VincentyError() class (pygeodesy.ellipsoidalVincenty): True
6test 439 pygeodesy.WGRSError() class (pygeodesy.wgrs): True
6test 440 pygeodesy.WebMercatorError() class (pygeodesy.webmercator): True
6test 441 pygeodesy.Wm() class (pygeodesy.webmercator): True
6test 442 pygeodesy.Xyz4Tuple() class (pygeodesy.ltpTuples): True
6test 443 pygeodesy.XyzLocal() class (pygeodesy.ltpTuples): True
6test 444 pygeodesy.Zone() class (pygeodesy.units): True
6test 445 pygeodesy.a_b2e() function (pygeodesy.ellipsoids): True
6test 446 pygeodesy.a_b2e2() function (pygeodesy.ellipsoids): True
6test 447 pygeodesy.a_b2e22() function (pygeodesy.ellipsoids): True
6test 448 pygeodesy.a_b2e32() function (pygeodesy.ellipsoids): True
6test 449 pygeodesy.a_b2f() function (pygeodesy.ellipsoids): True
6test 450 pygeodesy.a_b2f2() function (pygeodesy.ellipsoids): True
6test 451 pygeodesy.a_b2f_() function (pygeodesy.ellipsoids): True
6test 452 pygeodesy.a_b2n() function (pygeodesy.ellipsoids): True
6test 453 pygeodesy.a_f2Tuple() class (pygeodesy.ellipsoids): True
6test 454 pygeodesy.a_f2b() function (pygeodesy.ellipsoids): True
6test 455 pygeodesy.a_f_2b() function (pygeodesy.ellipsoids): True
6test 456 pygeodesy.acos1() function (pygeodesy.utily): True
6test 457 pygeodesy.acre2ha() function (pygeodesy.utily): True
6test 458 pygeodesy.acre2m2() function (pygeodesy.utily): True
6test 459 pygeodesy.albers module: True
6test 460 pygeodesy.anStr() function (pygeodesy.deprecated): True
6test 461 pygeodesy.anstr() function (pygeodesy.streprs): True
6test 462 pygeodesy.antipode() function (pygeodesy.formy): True
6test 463 pygeodesy.antipode_() function (pygeodesy.formy): True
6test 464 pygeodesy.areaOf() function (pygeodesy.points): True
6test 465 pygeodesy.areaof() function (pygeodesy.deprecated): True
6test 466 pygeodesy.asin1() function (pygeodesy.utily): True
6test 467 pygeodesy.atan2b() function (pygeodesy.utily): True
6test 468 pygeodesy.atan2d() function (pygeodesy.utily): True
6test 469 pygeodesy.atand() function (pygeodesy.utily): True
6test 470 pygeodesy.attrs() function (pygeodesy.streprs): True
6test 471 pygeodesy.azimuthal module: True
6test 472 pygeodesy.b_f2a() function (pygeodesy.ellipsoids): True
6test 473 pygeodesy.b_f_2a() function (pygeodesy.ellipsoids): True
6test 474 pygeodesy.bases module: True
6test 475 pygeodesy.basics module: True
6test 476 pygeodesy.bearing() function (pygeodesy.formy): True
6test 477 pygeodesy.bearingDMS() function (pygeodesy.dms): True
6test 478 pygeodesy.bearing_() function (pygeodesy.formy): True
6test 479 pygeodesy.booleans module: True
6test 480 pygeodesy.bounds() function (pygeodesy.deprecated): True
6test 481 pygeodesy.boundsOf() function (pygeodesy.points): True
6test 482 pygeodesy.callername() function (pygeodesy.named): True
6test 483 pygeodesy.cartesianBase module: True
6test 484 pygeodesy.cassini() function (pygeodesy.resections): True
6test 485 pygeodesy.cbrt() function (pygeodesy.fmath): True
6test 486 pygeodesy.cbrt2() function (pygeodesy.fmath): True
6test 487 pygeodesy.centroidOf() function (pygeodesy.points): True
6test 488 pygeodesy.chain2m() function (pygeodesy.utily): True
6test 489 pygeodesy.circin6() function (pygeodesy.vector2d): True
6test 490 pygeodesy.circle4() function (pygeodesy.utily): True
6test 491 pygeodesy.circum3() function (pygeodesy.vector2d): True
6test 492 pygeodesy.circum4_() function (pygeodesy.vector2d): True
6test 493 pygeodesy.classname() function (pygeodesy.named): True
6test 494 pygeodesy.classnaming() function (pygeodesy.named): True
6test 495 pygeodesy.clipCS3() function (pygeodesy.deprecated): True
6test 496 pygeodesy.clipCS4() function (pygeodesy.clipy): True
6test 497 pygeodesy.clipDMS() function (pygeodesy.deprecated): True
6test 498 pygeodesy.clipDegrees() function (pygeodesy.dms): True
6test 499 pygeodesy.clipFHP4() function (pygeodesy.clipy): True
6test 500 pygeodesy.clipGH4() function (pygeodesy.clipy): True
6test 501 pygeodesy.clipLB6() function (pygeodesy.clipy): True
6test 502 pygeodesy.clipRadians() function (pygeodesy.dms): True
6test 503 pygeodesy.clipSH() function (pygeodesy.clipy): True
6test 504 pygeodesy.clipSH3() function (pygeodesy.clipy): True
6test 505 pygeodesy.clipStr() function (pygeodesy.deprecated): True
6test 506 pygeodesy.clips() function (pygeodesy.basics): True
6test 507 pygeodesy.clipy module: True
6test 508 pygeodesy.collins() function (pygeodesy.deprecated): True
6test 509 pygeodesy.collins5() function (pygeodesy.resections): True
6test 510 pygeodesy.compassAngle() function (pygeodesy.formy): True
6test 511 pygeodesy.compassDMS() function (pygeodesy.dms): True
6test 512 pygeodesy.compassPoint() function (pygeodesy.dms): True
6test 513 pygeodesy.constants module: True
6test 514 pygeodesy.copysign0() function (pygeodesy.basics): True
6test 515 pygeodesy.copytype() function (pygeodesy.basics): True
6test 516 pygeodesy.cosineAndoyerLambert() function (pygeodesy.formy): True
6test 517 pygeodesy.cosineAndoyerLambert_() function (pygeodesy.formy): True
6test 518 pygeodesy.cosineForsytheAndoyerLambert() function (pygeodesy.formy): True
6test 519 pygeodesy.cosineForsytheAndoyerLambert_() function (pygeodesy.formy): True
6test 520 pygeodesy.cosineLaw() function (pygeodesy.formy): True
6test 521 pygeodesy.cosineLaw_() function (pygeodesy.formy): True
6test 522 pygeodesy.cot() function (pygeodesy.utily): True
6test 523 pygeodesy.cot_() function (pygeodesy.utily): True
6test 524 pygeodesy.cotd() function (pygeodesy.utily): True
6test 525 pygeodesy.cotd_() function (pygeodesy.utily): True
6test 526 pygeodesy.crosserrors() function (pygeodesy.errors): True
6test 527 pygeodesy.css module: True
6test 528 pygeodesy.date2epoch() function (pygeodesy.trf): True
6test 529 pygeodesy.datum module: True
6test 530 pygeodesy.datums module: True
6test 531 pygeodesy.decodeEPSG2() function (pygeodesy.deprecated): True
6test 532 pygeodesy.degDMS() function (pygeodesy.dms): True
6test 533 pygeodesy.degrees class builtin_function_or_method (math): True
6test 534 pygeodesy.degrees180() function (pygeodesy.utily): True
6test 535 pygeodesy.degrees2grades() function (pygeodesy.utily): True
6test 536 pygeodesy.degrees2m() function (pygeodesy.utily): True
6test 537 pygeodesy.degrees360() function (pygeodesy.utily): True
6test 538 pygeodesy.degrees90() function (pygeodesy.utily): True
6test 539 pygeodesy.deprecated module: True
6test 540 pygeodesy.deprecated_Property_RO() function (pygeodesy.props): True
6test 541 pygeodesy.deprecated_class() function (pygeodesy.props): True
6test 542 pygeodesy.deprecated_function() function (pygeodesy.props): True
6test 543 pygeodesy.deprecated_method() function (pygeodesy.props): True
6test 544 pygeodesy.deprecated_property_RO() function (pygeodesy.props): True
6test 545 pygeodesy.dms module: True
6test 546 pygeodesy.e22f() function (pygeodesy.ellipsoids): True
6test 547 pygeodesy.e2f() function (pygeodesy.ellipsoids): True
6test 548 pygeodesy.ecef module: True
6test 549 pygeodesy.egmGeoidHeights() function (pygeodesy.geoids): True
6test 550 pygeodesy.elevation2() function (pygeodesy.elevations): True
6test 551 pygeodesy.elevations module: True
6test 552 pygeodesy.ellipsoidalBase module: True
6test 553 pygeodesy.ellipsoidalBaseDI module: True
6test 554 pygeodesy.ellipsoidalExact module: True
6test 555 pygeodesy.ellipsoidalGeodSolve module: True
6test 556 pygeodesy.ellipsoidalKarney module: True
6test 557 pygeodesy.ellipsoidalNvector module: True
6test 558 pygeodesy.ellipsoidalVincenty module: True
6test 559 pygeodesy.ellipsoids module: True
6test 560 pygeodesy.elliptic module: True
6test 561 pygeodesy.enStr2() function (pygeodesy.deprecated): True
6test 562 pygeodesy.encodeEPSG() function (pygeodesy.deprecated): True
6test 563 pygeodesy.enstr2() function (pygeodesy.streprs): True
6test 564 pygeodesy.epoch2date() function (pygeodesy.trf): True
6test 565 pygeodesy.epsg module: True
6test 566 pygeodesy.equidistant() function (pygeodesy.azimuthal): True
6test 567 pygeodesy.equirectangular() function (pygeodesy.formy): True
6test 568 pygeodesy.equirectangular3() function (pygeodesy.deprecated): True
6test 569 pygeodesy.equirectangular_() function (pygeodesy.formy): True
6test 570 pygeodesy.errors module: True
6test 571 pygeodesy.etm module: True
6test 572 pygeodesy.euclid() function (pygeodesy.fmath): True
6test 573 pygeodesy.euclid_() function (pygeodesy.fmath): True
6test 574 pygeodesy.euclidean() function (pygeodesy.formy): True
6test 575 pygeodesy.euclidean_() function (pygeodesy.formy): True
6test 576 pygeodesy.exception_chaining() function (pygeodesy.errors): True
6test 577 pygeodesy.excessAbc() function (pygeodesy.formy): True
6test 578 pygeodesy.excessGirard() function (pygeodesy.formy): True
6test 579 pygeodesy.excessKarney() function (pygeodesy.formy): True
6test 580 pygeodesy.excessKarney_() function (pygeodesy.formy): True
6test 581 pygeodesy.excessLHuilier() function (pygeodesy.formy): True
6test 582 pygeodesy.excessQuad() function (pygeodesy.formy): True
6test 583 pygeodesy.excessQuad_() function (pygeodesy.formy): True
6test 584 pygeodesy.f2e2() function (pygeodesy.ellipsoids): True
6test 585 pygeodesy.f2e22() function (pygeodesy.ellipsoids): True
6test 586 pygeodesy.f2e32() function (pygeodesy.ellipsoids): True
6test 587 pygeodesy.f2f2() function (pygeodesy.ellipsoids): True
6test 588 pygeodesy.f2f_() function (pygeodesy.ellipsoids): True
6test 589 pygeodesy.f2n() function (pygeodesy.ellipsoids): True
6test 590 pygeodesy.fStr() function (pygeodesy.deprecated): True
6test 591 pygeodesy.fStrzs() function (pygeodesy.deprecated): True
6test 592 pygeodesy.f_2f() function (pygeodesy.ellipsoids): True
6test 593 pygeodesy.facos1() function (pygeodesy.fmath): True
6test 594 pygeodesy.false2f() function (pygeodesy.deprecated): True
6test 595 pygeodesy.falsed2f() function (pygeodesy.deprecated): True
6test 596 pygeodesy.fasin1() function (pygeodesy.fmath): True
6test 597 pygeodesy.fatan() function (pygeodesy.fmath): True
6test 598 pygeodesy.fatan1() function (pygeodesy.fmath): True
6test 599 pygeodesy.fatan2() function (pygeodesy.fmath): True
6test 600 pygeodesy.fathom2m() function (pygeodesy.utily): True
6test 601 pygeodesy.favg() function (pygeodesy.fmath): True
6test 602 pygeodesy.fdot() function (pygeodesy.fmath): True
6test 603 pygeodesy.fdot3() function (pygeodesy.fmath): True
6test 604 pygeodesy.fhorner() function (pygeodesy.fmath): True
6test 605 pygeodesy.fidw() function (pygeodesy.fmath): True
6test 606 pygeodesy.flatLocal() function (pygeodesy.formy): True
6test 607 pygeodesy.flatLocal_() function (pygeodesy.formy): True
6test 608 pygeodesy.flatPolar() function (pygeodesy.formy): True
6test 609 pygeodesy.flatPolar_() function (pygeodesy.formy): True
6test 610 pygeodesy.float0() function (pygeodesy.constants): True
6test 611 pygeodesy.float_() function (pygeodesy.constants): True
6test 612 pygeodesy.fmath module: True
6test 613 pygeodesy.fmean() function (pygeodesy.fmath): True
6test 614 pygeodesy.fmean_() function (pygeodesy.fmath): True
6test 615 pygeodesy.formy module: True
6test 616 pygeodesy.fpolynomial() function (pygeodesy.fmath): True
6test 617 pygeodesy.fpowers() function (pygeodesy.fmath): True
6test 618 pygeodesy.fprod class builtin_function_or_method (math): True
6test 619 pygeodesy.fractional() function (pygeodesy.points): True
6test 620 pygeodesy.frange() function (pygeodesy.fmath): True
6test 621 pygeodesy.frechet module: True
6test 622 pygeodesy.frechet_() function (pygeodesy.frechet): True
6test 623 pygeodesy.freduce class builtin_function_or_method (_functools): True
6test 624 pygeodesy.fremainder() function (pygeodesy.fmath): True
6test 625 pygeodesy.fstats module: True
6test 626 pygeodesy.fstr() function (pygeodesy.streprs): True
6test 627 pygeodesy.fstrzs() function (pygeodesy.streprs): True
6test 628 pygeodesy.fsum() function (pygeodesy.fsums): True
6test 629 pygeodesy.fsum1() function (pygeodesy.fsums): True
6test 630 pygeodesy.fsum1_() function (pygeodesy.fsums): True
6test 631 pygeodesy.fsum_() function (pygeodesy.fsums): True
6test 632 pygeodesy.fsums module: True
6test 633 pygeodesy.ft2m() function (pygeodesy.utily): True
6test 634 pygeodesy.furlong2m() function (pygeodesy.utily): True
6test 635 pygeodesy.gars module: True
6test 636 pygeodesy.geodesicx module: True
6test 637 pygeodesy.geodsolve module: True
6test 638 pygeodesy.geohash module: True
6test 639 pygeodesy.geoidHeight2() function (pygeodesy.elevations): True
6test 640 pygeodesy.geoids module: True
6test 641 pygeodesy.gnomonic() function (pygeodesy.azimuthal): True
6test 642 pygeodesy.grades() function (pygeodesy.utily): True
6test 643 pygeodesy.grades2degrees() function (pygeodesy.utily): True
6test 644 pygeodesy.grades2radians() function (pygeodesy.utily): True
6test 645 pygeodesy.grades400() function (pygeodesy.utily): True
6test 646 pygeodesy.gx module: True
6test 647 pygeodesy.gxarea module: True
6test 648 pygeodesy.gxline module: True
6test 649 pygeodesy.halfs2() function (pygeodesy.basics): True
6test 650 pygeodesy.hartzell() function (pygeodesy.formy): True
6test 651 pygeodesy.hartzell4() function (pygeodesy.triaxials): True
6test 652 pygeodesy.hausdorff module: True
6test 653 pygeodesy.hausdorff_() function (pygeodesy.hausdorff): True
6test 654 pygeodesy.haversine() function (pygeodesy.formy): True
6test 655 pygeodesy.haversine_() function (pygeodesy.formy): True
6test 656 pygeodesy.heightOf() function (pygeodesy.formy): True
6test 657 pygeodesy.heights module: True
6test 658 pygeodesy.horizon() function (pygeodesy.formy): True
6test 659 pygeodesy.hstr() function (pygeodesy.streprs): True
6test 660 pygeodesy.hubeny() function (pygeodesy.formy): True
6test 661 pygeodesy.hubeny_() function (pygeodesy.formy): True
6test 662 pygeodesy.hypot() function (pygeodesy.fmath): True
6test 663 pygeodesy.hypot1() function (pygeodesy.fmath): True
6test 664 pygeodesy.hypot2() function (pygeodesy.fmath): True
6test 665 pygeodesy.hypot2_() function (pygeodesy.fmath): True
6test 666 pygeodesy.hypot3() function (pygeodesy.deprecated): True
6test 667 pygeodesy.hypot_ class builtin_function_or_method (math): True
6test 668 pygeodesy.inStr() function (pygeodesy.deprecated): True
6test 669 pygeodesy.instr() function (pygeodesy.streprs): True
6test 670 pygeodesy.interns module: True
6test 671 pygeodesy.intersection3d3() function (pygeodesy.vector3d): True
6test 672 pygeodesy.intersections2() function (pygeodesy.formy): True
6test 673 pygeodesy.isDEPRECATED() function (pygeodesy.deprecated): True
6test 674 pygeodesy.isError() function (pygeodesy.errors): True
6test 675 pygeodesy.isLazy int: True
6test 676 pygeodesy.isNumpy2() function (pygeodesy.iters): True
6test 677 pygeodesy.isPoints2() function (pygeodesy.iters): True
6test 678 pygeodesy.isTuple2() function (pygeodesy.iters): True
6test 679 pygeodesy.isantipode() function (pygeodesy.formy): True
6test 680 pygeodesy.isantipode_() function (pygeodesy.formy): True
6test 681 pygeodesy.isbool() function (pygeodesy.basics): True
6test 682 pygeodesy.isclass() function (inspect): True
6test 683 pygeodesy.isclockwise() function (pygeodesy.points): True
6test 684 pygeodesy.isclose() function (pygeodesy.constants): True
6test 685 pygeodesy.iscolinearWith() function (pygeodesy.vector3d): True
6test 686 pygeodesy.iscomplex() function (pygeodesy.basics): True
6test 687 pygeodesy.isconvex() function (pygeodesy.points): True
6test 688 pygeodesy.isconvex_() function (pygeodesy.points): True
6test 689 pygeodesy.isenclosedBy() function (pygeodesy.points): True
6test 690 pygeodesy.isenclosedby() function (pygeodesy.deprecated): True
6test 691 pygeodesy.isfinite() function (pygeodesy.constants): True
6test 692 pygeodesy.isfloat() function (pygeodesy.basics): True
6test 693 pygeodesy.isidentifier class method_descriptor: True
6test 694 pygeodesy.isinf class builtin_function_or_method (math): True
6test 695 pygeodesy.isinstanceof() function (pygeodesy.basics): True
6test 696 pygeodesy.isint() function (pygeodesy.basics): True
6test 697 pygeodesy.isint0() function (pygeodesy.constants): True
6test 698 pygeodesy.iskeyword class builtin_function_or_method: True
6test 699 pygeodesy.isnan class builtin_function_or_method (math): True
6test 700 pygeodesy.isnear0() function (pygeodesy.constants): True
6test 701 pygeodesy.isnear1() function (pygeodesy.constants): True
6test 702 pygeodesy.isnear90() function (pygeodesy.constants): True
6test 703 pygeodesy.isneg0() function (pygeodesy.constants): True
6test 704 pygeodesy.isninf() function (pygeodesy.constants): True
6test 705 pygeodesy.isnon0() function (pygeodesy.constants): True
6test 706 pygeodesy.isnormal() function (pygeodesy.formy): True
6test 707 pygeodesy.isnormal_() function (pygeodesy.formy): True
6test 708 pygeodesy.isodd() function (pygeodesy.basics): True
6test 709 pygeodesy.ispolar() function (pygeodesy.points): True
6test 710 pygeodesy.isscalar() function (pygeodesy.basics): True
6test 711 pygeodesy.issequence() function (pygeodesy.basics): True
6test 712 pygeodesy.isstr() function (pygeodesy.basics): True
6test 713 pygeodesy.issubclassof() function (pygeodesy.basics): True
6test 714 pygeodesy.istuplist() function (pygeodesy.basics): True
6test 715 pygeodesy.itemsorted() function (pygeodesy.errors): True
6test 716 pygeodesy.iterNumpy2() function (pygeodesy.iters): True
6test 717 pygeodesy.iterNumpy2over() function (pygeodesy.iters): True
6test 718 pygeodesy.iters module: True
6test 719 pygeodesy.joined() function (pygeodesy.deprecated): True
6test 720 pygeodesy.joined_() function (pygeodesy.deprecated): True
6test 721 pygeodesy.karney module: True
6test 722 pygeodesy.km2m() function (pygeodesy.utily): True
6test 723 pygeodesy.ktm module: True
6test 724 pygeodesy.latDMS() function (pygeodesy.dms): True
6test 725 pygeodesy.latlon2n_xyz() function (pygeodesy.formy): True
6test 726 pygeodesy.latlonBase module: True
6test 727 pygeodesy.latlonDMS() function (pygeodesy.dms): True
6test 728 pygeodesy.latlonDMS_() function (pygeodesy.dms): True
6test 729 pygeodesy.lazily module: True
6test 730 pygeodesy.lcc module: True
6test 731 pygeodesy.len2() function (pygeodesy.basics): True
6test 732 pygeodesy.limiterrors() function (pygeodesy.errors): True
6test 733 pygeodesy.lonDMS() function (pygeodesy.dms): True
6test 734 pygeodesy.lrstrip() function (pygeodesy.streprs): True
6test 735 pygeodesy.ltp module: True
6test 736 pygeodesy.ltpTuples module: True
6test 737 pygeodesy.luneOf() function (pygeodesy.points): True
6test 738 pygeodesy.m2NM() function (pygeodesy.utily): True
6test 739 pygeodesy.m2SM() function (pygeodesy.utily): True
6test 740 pygeodesy.m2chain() function (pygeodesy.utily): True
6test 741 pygeodesy.m2degrees() function (pygeodesy.utily): True
6test 742 pygeodesy.m2fathom() function (pygeodesy.utily): True
6test 743 pygeodesy.m2ft() function (pygeodesy.utily): True
6test 744 pygeodesy.m2furlong() function (pygeodesy.utily): True
6test 745 pygeodesy.m2km() function (pygeodesy.utily): True
6test 746 pygeodesy.m2radians() function (pygeodesy.utily): True
6test 747 pygeodesy.m2toise() function (pygeodesy.utily): True
6test 748 pygeodesy.m2yard() function (pygeodesy.utily): True
6test 749 pygeodesy.machine() function (pygeodesy.interns): True
6test 750 pygeodesy.map1() function (pygeodesy.basics): True
6test 751 pygeodesy.map2() function (pygeodesy.basics): True
6test 752 pygeodesy.meeus2() function (pygeodesy.vector2d): True
6test 753 pygeodesy.mgrs module: True
6test 754 pygeodesy.modulename() function (pygeodesy.named): True
6test 755 pygeodesy.n2e2() function (pygeodesy.ellipsoids): True
6test 756 pygeodesy.n2f() function (pygeodesy.ellipsoids): True
6test 757 pygeodesy.n2f_() function (pygeodesy.ellipsoids): True
6test 758 pygeodesy.n_xyz2latlon() function (pygeodesy.formy): True
6test 759 pygeodesy.n_xyz2philam() function (pygeodesy.formy): True
6test 760 pygeodesy.named module: True
6test 761 pygeodesy.namedTuples module: True
6test 762 pygeodesy.nameof() function (pygeodesy.named): True
6test 763 pygeodesy.nearestOn() function (pygeodesy.vector3d): True
6test 764 pygeodesy.nearestOn3() function (pygeodesy.deprecated): True
6test 765 pygeodesy.nearestOn4() function (pygeodesy.deprecated): True
6test 766 pygeodesy.nearestOn5() function (pygeodesy.points): True
6test 767 pygeodesy.nearestOn6() function (pygeodesy.vector3d): True
6test 768 pygeodesy.neg() function (pygeodesy.basics): True
6test 769 pygeodesy.neg_() function (pygeodesy.basics): True
6test 770 pygeodesy.norm2() function (pygeodesy.fmath): True
6test 771 pygeodesy.normDMS() function (pygeodesy.dms): True
6test 772 pygeodesy.norm_() function (pygeodesy.fmath): True
6test 773 pygeodesy.normal() function (pygeodesy.formy): True
6test 774 pygeodesy.normal_() function (pygeodesy.formy): True
6test 775 pygeodesy.notImplemented() function (pygeodesy.named): True
6test 776 pygeodesy.notOverloaded() function (pygeodesy.named): True
6test 777 pygeodesy.nvector module: True
6test 778 pygeodesy.nvectorBase module: True
6test 779 pygeodesy.opposing() function (pygeodesy.formy): True
6test 780 pygeodesy.opposing_() function (pygeodesy.formy): True
6test 781 pygeodesy.osgr module: True
6test 782 pygeodesy.pairs() function (pygeodesy.streprs): True
6test 783 pygeodesy.parse3d() function (pygeodesy.vector3d): True
6test 784 pygeodesy.parse3llh() function (pygeodesy.dms): True
6test 785 pygeodesy.parseDDDMMSS() function (pygeodesy.dms): True
6test 786 pygeodesy.parseDMS() function (pygeodesy.dms): True
6test 787 pygeodesy.parseDMS2() function (pygeodesy.dms): True
6test 788 pygeodesy.parseETM5() function (pygeodesy.etm): True
6test 789 pygeodesy.parseMGRS() function (pygeodesy.mgrs): True
6test 790 pygeodesy.parseOSGR() function (pygeodesy.osgr): True
6test 791 pygeodesy.parseRad() function (pygeodesy.dms): True
6test 792 pygeodesy.parseUPS5() function (pygeodesy.ups): True
6test 793 pygeodesy.parseUTM() function (pygeodesy.deprecated): True
6test 794 pygeodesy.parseUTM5() function (pygeodesy.utm): True
6test 795 pygeodesy.parseUTMUPS5() function (pygeodesy.utmups): True
6test 796 pygeodesy.parseWM() function (pygeodesy.webmercator): True
6test 797 pygeodesy.perimeterOf() function (pygeodesy.points): True
6test 798 pygeodesy.perimeterof() function (pygeodesy.deprecated): True
6test 799 pygeodesy.philam2n_xyz() function (pygeodesy.formy): True
6test 800 pygeodesy.pierlot() function (pygeodesy.resections): True
6test 801 pygeodesy.points module: True
6test 802 pygeodesy.points2() function (pygeodesy.iters): True
6test 803 pygeodesy.polygon() function (pygeodesy.deprecated): True
6test 804 pygeodesy.precision() function (pygeodesy.dms): True
6test 805 pygeodesy.print_() function (pygeodesy.lazily): True
6test 806 pygeodesy.printf() function (pygeodesy.lazily): True
6test 807 pygeodesy.property_RO() class (pygeodesy.props): True
6test 808 pygeodesy.property_doc_() function (pygeodesy.props): True
6test 809 pygeodesy.props module: True
6test 810 pygeodesy.pygeodesy_abspath str: True
6test 811 pygeodesy.quadOf() function (pygeodesy.points): True
6test 812 pygeodesy.radians class builtin_function_or_method (math): True
6test 813 pygeodesy.radians2m() function (pygeodesy.utily): True
6test 814 pygeodesy.radiansPI() function (pygeodesy.utily): True
6test 815 pygeodesy.radiansPI2() function (pygeodesy.utily): True
6test 816 pygeodesy.radiansPI_2() function (pygeodesy.utily): True
6test 817 pygeodesy.radical2() function (pygeodesy.formy): True
6test 818 pygeodesy.radii11() function (pygeodesy.vector2d): True
6test 819 pygeodesy.randomrangenerator() function (pygeodesy.hausdorff): True
6test 820 pygeodesy.rangerrors() function (pygeodesy.errors): True
6test 821 pygeodesy.remainder class builtin_function_or_method (math): True
6test 822 pygeodesy.reprs() function (pygeodesy.streprs): True
6test 823 pygeodesy.resections module: True
6test 824 pygeodesy.rhumbsolve module: True
6test 825 pygeodesy.rhumbx module: True
6test 826 pygeodesy.scalar() function (pygeodesy.deprecated): True
6test 827 pygeodesy.signBit() function (pygeodesy.basics): True
6test 828 pygeodesy.signOf() function (pygeodesy.basics): True
6test 829 pygeodesy.simplify module: True
6test 830 pygeodesy.simplify1() function (pygeodesy.simplify): True
6test 831 pygeodesy.simplify2() function (pygeodesy.deprecated): True
6test 832 pygeodesy.simplifyRDP() function (pygeodesy.simplify): True
6test 833 pygeodesy.simplifyRDPm() function (pygeodesy.simplify): True
6test 834 pygeodesy.simplifyRW() function (pygeodesy.simplify): True
6test 835 pygeodesy.simplifyVW() function (pygeodesy.simplify): True
6test 836 pygeodesy.simplifyVWm() function (pygeodesy.simplify): True
6test 837 pygeodesy.sincos2() function (pygeodesy.utily): True
6test 838 pygeodesy.sincos2_() function (pygeodesy.utily): True
6test 839 pygeodesy.sincos2d() function (pygeodesy.utily): True
6test 840 pygeodesy.sincos2d_() function (pygeodesy.utily): True
6test 841 pygeodesy.sincostan3() function (pygeodesy.utily): True
6test 842 pygeodesy.snellius3() function (pygeodesy.resections): True
6test 843 pygeodesy.soddy4() function (pygeodesy.vector2d): True
6test 844 pygeodesy.solveBase module: True
6test 845 pygeodesy.sphericalBase module: True
6test 846 pygeodesy.sphericalNvector module: True
6test 847 pygeodesy.sphericalTrigonometry module: True
6test 848 pygeodesy.splice() function (pygeodesy.basics): True
6test 849 pygeodesy.sqrt0() function (pygeodesy.fmath): True
6test 850 pygeodesy.sqrt3() function (pygeodesy.fmath): True
6test 851 pygeodesy.sqrt_a() function (pygeodesy.fmath): True
6test 852 pygeodesy.str2ub() function (pygeodesy.basics): True
6test 853 pygeodesy.streprs module: True
6test 854 pygeodesy.strs() function (pygeodesy.streprs): True
6test 855 pygeodesy.tanPI_2_2() function (pygeodesy.utily): True
6test 856 pygeodesy.tan_2() function (pygeodesy.utily): True
6test 857 pygeodesy.tand() function (pygeodesy.utily): True
6test 858 pygeodesy.tand_() function (pygeodesy.utily): True
6test 859 pygeodesy.thomas() function (pygeodesy.formy): True
6test 860 pygeodesy.thomas_() function (pygeodesy.formy): True
6test 861 pygeodesy.tienstra() function (pygeodesy.deprecated): True
6test 862 pygeodesy.tienstra7() function (pygeodesy.resections): True
6test 863 pygeodesy.toCss() function (pygeodesy.css): True
6test 864 pygeodesy.toDMS() function (pygeodesy.dms): True
6test 865 pygeodesy.toEtm8() function (pygeodesy.etm): True
6test 866 pygeodesy.toLcc() function (pygeodesy.lcc): True
6test 867 pygeodesy.toMgrs() function (pygeodesy.mgrs): True
6test 868 pygeodesy.toOsgr() function (pygeodesy.osgr): True
6test 869 pygeodesy.toUps8() function (pygeodesy.ups): True
6test 870 pygeodesy.toUtm() function (pygeodesy.deprecated): True
6test 871 pygeodesy.toUtm8() function (pygeodesy.utm): True
6test 872 pygeodesy.toUtmUps8() function (pygeodesy.utmups): True
6test 873 pygeodesy.toWm() function (pygeodesy.webmercator): True
6test 874 pygeodesy.toise2m() function (pygeodesy.utily): True
6test 875 pygeodesy.trf module: True
6test 876 pygeodesy.trfXform() function (pygeodesy.trf): True
6test 877 pygeodesy.triAngle() function (pygeodesy.resections): True
6test 878 pygeodesy.triAngle4() function (pygeodesy.resections): True
6test 879 pygeodesy.triSide() function (pygeodesy.resections): True
6test 880 pygeodesy.triSide2() function (pygeodesy.resections): True
6test 881 pygeodesy.triSide4() function (pygeodesy.resections): True
6test 882 pygeodesy.triaxials module: True
6test 883 pygeodesy.trilaterate2d2() function (pygeodesy.vector3d): True
6test 884 pygeodesy.trilaterate3d2() function (pygeodesy.vector3d): True
6test 885 pygeodesy.truncate() function (pygeodesy.utily): True
6test 886 pygeodesy.tyr3d() function (pygeodesy.ltp): True
6test 887 pygeodesy.ub2str() function (pygeodesy.basics): True
6test 888 pygeodesy.unStr() function (pygeodesy.deprecated): True
6test 889 pygeodesy.units module: True
6test 890 pygeodesy.unitsBase module: True
6test 891 pygeodesy.unroll180() function (pygeodesy.utily): True
6test 892 pygeodesy.unrollPI() function (pygeodesy.utily): True
6test 893 pygeodesy.unsign0() function (pygeodesy.deprecated): True
6test 894 pygeodesy.unsigned0() function (pygeodesy.basics): True
6test 895 pygeodesy.unstr() function (pygeodesy.streprs): True
6test 896 pygeodesy.ups module: True
6test 897 pygeodesy.upsZoneBand5() function (pygeodesy.ups): True
6test 898 pygeodesy.utily module: True
6test 899 pygeodesy.utm module: True
6test 900 pygeodesy.utmZoneBand2() function (pygeodesy.deprecated): True
6test 901 pygeodesy.utmZoneBand5() function (pygeodesy.utm): True
6test 902 pygeodesy.utmups module: True
6test 903 pygeodesy.utmupsBase module: True
6test 904 pygeodesy.utmupsValidate() function (pygeodesy.utmups): True
6test 905 pygeodesy.utmupsValidateOK() function (pygeodesy.utmups): True
6test 906 pygeodesy.utmupsZoneBand5() function (pygeodesy.utmups): True
6test 907 pygeodesy.vector2d module: True
6test 908 pygeodesy.vector3d module: True
6test 909 pygeodesy.vector3dBase module: True
6test 910 pygeodesy.version str: True
6test 911 pygeodesy.vincentys() function (pygeodesy.formy): True
6test 912 pygeodesy.vincentys_() function (pygeodesy.formy): True
6test 913 pygeodesy.webmercator module: True
6test 914 pygeodesy.wgrs module: True
6test 915 pygeodesy.wildberger3() function (pygeodesy.resections): True
6test 916 pygeodesy.wrap180() function (pygeodesy.utily): True
6test 917 pygeodesy.wrap360() function (pygeodesy.utily): True
6test 918 pygeodesy.wrap90() function (pygeodesy.utily): True
6test 919 pygeodesy.wrapPI() function (pygeodesy.utily): True
6test 920 pygeodesy.wrapPI2() function (pygeodesy.utily): True
6test 921 pygeodesy.wrapPI_2() function (pygeodesy.utily): True
6test 922 pygeodesy.yard2m() function (pygeodesy.utily): True
6testModule(pygeodesy.albers, 22.09.12)
6test 923 albers.Albers7Tuple() class: True
6test 924 albers.AlbersEqualArea() class: True
6test 925 albers.AlbersEqualArea2() class: True
6test 926 albers.AlbersEqualArea4() class: True
6test 927 albers.AlbersEqualAreaCylindrical() class: True
6test 928 albers.AlbersEqualAreaNorth() class: True
6test 929 albers.AlbersEqualAreaSouth() class: True
6test 930 albers.AlbersError() class: True
6testModule(pygeodesy.azimuthal, 22.10.11)
6test 931 azimuthal.Azimuthal7Tuple() class: True
6test 932 azimuthal.AzimuthalError() class: True
6test 933 azimuthal.Equidistant() class: True
6test 934 azimuthal.EquidistantExact() class: True
6test 935 azimuthal.EquidistantGeodSolve() class: True
6test 936 azimuthal.EquidistantKarney() class: True
6test 937 azimuthal.Gnomonic() class: True
6test 938 azimuthal.GnomonicExact() class: True
6test 939 azimuthal.GnomonicGeodSolve() class: True
6test 940 azimuthal.GnomonicKarney() class: True
6test 941 azimuthal.LambertEqualArea() class: True
6test 942 azimuthal.Orthographic() class: True
6test 943 azimuthal.Stereographic() class: True
6test 944 azimuthal.equidistant() function: True
6test 945 azimuthal.gnomonic() function: True
6testModule(pygeodesy.deprecated.bases, 21.02.10)
6testModule(pygeodesy.basics, 23.02.17)
6test 946 basics.clips() function: True
6test 947 basics.copysign0() function: True
6test 948 basics.copytype() function: True
6test 949 basics.halfs2() function: True
6test 950 basics.isbool() function: True
6test 951 basics.isclass() function (inspect): True
6test 952 basics.iscomplex() function: True
6test 953 basics.isfloat() function: True
6test 954 basics.isidentifier class method_descriptor: True
6test 955 basics.isinstanceof() function: True
6test 956 basics.isint() function: True
6test 957 basics.iskeyword class builtin_function_or_method: True
6test 958 basics.isodd() function: True
6test 959 basics.isscalar() function: True
6test 960 basics.issequence() function: True
6test 961 basics.isstr() function: True
6test 962 basics.issubclassof() function: True
6test 963 basics.istuplist() function: True
6test 964 basics.len2() function: True
6test 965 basics.map1() function: True
6test 966 basics.map2() function: True
6test 967 basics.neg() function: True
6test 968 basics.neg_() function: True
6test 969 basics.signBit() function: True
6test 970 basics.signOf() function: True
6test 971 basics.splice() function: True
6test 972 basics.str2ub() function: True
6test 973 basics.ub2str() function: True
6test 974 basics.unsigned0() function: True
6testModule(pygeodesy.booleans, 23.03.12)
6test 975 booleans.BooleanFHP() class: True
6test 976 booleans.BooleanGH() class: True
6test 977 booleans.LatLonFHP() class: True
6test 978 booleans.LatLonGH() class: True
6testModule(pygeodesy.cartesianBase, 22.11.03)
6testModule(pygeodesy.clipy, 23.03.11)
6test 979 clipy.ClipCS4Tuple() class: True
6test 980 clipy.ClipFHP4Tuple() class: True
6test 981 clipy.ClipGH4Tuple() class: True
6test 982 clipy.ClipLB6Tuple() class: True
6test 983 clipy.ClipSH3Tuple() class: True
6test 984 clipy.clipCS4() function: True
6test 985 clipy.clipFHP4() function: True
6test 986 clipy.clipGH4() function: True
6test 987 clipy.clipLB6() function: True
6test 988 clipy.clipSH() function: True
6test 989 clipy.clipSH3() function: True
6testModule(pygeodesy.constants, 23.03.12)
6test 990 constants.DIG int (pygeodesy.unitsBase): True
6test 991 constants.EPS float (pygeodesy.unitsBase): True
6test 992 constants.EPS0 float (pygeodesy.unitsBase): True
6test 993 constants.EPS02 float (pygeodesy.unitsBase): True
6test 994 constants.EPS1 float (pygeodesy.unitsBase): True
6test 995 constants.EPS2 float (pygeodesy.unitsBase): True
6test 996 constants.EPS4 float (pygeodesy.unitsBase): True
6test 997 constants.EPS_2 float (pygeodesy.unitsBase): True
6test 998 constants.INF float (pygeodesy.unitsBase): True
6test 999 constants.INT0 int (pygeodesy.unitsBase): True
6test 1000 constants.MANT_DIG int (pygeodesy.unitsBase): True
6test 1001 constants.MAX float (pygeodesy.unitsBase): True
6test 1002 constants.MIN float (pygeodesy.unitsBase): True
6test 1003 constants.NAN float (pygeodesy.unitsBase): True
6test 1004 constants.NEG0 float (pygeodesy.unitsBase): True
6test 1005 constants.NINF float (pygeodesy.unitsBase): True
6test 1006 constants.PI float (pygeodesy.unitsBase): True
6test 1007 constants.PI2 float (pygeodesy.unitsBase): True
6test 1008 constants.PI3 float (pygeodesy.unitsBase): True
6test 1009 constants.PI3_2 float (pygeodesy.unitsBase): True
6test 1010 constants.PI4 float (pygeodesy.unitsBase): True
6test 1011 constants.PI_2 float (pygeodesy.unitsBase): True
6test 1012 constants.PI_3 float (pygeodesy.unitsBase): True
6test 1013 constants.PI_4 float (pygeodesy.unitsBase): True
6test 1014 constants.R_FM float (pygeodesy.unitsBase): True
6test 1015 constants.R_GM float (pygeodesy.unitsBase): True
6test 1016 constants.R_KM float (pygeodesy.unitsBase): True
6test 1017 constants.R_M float (pygeodesy.unitsBase): True
6test 1018 constants.R_MA float (pygeodesy.unitsBase): True
6test 1019 constants.R_MB float (pygeodesy.unitsBase): True
6test 1020 constants.R_NM float (pygeodesy.unitsBase): True
6test 1021 constants.R_QM float (pygeodesy.unitsBase): True
6test 1022 constants.R_SM float (pygeodesy.unitsBase): True
6test 1023 constants.R_VM float (pygeodesy.unitsBase): True
6test 1024 constants.float0() function: True
6test 1025 constants.float_() function: True
6test 1026 constants.isclose() function: True
6test 1027 constants.isfinite() function: True
6test 1028 constants.isinf class builtin_function_or_method (math): True
6test 1029 constants.isint0() function: True
6test 1030 constants.isnan class builtin_function_or_method (math): True
6test 1031 constants.isnear0() function: True
6test 1032 constants.isnear1() function: True
6test 1033 constants.isnear90() function: True
6test 1034 constants.isneg0() function: True
6test 1035 constants.isninf() function: True
6test 1036 constants.isnon0() function: True
6test 1037 constants.remainder class builtin_function_or_method (math): True
6testModule(pygeodesy.css, 22.09.24)
6test 1038 css.CSSError() class: True
6test 1039 css.CassiniSoldner() class: True
6test 1040 css.Css() class: True
6test 1041 css.EasNorAziRk4Tuple() class: True
6test 1042 css.EasNorAziRkEqu6Tuple() class: True
6test 1043 css.LatLonAziRk4Tuple() class: True
6test 1044 css.toCss() function: True
6testModule(pygeodesy.deprecated.datum, 22.09.12)
6test 1045 datum.Curvature2Tuple() class (pygeodesy.ellipsoids): True
6test 1046 datum.Datum() class (pygeodesy.datums): True
6test 1047 datum.Datums class pygeodesy.datums.Datums (pygeodesy.datums): True
6test 1048 datum.Ellipsoid() class (pygeodesy.ellipsoids): True
6test 1049 datum.Ellipsoids class pygeodesy.ellipsoids.Ellipsoids (pygeodesy.ellipsoids): True
6test 1050 datum.R_FM float (pygeodesy.unitsBase): True
6test 1051 datum.R_KM float (pygeodesy.unitsBase): True
6test 1052 datum.R_M float (pygeodesy.unitsBase): True
6test 1053 datum.R_MA float (pygeodesy.unitsBase): True
6test 1054 datum.R_MB float (pygeodesy.unitsBase): True
6test 1055 datum.R_NM float (pygeodesy.unitsBase): True
6test 1056 datum.R_SM float (pygeodesy.unitsBase): True
6test 1057 datum.R_VM float (pygeodesy.unitsBase): True
6test 1058 datum.Transform() class (pygeodesy.datums): True
6test 1059 datum.Transforms class pygeodesy.datums.Transforms (pygeodesy.datums): True
6testModule(pygeodesy.datums, 22.10.05)
6test 1060 datums.Datum() class: True
6test 1061 datums.Datums class pygeodesy.datums.Datums: True
6test 1062 datums.Transform() class: True
6test 1063 datums.Transforms class pygeodesy.datums.Transforms: True
6testModule(pygeodesy.deprecated, 22.09.23)
6test 1064 deprecated.ClipCS3Tuple() class: True
6test 1065 deprecated.EPS1_2 float: True
6test 1066 deprecated.EasNorExact4Tuple() class: True
6test 1067 deprecated.EcefCartesian() function: True
6test 1068 deprecated.HeightIDW() function: True
6test 1069 deprecated.HeightIDW2() function: True
6test 1070 deprecated.HeightIDW3() function: True
6test 1071 deprecated.LatLonExact4Tuple() class: True
6test 1072 deprecated.MANTIS int: True
6test 1073 deprecated.Ned3Tuple() class: True
6test 1074 deprecated.OK str: True
6test 1075 deprecated.RefFrameError() function: True
6test 1076 deprecated.Rhumb7Tuple() class: True
6test 1077 deprecated.Transform7Tuple() class: True
6test 1078 deprecated.UtmUps4Tuple() class: True
6test 1079 deprecated.anStr() function: True
6test 1080 deprecated.areaof() function: True
6test 1081 deprecated.bases module: True
6test 1082 deprecated.bounds() function: True
6test 1083 deprecated.clipCS3() function: True
6test 1084 deprecated.clipDMS() function: True
6test 1085 deprecated.clipStr() function: True
6test 1086 deprecated.collins() function: True
6test 1087 deprecated.datum module: True
6test 1088 deprecated.decodeEPSG2() function: True
6test 1089 deprecated.enStr2() function: True
6test 1090 deprecated.encodeEPSG() function: True
6test 1091 deprecated.equirectangular3() function: True
6test 1092 deprecated.fStr() function: True
6test 1093 deprecated.fStrzs() function: True
6test 1094 deprecated.false2f() function: True
6test 1095 deprecated.falsed2f() function: True
6test 1096 deprecated.hypot3() function: True
6test 1097 deprecated.inStr() function: True
6test 1098 deprecated.isDEPRECATED() function: True
6test 1099 deprecated.isenclosedby() function: True
6test 1100 deprecated.joined() function: True
6test 1101 deprecated.joined_() function: True
6test 1102 deprecated.nearestOn3() function: True
6test 1103 deprecated.nearestOn4() function: True
6test 1104 deprecated.nvector module: True
6test 1105 deprecated.parseUTM() function: True
6test 1106 deprecated.perimeterof() function: True
6test 1107 deprecated.polygon() function: True
6test 1108 deprecated.scalar() function: True
6test 1109 deprecated.simplify2() function: True
6test 1110 deprecated.tienstra() function: True
6test 1111 deprecated.toUtm() function: True
6test 1112 deprecated.unStr() function: True
6test 1113 deprecated.unsign0() function: True
6test 1114 deprecated.utmZoneBand2() function: True
6testModule(pygeodesy.dms, 22.09.24)
6test 1115 dms.F_D str: True
6test 1116 dms.F_D60 str: True
6test 1117 dms.F_D60_ str (pygeodesy.interns): True
6test 1118 dms.F_D60__ str (pygeodesy.interns): True
6test 1119 dms.F_DEG str: True
6test 1120 dms.F_DEG_ str (pygeodesy.interns): True
6test 1121 dms.F_DEG__ str (pygeodesy.interns): True
6test 1122 dms.F_DM str: True
6test 1123 dms.F_DMS str: True
6test 1124 dms.F_DMS_ str (pygeodesy.interns): True
6test 1125 dms.F_DMS__ str (pygeodesy.interns): True
6test 1126 dms.F_DM_ str (pygeodesy.interns): True
6test 1127 dms.F_DM__ str (pygeodesy.interns): True
6test 1128 dms.F_D_ str (pygeodesy.interns): True
6test 1129 dms.F_D__ str (pygeodesy.interns): True
6test 1130 dms.F_MIN str: True
6test 1131 dms.F_MIN_ str (pygeodesy.interns): True
6test 1132 dms.F_MIN__ str (pygeodesy.interns): True
6test 1133 dms.F_RAD str: True
6test 1134 dms.F_RAD_ str (pygeodesy.interns): True
6test 1135 dms.F_RAD__ str (pygeodesy.interns): True
6test 1136 dms.F_SEC str: True
6test 1137 dms.F_SEC_ str (pygeodesy.interns): True
6test 1138 dms.F_SEC__ str (pygeodesy.interns): True
6test 1139 dms.F__E str: True
6test 1140 dms.F__E_ str (pygeodesy.interns): True
6test 1141 dms.F__E__ str (pygeodesy.interns): True
6test 1142 dms.F__F str: True
6test 1143 dms.F__F_ str (pygeodesy.interns): True
6test 1144 dms.F__F__ str (pygeodesy.interns): True
6test 1145 dms.F__G str: True
6test 1146 dms.F__G_ str (pygeodesy.interns): True
6test 1147 dms.F__G__ str (pygeodesy.interns): True
6test 1148 dms.S_DEG str: True
6test 1149 dms.S_DMS int: True
6test 1150 dms.S_MIN str: True
6test 1151 dms.S_RAD str (pygeodesy.interns): True
6test 1152 dms.S_SEC str: True
6test 1153 dms.S_SEP str (pygeodesy.interns): True
6test 1154 dms.bearingDMS() function: True
6test 1155 dms.clipDegrees() function: True
6test 1156 dms.clipRadians() function: True
6test 1157 dms.compassDMS() function: True
6test 1158 dms.compassPoint() function: True
6test 1159 dms.degDMS() function: True
6test 1160 dms.latDMS() function: True
6test 1161 dms.latlonDMS() function: True
6test 1162 dms.latlonDMS_() function: True
6test 1163 dms.lonDMS() function: True
6test 1164 dms.normDMS() function: True
6test 1165 dms.parse3llh() function: True
6test 1166 dms.parseDDDMMSS() function: True
6test 1167 dms.parseDMS() function: True
6test 1168 dms.parseDMS2() function: True
6test 1169 dms.parseRad() function: True
6test 1170 dms.precision() function: True
6test 1171 dms.toDMS() function: True
6testModule(pygeodesy.ecef, 22.10.12)
6test 1172 ecef.Ecef9Tuple() class: True
6test 1173 ecef.EcefError() class: True
6test 1174 ecef.EcefFarrell21() class: True
6test 1175 ecef.EcefFarrell22() class: True
6test 1176 ecef.EcefKarney() class: True
6test 1177 ecef.EcefMatrix() class: True
6test 1178 ecef.EcefSudano() class: True
6test 1179 ecef.EcefVeness() class: True
6test 1180 ecef.EcefYou() class: True
6testModule(pygeodesy.elevations, 22.10.28)
6test 1181 elevations.Elevation2Tuple() class: True
6test 1182 elevations.GeoidHeight2Tuple() class: True
6test 1183 elevations.elevation2() function: True
6test 1184 elevations.geoidHeight2() function: True
6testModule(pygeodesy.ellipsoidalBase, 22.10.04)
6testModule(pygeodesy.ellipsoidalBaseDI, 22.10.12)
6testModule(pygeodesy.ellipsoidalExact, 22.07.07)
6test 1185 ellipsoidalExact.Cartesian() class: True
6test 1186 ellipsoidalExact.LatLon() class: True
6test 1187 ellipsoidalExact.areaOf() function: True
6test 1188 ellipsoidalExact.intersection3() function: True
6test 1189 ellipsoidalExact.intersections2() function: True
6test 1190 ellipsoidalExact.isclockwise() function: True
6test 1191 ellipsoidalExact.ispolar() function (pygeodesy.points): True
6test 1192 ellipsoidalExact.nearestOn() function: True
6test 1193 ellipsoidalExact.perimeterOf() function: True
6testModule(pygeodesy.ellipsoidalGeodSolve, 22.08.04)
6test 1194 ellipsoidalGeodSolve.Cartesian() class: True
6test 1195 ellipsoidalGeodSolve.LatLon() class: True
6test 1196 ellipsoidalGeodSolve.areaOf() function: True
6test 1197 ellipsoidalGeodSolve.intersection3() function: True
6test 1198 ellipsoidalGeodSolve.intersections2() function: True
6test 1199 ellipsoidalGeodSolve.isclockwise() function: True
6test 1200 ellipsoidalGeodSolve.ispolar() function (pygeodesy.points): True
6test 1201 ellipsoidalGeodSolve.nearestOn() function: True
6test 1202 ellipsoidalGeodSolve.perimeterOf() function: True
6testModule(pygeodesy.ellipsoidalKarney, 22.07.07)
6test 1203 ellipsoidalKarney.Cartesian() class: True
6test 1204 ellipsoidalKarney.LatLon() class: True
6test 1205 ellipsoidalKarney.areaOf() function: True
6test 1206 ellipsoidalKarney.intersection3() function: True
6test 1207 ellipsoidalKarney.intersections2() function: True
6test 1208 ellipsoidalKarney.isclockwise() function: True
6test 1209 ellipsoidalKarney.ispolar() function (pygeodesy.points): True
6test 1210 ellipsoidalKarney.nearestOn() function: True
6test 1211 ellipsoidalKarney.perimeterOf() function: True
6testModule(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1212 ellipsoidalNvector.Cartesian() class: True
6test 1213 ellipsoidalNvector.LatLon() class: True
6test 1214 ellipsoidalNvector.Ned() class: True
6test 1215 ellipsoidalNvector.Nvector() class: True
6test 1216 ellipsoidalNvector.meanOf() function: True
6test 1217 ellipsoidalNvector.sumOf() function: True
6test 1218 ellipsoidalNvector.toNed() function: True
6testModule(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 1219 ellipsoidalVincenty.Cartesian() class: True
6test 1220 ellipsoidalVincenty.LatLon() class: True
6test 1221 ellipsoidalVincenty.VincentyError() class: True
6test 1222 ellipsoidalVincenty.intersection3() function: True
6test 1223 ellipsoidalVincenty.intersections2() function: True
6test 1224 ellipsoidalVincenty.ispolar() function (pygeodesy.points): True
6test 1225 ellipsoidalVincenty.nearestOn() function: True
6testModule(pygeodesy.ellipsoids, 22.11.02)
6test 1226 ellipsoids.Circle4Tuple() class: True
6test 1227 ellipsoids.Curvature2Tuple() class: True
6test 1228 ellipsoids.Ellipsoid() class: True
6test 1229 ellipsoids.Ellipsoid2() class: True
6test 1230 ellipsoids.Ellipsoids class pygeodesy.ellipsoids.Ellipsoids: True
6test 1231 ellipsoids.a_b2e() function: True
6test 1232 ellipsoids.a_b2e2() function: True
6test 1233 ellipsoids.a_b2e22() function: True
6test 1234 ellipsoids.a_b2e32() function: True
6test 1235 ellipsoids.a_b2f() function: True
6test 1236 ellipsoids.a_b2f2() function: True
6test 1237 ellipsoids.a_b2f_() function: True
6test 1238 ellipsoids.a_b2n() function: True
6test 1239 ellipsoids.a_f2Tuple() class: True
6test 1240 ellipsoids.a_f2b() function: True
6test 1241 ellipsoids.a_f_2b() function: True
6test 1242 ellipsoids.b_f2a() function: True
6test 1243 ellipsoids.b_f_2a() function: True
6test 1244 ellipsoids.e22f() function: True
6test 1245 ellipsoids.e2f() function: True
6test 1246 ellipsoids.f2e2() function: True
6test 1247 ellipsoids.f2e22() function: True
6test 1248 ellipsoids.f2e32() function: True
6test 1249 ellipsoids.f2f2() function: True
6test 1250 ellipsoids.f2f_() function: True
6test 1251 ellipsoids.f2n() function: True
6test 1252 ellipsoids.f_2f() function: True
6test 1253 ellipsoids.n2e2() function: True
6test 1254 ellipsoids.n2f() function: True
6test 1255 ellipsoids.n2f_() function: True
6testModule(pygeodesy.elliptic, 22.10.16)
6test 1256 elliptic.Elliptic() class: True
6test 1257 elliptic.Elliptic3Tuple() class: True
6test 1258 elliptic.EllipticError() class: True
6testModule(pygeodesy.epsg, 22.09.24)
6test 1259 epsg.EPSGError() class: True
6test 1260 epsg.Epsg() class: True
6test 1261 epsg.decode2() function: True
6test 1262 epsg.encode() function: True
6testModule(pygeodesy.errors, 23.03.09)
6test 1263 errors.ClipError() class: True
6test 1264 errors.CrossError() class: True
6test 1265 errors.IntersectionError() class: True
6test 1266 errors.LenError() class: True
6test 1267 errors.LimitError() class: True
6test 1268 errors.MGRSError() class: True
6test 1269 errors.NumPyError() class: True
6test 1270 errors.ParseError() class: True
6test 1271 errors.PointsError() class: True
6test 1272 errors.RangeError() class: True
6test 1273 errors.SciPyError() class: True
6test 1274 errors.SciPyWarning() class: True
6test 1275 errors.TRFError() class: True
6test 1276 errors.TriangleError() class: True
6test 1277 errors.UnitError() class: True
6test 1278 errors.VectorError() class: True
6test 1279 errors.crosserrors() function: True
6test 1280 errors.exception_chaining() function: True
6test 1281 errors.isError() function: True
6test 1282 errors.itemsorted() function: True
6test 1283 errors.limiterrors() function: True
6test 1284 errors.rangerrors() function: True
6testModule(pygeodesy.etm, 22.10.12)
6test 1285 etm.ETMError() class: True
6test 1286 etm.Etm() class: True
6test 1287 etm.ExactTransverseMercator() class: True
6test 1288 etm.parseETM5() function: True
6test 1289 etm.toEtm8() function: True
6testModule(pygeodesy.fmath, 22.11.04)
6test 1290 fmath.Fcbrt() class: True
6test 1291 fmath.Fdot() class: True
6test 1292 fmath.Fhorner() class: True
6test 1293 fmath.Fhypot() class: True
6test 1294 fmath.Fn_rt() class: True
6test 1295 fmath.Fpolynomial() class: True
6test 1296 fmath.Fpowers() class: True
6test 1297 fmath.Fsqrt() class: True
6test 1298 fmath.cbrt() function: True
6test 1299 fmath.cbrt2() function: True
6test 1300 fmath.euclid() function: True
6test 1301 fmath.euclid_() function: True
6test 1302 fmath.facos1() function: True
6test 1303 fmath.fasin1() function: True
6test 1304 fmath.fatan() function: True
6test 1305 fmath.fatan1() function: True
6test 1306 fmath.fatan2() function: True
6test 1307 fmath.favg() function: True
6test 1308 fmath.fdot() function: True
6test 1309 fmath.fdot3() function: True
6test 1310 fmath.fhorner() function: True
6test 1311 fmath.fidw() function: True
6test 1312 fmath.fmean() function: True
6test 1313 fmath.fmean_() function: True
6test 1314 fmath.fpolynomial() function: True
6test 1315 fmath.fpowers() function: True
6test 1316 fmath.fprod class builtin_function_or_method (math): True
6test 1317 fmath.frange() function: True
6test 1318 fmath.freduce class builtin_function_or_method (_functools): True
6test 1319 fmath.fremainder() function: True
6test 1320 fmath.hypot() function: True
6test 1321 fmath.hypot1() function: True
6test 1322 fmath.hypot2() function: True
6test 1323 fmath.hypot2_() function: True
6test 1324 fmath.hypot_ class builtin_function_or_method (math): True
6test 1325 fmath.norm2() function: True
6test 1326 fmath.norm_() function: True
6test 1327 fmath.sqrt0() function: True
6test 1328 fmath.sqrt3() function: True
6test 1329 fmath.sqrt_a() function: True
6testModule(pygeodesy.formy, 23.02.05)
6test 1330 formy.Radical2Tuple() class: True
6test 1331 formy.antipode() function: True
6test 1332 formy.antipode_() function: True
6test 1333 formy.bearing() function: True
6test 1334 formy.bearing_() function: True
6test 1335 formy.compassAngle() function: True
6test 1336 formy.cosineAndoyerLambert() function: True
6test 1337 formy.cosineAndoyerLambert_() function: True
6test 1338 formy.cosineForsytheAndoyerLambert() function: True
6test 1339 formy.cosineForsytheAndoyerLambert_() function: True
6test 1340 formy.cosineLaw() function: True
6test 1341 formy.cosineLaw_() function: True
6test 1342 formy.equirectangular() function: True
6test 1343 formy.equirectangular_() function: True
6test 1344 formy.euclidean() function: True
6test 1345 formy.euclidean_() function: True
6test 1346 formy.excessAbc() function: True
6test 1347 formy.excessGirard() function: True
6test 1348 formy.excessKarney() function: True
6test 1349 formy.excessKarney_() function: True
6test 1350 formy.excessLHuilier() function: True
6test 1351 formy.excessQuad() function: True
6test 1352 formy.excessQuad_() function: True
6test 1353 formy.flatLocal() function: True
6test 1354 formy.flatLocal_() function: True
6test 1355 formy.flatPolar() function: True
6test 1356 formy.flatPolar_() function: True
6test 1357 formy.hartzell() function: True
6test 1358 formy.haversine() function: True
6test 1359 formy.haversine_() function: True
6test 1360 formy.heightOf() function: True
6test 1361 formy.horizon() function: True
6test 1362 formy.hubeny() function: True
6test 1363 formy.hubeny_() function: True
6test 1364 formy.intersections2() function: True
6test 1365 formy.isantipode() function: True
6test 1366 formy.isantipode_() function: True
6test 1367 formy.isnormal() function: True
6test 1368 formy.isnormal_() function: True
6test 1369 formy.latlon2n_xyz() function: True
6test 1370 formy.n_xyz2latlon() function: True
6test 1371 formy.n_xyz2philam() function: True
6test 1372 formy.normal() function: True
6test 1373 formy.normal_() function: True
6test 1374 formy.opposing() function: True
6test 1375 formy.opposing_() function: True
6test 1376 formy.philam2n_xyz() function: True
6test 1377 formy.radical2() function: True
6test 1378 formy.thomas() function: True
6test 1379 formy.thomas_() function: True
6test 1380 formy.vincentys() function: True
6test 1381 formy.vincentys_() function: True
6testModule(pygeodesy.frechet, 22.09.24)
6test 1382 frechet.Frechet() class: True
6test 1383 frechet.Frechet6Tuple() class: True
6test 1384 frechet.FrechetCosineAndoyerLambert() class: True
6test 1385 frechet.FrechetCosineForsytheAndoyerLambert() class: True
6test 1386 frechet.FrechetCosineLaw() class: True
6test 1387 frechet.FrechetDegrees() class: True
6test 1388 frechet.FrechetDistanceTo() class: True
6test 1389 frechet.FrechetEquirectangular() class: True
6test 1390 frechet.FrechetError() class: True
6test 1391 frechet.FrechetEuclidean() class: True
6test 1392 frechet.FrechetExact() class: True
6test 1393 frechet.FrechetFlatLocal() class: True
6test 1394 frechet.FrechetFlatPolar() class: True
6test 1395 frechet.FrechetHaversine() class: True
6test 1396 frechet.FrechetHubeny() class: True
6test 1397 frechet.FrechetKarney() class: True
6test 1398 frechet.FrechetRadians() class: True
6test 1399 frechet.FrechetThomas() class: True
6test 1400 frechet.FrechetVincentys() class: True
6test 1401 frechet.frechet_() function: True
6testModule(pygeodesy.fstats, 22.09.12)
6test 1402 fstats.Fcook() class: True
6test 1403 fstats.Flinear() class: True
6test 1404 fstats.Fwelford() class: True
6testModule(pygeodesy.fsums, 22.10.09)
6test 1405 fsums.Fsum() class: True
6test 1406 fsums.Fsum2Tuple() class: True
6test 1407 fsums.ResidualError() class: True
6test 1408 fsums.fsum() function: True
6test 1409 fsums.fsum1() function: True
6test 1410 fsums.fsum1_() function: True
6test 1411 fsums.fsum_() function: True
6testModule(pygeodesy.gars, 22.09.29)
6test 1412 gars.GARSError() class: True
6test 1413 gars.Garef() class: True
6test 1414 gars.decode3() function: True
6test 1415 gars.encode() function: True
6test 1416 gars.precision() function: True
6test 1417 gars.resolution() function: True
6testModule(pygeodesy.geodesicx, 22.09.15)
6test 1418 geodesicx.GeodesicAreaExact() class (pygeodesy.geodesicx.gxarea): True
6test 1419 geodesicx.GeodesicExact() class (pygeodesy.geodesicx.gx): True
6test 1420 geodesicx.GeodesicLineExact() class (pygeodesy.geodesicx.gx): True
6test 1421 geodesicx.PolygonArea() class (pygeodesy.geodesicx.gxarea): True
6test 1422 geodesicx.gx module: True
6test 1423 geodesicx.gxarea module: True
6test 1424 geodesicx.gxline module: True
6testModule(pygeodesy.geodsolve, 22.10.11)
6test 1425 geodsolve.GeodSolve12Tuple() class: True
6test 1426 geodsolve.GeodesicLineSolve() class: True
6test 1427 geodsolve.GeodesicSolve() class: True
6testModule(pygeodesy.geohash, 22.10.11)
6test 1428 geohash.Geohash() class: True
6test 1429 geohash.GeohashError() class: True
6test 1430 geohash.Neighbors8Dict() class: True
6test 1431 geohash.Resolutions2Tuple() class: True
6test 1432 geohash.bounds() function: True
6test 1433 geohash.decode() function: True
6test 1434 geohash.decode2() function: True
6test 1435 geohash.decode_error() function: True
6test 1436 geohash.distance_() function: True
6test 1437 geohash.encode() function: True
6test 1438 geohash.equirectangular_() function: True
6test 1439 geohash.haversine_() function: True
6test 1440 geohash.neighbors() function: True
6test 1441 geohash.precision() function: True
6test 1442 geohash.resolution2() function: True
6test 1443 geohash.sizes() function: True
6testModule(pygeodesy.geoids, 22.10.23)
6test 1444 geoids.GeoidError() class: True
6test 1445 geoids.GeoidG2012B() class: True
6test 1446 geoids.GeoidHeight5Tuple() class: True
6test 1447 geoids.GeoidKarney() class: True
6test 1448 geoids.GeoidPGM() class: True
6test 1449 geoids.PGMError() class: True
6test 1450 geoids.egmGeoidHeights() function: True
6testModule(pygeodesy.geodesicx.gx, 22.10.05)
6testModule(pygeodesy.geodesicx.gxarea, 22.09.12)
6testModule(pygeodesy.geodesicx.gxline, 22.09.12)
6testModule(pygeodesy.hausdorff, 22.09.24)
6test 1451 hausdorff.Hausdorff() class: True
6test 1452 hausdorff.Hausdorff6Tuple() class: True
6test 1453 hausdorff.HausdorffCosineAndoyerLambert() class: True
6test 1454 hausdorff.HausdorffCosineForsytheAndoyerLambert() class: True
6test 1455 hausdorff.HausdorffCosineLaw() class: True
6test 1456 hausdorff.HausdorffDegrees() class: True
6test 1457 hausdorff.HausdorffDistanceTo() class: True
6test 1458 hausdorff.HausdorffEquirectangular() class: True
6test 1459 hausdorff.HausdorffError() class: True
6test 1460 hausdorff.HausdorffEuclidean() class: True
6test 1461 hausdorff.HausdorffExact() class: True
6test 1462 hausdorff.HausdorffFlatLocal() class: True
6test 1463 hausdorff.HausdorffFlatPolar() class: True
6test 1464 hausdorff.HausdorffHaversine() class: True
6test 1465 hausdorff.HausdorffHubeny() class: True
6test 1466 hausdorff.HausdorffKarney() class: True
6test 1467 hausdorff.HausdorffRadians() class: True
6test 1468 hausdorff.HausdorffThomas() class: True
6test 1469 hausdorff.HausdorffVincentys() class: True
6test 1470 hausdorff.hausdorff_() function: True
6test 1471 hausdorff.randomrangenerator() function: True
6testModule(pygeodesy.heights, 22.10.06)
6test 1472 heights.HeightCubic() class: True
6test 1473 heights.HeightError() class: True
6test 1474 heights.HeightIDWcosineAndoyerLambert() class: True
6test 1475 heights.HeightIDWcosineForsytheAndoyerLambert() class: True
6test 1476 heights.HeightIDWcosineLaw() class: True
6test 1477 heights.HeightIDWdistanceTo() class: True
6test 1478 heights.HeightIDWequirectangular() class: True
6test 1479 heights.HeightIDWeuclidean() class: True
6test 1480 heights.HeightIDWflatLocal() class: True
6test 1481 heights.HeightIDWflatPolar() class: True
6test 1482 heights.HeightIDWhaversine() class: True
6test 1483 heights.HeightIDWhubeny() class: True
6test 1484 heights.HeightIDWkarney() class: True
6test 1485 heights.HeightIDWthomas() class: True
6test 1486 heights.HeightIDWvincentys() class: True
6test 1487 heights.HeightLSQBiSpline() class: True
6test 1488 heights.HeightLinear() class: True
6test 1489 heights.HeightSmoothBiSpline() class: True
6testModule(pygeodesy.interns, 23.03.12)
6test 1490 interns.NN str: True
6test 1491 interns.Str_() class: True
6test 1492 interns.machine() function: True
6testModule(pygeodesy.iters, 22.10.11)
6test 1493 iters.LatLon2PsxyIter() class: True
6test 1494 iters.PointsIter() class: True
6test 1495 iters.isNumpy2() function: True
6test 1496 iters.isPoints2() function: True
6test 1497 iters.isTuple2() function: True
6test 1498 iters.iterNumpy2() function: True
6test 1499 iters.iterNumpy2over() function: True
6test 1500 iters.points2() function: True
6testModule(pygeodesy.karney, 22.10.24)
6test 1501 karney.Area3Tuple() class: True
6test 1502 karney.Caps class pygeodesy.karney.Caps: True
6test 1503 karney.Direct9Tuple() class: True
6test 1504 karney.GDict() class: True
6test 1505 karney.GeodesicError() class: True
6test 1506 karney.Inverse10Tuple() class: True
6testModule(pygeodesy.ktm, 22.09.15)
6test 1507 ktm.KTMError() class: True
6test 1508 ktm.KTransverseMercator() class: True
6testModule(pygeodesy.latlonBase, 23.03.12)
6testModule(pygeodesy.lazily, 23.03.12)
6test 1509 lazily.LazyImportError() class: True
6test 1510 lazily.isLazy int: True
6test 1511 lazily.print_() function: True
6test 1512 lazily.printf() function: True
6testModule(pygeodesy.lcc, 22.09.12)
6test 1513 lcc.Conic() class: True
6test 1514 lcc.Conics class pygeodesy.lcc.Conics: True
6test 1515 lcc.LCCError() class: True
6test 1516 lcc.Lcc() class: True
6test 1517 lcc.toLcc() function: True
6testModule(pygeodesy.ltp, 23.02.14)
6test 1518 ltp.Attitude() class: True
6test 1519 ltp.AttitudeError() class: True
6test 1520 ltp.ChLV() class: True
6test 1521 ltp.ChLVa() class: True
6test 1522 ltp.ChLVe() class: True
6test 1523 ltp.Frustum() class: True
6test 1524 ltp.LocalCartesian() class: True
6test 1525 ltp.LocalError() class: True
6test 1526 ltp.Ltp() class: True
6test 1527 ltp.tyr3d() function: True
6testModule(pygeodesy.ltpTuples, 22.10.11)
6test 1528 ltpTuples.Aer() class: True
6test 1529 ltpTuples.Aer4Tuple() class: True
6test 1530 ltpTuples.Attitude4Tuple() class: True
6test 1531 ltpTuples.ChLV9Tuple() class: True
6test 1532 ltpTuples.ChLVEN2Tuple() class: True
6test 1533 ltpTuples.ChLVYX2Tuple() class: True
6test 1534 ltpTuples.ChLVyx2Tuple() class: True
6test 1535 ltpTuples.Enu() class: True
6test 1536 ltpTuples.Enu4Tuple() class: True
6test 1537 ltpTuples.Footprint5Tuple() class: True
6test 1538 ltpTuples.Local9Tuple() class: True
6test 1539 ltpTuples.Ned() class: True
6test 1540 ltpTuples.Ned4Tuple() class: True
6test 1541 ltpTuples.Xyz4Tuple() class: True
6test 1542 ltpTuples.XyzLocal() class: True
6testModule(pygeodesy.mgrs, 22.10.04)
6test 1543 mgrs.Mgrs() class: True
6test 1544 mgrs.Mgrs4Tuple() class: True
6test 1545 mgrs.Mgrs6Tuple() class: True
6test 1546 mgrs.parseMGRS() function: True
6test 1547 mgrs.toMgrs() function: True
6testModule(pygeodesy.named, 23.02.06)
6test 1548 named.callername() function: True
6test 1549 named.classname() function: True
6test 1550 named.classnaming() function: True
6test 1551 named.modulename() function: True
6test 1552 named.nameof() function: True
6test 1553 named.notImplemented() function: True
6test 1554 named.notOverloaded() function: True
6testModule(pygeodesy.namedTuples, 22.10.11)
6test 1555 namedTuples.Bearing2Tuple() class: True
6test 1556 namedTuples.Bounds2Tuple() class: True
6test 1557 namedTuples.Bounds4Tuple() class: True
6test 1558 namedTuples.Destination2Tuple() class: True
6test 1559 namedTuples.Destination3Tuple() class: True
6test 1560 namedTuples.Distance2Tuple() class: True
6test 1561 namedTuples.Distance3Tuple() class: True
6test 1562 namedTuples.Distance4Tuple() class: True
6test 1563 namedTuples.EasNor2Tuple() class: True
6test 1564 namedTuples.EasNor3Tuple() class: True
6test 1565 namedTuples.Forward4Tuple() class: True
6test 1566 namedTuples.Intersection3Tuple() class: True
6test 1567 namedTuples.LatLon2Tuple() class: True
6test 1568 namedTuples.LatLon3Tuple() class: True
6test 1569 namedTuples.LatLon4Tuple() class: True
6test 1570 namedTuples.LatLonDatum3Tuple() class: True
6test 1571 namedTuples.LatLonDatum5Tuple() class: True
6test 1572 namedTuples.LatLonPrec3Tuple() class: True
6test 1573 namedTuples.LatLonPrec5Tuple() class: True
6test 1574 namedTuples.NearestOn2Tuple() class: True
6test 1575 namedTuples.NearestOn3Tuple() class: True
6test 1576 namedTuples.NearestOn4Tuple() class: True
6test 1577 namedTuples.NearestOn5Tuple() class: True
6test 1578 namedTuples.NearestOn6Tuple() class: True
6test 1579 namedTuples.NearestOn8Tuple() class: True
6test 1580 namedTuples.PhiLam2Tuple() class: True
6test 1581 namedTuples.PhiLam3Tuple() class: True
6test 1582 namedTuples.PhiLam4Tuple() class: True
6test 1583 namedTuples.Point3Tuple() class: True
6test 1584 namedTuples.Points2Tuple() class: True
6test 1585 namedTuples.Reverse4Tuple() class: True
6test 1586 namedTuples.Triangle7Tuple() class: True
6test 1587 namedTuples.Triangle8Tuple() class: True
6test 1588 namedTuples.Trilaterate5Tuple() class: True
6test 1589 namedTuples.UtmUps2Tuple() class: True
6test 1590 namedTuples.UtmUps5Tuple() class: True
6test 1591 namedTuples.UtmUps8Tuple() class: True
6test 1592 namedTuples.UtmUpsLatLon5Tuple() class: True
6test 1593 namedTuples.Vector2Tuple() class: True
6test 1594 namedTuples.Vector3Tuple() class: True
6test 1595 namedTuples.Vector4Tuple() class: True
6testModule(pygeodesy.deprecated.nvector, 21.05.20)
6test 1596 nvector.NorthPole class pygeodesy.nvectorBase.NvectorBase (pygeodesy.nvectorBase): True
6test 1597 nvector.SouthPole class pygeodesy.nvectorBase.NvectorBase (pygeodesy.nvectorBase): True
6testModule(pygeodesy.nvectorBase, 22.10.05)
6test 1598 nvectorBase.NorthPole class pygeodesy.nvectorBase.NvectorBase: True
6test 1599 nvectorBase.SouthPole class pygeodesy.nvectorBase.NvectorBase: True
6testModule(pygeodesy.osgr, 22.09.24)
6test 1600 osgr.OSGRError() class: True
6test 1601 osgr.Osgr() class: True
6test 1602 osgr.parseOSGR() function: True
6test 1603 osgr.toOsgr() function: True
6testModule(pygeodesy.points, 23.01.21)
6test 1604 points.LatLon2psxy() class: True
6test 1605 points.LatLon_() class: True
6test 1606 points.Numpy2LatLon() class: True
6test 1607 points.Shape2Tuple() class: True
6test 1608 points.Tuple2LatLon() class: True
6test 1609 points.areaOf() function: True
6test 1610 points.boundsOf() function: True
6test 1611 points.centroidOf() function: True
6test 1612 points.fractional() function: True
6test 1613 points.isclockwise() function: True
6test 1614 points.isconvex() function: True
6test 1615 points.isconvex_() function: True
6test 1616 points.isenclosedBy() function: True
6test 1617 points.ispolar() function: True
6test 1618 points.luneOf() function: True
6test 1619 points.nearestOn5() function: True
6test 1620 points.perimeterOf() function: True
6test 1621 points.quadOf() function: True
6testModule(pygeodesy.props, 22.09.23)
6test 1622 props.DeprecationWarnings class pygeodesy.props.DeprecationWarnings: True
6test 1623 props.Property() class: True
6test 1624 props.Property_RO() class: True
6test 1625 props.deprecated_Property_RO() function: True
6test 1626 props.deprecated_class() function: True
6test 1627 props.deprecated_function() function: True
6test 1628 props.deprecated_method() function: True
6test 1629 props.deprecated_property_RO() function: True
6test 1630 props.property_RO() class: True
6test 1631 props.property_doc_() function: True
6testModule(pygeodesy.resections, 22.09.24)
6test 1632 resections.Collins5Tuple() class: True
6test 1633 resections.ResectionError() class: True
6test 1634 resections.Survey3Tuple() class: True
6test 1635 resections.Tienstra7Tuple() class: True
6test 1636 resections.TriAngle4Tuple() class: True
6test 1637 resections.TriSide2Tuple() class: True
6test 1638 resections.TriSide4Tuple() class: True
6test 1639 resections.cassini() function: True
6test 1640 resections.collins5() function: True
6test 1641 resections.pierlot() function: True
6test 1642 resections.snellius3() function: True
6test 1643 resections.tienstra7() function: True
6test 1644 resections.triAngle() function: True
6test 1645 resections.triAngle4() function: True
6test 1646 resections.triSide() function: True
6test 1647 resections.triSide2() function: True
6test 1648 resections.triSide4() function: True
6test 1649 resections.wildberger3() function: True
6testModule(pygeodesy.rhumbsolve, 22.10.11)
6test 1650 rhumbsolve.RhumbLineSolve() class: True
6test 1651 rhumbsolve.RhumbSolve() class: True
6test 1652 rhumbsolve.RhumbSolve7Tuple() class: True
6testModule(pygeodesy.rhumbx, 22.10.11)
6test 1653 rhumbx.Rhumb() class: True
6test 1654 rhumbx.Rhumb8Tuple() class: True
6test 1655 rhumbx.RhumbError() class: True
6test 1656 rhumbx.RhumbLine() class: True
6test 1657 rhumbx.RhumbOrder2Tuple() class: True
6testModule(pygeodesy.simplify, 22.10.05)
6test 1658 simplify.simplify1() function: True
6test 1659 simplify.simplifyRDP() function: True
6test 1660 simplify.simplifyRDPm() function: True
6test 1661 simplify.simplifyRW() function: True
6test 1662 simplify.simplifyVW() function: True
6test 1663 simplify.simplifyVWm() function: True
6testModule(pygeodesy.solveBase, 22.10.04)
6testModule(pygeodesy.sphericalBase, 23.01.18)
6testModule(pygeodesy.sphericalNvector, 23.01.18)
6test 1664 sphericalNvector.Cartesian() class: True
6test 1665 sphericalNvector.LatLon() class: True
6test 1666 sphericalNvector.Nvector() class: True
6test 1667 sphericalNvector.areaOf() function: True
6test 1668 sphericalNvector.intersecant2() function: True
6test 1669 sphericalNvector.intersection() function: True
6test 1670 sphericalNvector.ispolar() function (pygeodesy.points): True
6test 1671 sphericalNvector.meanOf() function: True
6test 1672 sphericalNvector.nearestOn2() function: True
6test 1673 sphericalNvector.nearestOn3() function: True
6test 1674 sphericalNvector.perimeterOf() function: True
6test 1675 sphericalNvector.sumOf() function: True
6test 1676 sphericalNvector.triangulate() function: True
6test 1677 sphericalNvector.trilaterate() function: True
6testModule(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 1678 sphericalTrigonometry.Cartesian() class: True
6test 1679 sphericalTrigonometry.LatLon() class: True
6test 1680 sphericalTrigonometry.areaOf() function: True
6test 1681 sphericalTrigonometry.intersecant2() function: True
6test 1682 sphericalTrigonometry.intersection() function: True
6test 1683 sphericalTrigonometry.intersections2() function: True
6test 1684 sphericalTrigonometry.isPoleEnclosedBy() function: True
6test 1685 sphericalTrigonometry.ispolar() function (pygeodesy.points): True
6test 1686 sphericalTrigonometry.meanOf() function: True
6test 1687 sphericalTrigonometry.nearestOn2() function: True
6test 1688 sphericalTrigonometry.nearestOn3() function: True
6test 1689 sphericalTrigonometry.perimeterOf() function: True
6test 1690 sphericalTrigonometry.sumOf() function (pygeodesy.vector3d): True
6test 1691 sphericalTrigonometry.triangle7() function: True
6test 1692 sphericalTrigonometry.triangle8_() function: True
6testModule(pygeodesy.streprs, 23.02.22)
6test 1693 streprs.anstr() function: True
6test 1694 streprs.attrs() function: True
6test 1695 streprs.enstr2() function: True
6test 1696 streprs.fstr() function: True
6test 1697 streprs.fstrzs() function: True
6test 1698 streprs.hstr() function: True
6test 1699 streprs.instr() function: True
6test 1700 streprs.lrstrip() function: True
6test 1701 streprs.pairs() function: True
6test 1702 streprs.reprs() function: True
6test 1703 streprs.strs() function: True
6test 1704 streprs.unstr() function: True
6testModule(pygeodesy.trf, 22.10.07)
6test 1705 trf.Helmert7Tuple() class: True
6test 1706 trf.RefFrame() class: True
6test 1707 trf.RefFrames class pygeodesy.trf.RefFrames: True
6test 1708 trf.date2epoch() function: True
6test 1709 trf.epoch2date() function: True
6test 1710 trf.trfXform() function: True
6testModule(pygeodesy.triaxials, 23.02.07)
6test 1711 triaxials.BetaOmega2Tuple() class: True
6test 1712 triaxials.BetaOmega3Tuple() class: True
6test 1713 triaxials.Jacobi2Tuple() class: True
6test 1714 triaxials.JacobiConformal() class: True
6test 1715 triaxials.Triaxial() class: True
6test 1716 triaxials.TriaxialError() class: True
6test 1717 triaxials.Triaxial_() class: True
6test 1718 triaxials.Triaxials class pygeodesy.triaxials.Triaxials: True
6test 1719 triaxials.hartzell4() function: True
6testModule(pygeodesy.units, 23.03.09)
6test 1720 units.Band() class: True
6test 1721 units.Bearing() class: True
6test 1722 units.Bearing_() class: True
6test 1723 units.Bool() class: True
6test 1724 units.Degrees() class: True
6test 1725 units.Degrees2() class: True
6test 1726 units.Degrees_() class: True
6test 1727 units.Distance() class: True
6test 1728 units.Distance_() class: True
6test 1729 units.Easting() class: True
6test 1730 units.Epoch() class: True
6test 1731 units.FIx() class: True
6test 1732 units.Feet() class: True
6test 1733 units.Float_() class: True
6test 1734 units.Height() class: True
6test 1735 units.HeightX() class: True
6test 1736 units.Height_() class: True
6test 1737 units.Int_() class: True
6test 1738 units.Lam() class: True
6test 1739 units.Lam_() class: True
6test 1740 units.Lat() class: True
6test 1741 units.Lat_() class: True
6test 1742 units.Lon() class: True
6test 1743 units.Lon_() class: True
6test 1744 units.Meter() class: True
6test 1745 units.Meter2() class: True
6test 1746 units.Meter3() class: True
6test 1747 units.Meter_() class: True
6test 1748 units.Northing() class: True
6test 1749 units.Number_() class: True
6test 1750 units.Phi() class: True
6test 1751 units.Phi_() class: True
6test 1752 units.Precision_() class: True
6test 1753 units.Radians() class: True
6test 1754 units.Radians2() class: True
6test 1755 units.Radians_() class: True
6test 1756 units.Radius_() class: True
6test 1757 units.Scalar() class: True
6test 1758 units.Scalar_() class: True
6test 1759 units.Zone() class: True
6testModule(pygeodesy.unitsBase, 22.09.25)
6test 1760 unitsBase.Float() class: True
6test 1761 unitsBase.Int() class: True
6test 1762 unitsBase.Radius() class: True
6test 1763 unitsBase.Str() class: True
6testModule(pygeodesy.ups, 22.10.05)
6test 1764 ups.UPSError() class: True
6test 1765 ups.Ups() class: True
6test 1766 ups.parseUPS5() function: True
6test 1767 ups.toUps8() function: True
6test 1768 ups.upsZoneBand5() function: True
6testModule(pygeodesy.utily, 22.10.23)
6test 1769 utily.NM2m() function: True
6test 1770 utily.SM2m() function: True
6test 1771 utily.acos1() function: True
6test 1772 utily.acre2ha() function: True
6test 1773 utily.acre2m2() function: True
6test 1774 utily.asin1() function: True
6test 1775 utily.atan2b() function: True
6test 1776 utily.atan2d() function: True
6test 1777 utily.atand() function: True
6test 1778 utily.chain2m() function: True
6test 1779 utily.circle4() function: True
6test 1780 utily.cot() function: True
6test 1781 utily.cot_() function: True
6test 1782 utily.cotd() function: True
6test 1783 utily.cotd_() function: True
6test 1784 utily.degrees class builtin_function_or_method (math): True
6test 1785 utily.degrees180() function: True
6test 1786 utily.degrees2grades() function: True
6test 1787 utily.degrees2m() function: True
6test 1788 utily.degrees360() function: True
6test 1789 utily.degrees90() function: True
6test 1790 utily.fathom2m() function: True
6test 1791 utily.ft2m() function: True
6test 1792 utily.furlong2m() function: True
6test 1793 utily.grades() function: True
6test 1794 utily.grades2degrees() function: True
6test 1795 utily.grades2radians() function: True
6test 1796 utily.grades400() function: True
6test 1797 utily.km2m() function: True
6test 1798 utily.m2NM() function: True
6test 1799 utily.m2SM() function: True
6test 1800 utily.m2chain() function: True
6test 1801 utily.m2degrees() function: True
6test 1802 utily.m2fathom() function: True
6test 1803 utily.m2ft() function: True
6test 1804 utily.m2furlong() function: True
6test 1805 utily.m2km() function: True
6test 1806 utily.m2radians() function: True
6test 1807 utily.m2toise() function: True
6test 1808 utily.m2yard() function: True
6test 1809 utily.radians class builtin_function_or_method (math): True
6test 1810 utily.radians2m() function: True
6test 1811 utily.radiansPI() function: True
6test 1812 utily.radiansPI2() function: True
6test 1813 utily.radiansPI_2() function: True
6test 1814 utily.sincos2() function: True
6test 1815 utily.sincos2_() function: True
6test 1816 utily.sincos2d() function: True
6test 1817 utily.sincos2d_() function: True
6test 1818 utily.sincostan3() function: True
6test 1819 utily.tanPI_2_2() function: True
6test 1820 utily.tan_2() function: True
6test 1821 utily.tand() function: True
6test 1822 utily.tand_() function: True
6test 1823 utily.toise2m() function: True
6test 1824 utily.truncate() function: True
6test 1825 utily.unroll180() function: True
6test 1826 utily.unrollPI() function: True
6test 1827 utily.wrap180() function: True
6test 1828 utily.wrap360() function: True
6test 1829 utily.wrap90() function: True
6test 1830 utily.wrapPI() function: True
6test 1831 utily.wrapPI2() function: True
6test 1832 utily.wrapPI_2() function: True
6test 1833 utily.yard2m() function: True
6testModule(pygeodesy.utm, 22.10.07)
6test 1834 utm.UTMError() class: True
6test 1835 utm.Utm() class: True
6test 1836 utm.parseUTM5() function: True
6test 1837 utm.toUtm8() function: True
6test 1838 utm.utmZoneBand5() function: True
6testModule(pygeodesy.utmups, 22.10.04)
6test 1839 utmups.UTMUPSError() class: True
6test 1840 utmups.UtmUps() function: True
6test 1841 utmups.parseUTMUPS5() function: True
6test 1842 utmups.toUtmUps8() function: True
6test 1843 utmups.utmupsValidate() function: True
6test 1844 utmups.utmupsValidateOK() function: True
6test 1845 utmups.utmupsZoneBand5() function: True
6testModule(pygeodesy.utmupsBase, 22.10.05)
6testModule(pygeodesy.vector2d, 22.10.12)
6test 1846 vector2d.Circin6Tuple() class: True
6test 1847 vector2d.Circum3Tuple() class: True
6test 1848 vector2d.Circum4Tuple() class: True
6test 1849 vector2d.Meeus2Tuple() class: True
6test 1850 vector2d.Radii11Tuple() class: True
6test 1851 vector2d.Soddy4Tuple() class: True
6test 1852 vector2d.circin6() function: True
6test 1853 vector2d.circum3() function: True
6test 1854 vector2d.circum4_() function: True
6test 1855 vector2d.meeus2() function: True
6test 1856 vector2d.radii11() function: True
6test 1857 vector2d.soddy4() function: True
6testModule(pygeodesy.vector3d, 22.10.23)
6test 1858 vector3d.Vector3d() class: True
6test 1859 vector3d.intersection3d3() function: True
6test 1860 vector3d.iscolinearWith() function: True
6test 1861 vector3d.nearestOn() function: True
6test 1862 vector3d.nearestOn6() function: True
6test 1863 vector3d.parse3d() function: True
6test 1864 vector3d.trilaterate2d2() function: True
6test 1865 vector3d.trilaterate3d2() function: True
6testModule(pygeodesy.vector3dBase, 22.10.23)
6testModule(pygeodesy.webmercator, 22.09.12)
6test 1866 webmercator.EasNorRadius3Tuple() class: True
6test 1867 webmercator.WebMercatorError() class: True
6test 1868 webmercator.Wm() class: True
6test 1869 webmercator.parseWM() function: True
6test 1870 webmercator.toWm() function: True
6testModule(pygeodesy.wgrs, 22.09.24)
6test 1871 wgrs.Georef() class: True
6test 1872 wgrs.WGRSError() class: True
6test 1873 wgrs.decode3() function: True
6test 1874 wgrs.decode5() function: True
6test 1875 wgrs.encode() function: True
6test 1876 wgrs.precision() function: True
6test 1877 wgrs.resolution() function: True
6testPublic(pygeodesy, 23.03.12)
6test 1878 Aer() class: True
6test 1879 Aer4Tuple() class: True
6test 1880 Albers7Tuple() class: True
6test 1881 AlbersEqualArea() class: True
6test 1882 AlbersEqualArea2() class: True
6test 1883 AlbersEqualArea4() class: True
6test 1884 AlbersEqualAreaCylindrical() class: True
6test 1885 AlbersEqualAreaNorth() class: True
6test 1886 AlbersEqualAreaSouth() class: True
6test 1887 AlbersError() class: True
6test 1888 Area3Tuple() class: True
6test 1889 Attitude() class: True
6test 1890 Attitude4Tuple() class: True
6test 1891 AttitudeError() class: True
6test 1892 Azimuthal7Tuple() class: True
6test 1893 AzimuthalError() class: True
6test 1894 Band() class: True
6test 1895 Bearing() class: True
6test 1896 Bearing2Tuple() class: True
6test 1897 Bearing_() class: True
6test 1898 BetaOmega2Tuple() class: True
6test 1899 BetaOmega3Tuple() class: True
6test 1900 Bool() class: True
6test 1901 BooleanFHP() class: True
6test 1902 BooleanGH() class: True
6test 1903 Bounds2Tuple() class: True
6test 1904 Bounds4Tuple() class: True
6test 1905 CSSError() class: True
6test 1906 Caps class pygeodesy.karney.Caps: True
6test 1907 CassiniSoldner() class: True
6test 1908 ChLV() class: True
6test 1909 ChLV9Tuple() class: True
6test 1910 ChLVEN2Tuple() class: True
6test 1911 ChLVYX2Tuple() class: True
6test 1912 ChLVa() class: True
6test 1913 ChLVe() class: True
6test 1914 ChLVyx2Tuple() class: True
6test 1915 Circin6Tuple() class: True
6test 1916 Circle4Tuple() class: True
6test 1917 Circum3Tuple() class: True
6test 1918 Circum4Tuple() class: True
6test 1919 ClipCS3Tuple() class: True
6test 1920 ClipCS4Tuple() class: True
6test 1921 ClipError() class: True
6test 1922 ClipFHP4Tuple() class: True
6test 1923 ClipGH4Tuple() class: True
6test 1924 ClipLB6Tuple() class: True
6test 1925 ClipSH3Tuple() class: True
6test 1926 Collins5Tuple() class: True
6test 1927 Conic() class: True
6test 1928 Conics class pygeodesy.lcc.Conics: True
6test 1929 CrossError() class: True
6test 1930 Css() class: True
6test 1931 Curvature2Tuple() class: True
6test 1932 DIG int: True
6test 1933 Datum() class: True
6test 1934 Datums class pygeodesy.datums.Datums: True
6test 1935 Degrees() class: True
6test 1936 Degrees2() class: True
6test 1937 Degrees_() class: True
6test 1938 DeprecationWarnings class pygeodesy.props.DeprecationWarnings: True
6test 1939 Destination2Tuple() class: True
6test 1940 Destination3Tuple() class: True
6test 1941 Direct9Tuple() class: True
6test 1942 Distance() class: True
6test 1943 Distance2Tuple() class: True
6test 1944 Distance3Tuple() class: True
6test 1945 Distance4Tuple() class: True
6test 1946 Distance_() class: True
6test 1947 EPS float: True
6test 1948 EPS0 float: True
6test 1949 EPS02 float: True
6test 1950 EPS1 float: True
6test 1951 EPS1_2 float: True
6test 1952 EPS2 float: True
6test 1953 EPS4 float: True
6test 1954 EPSGError() class: True
6test 1955 EPS_2 float: True
6test 1956 ETMError() class: True
6test 1957 EasNor2Tuple() class: True
6test 1958 EasNor3Tuple() class: True
6test 1959 EasNorAziRk4Tuple() class: True
6test 1960 EasNorAziRkEqu6Tuple() class: True
6test 1961 EasNorExact4Tuple() class: True
6test 1962 EasNorRadius3Tuple() class: True
6test 1963 Easting() class: True
6test 1964 Ecef9Tuple() class: True
6test 1965 EcefCartesian() function: True
6test 1966 EcefError() class: True
6test 1967 EcefFarrell21() class: True
6test 1968 EcefFarrell22() class: True
6test 1969 EcefKarney() class: True
6test 1970 EcefMatrix() class: True
6test 1971 EcefSudano() class: True
6test 1972 EcefVeness() class: True
6test 1973 EcefYou() class: True
6test 1974 Elevation2Tuple() class: True
6test 1975 Ellipsoid() class: True
6test 1976 Ellipsoid2() class: True
6test 1977 Ellipsoids class pygeodesy.ellipsoids.Ellipsoids: True
6test 1978 Elliptic() class: True
6test 1979 Elliptic3Tuple() class: True
6test 1980 EllipticError() class: True
6test 1981 Enu() class: True
6test 1982 Enu4Tuple() class: True
6test 1983 Epoch() class: True
6test 1984 Epsg() class: True
6test 1985 Equidistant() class: True
6test 1986 EquidistantExact() class: True
6test 1987 EquidistantGeodSolve() class: True
6test 1988 EquidistantKarney() class: True
6test 1989 Etm() class: True
6test 1990 ExactTransverseMercator() class: True
6test 1991 FIx() class: True
6test 1992 F_D60_ str: True
6test 1993 F_D60__ str: True
6test 1994 F_DEG_ str: True
6test 1995 F_DEG__ str: True
6test 1996 F_DMS_ str: True
6test 1997 F_DMS__ str: True
6test 1998 F_DM_ str: True
6test 1999 F_DM__ str: True
6test 2000 F_D_ str: True
6test 2001 F_D__ str: True
6test 2002 F_MIN_ str: True
6test 2003 F_MIN__ str: True
6test 2004 F_RAD_ str: True
6test 2005 F_RAD__ str: True
6test 2006 F_SEC_ str: True
6test 2007 F_SEC__ str: True
6test 2008 F__E_ str: True
6test 2009 F__E__ str: True
6test 2010 F__F_ str: True
6test 2011 F__F__ str: True
6test 2012 F__G_ str: True
6test 2013 F__G__ str: True
6test 2014 Fcbrt() class: True
6test 2015 Fcook() class: True
6test 2016 Fdot() class: True
6test 2017 Feet() class: True
6test 2018 Fhorner() class: True
6test 2019 Fhypot() class: True
6test 2020 Flinear() class: True
6test 2021 Float() class: True
6test 2022 Float_() class: True
6test 2023 Fn_rt() class: True
6test 2024 Footprint5Tuple() class: True
6test 2025 Forward4Tuple() class: True
6test 2026 Fpolynomial() class: True
6test 2027 Fpowers() class: True
6test 2028 Frechet() class: True
6test 2029 Frechet6Tuple() class: True
6test 2030 FrechetCosineAndoyerLambert() class: True
6test 2031 FrechetCosineForsytheAndoyerLambert() class: True
6test 2032 FrechetCosineLaw() class: True
6test 2033 FrechetDegrees() class: True
6test 2034 FrechetDistanceTo() class: True
6test 2035 FrechetEquirectangular() class: True
6test 2036 FrechetError() class: True
6test 2037 FrechetEuclidean() class: True
6test 2038 FrechetExact() class: True
6test 2039 FrechetFlatLocal() class: True
6test 2040 FrechetFlatPolar() class: True
6test 2041 FrechetHaversine() class: True
6test 2042 FrechetHubeny() class: True
6test 2043 FrechetKarney() class: True
6test 2044 FrechetRadians() class: True
6test 2045 FrechetThomas() class: True
6test 2046 FrechetVincentys() class: True
6test 2047 Frustum() class: True
6test 2048 Fsqrt() class: True
6test 2049 Fsum() class: True
6test 2050 Fsum2Tuple() class: True
6test 2051 Fwelford() class: True
6test 2052 GARSError() class: True
6test 2053 GDict() class: True
6test 2054 Garef() class: True
6test 2055 GeodSolve12Tuple() class: True
6test 2056 GeodesicAreaExact() class: True
6test 2057 GeodesicError() class: True
6test 2058 GeodesicExact() class: True
6test 2059 GeodesicLineExact() class: True
6test 2060 GeodesicLineSolve() class: True
6test 2061 GeodesicSolve() class: True
6test 2062 Geohash() class: True
6test 2063 GeohashError() class: True
6test 2064 GeoidError() class: True
6test 2065 GeoidG2012B() class: True
6test 2066 GeoidHeight2Tuple() class: True
6test 2067 GeoidHeight5Tuple() class: True
6test 2068 GeoidKarney() class: True
6test 2069 GeoidPGM() class: True
6test 2070 Georef() class: True
6test 2071 Gnomonic() class: True
6test 2072 GnomonicExact() class: True
6test 2073 GnomonicGeodSolve() class: True
6test 2074 GnomonicKarney() class: True
6test 2075 Hausdorff() class: True
6test 2076 Hausdorff6Tuple() class: True
6test 2077 HausdorffCosineAndoyerLambert() class: True
6test 2078 HausdorffCosineForsytheAndoyerLambert() class: True
6test 2079 HausdorffCosineLaw() class: True
6test 2080 HausdorffDegrees() class: True
6test 2081 HausdorffDistanceTo() class: True
6test 2082 HausdorffEquirectangular() class: True
6test 2083 HausdorffError() class: True
6test 2084 HausdorffEuclidean() class: True
6test 2085 HausdorffExact() class: True
6test 2086 HausdorffFlatLocal() class: True
6test 2087 HausdorffFlatPolar() class: True
6test 2088 HausdorffHaversine() class: True
6test 2089 HausdorffHubeny() class: True
6test 2090 HausdorffKarney() class: True
6test 2091 HausdorffRadians() class: True
6test 2092 HausdorffThomas() class: True
6test 2093 HausdorffVincentys() class: True
6test 2094 Height() class: True
6test 2095 HeightCubic() class: True
6test 2096 HeightError() class: True
6test 2097 HeightIDW() function: True
6test 2098 HeightIDW2() function: True
6test 2099 HeightIDW3() function: True
6test 2100 HeightIDWcosineAndoyerLambert() class: True
6test 2101 HeightIDWcosineForsytheAndoyerLambert() class: True
6test 2102 HeightIDWcosineLaw() class: True
6test 2103 HeightIDWdistanceTo() class: True
6test 2104 HeightIDWequirectangular() class: True
6test 2105 HeightIDWeuclidean() class: True
6test 2106 HeightIDWflatLocal() class: True
6test 2107 HeightIDWflatPolar() class: True
6test 2108 HeightIDWhaversine() class: True
6test 2109 HeightIDWhubeny() class: True
6test 2110 HeightIDWkarney() class: True
6test 2111 HeightIDWthomas() class: True
6test 2112 HeightIDWvincentys() class: True
6test 2113 HeightLSQBiSpline() class: True
6test 2114 HeightLinear() class: True
6test 2115 HeightSmoothBiSpline() class: True
6test 2116 HeightX() class: True
6test 2117 Height_() class: True
6test 2118 Helmert7Tuple() class: True
6test 2119 INF float: True
6test 2120 INT0 int: True
6test 2121 Int() class: True
6test 2122 Int_() class: True
6test 2123 Intersection3Tuple() class: True
6test 2124 IntersectionError() class: True
6test 2125 Inverse10Tuple() class: True
6test 2126 Jacobi2Tuple() class: True
6test 2127 JacobiConformal() class: True
6test 2128 KTMError() class: True
6test 2129 KTransverseMercator() class: True
6test 2130 LCCError() class: True
6test 2131 Lam() class: True
6test 2132 Lam_() class: True
6test 2133 LambertEqualArea() class: True
6test 2134 Lat() class: True
6test 2135 LatLon2PsxyIter() class: True
6test 2136 LatLon2Tuple() class: True
6test 2137 LatLon2psxy() class: True
6test 2138 LatLon3Tuple() class: True
6test 2139 LatLon4Tuple() class: True
6test 2140 LatLonAziRk4Tuple() class: True
6test 2141 LatLonDatum3Tuple() class: True
6test 2142 LatLonDatum5Tuple() class: True
6test 2143 LatLonExact4Tuple() class: True
6test 2144 LatLonFHP() class: True
6test 2145 LatLonGH() class: True
6test 2146 LatLonPrec3Tuple() class: True
6test 2147 LatLonPrec5Tuple() class: True
6test 2148 LatLon_() class: True
6test 2149 Lat_() class: True
6test 2150 LazyImportError() class: True
6test 2151 Lcc() class: True
6test 2152 LenError() class: True
6test 2153 LimitError() class: True
6test 2154 Local9Tuple() class: True
6test 2155 LocalCartesian() class: True
6test 2156 LocalError() class: True
6test 2157 Lon() class: True
6test 2158 Lon_() class: True
6test 2159 Ltp() class: True
6test 2160 MANTIS int: True
6test 2161 MANT_DIG int: True
6test 2162 MAX float: True
6test 2163 MGRSError() class: True
6test 2164 MIN float: True
6test 2165 Meeus2Tuple() class: True
6test 2166 Meter() class: True
6test 2167 Meter2() class: True
6test 2168 Meter3() class: True
6test 2169 Meter_() class: True
6test 2170 Mgrs() class: True
6test 2171 Mgrs4Tuple() class: True
6test 2172 Mgrs6Tuple() class: True
6test 2173 NAN float: True
6test 2174 NEG0 float: True
6test 2175 NINF float: True
6test 2176 NM2m() function: True
6test 2177 NN str: True
6test 2178 NearestOn2Tuple() class: True
6test 2179 NearestOn3Tuple() class: True
6test 2180 NearestOn4Tuple() class: True
6test 2181 NearestOn5Tuple() class: True
6test 2182 NearestOn6Tuple() class: True
6test 2183 NearestOn8Tuple() class: True
6test 2184 Ned() class: True
6test 2185 Ned3Tuple() class: True
6test 2186 Ned4Tuple() class: True
6test 2187 Neighbors8Dict() class: True
6test 2188 Northing() class: True
6test 2189 NumPyError() class: True
6test 2190 Number_() class: True
6test 2191 Numpy2LatLon() class: True
6test 2192 OK str: True
6test 2193 OSGRError() class: True
6test 2194 Orthographic() class: True
6test 2195 Osgr() class: True
6test 2196 PGMError() class: True
6test 2197 PI float: True
6test 2198 PI2 float: True
6test 2199 PI3 float: True
6test 2200 PI3_2 float: True
6test 2201 PI4 float: True
6test 2202 PI_2 float: True
6test 2203 PI_3 float: True
6test 2204 PI_4 float: True
6test 2205 ParseError() class: True
6test 2206 Phi() class: True
6test 2207 PhiLam2Tuple() class: True
6test 2208 PhiLam3Tuple() class: True
6test 2209 PhiLam4Tuple() class: True
6test 2210 Phi_() class: True
6test 2211 Point3Tuple() class: True
6test 2212 Points2Tuple() class: True
6test 2213 PointsError() class: True
6test 2214 PointsIter() class: True
6test 2215 PolygonArea() class: True
6test 2216 Precision_() class: True
6test 2217 Property() class: True
6test 2218 Property_RO() class: True
6test 2219 R_FM float: True
6test 2220 R_GM float: True
6test 2221 R_KM float: True
6test 2222 R_M float: True
6test 2223 R_MA float: True
6test 2224 R_MB float: True
6test 2225 R_NM float: True
6test 2226 R_QM float: True
6test 2227 R_SM float: True
6test 2228 R_VM float: True
6test 2229 Radians() class: True
6test 2230 Radians2() class: True
6test 2231 Radians_() class: True
6test 2232 Radical2Tuple() class: True
6test 2233 Radii11Tuple() class: True
6test 2234 Radius() class: True
6test 2235 Radius_() class: True
6test 2236 RangeError() class: True
6test 2237 RefFrame() class: True
6test 2238 RefFrameError() function: True
6test 2239 RefFrames class pygeodesy.trf.RefFrames: True
6test 2240 ResectionError() class: True
6test 2241 ResidualError() class: True
6test 2242 Resolutions2Tuple() class: True
6test 2243 Reverse4Tuple() class: True
6test 2244 Rhumb() class: True
6test 2245 Rhumb7Tuple() class: True
6test 2246 Rhumb8Tuple() class: True
6test 2247 RhumbError() class: True
6test 2248 RhumbLine() class: True
6test 2249 RhumbLineSolve() class: True
6test 2250 RhumbOrder2Tuple() class: True
6test 2251 RhumbSolve() class: True
6test 2252 RhumbSolve7Tuple() class: True
6test 2253 SM2m() function: True
6test 2254 S_RAD str: True
6test 2255 S_SEP str: True
6test 2256 Scalar() class: True
6test 2257 Scalar_() class: True
6test 2258 SciPyError() class: True
6test 2259 SciPyWarning() class: True
6test 2260 Shape2Tuple() class: True
6test 2261 Soddy4Tuple() class: True
6test 2262 Stereographic() class: True
6test 2263 Str() class: True
6test 2264 Str_() class: True
6test 2265 Survey3Tuple() class: True
6test 2266 TRFError() class: True
6test 2267 Tienstra7Tuple() class: True
6test 2268 Transform() class: True
6test 2269 Transform7Tuple() class: True
6test 2270 Transforms class pygeodesy.datums.Transforms: True
6test 2271 TriAngle4Tuple() class: True
6test 2272 TriSide2Tuple() class: True
6test 2273 TriSide4Tuple() class: True
6test 2274 Triangle7Tuple() class: True
6test 2275 Triangle8Tuple() class: True
6test 2276 TriangleError() class: True
6test 2277 Triaxial() class: True
6test 2278 TriaxialError() class: True
6test 2279 Triaxial_() class: True
6test 2280 Triaxials class pygeodesy.triaxials.Triaxials: True
6test 2281 Trilaterate5Tuple() class: True
6test 2282 Tuple2LatLon() class: True
6test 2283 UPSError() class: True
6test 2284 UTMError() class: True
6test 2285 UTMUPSError() class: True
6test 2286 UnitError() class: True
6test 2287 Ups() class: True
6test 2288 Utm() class: True
6test 2289 UtmUps() function: True
6test 2290 UtmUps2Tuple() class: True
6test 2291 UtmUps4Tuple() class: True
6test 2292 UtmUps5Tuple() class: True
6test 2293 UtmUps8Tuple() class: True
6test 2294 UtmUpsLatLon5Tuple() class: True
6test 2295 Vector2Tuple() class: True
6test 2296 Vector3Tuple() class: True
6test 2297 Vector3d() class: True
6test 2298 Vector4Tuple() class: True
6test 2299 VectorError() class: True
6test 2300 VincentyError() class: True
6test 2301 WGRSError() class: True
6test 2302 WebMercatorError() class: True
6test 2303 Wm() class: True
6test 2304 Xyz4Tuple() class: True
6test 2305 XyzLocal() class: True
6test 2306 Zone() class: True
6test 2307 a_b2e() function: True
6test 2308 a_b2e2() function: True
6test 2309 a_b2e22() function: True
6test 2310 a_b2e32() function: True
6test 2311 a_b2f() function: True
6test 2312 a_b2f2() function: True
6test 2313 a_b2f_() function: True
6test 2314 a_b2n() function: True
6test 2315 a_f2Tuple() class: True
6test 2316 a_f2b() function: True
6test 2317 a_f_2b() function: True
6test 2318 acos1() function: True
6test 2319 acre2ha() function: True
6test 2320 acre2m2() function: True
6test 2321 anStr() function: True
6test 2322 anstr() function: True
6test 2323 antipode() function: True
6test 2324 antipode_() function: True
6test 2325 areaOf() function: True
6test 2326 areaof() function: True
6test 2327 asin1() function: True
6test 2328 atan2b() function: True
6test 2329 atan2d() function: True
6test 2330 atand() function: True
6test 2331 attrs() function: True
6test 2332 b_f2a() function: True
6test 2333 b_f_2a() function: True
6test 2334 bearing() function: True
6test 2335 bearingDMS() function: True
6test 2336 bearing_() function: True
6test 2337 bounds() function: True
6test 2338 boundsOf() function: True
6test 2339 callername() function: True
6test 2340 cassini() function: True
6test 2341 cbrt() function: True
6test 2342 cbrt2() function: True
6test 2343 centroidOf() function: True
6test 2344 chain2m() function: True
6test 2345 circin6() function: True
6test 2346 circle4() function: True
6test 2347 circum3() function: True
6test 2348 circum4_() function: True
6test 2349 classname() function: True
6test 2350 classnaming() function: True
6test 2351 clipCS3() function: True
6test 2352 clipCS4() function: True
6test 2353 clipDMS() function: True
6test 2354 clipDegrees() function: True
6test 2355 clipFHP4() function: True
6test 2356 clipGH4() function: True
6test 2357 clipLB6() function: True
6test 2358 clipRadians() function: True
6test 2359 clipSH() function: True
6test 2360 clipSH3() function: True
6test 2361 clipStr() function: True
6test 2362 clips() function: True
6test 2363 collins() function: True
6test 2364 collins5() function: True
6test 2365 compassAngle() function: True
6test 2366 compassDMS() function: True
6test 2367 compassPoint() function: True
6test 2368 copysign0() function: True
6test 2369 copytype() function: True
6test 2370 cosineAndoyerLambert() function: True
6test 2371 cosineAndoyerLambert_() function: True
6test 2372 cosineForsytheAndoyerLambert() function: True
6test 2373 cosineForsytheAndoyerLambert_() function: True
6test 2374 cosineLaw() function: True
6test 2375 cosineLaw_() function: True
6test 2376 cot() function: True
6test 2377 cot_() function: True
6test 2378 cotd() function: True
6test 2379 cotd_() function: True
6test 2380 crosserrors() function: True
6test 2381 date2epoch() function: True
6test 2382 decodeEPSG2() function: True
6test 2383 degDMS() function: True
6test 2384 degrees180() function: True
6test 2385 degrees2grades() function: True
6test 2386 degrees2m() function: True
6test 2387 degrees360() function: True
6test 2388 degrees90() function: True
6test 2389 deprecated_Property_RO() function: True
6test 2390 deprecated_class() function: True
6test 2391 deprecated_function() function: True
6test 2392 deprecated_method() function: True
6test 2393 deprecated_property_RO() function: True
6test 2394 e22f() function: True
6test 2395 e2f() function: True
6test 2396 egmGeoidHeights() function: True
6test 2397 elevation2() function: True
6test 2398 enStr2() function: True
6test 2399 encodeEPSG() function: True
6test 2400 enstr2() function: True
6test 2401 epoch2date() function: True
6test 2402 equidistant() function: True
6test 2403 equirectangular() function: True
6test 2404 equirectangular3() function: True
6test 2405 equirectangular_() function: True
6test 2406 euclid() function: True
6test 2407 euclid_() function: True
6test 2408 euclidean() function: True
6test 2409 euclidean_() function: True
6test 2410 exception_chaining() function: True
6test 2411 excessAbc() function: True
6test 2412 excessGirard() function: True
6test 2413 excessKarney() function: True
6test 2414 excessKarney_() function: True
6test 2415 excessLHuilier() function: True
6test 2416 excessQuad() function: True
6test 2417 excessQuad_() function: True
6test 2418 f2e2() function: True
6test 2419 f2e22() function: True
6test 2420 f2e32() function: True
6test 2421 f2f2() function: True
6test 2422 f2f_() function: True
6test 2423 f2n() function: True
6test 2424 fStr() function: True
6test 2425 fStrzs() function: True
6test 2426 f_2f() function: True
6test 2427 facos1() function: True
6test 2428 false2f() function: True
6test 2429 falsed2f() function: True
6test 2430 fasin1() function: True
6test 2431 fatan() function: True
6test 2432 fatan1() function: True
6test 2433 fatan2() function: True
6test 2434 fathom2m() function: True
6test 2435 favg() function: True
6test 2436 fdot() function: True
6test 2437 fdot3() function: True
6test 2438 fhorner() function: True
6test 2439 fidw() function: True
6test 2440 flatLocal() function: True
6test 2441 flatLocal_() function: True
6test 2442 flatPolar() function: True
6test 2443 flatPolar_() function: True
6test 2444 float0() function: True
6test 2445 float_() function: True
6test 2446 fmean() function: True
6test 2447 fmean_() function: True
6test 2448 fpolynomial() function: True
6test 2449 fpowers() function: True
6test 2450 fractional() function: True
6test 2451 frange() function: True
6test 2452 frechet_() function: True
6test 2453 freduce class builtin_function_or_method: True
6test 2454 fremainder() function: True
6test 2455 fstr() function: True
6test 2456 fstrzs() function: True
6test 2457 fsum() function: True
6test 2458 fsum1() function: True
6test 2459 fsum1_() function: True
6test 2460 fsum_() function: True
6test 2461 ft2m() function: True
6test 2462 furlong2m() function: True
6test 2463 geoidHeight2() function: True
6test 2464 gnomonic() function: True
6test 2465 grades() function: True
6test 2466 grades2degrees() function: True
6test 2467 grades2radians() function: True
6test 2468 grades400() function: True
6test 2469 halfs2() function: True
6test 2470 hartzell() function: True
6test 2471 hartzell4() function: True
6test 2472 hausdorff_() function: True
6test 2473 haversine() function: True
6test 2474 haversine_() function: True
6test 2475 heightOf() function: True
6test 2476 horizon() function: True
6test 2477 hstr() function: True
6test 2478 hubeny() function: True
6test 2479 hubeny_() function: True
6test 2480 hypot() function: True
6test 2481 hypot1() function: True
6test 2482 hypot2() function: True
6test 2483 hypot2_() function: True
6test 2484 hypot3() function: True
6test 2485 inStr() function: True
6test 2486 instr() function: True
6test 2487 intersection3d3() function: True
6test 2488 intersections2() function: True
6test 2489 isDEPRECATED() function: True
6test 2490 isError() function: True
6test 2491 isNumpy2() function: True
6test 2492 isPoints2() function: True
6test 2493 isTuple2() function: True
6test 2494 isantipode() function: True
6test 2495 isantipode_() function: True
6test 2496 isbool() function: True
6test 2497 isclass() function: True
6test 2498 isclockwise() function: True
6test 2499 isclose() function: True
6test 2500 iscolinearWith() function: True
6test 2501 iscomplex() function: True
6test 2502 isconvex() function: True
6test 2503 isconvex_() function: True
6test 2504 isenclosedBy() function: True
6test 2505 isenclosedby() function: True
6test 2506 isfinite() function: True
6test 2507 isfloat() function: True
6test 2508 isinstanceof() function: True
6test 2509 isint() function: True
6test 2510 isint0() function: True
6test 2511 iskeyword class builtin_function_or_method: True
6test 2512 isnear0() function: True
6test 2513 isnear1() function: True
6test 2514 isnear90() function: True
6test 2515 isneg0() function: True
6test 2516 isninf() function: True
6test 2517 isnon0() function: True
6test 2518 isnormal() function: True
6test 2519 isnormal_() function: True
6test 2520 isodd() function: True
6test 2521 ispolar() function: True
6test 2522 isscalar() function: True
6test 2523 issequence() function: True
6test 2524 isstr() function: True
6test 2525 issubclassof() function: True
6test 2526 istuplist() function: True
6test 2527 itemsorted() function: True
6test 2528 iterNumpy2() function: True
6test 2529 iterNumpy2over() function: True
6test 2530 joined() function: True
6test 2531 joined_() function: True
6test 2532 km2m() function: True
6test 2533 latDMS() function: True
6test 2534 latlon2n_xyz() function: True
6test 2535 latlonDMS() function: True
6test 2536 latlonDMS_() function: True
6test 2537 len2() function: True
6test 2538 limiterrors() function: True
6test 2539 lonDMS() function: True
6test 2540 lrstrip() function: True
6test 2541 luneOf() function: True
6test 2542 m2NM() function: True
6test 2543 m2SM() function: True
6test 2544 m2chain() function: True
6test 2545 m2degrees() function: True
6test 2546 m2fathom() function: True
6test 2547 m2ft() function: True
6test 2548 m2furlong() function: True
6test 2549 m2km() function: True
6test 2550 m2radians() function: True
6test 2551 m2toise() function: True
6test 2552 m2yard() function: True
6test 2553 machine() function: True
6test 2554 map1() function: True
6test 2555 map2() function: True
6test 2556 meeus2() function: True
6test 2557 modulename() function: True
6test 2558 n2e2() function: True
6test 2559 n2f() function: True
6test 2560 n2f_() function: True
6test 2561 n_xyz2latlon() function: True
6test 2562 n_xyz2philam() function: True
6test 2563 nameof() function: True
6test 2564 nearestOn() function: True
6test 2565 nearestOn3() function: True
6test 2566 nearestOn4() function: True
6test 2567 nearestOn5() function: True
6test 2568 nearestOn6() function: True
6test 2569 neg() function: True
6test 2570 neg_() function: True
6test 2571 norm2() function: True
6test 2572 normDMS() function: True
6test 2573 norm_() function: True
6test 2574 normal() function: True
6test 2575 normal_() function: True
6test 2576 notImplemented() function: True
6test 2577 notOverloaded() function: True
6test 2578 opposing() function: True
6test 2579 opposing_() function: True
6test 2580 pairs() function: True
6test 2581 parse3d() function: True
6test 2582 parse3llh() function: True
6test 2583 parseDDDMMSS() function: True
6test 2584 parseDMS() function: True
6test 2585 parseDMS2() function: True
6test 2586 parseETM5() function: True
6test 2587 parseMGRS() function: True
6test 2588 parseOSGR() function: True
6test 2589 parseRad() function: True
6test 2590 parseUPS5() function: True
6test 2591 parseUTM() function: True
6test 2592 parseUTM5() function: True
6test 2593 parseUTMUPS5() function: True
6test 2594 parseWM() function: True
6test 2595 perimeterOf() function: True
6test 2596 perimeterof() function: True
6test 2597 philam2n_xyz() function: True
6test 2598 pierlot() function: True
6test 2599 points2() function: True
6test 2600 polygon() function: True
6test 2601 precision() function: True
6test 2602 print_() function: True
6test 2603 printf() function: True
6test 2604 property_RO() class: True
6test 2605 property_doc_() function: True
6test 2606 quadOf() function: True
6test 2607 radians2m() function: True
6test 2608 radiansPI() function: True
6test 2609 radiansPI2() function: True
6test 2610 radiansPI_2() function: True
6test 2611 radical2() function: True
6test 2612 radii11() function: True
6test 2613 randomrangenerator() function: True
6test 2614 rangerrors() function: True
6test 2615 reprs() function: True
6test 2616 scalar() function: True
6test 2617 signBit() function: True
6test 2618 signOf() function: True
6test 2619 simplify1() function: True
6test 2620 simplify2() function: True
6test 2621 simplifyRDP() function: True
6test 2622 simplifyRDPm() function: True
6test 2623 simplifyRW() function: True
6test 2624 simplifyVW() function: True
6test 2625 simplifyVWm() function: True
6test 2626 sincos2() function: True
6test 2627 sincos2_() function: True
6test 2628 sincos2d() function: True
6test 2629 sincos2d_() function: True
6test 2630 sincostan3() function: True
6test 2631 snellius3() function: True
6test 2632 soddy4() function: True
6test 2633 splice() function: True
6test 2634 sqrt0() function: True
6test 2635 sqrt3() function: True
6test 2636 sqrt_a() function: True
6test 2637 str2ub() function: True
6test 2638 strs() function: True
6test 2639 tanPI_2_2() function: True
6test 2640 tan_2() function: True
6test 2641 tand() function: True
6test 2642 tand_() function: True
6test 2643 thomas() function: True
6test 2644 thomas_() function: True
6test 2645 tienstra() function: True
6test 2646 tienstra7() function: True
6test 2647 toCss() function: True
6test 2648 toDMS() function: True
6test 2649 toEtm8() function: True
6test 2650 toLcc() function: True
6test 2651 toMgrs() function: True
6test 2652 toOsgr() function: True
6test 2653 toUps8() function: True
6test 2654 toUtm() function: True
6test 2655 toUtm8() function: True
6test 2656 toUtmUps8() function: True
6test 2657 toWm() function: True
6test 2658 toise2m() function: True
6test 2659 trfXform() function: True
6test 2660 triAngle() function: True
6test 2661 triAngle4() function: True
6test 2662 triSide() function: True
6test 2663 triSide2() function: True
6test 2664 triSide4() function: True
6test 2665 trilaterate2d2() function: True
6test 2666 trilaterate3d2() function: True
6test 2667 truncate() function: True
6test 2668 tyr3d() function: True
6test 2669 ub2str() function: True
6test 2670 unStr() function: True
6test 2671 unroll180() function: True
6test 2672 unrollPI() function: True
6test 2673 unsign0() function: True
6test 2674 unsigned0() function: True
6test 2675 unstr() function: True
6test 2676 upsZoneBand5() function: True
6test 2677 utmZoneBand2() function: True
6test 2678 utmZoneBand5() function: True
6test 2679 utmupsValidate() function: True
6test 2680 utmupsValidateOK() function: True
6test 2681 utmupsZoneBand5() function: True
6test 2682 vincentys() function: True
6test 2683 vincentys_() function: True
6test 2684 wildberger3() function: True
6test 2685 wrap180() function: True
6test 2686 wrap360() function: True
6test 2687 wrap90() function: True
6test 2688 wrapPI() function: True
6test 2689 wrapPI2() function: True
6test 2690 wrapPI_2() function: True
6test 2691 yard2m() function: True
6all 2691 testModules.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 19.906 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testNamed.py
6testing testNamed.py 22.10.28
6testing _Named() (pygeodesy.named, 23.02.06)
6test 1 _Named: _Named
6test 2 _Named: True
6test 3 _Named: ''
6test 4 Test: Test
6test 5 _Named 'Test': _Named 'Test'
6test 6 named._Named 'Test': named._Named 'Test'
6test 7 pygeodesy.named._Named 'Test': pygeodesy.named._Named 'Test'
6test 8 Test: use _Named.rename('X'): not _Named.name = 'X' (was 'Test')
6test 9 Test: _Named 'Test'
6test 10 _Named 'Test': Test
6test 11 _Named 'Test': Test
6test 12 _Named 'Test': _Named 'Test'
6test 13 _Named 'Test': <_Named 'Test' at 0x1037e40d0>  FAILED, KNOWN, expected _Named 'Test'
6test 14 _Named 'Test': ''
6testing _NamedBase() (pygeodesy.named, 23.02.06)
6test 15 _NamedBase: _NamedBase
6test 16 _NamedBase: True
6test 17 _NamedBase: ''
6test 18 Test: Test
6test 19 _NamedBase 'Test': _NamedBase 'Test'
6test 20 named._NamedBase 'Test': named._NamedBase 'Test'
6test 21 pygeodesy.named._NamedBase 'Test': pygeodesy.named._NamedBase 'Test'
6test 22 Test: use _NamedBase.rename('X'): not _NamedBase.name = 'X' (was 'Test')
6test 23 Test: named._NamedBase.toStr(), MRO(named._Named): not overloaded
6test 24 _NamedBase 'Test': Test
6test 25 _NamedBase 'Test': Test
6test 26 _NamedBase 'Test': named._NamedBase.toStr(), MRO(named._Named): not overloaded
6test 27 _NamedBase 'Test': named._NamedBase.toStr(), MRO(named._Named): not overloaded
6test 28 _NamedBase 'Test': ''
6testing _NamedDict() (pygeodesy.named, 23.02.06)
6test 29 _NamedDict: _NamedDict
6test 30 _NamedDict: True
6test 31 _NamedDict: ''
6test 32 Test: Test
6test 33 _NamedDict 'Test': _NamedDict 'Test'
6test 34 named._NamedDict 'Test': named._NamedDict 'Test'
6test 35 pygeodesy.named._NamedDict 'Test': pygeodesy.named._NamedDict 'Test'
6test 36 Test: use _NamedDict.rename('X'): not _NamedDict.name = 'X' (was 'Test')
6test 37 Test: {}
6test 38 _NamedDict 'Test': Test
6test 39 _NamedDict 'Test': Test
6test 40 _NamedDict 'Test': {}
6test 41 _NamedDict 'Test': Test()  FAILED, KNOWN, expected {}
6test 42 _NamedDict: ''
6testing _NamedEnum(<class 'pygeodesy.datums.Datum'>,) (pygeodesy.named, 23.02.06)
6test 43 Datums: _NamedEnum
6test 44 Datums: True
6test 45 Datums: 'Datums'  FAILED, KNOWN, expected ''
6test 46 Test: Test
6test 47 _NamedEnum 'Test': _NamedEnum 'Test'
6test 48 named._NamedEnum 'Test': named._NamedEnum 'Test'
6test 49 pygeodesy.named._NamedEnum 'Test': pygeodesy.named._NamedEnum 'Test'
6test 50 Test: use _NamedEnum.rename('X'): not _NamedEnum.name = 'X' (was 'Test')
6test 51 Test: Test.
6test 52 _NamedEnum 'Test': Test
6test 53 _NamedEnum 'Test': Test
6test 54 _NamedEnum 'Test': Test.
6test 55 _NamedEnum 'Test':   FAILED, KNOWN, expected Test.
6test 56 _NamedEnum: ''
6testing _NamedEnumItem() (pygeodesy.named, 23.02.06)
6test 57 _NamedEnumItem: _NamedEnumItem
6test 58 _NamedEnumItem: True
6test 59 _NamedEnumItem: ''
6test 60 Test: Test
6test 61 _NamedEnumItem 'Test': _NamedEnumItem 'Test'
6test 62 named._NamedEnumItem 'Test': named._NamedEnumItem 'Test'
6test 63 pygeodesy.named._NamedEnumItem 'Test': pygeodesy.named._NamedEnumItem 'Test'
6test 64 _NamedEnumItem 'Test': Test
6test 65 _NamedEnumItem 'Test': Test
6test 66 _NamedEnumItem 'Test': named._NamedEnumItem.toStr(), MRO(named._NamedBase, named._Named): not overloaded
6test 67 _NamedEnumItem 'Test': named._NamedEnumItem.toStr(), MRO(named._NamedBase, named._Named): not overloaded
6test 68 _NamedEnumItem 'Test': ''
6testing LatLon2Tuple(0, 0) (pygeodesy.named, 23.02.06)
6test 69 LatLon2Tuple: LatLon2Tuple
6test 70 LatLon2Tuple: True
6test 71 LatLon2Tuple: ''
6test 72 Test: Test
6test 73 LatLon2Tuple 'Test': LatLon2Tuple 'Test'
6test 74 namedTuples.LatLon2Tuple 'Test': namedTuples.LatLon2Tuple 'Test'
6test 75 pygeodesy.namedTuples.LatLon2Tuple 'Test': pygeodesy.namedTuples.LatLon2Tuple 'Test'
6test 76 Test: use LatLon2Tuple.rename('X'): not LatLon2Tuple.name = 'X' (was 'Test')
6test 77 Test: (0, 0)
6test 78 LatLon2Tuple 'Test': Test
6test 79 LatLon2Tuple 'Test': Test
6test 80 LatLon2Tuple 'Test': (0, 0)
6test 81 LatLon2Tuple 'Test': Test(lat=0, lon=0)  FAILED, KNOWN, expected (0, 0)
6test 82 LatLon2Tuple 'Test': ''
6testing NamedDicts (pygeodesy.named, 23.02.06)
6test 83 Neighbors8Dict: Neighbors8Dict
6test 84 Neighbors8Dict: 8-Dict C{(N, NE, E, SE, S, SW, W, NW)}
6test 85 Neighbors8Dict: 8
6testing NamedTuples (pygeodesy.namedTuples, 22.10.11)
6test 86 Albers7Tuple: Albers7Tuple
6test 87 Albers7Tuple: 7-Tuple C{(x, y, lat, lon, gamma, scale, datum)}
6test 88 Albers7Tuple: 7
6test 89 Azimuthal7Tuple: Azimuthal7Tuple
6test 90 Azimuthal7Tuple: 7-Tuple C{(x, y, lat, lon, azimuth, scale, datum)}
6test 91 Azimuthal7Tuple: 7
6test 92 ClipCS4Tuple: ClipCS4Tuple
6test 93 ClipCS4Tuple: 4-Tuple C{(start, end, i, j)}
6test 94 ClipCS4Tuple: 4
6test 95 ClipFHP4Tuple: ClipFHP4Tuple
6test 96 ClipFHP4Tuple: 4-Tuple C{(lat, lon, height, clipid)}
6test 97 ClipFHP4Tuple: 4
6test 98 ClipGH4Tuple: ClipGH4Tuple
6test 99 ClipGH4Tuple: 4-Tuple C{(lat, lon, height, clipid)}
6test 100 ClipGH4Tuple: 4
6test 101 ClipLB6Tuple: ClipLB6Tuple
6test 102 ClipLB6Tuple: 6-Tuple C{(start, end, i, fi, fj, j)}
6test 103 ClipLB6Tuple: 6
6test 104 ClipSH3Tuple: ClipSH3Tuple
6test 105 ClipSH3Tuple: 3-Tuple C{(start, end, original)}
6test 106 ClipSH3Tuple: 3
6test 107 EasNorAziRk4Tuple: EasNorAziRk4Tuple
6test 108 EasNorAziRk4Tuple: 4-Tuple C{(easting, northing, azimuth, reciprocal)}
6test 109 EasNorAziRk4Tuple: 4
6test 110 EasNorAziRkEqu6Tuple: EasNorAziRkEqu6Tuple
6test 111 EasNorAziRkEqu6Tuple: 6-Tuple C{(easting, northing, azimuth, reciprocal, equatorarc, equatorazimuth)}
6test 112 EasNorAziRkEqu6Tuple: 6
6test 113 LatLonAziRk4Tuple: LatLonAziRk4Tuple
6test 114 LatLonAziRk4Tuple: 4-Tuple C{(lat, lon, azimuth, reciprocal)}
6test 115 LatLonAziRk4Tuple: 4
6test 116 Ecef9Tuple: Ecef9Tuple
6test 117 Ecef9Tuple: 9-Tuple C{(x, y, z, lat, lon, height, C, M, datum)}
6test 118 Ecef9Tuple: 9
6test 119 Elevation2Tuple: Elevation2Tuple
6test 120 Elevation2Tuple: 2-Tuple C{(elevation, data_source)}
6test 121 Elevation2Tuple: 2
6test 122 GeoidHeight2Tuple: GeoidHeight2Tuple
6test 123 GeoidHeight2Tuple: 2-Tuple C{(height, model_name)}
6test 124 GeoidHeight2Tuple: 2
6test 125 Circle4Tuple: Circle4Tuple
6test 126 Circle4Tuple: 4-Tuple C{(radius, height, lat, beta)}
6test 127 Circle4Tuple: 4
6test 128 Curvature2Tuple: Curvature2Tuple
6test 129 Curvature2Tuple: 2-Tuple C{(meridional, prime_vertical)}
6test 130 Curvature2Tuple: 2
6test 131 a_f2Tuple: a_f2Tuple
6test 132 a_f2Tuple: 2-Tuple C{(a, f)}
6test 133 a_f2Tuple: 2
6test 134 Elliptic3Tuple: Elliptic3Tuple
6test 135 Elliptic3Tuple: 3-Tuple C{(sn, cn, dn)}
6test 136 Elliptic3Tuple: 3
6test 137 Radical2Tuple: Radical2Tuple
6test 138 Radical2Tuple: 2-Tuple C{(ratio, xline)}
6test 139 Radical2Tuple: 2
6test 140 Frechet6Tuple: Frechet6Tuple
6test 141 Frechet6Tuple: 6-Tuple C{(fd, fi1, fi2, r, n, units)}
6test 142 Frechet6Tuple: 6
6test 143 Fsum2Tuple: Fsum2Tuple
6test 144 Fsum2Tuple: 2-Tuple C{(fsum, residual)}
6test 145 Fsum2Tuple: 2
6test 146 GeodSolve12Tuple: GeodSolve12Tuple
6test 147 GeodSolve12Tuple: 12-Tuple C{(lat1, lon1, azi1, lat2, lon2, azi2, s12, a12, m12, M12, M21, S12)}
6test 148 GeodSolve12Tuple: 12
6test 149 Resolutions2Tuple: Resolutions2Tuple
6test 150 Resolutions2Tuple: 2-Tuple C{(res1, res2)}
6test 151 Resolutions2Tuple: 2
6test 152 GeoidHeight5Tuple: GeoidHeight5Tuple
6test 153 GeoidHeight5Tuple: 5-Tuple C{(lat, lon, egm84, egm96, egm2008)}
6test 154 GeoidHeight5Tuple: 5
6test 155 Hausdorff6Tuple: Hausdorff6Tuple
6test 156 Hausdorff6Tuple: 6-Tuple C{(hd, i, j, mn, md, units)}
6test 157 Hausdorff6Tuple: 6
6test 158 Area3Tuple: Area3Tuple
6test 159 Area3Tuple: 3-Tuple C{(number, perimeter, area)}
6test 160 Area3Tuple: 3
6test 161 Direct9Tuple: Direct9Tuple
6test 162 Direct9Tuple: 9-Tuple C{(a12, lat2, lon2, azi2, s12, m12, M12, M21, S12)}
6test 163 Direct9Tuple: 9
6test 164 Inverse10Tuple: Inverse10Tuple
6test 165 Inverse10Tuple: 10-Tuple C{(a12, s12, salp1, calp1, salp2, calp2, m12, M12, M21, S12)}
6test 166 Inverse10Tuple: 10
6test 167 Aer4Tuple: Aer4Tuple
6test 168 Aer4Tuple: 4-Tuple C{(azimuth, elevation, slantrange, ltp)}
6test 169 Aer4Tuple: 4
6test 170 Attitude4Tuple: Attitude4Tuple
6test 171 Attitude4Tuple: 4-Tuple C{(alt, tilt, yaw, roll)}
6test 172 Attitude4Tuple: 4
6test 173 ChLV9Tuple: ChLV9Tuple
6test 174 ChLV9Tuple: 9-Tuple C{(Y, X, h_, lat, lon, height, ltp, ecef, M)}
6test 175 ChLV9Tuple: 9
6test 176 ChLVEN2Tuple: ChLVEN2Tuple
6test 177 ChLVEN2Tuple: 2-Tuple C{(E_LV95, N_LV95)}
6test 178 ChLVEN2Tuple: 2
6test 179 ChLVYX2Tuple: ChLVYX2Tuple
6test 180 ChLVYX2Tuple: 2-Tuple C{(Y, X)}
6test 181 ChLVYX2Tuple: 2
6test 182 ChLVyx2Tuple: ChLVyx2Tuple
6test 183 ChLVyx2Tuple: 2-Tuple C{(y_LV03, x_LV03)}
6test 184 ChLVyx2Tuple: 2
6test 185 Enu4Tuple: Enu4Tuple
6test 186 Enu4Tuple: 4-Tuple C{(east, north, up, ltp)}
6test 187 Enu4Tuple: 4
6test 188 Footprint5Tuple: Footprint5Tuple
6test 189 Footprint5Tuple: 5-Tuple C{(center, upperleft, upperight, loweright, lowerleft)}
6test 190 Footprint5Tuple: 5
6test 191 Local9Tuple: Local9Tuple
6test 192 Local9Tuple: 9-Tuple C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 193 Local9Tuple: 9
6test 194 Ned4Tuple: Ned4Tuple
6test 195 Ned4Tuple: 4-Tuple C{(north, east, down, ltp)}
6test 196 Ned4Tuple: 4
6test 197 Xyz4Tuple: Xyz4Tuple
6test 198 Xyz4Tuple: 4-Tuple C{(x, y, z, ltp)}
6test 199 Xyz4Tuple: 4
6test 200 Mgrs4Tuple: Mgrs4Tuple
6test 201 Mgrs4Tuple: 4-Tuple C{(zone, EN, easting, northing)}
6test 202 Mgrs4Tuple: 4
6test 203 Mgrs6Tuple: Mgrs6Tuple
6test 204 Mgrs6Tuple: 6-Tuple C{(zone, EN, easting, northing, band, datum)}
6test 205 Mgrs6Tuple: 6
6test 206 Bearing2Tuple: Bearing2Tuple
6test 207 Bearing2Tuple: 2-Tuple C{(initial, final)}
6test 208 Bearing2Tuple: 2
6test 209 Bounds2Tuple: Bounds2Tuple
6test 210 Bounds2Tuple: 2-Tuple C{(latlonSW, latlonNE)}
6test 211 Bounds2Tuple: 2
6test 212 Bounds4Tuple: Bounds4Tuple
6test 213 Bounds4Tuple: 4-Tuple C{(latS, lonW, latN, lonE)}
6test 214 Bounds4Tuple: 4
6test 215 Destination2Tuple: Destination2Tuple
6test 216 Destination2Tuple: 2-Tuple C{(destination, final)}
6test 217 Destination2Tuple: 2
6test 218 Destination3Tuple: Destination3Tuple
6test 219 Destination3Tuple: 3-Tuple C{(lat, lon, final)}
6test 220 Destination3Tuple: 3
6test 221 Distance2Tuple: Distance2Tuple
6test 222 Distance2Tuple: 2-Tuple C{(distance, initial)}
6test 223 Distance2Tuple: 2
6test 224 Distance3Tuple: Distance3Tuple
6test 225 Distance3Tuple: 3-Tuple C{(distance, initial, final)}
6test 226 Distance3Tuple: 3
6test 227 Distance4Tuple: Distance4Tuple
6test 228 Distance4Tuple: 4-Tuple C{(distance2, delta_lat, delta_lon, unroll_lon2)}
6test 229 Distance4Tuple: 4
6test 230 EasNor2Tuple: EasNor2Tuple
6test 231 EasNor2Tuple: 2-Tuple C{(easting, northing)}
6test 232 EasNor2Tuple: 2
6test 233 EasNor3Tuple: EasNor3Tuple
6test 234 EasNor3Tuple: 3-Tuple C{(easting, northing, height)}
6test 235 EasNor3Tuple: 3
6test 236 Forward4Tuple: Forward4Tuple
6test 237 Forward4Tuple: 4-Tuple C{(easting, northing, gamma, scale)}
6test 238 Forward4Tuple: 4
6test 239 Intersection3Tuple: Intersection3Tuple
6test 240 Intersection3Tuple: 3-Tuple C{(point, outside1, outside2)}
6test 241 Intersection3Tuple: 3
6test 242 LatLon2Tuple: LatLon2Tuple
6test 243 LatLon2Tuple: 2-Tuple C{(lat, lon)}
6test 244 LatLon2Tuple: 2
6test 245 LatLon3Tuple: LatLon3Tuple
6test 246 LatLon3Tuple: 3-Tuple C{(lat, lon, height)}
6test 247 LatLon3Tuple: 3
6test 248 LatLon4Tuple: LatLon4Tuple
6test 249 LatLon4Tuple: 4-Tuple C{(lat, lon, height, datum)}
6test 250 LatLon4Tuple: 4
6test 251 LatLonDatum3Tuple: LatLonDatum3Tuple
6test 252 LatLonDatum3Tuple: 3-Tuple C{(lat, lon, datum)}
6test 253 LatLonDatum3Tuple: 3
6test 254 LatLonDatum5Tuple: LatLonDatum5Tuple
6test 255 LatLonDatum5Tuple: 5-Tuple C{(lat, lon, datum, gamma, scale)}
6test 256 LatLonDatum5Tuple: 5
6test 257 LatLonPrec3Tuple: LatLonPrec3Tuple
6test 258 LatLonPrec3Tuple: 3-Tuple C{(lat, lon, precision)}
6test 259 LatLonPrec3Tuple: 3
6test 260 LatLonPrec5Tuple: LatLonPrec5Tuple
6test 261 LatLonPrec5Tuple: 5-Tuple C{(lat, lon, precision, height, radius)}
6test 262 LatLonPrec5Tuple: 5
6test 263 NearestOn2Tuple: NearestOn2Tuple
6test 264 NearestOn2Tuple: 2-Tuple C{(closest, fraction)}
6test 265 NearestOn2Tuple: 2
6test 266 NearestOn3Tuple: NearestOn3Tuple
6test 267 NearestOn3Tuple: 3-Tuple C{(closest, distance, angle)}
6test 268 NearestOn3Tuple: 3
6test 269 NearestOn4Tuple: NearestOn4Tuple
6test 270 NearestOn4Tuple: 4-Tuple C{(lat, lon, distance, normal)}
6test 271 NearestOn4Tuple: 4
6test 272 NearestOn5Tuple: NearestOn5Tuple
6test 273 NearestOn5Tuple: 5-Tuple C{(lat, lon, distance, angle, height)}
6test 274 NearestOn5Tuple: 5
6test 275 NearestOn6Tuple: NearestOn6Tuple
6test 276 NearestOn6Tuple: 6-Tuple C{(closest, distance, fi, j, start, end)}
6test 277 NearestOn6Tuple: 6
6test 278 NearestOn8Tuple: NearestOn8Tuple
6test 279 NearestOn8Tuple: 8-Tuple C{(closest, distance, fi, j, start, end, initial, final)}
6test 280 NearestOn8Tuple: 8
6test 281 PhiLam2Tuple: PhiLam2Tuple
6test 282 PhiLam2Tuple: 2-Tuple C{(phi, lam)}
6test 283 PhiLam2Tuple: 2
6test 284 PhiLam3Tuple: PhiLam3Tuple
6test 285 PhiLam3Tuple: 3-Tuple C{(phi, lam, height)}
6test 286 PhiLam3Tuple: 3
6test 287 PhiLam4Tuple: PhiLam4Tuple
6test 288 PhiLam4Tuple: 4-Tuple C{(phi, lam, height, datum)}
6test 289 PhiLam4Tuple: 4
6test 290 Point3Tuple: Point3Tuple
6test 291 Point3Tuple: 3-Tuple C{(x, y, ll)}
6test 292 Point3Tuple: 3
6test 293 Points2Tuple: Points2Tuple
6test 294 Points2Tuple: 2-Tuple C{(number, points)}
6test 295 Points2Tuple: 2
6test 296 Reverse4Tuple: Reverse4Tuple
6test 297 Reverse4Tuple: 4-Tuple C{(lat, lon, gamma, scale)}
6test 298 Reverse4Tuple: 4
6test 299 Triangle7Tuple: Triangle7Tuple
6test 300 Triangle7Tuple: 7-Tuple C{(A, a, B, b, C, c, area)}
6test 301 Triangle7Tuple: 7
6test 302 Triangle8Tuple: Triangle8Tuple
6test 303 Triangle8Tuple: 8-Tuple C{(A, a, B, b, C, c, D, E)}
6test 304 Triangle8Tuple: 8
6test 305 Trilaterate5Tuple: Trilaterate5Tuple
6test 306 Trilaterate5Tuple: 5-Tuple C{(min, minPoint, max, maxPoint, n)}
6test 307 Trilaterate5Tuple: 5
6test 308 UtmUps2Tuple: UtmUps2Tuple
6test 309 UtmUps2Tuple: 2-Tuple C{(zone, hemipole)}
6test 310 UtmUps2Tuple: 2
6test 311 UtmUps5Tuple: UtmUps5Tuple
6test 312 UtmUps5Tuple: 5-Tuple C{(zone, hemipole, easting, northing, band)}
6test 313 UtmUps5Tuple: 5
6test 314 UtmUps8Tuple: UtmUps8Tuple
6test 315 UtmUps8Tuple: 8-Tuple C{(zone, hemipole, easting, northing, band, datum, gamma, scale)}
6test 316 UtmUps8Tuple: 8
6test 317 UtmUpsLatLon5Tuple: UtmUpsLatLon5Tuple
6test 318 UtmUpsLatLon5Tuple: 5-Tuple C{(zone, band, hemipole, lat, lon)}
6test 319 UtmUpsLatLon5Tuple: 5
6test 320 Vector2Tuple: Vector2Tuple
6test 321 Vector2Tuple: 2-Tuple C{(x, y)}
6test 322 Vector2Tuple: 2
6test 323 Vector3Tuple: Vector3Tuple
6test 324 Vector3Tuple: 3-Tuple C{(x, y, z)}
6test 325 Vector3Tuple: 3
6test 326 Vector4Tuple: Vector4Tuple
6test 327 Vector4Tuple: 4-Tuple C{(x, y, z, h)}
6test 328 Vector4Tuple: 4
6test 329 Shape2Tuple: Shape2Tuple
6test 330 Shape2Tuple: 2-Tuple C{(nrows, ncols)}
6test 331 Shape2Tuple: 2
6test 332 Collins5Tuple: Collins5Tuple
6test 333 Collins5Tuple: 5-Tuple C{(pointP, pointH, a, b, c)}
6test 334 Collins5Tuple: 5
6test 335 Survey3Tuple: Survey3Tuple
6test 336 Survey3Tuple: 3-Tuple C{(PA, PB, PC)}
6test 337 Survey3Tuple: 3
6test 338 Tienstra7Tuple: Tienstra7Tuple
6test 339 Tienstra7Tuple: 7-Tuple C{(pointP, A, B, C, a, b, c)}
6test 340 Tienstra7Tuple: 7
6test 341 TriAngle4Tuple: TriAngle4Tuple
6test 342 TriAngle4Tuple: 4-Tuple C{(radA, radB, radC, rIn)}
6test 343 TriAngle4Tuple: 4
6test 344 TriSide2Tuple: TriSide2Tuple
6test 345 TriSide2Tuple: 2-Tuple C{(a, radA)}
6test 346 TriSide2Tuple: 2
6test 347 TriSide4Tuple: TriSide4Tuple
6test 348 TriSide4Tuple: 4-Tuple C{(a, b, radC, d)}
6test 349 TriSide4Tuple: 4
6test 350 RhumbSolve7Tuple: RhumbSolve7Tuple
6test 351 RhumbSolve7Tuple: 7-Tuple C{(lat1, lon1, lat2, lon2, azi12, s12, S12)}
6test 352 RhumbSolve7Tuple: 7
6test 353 Rhumb8Tuple: Rhumb8Tuple
6test 354 Rhumb8Tuple: 8-Tuple C{(lat1, lon1, lat2, lon2, azi12, s12, S12, a12)}
6test 355 Rhumb8Tuple: 8
6test 356 RhumbOrder2Tuple: RhumbOrder2Tuple
6test 357 RhumbOrder2Tuple: 2-Tuple C{(RAorder, TMorder)}
6test 358 RhumbOrder2Tuple: 2
6test 359 Helmert7Tuple: Helmert7Tuple
6test 360 Helmert7Tuple: 7-Tuple C{(tx, ty, tz, s, sx, sy, sz)}
6test 361 Helmert7Tuple: 7
6test 362 Helmert7Tuple: Helmert7Tuple
6test 363 Helmert7Tuple: 7-Tuple C{(tx, ty, tz, s, sx, sy, sz)}
6test 364 Helmert7Tuple: 7
6test 365 BetaOmega2Tuple: BetaOmega2Tuple
6test 366 BetaOmega2Tuple: 2-Tuple C{(beta, omega)}
6test 367 BetaOmega2Tuple: 2
6test 368 BetaOmega3Tuple: BetaOmega3Tuple
6test 369 BetaOmega3Tuple: 3-Tuple C{(beta, omega, height)}
6test 370 BetaOmega3Tuple: 3
6test 371 Jacobi2Tuple: Jacobi2Tuple
6test 372 Jacobi2Tuple: 2-Tuple C{(x, y)}
6test 373 Jacobi2Tuple: 2
6test 374 Circin6Tuple: Circin6Tuple
6test 375 Circin6Tuple: 6-Tuple C{(radius, center, deltas, cA, cB, cC)}
6test 376 Circin6Tuple: 6
6test 377 Circum3Tuple: Circum3Tuple
6test 378 Circum3Tuple: 3-Tuple C{(radius, center, deltas)}
6test 379 Circum3Tuple: 3
6test 380 Circum4Tuple: Circum4Tuple
6test 381 Circum4Tuple: 4-Tuple C{(radius, center, rank, residuals)}
6test 382 Circum4Tuple: 4
6test 383 Meeus2Tuple: Meeus2Tuple
6test 384 Meeus2Tuple: 2-Tuple C{(radius, Type)}
6test 385 Meeus2Tuple: 2
6test 386 Radii11Tuple: Radii11Tuple
6test 387 Radii11Tuple: 11-Tuple C{(rA, rB, rC, cR, rIn, riS, roS, a, b, c, s)}
6test 388 Radii11Tuple: 11
6test 389 Soddy4Tuple: Soddy4Tuple
6test 390 Soddy4Tuple: 4-Tuple C{(radius, center, deltas, outer)}
6test 391 Soddy4Tuple: 4
6test 392 EasNorRadius3Tuple: EasNorRadius3Tuple
6test 393 EasNorRadius3Tuple: 3-Tuple C{(easting, northing, radius)}
6test 394 EasNorRadius3Tuple: 3
6testing albers.py (pygeodesy.named, 23.02.06)
6test 395 albers.py:350: L{Albers7Tuple}C{(x, y, lat, lon, gamma, scale, datum)}
6test 396 albers.py:472: L{Albers7Tuple}C{(x, y, lat, lon, gamma, scale, datum)}
6testing azimuthal.py (pygeodesy.named, 23.02.06)
6test 397 azimuthal.py:175: L{LatLon2Tuple}C{(lat, lon)}
6test 398 azimuthal.py:351: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 399 azimuthal.py:385: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 400 azimuthal.py:477: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 401 azimuthal.py:504: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 402 azimuthal.py:649: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 403 azimuthal.py:675: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 404 azimuthal.py:745: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 405 azimuthal.py:786: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 406 azimuthal.py:950: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 407 azimuthal.py:977: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 408 azimuthal.py:1007: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 409 azimuthal.py:1031: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 410 azimuthal.py:1063: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6test 411 azimuthal.py:1104: L{Azimuthal7Tuple}C{(x, y, lat, lon, azimuth, scale, datum)}
6testing basics.py (pygeodesy.named, 23.02.06)
6testing booleans.py (pygeodesy.named, 23.02.06)
6testing cartesianBase.py (pygeodesy.named, 23.02.06)
6test 412 cartesianBase.py:127: L{Collins5Tuple}C{(pointP, pointH, a, b, c)}
6test 413 cartesianBase.py:176: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 414 cartesianBase.py:272: L{Vector4Tuple}C{(x, y, z, h)}
6test 415 cartesianBase.py:310: L{LatLon2Tuple}C{(lat, lon)}
6test 416 cartesianBase.py:316: L{LatLon3Tuple}C{(lat, lon, height)}
6test 417 cartesianBase.py:322: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 418 cartesianBase.py:388: L{PhiLam2Tuple}C{(phi, lam)}
6test 419 cartesianBase.py:394: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 420 cartesianBase.py:400: L{PhiLam4Tuple}C{(phi, lam, height, datum)}
6test 421 cartesianBase.py:460: L{Tienstra7Tuple}C{(pointP, A, B, C, a, b, c)}
6test 422 cartesianBase.py:484: L{PhiLam2Tuple}C{(phi, lam)}
6test 423 cartesianBase.py:492: L{LatLon2Tuple}C{(lat, lon)}
6test 424 cartesianBase.py:500: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 425 cartesianBase.py:555: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 426 cartesianBase.py:575: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 427 cartesianBase.py:605: L{Local9Tuple}C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 428 cartesianBase.py:633: L{Vector4Tuple}C{(x, y, z, h)}
6test 429 cartesianBase.py:694: L{Vector3Tuple}C{(x, y, z)}
6testing clipy.py (pygeodesy.named, 23.02.06)
6test 430 clipy.py:197: L{ClipCS4Tuple}C{(start, end, i, j)}
6test 431 clipy.py:277: L{ClipFHP4Tuple}C{(lat, lon, height, clipid)}
6test 432 clipy.py:322: L{ClipGH4Tuple}C{(lat, lon, height, clipid)}
6test 433 clipy.py:388: L{ClipLB6Tuple}C{(start, end, i, fi, fj, j)}
6test 434 clipy.py:666: L{ClipSH3Tuple}C{(start, end, original)}
6testing constants.py (pygeodesy.named, 23.02.06)
6testing css.py (pygeodesy.named, 23.02.06)
6test 435 css.py:142: L{EasNor2Tuple}C{(easting, northing)}
6test 436 css.py:160: L{EasNorAziRk4Tuple}C{(easting, northing, azimuth, reciprocal)}
6test 437 css.py:180: L{EasNorAziRkEqu6Tuple}C{(easting, northing, azimuth, reciprocal, equatorarc, equatorazimuth)}
6test 438 css.py:266: L{LatLon2Tuple}C{(lat, lon)}
6test 439 css.py:332: L{LatLon2Tuple}C{(lat, lon)}
6test 440 css.py:359: L{LatLonAziRk4Tuple}C{(lat, lon, azimuth, reciprocal)}
6test 441 css.py:528: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 442 css.py:623: L{EasNor3Tuple}C{(easting, northing, height)}
6testing datums.py (pygeodesy.named, 23.02.06)
6test 443 datums.py:230: L{Vector3Tuple}C{(x, y, z)}
6testing dms.py (pygeodesy.named, 23.02.06)
6test 444 dms.py:777: L{LatLon2Tuple}C{(lat, lon)}
6test 445 dms.py:814: L{LatLon3Tuple}C{(lat, lon, height)}
6testing ecef.py (pygeodesy.named, 23.02.06)
6test 446 ecef.py:258: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 447 ecef.py:284: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 448 ecef.py:355: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 449 ecef.py:425: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 450 ecef.py:493: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 451 ecef.py:635: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 452 ecef.py:734: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 453 ecef.py:813: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 454 ecef.py:1079: L{LatLon2Tuple}C{(lat, lon)}
6test 455 ecef.py:1085: L{LatLon3Tuple}C{(lat, lon, height)}
6test 456 ecef.py:1091: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 457 ecef.py:1097: L{LatLon2Tuple}C{(lat, lon)}
6test 458 ecef.py:1128: L{PhiLam2Tuple}C{(phi, lam)}
6test 459 ecef.py:1134: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 460 ecef.py:1140: L{PhiLam4Tuple}C{(phi, lam, height, datum)}
6test 461 ecef.py:1146: L{PhiLam2Tuple}C{(phi, lam)}
6test 462 ecef.py:1164: L{Vector4Tuple}C{(x, y, z, h)}
6test 463 ecef.py:1204: L{LatLon3Tuple}C{(lat, lon, height)}
6test 464 ecef.py:1205: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 465 ecef.py:1233: L{Local9Tuple}C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 466 ecef.py:1249: L{Vector3Tuple}C{(x, y, z)}
6test 467 ecef.py:1258: L{Vector3Tuple}C{(x, y, z)}
6test 468 ecef.py:1264: L{Vector4Tuple}C{(x, y, z, h)}
6testing elevations.py (pygeodesy.named, 23.02.06)
6test 469 elevations.py:145: L{Elevation2Tuple}C{(elevation, data_source)}
6test 470 elevations.py:201: L{GeoidHeight2Tuple}C{(height, model_name)}
6testing ellipsoidalBase.py (pygeodesy.named, 23.02.06)
6test 471 ellipsoidalBase.py:286: L{Distance2Tuple}C{(distance, initial)}
6test 472 ellipsoidalBase.py:318: L{Elevation2Tuple}C{(elevation, data_source)}
6test 473 ellipsoidalBase.py:428: L{GeoidHeight2Tuple}C{(height, model_name)}
6test 474 ellipsoidalBase.py:472: L{Intersection3Tuple}C{(point, outside1, outside2)}
6test 475 ellipsoidalBase.py:960: L{Vector3Tuple}C{(x, y, z)}
6test 476 ellipsoidalBase.py:987: L{Trilaterate5Tuple}C{(min, minPoint, max, maxPoint, n)}
6testing ellipsoidalBaseDI.py (pygeodesy.named, 23.02.06)
6test 477 ellipsoidalBaseDI.py:56: L{Bearing2Tuple}C{(initial, final)}
6test 478 ellipsoidalBaseDI.py:102: L{Destination2Tuple}C{(destination, final)}
6test 479 ellipsoidalBaseDI.py:110: L{Destination2Tuple}C{(destination, final)}
6test 480 ellipsoidalBaseDI.py:111: L{Destination3Tuple}C{(lat, lon, final)}
6test 481 ellipsoidalBaseDI.py:160: L{Distance3Tuple}C{(distance, initial, final)}
6test 482 ellipsoidalBaseDI.py:262: L{Distance3Tuple}C{(distance, initial, final)}
6test 483 ellipsoidalBaseDI.py:286: L{NearestOn8Tuple}C{(closest, distance, fi, j, start, end, initial, final)}
6testing ellipsoidalExact.py (pygeodesy.named, 23.02.06)
6test 484 ellipsoidalExact.py:40: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 485 ellipsoidalExact.py:80: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 486 ellipsoidalExact.py:144: L{Intersection3Tuple}C{(point, outside1, outside2)}
6test 487 ellipsoidalExact.py:145: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 488 ellipsoidalExact.py:195: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 489 ellipsoidalExact.py:270: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6testing ellipsoidalGeodSolve.py (pygeodesy.named, 23.02.06)
6test 490 ellipsoidalGeodSolve.py:41: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 491 ellipsoidalGeodSolve.py:80: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 492 ellipsoidalGeodSolve.py:140: L{Intersection3Tuple}C{(point, outside1, outside2)}
6test 493 ellipsoidalGeodSolve.py:141: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 494 ellipsoidalGeodSolve.py:191: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 495 ellipsoidalGeodSolve.py:266: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6testing ellipsoidalKarney.py (pygeodesy.named, 23.02.06)
6test 496 ellipsoidalKarney.py:60: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 497 ellipsoidalKarney.py:111: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 498 ellipsoidalKarney.py:182: L{Intersection3Tuple}C{(point, outside1, outside2)}
6test 499 ellipsoidalKarney.py:183: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 500 ellipsoidalKarney.py:233: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 501 ellipsoidalKarney.py:315: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6testing ellipsoidalNvector.py (pygeodesy.named, 23.02.06)
6test 502 ellipsoidalNvector.py:98: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 503 ellipsoidalNvector.py:115: L{Vector4Tuple}C{(x, y, z, h)}
6test 504 ellipsoidalNvector.py:455: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 505 ellipsoidalNvector.py:472: L{Vector4Tuple}C{(x, y, z, h)}
6test 506 ellipsoidalNvector.py:546: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 507 ellipsoidalNvector.py:570: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 508 ellipsoidalNvector.py:611: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 509 ellipsoidalNvector.py:651: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 510 ellipsoidalNvector.py:707: L{Ned3Tuple}C{(north, east, down)}  FAILED, KNOWN, expected signature
6testing ellipsoidalVincenty.py (pygeodesy.named, 23.02.06)
6test 511 ellipsoidalVincenty.py:108: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 512 ellipsoidalVincenty.py:194: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 513 ellipsoidalVincenty.py:437: L{Intersection3Tuple}C{(point, outside1, outside2)}
6test 514 ellipsoidalVincenty.py:438: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 515 ellipsoidalVincenty.py:488: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 516 ellipsoidalVincenty.py:537: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6testing ellipsoids.py (pygeodesy.named, 23.02.06)
6test 517 ellipsoids.py:138: L{a_f2Tuple}C{(a, f)}
6test 518 ellipsoids.py:654: L{Circle4Tuple}C{(radius, height, lat, beta)}
6test 519 ellipsoids.py:716: L{Distance2Tuple}C{(distance, initial)}
6test 520 ellipsoids.py:1035: L{Vector4Tuple}C{(x, y, z, h)}
6test 521 ellipsoids.py:1484: L{Curvature2Tuple}C{(meridional, prime_vertical)}
6test 522 ellipsoids.py:1503: L{Curvature2Tuple}C{(meridional, prime_vertical)}
6test 523 ellipsoids.py:1560: L{Curvature2Tuple}C{(meridional, prime_vertical)}
6testing elliptic.py (pygeodesy.named, 23.02.06)
6test 524 elliptic.py:753: L{Elliptic3Tuple}C{(sn, cn, dn)}
6testing epsg.py (pygeodesy.named, 23.02.06)
6test 525 epsg.py:147: L{UtmUps2Tuple}C{(zone, hemipole)}
6testing errors.py (pygeodesy.named, 23.02.06)
6testing etm.py (pygeodesy.named, 23.02.06)
6test 526 etm.py:197: L{LatLonDatum5Tuple}C{(lat, lon, datum, gamma, scale)}
6test 527 etm.py:461: L{Forward4Tuple}C{(easting, northing, gamma, scale)}
6test 528 etm.py:681: L{Reverse4Tuple}C{(lat, lon, gamma, scale)}
6test 529 etm.py:1033: L{UtmUps5Tuple}C{(zone, hemipole, easting, northing, band)}
6test 530 etm.py:1073: L{UtmUps8Tuple}C{(zone, hemipole, easting, northing, band, datum, gamma, scale)}
6testing fmath.py (pygeodesy.named, 23.02.06)
6testing formy.py (pygeodesy.named, 23.02.06)
6test 531 formy.py:62: L{LatLon2Tuple}C{(lat, lon)}
6test 532 formy.py:78: L{PhiLam2Tuple}C{(phi, lam)}
6test 533 formy.py:460: L{Distance4Tuple}C{(distance2, delta_lat, delta_lon, unroll_lon2)}
6test 534 formy.py:1114: L{LatLon2Tuple}C{(lat, lon)}
6test 535 formy.py:1244: L{Vector3Tuple}C{(x, y, z)}
6test 536 formy.py:1273: L{LatLon2Tuple}C{(lat, lon)}
6test 537 formy.py:1288: L{PhiLam2Tuple}C{(phi, lam)}
6test 538 formy.py:1312: L{LatLon2Tuple}C{(lat, lon)}
6test 539 formy.py:1327: L{PhiLam2Tuple}C{(phi, lam)}
6test 540 formy.py:1382: L{Vector3Tuple}C{(x, y, z)}
6test 541 formy.py:1411: L{Radical2Tuple}C{(ratio, xline)}
6testing frechet.py (pygeodesy.named, 23.02.06)
6test 542 frechet.py:203: L{Frechet6Tuple}C{(fd, fi1, fi2, r, n, units)}
6test 543 frechet.py:333: L{PhiLam2Tuple}C{(phi, lam)}
6test 544 frechet.py:978: L{Frechet6Tuple}C{(fd, fi1, fi2, r, n, units)}
6testing fstats.py (pygeodesy.named, 23.02.06)
6testing fsums.py (pygeodesy.named, 23.02.06)
6test 545 fsums.py:1009: L{Fsum2Tuple}C{(fsum, residual)}
6test 546 fsums.py:1264: L{Fsum2Tuple}C{(fsum, residual)}
6testing gars.py (pygeodesy.named, 23.02.06)
6test 547 gars.py:211: L{LatLonPrec3Tuple}C{(lat, lon, precision)}
6testing geodsolve.py (pygeodesy.named, 23.02.06)
6test 548 geodsolve.py:145: L{Destination3Tuple}C{(lat, lon, final)}
6test 549 geodsolve.py:155: L{Distance3Tuple}C{(distance, initial, final)}
6testing geohash.py (pygeodesy.named, 23.02.06)
6test 550 geohash.py:373: L{Neighbors8Dict}C{(N, NE, E, SE, S, SW, W, NW)}
6test 551 geohash.py:807: L{Neighbors8Dict}C{(N, NE, E, SE, S, SW, W, NW)}
6test 552 geohash.py:240: L{Bounds2Tuple}C{(latlonSW, latlonNE)}
6test 553 geohash.py:241: L{Bounds4Tuple}C{(latS, lonW, latN, lonE)}
6test 554 geohash.py:366: L{LatLon2Tuple}C{(lat, lon)}
6test 555 geohash.py:383: L{PhiLam2Tuple}C{(phi, lam)}
6test 556 geohash.py:396: L{LatLon2Tuple}C{(lat, lon)}
6test 557 geohash.py:412: L{LatLon2Tuple}C{(lat, lon)}
6test 558 geohash.py:524: L{Bounds2Tuple}C{(latlonSW, latlonNE)}
6test 559 geohash.py:525: L{Bounds4Tuple}C{(latS, lonW, latN, lonE)}
6test 560 geohash.py:614: L{LatLon2Tuple}C{(lat, lon)}
6test 561 geohash.py:633: L{LatLon2Tuple}C{(lat, lon)}
6test 562 geohash.py:865: L{Resolutions2Tuple}C{(res1, res2)}
6test 563 geohash.py:893: L{LatLon2Tuple}C{(lat, lon)}
6testing geoids.py (pygeodesy.named, 23.02.06)
6test 564 geoids.py:299: L{LatLon3Tuple}C{(lat, lon, height)}
6test 565 geoids.py:410: L{LatLon3Tuple}C{(lat, lon, height)}
6test 566 geoids.py:477: L{LatLon3Tuple}C{(lat, lon, height)}
6test 567 geoids.py:496: L{LatLon3Tuple}C{(lat, lon, height)}
6test 568 geoids.py:518: L{LatLon3Tuple}C{(lat, lon, height)}
6test 569 geoids.py:665: L{LatLon3Tuple}C{(lat, lon, height)}
6test 570 geoids.py:684: L{LatLon3Tuple}C{(lat, lon, height)}
6test 571 geoids.py:1116: L{LatLon3Tuple}C{(lat, lon, height)}
6test 572 geoids.py:1170: L{LatLon3Tuple}C{(lat, lon, height)}
6test 573 geoids.py:1643: L{GeoidHeight5Tuple}C{(lat, lon, egm84, egm96, egm2008)}
6testing hausdorff.py (pygeodesy.named, 23.02.06)
6test 574 hausdorff.py:173: L{Hausdorff6Tuple}C{(hd, i, j, mn, md, units)}
6test 575 hausdorff.py:230: L{Hausdorff6Tuple}C{(hd, i, j, mn, md, units)}
6test 576 hausdorff.py:289: L{PhiLam2Tuple}C{(phi, lam)}
6test 577 hausdorff.py:995: L{Hausdorff6Tuple}C{(hd, i, j, mn, md, units)}
6testing heights.py (pygeodesy.named, 23.02.06)
6testing interns.py (pygeodesy.named, 23.02.06)
6testing iters.py (pygeodesy.named, 23.02.06)
6test 578 iters.py:349: L{Point3Tuple}C{(x, y, ll)}
6test 579 iters.py:474: L{Points2Tuple}C{(number, points)}
6testing karney.py (pygeodesy.named, 23.02.06)
6test 580 karney.py:364: L{Direct9Tuple}C{(a12, lat2, lon2, azi2, s12, m12, M12, M21, S12)}
6test 581 karney.py:376: L{GeodSolve12Tuple}C{(lat1, lon1, azi1, lat2, lon2, azi2, s12, a12, m12, M12, M21, S12)}
6test 582 karney.py:387: L{Inverse10Tuple}C{(a12, s12, salp1, calp1, salp2, calp2, m12, M12, M21, S12)}
6test 583 karney.py:405: L{Rhumb8Tuple}C{(lat1, lon1, lat2, lon2, azi12, s12, S12, a12)}
6test 584 karney.py:415: L{RhumbSolve7Tuple}C{(lat1, lon1, lat2, lon2, azi12, s12, S12)}
6test 585 karney.py:522: L{Destination3Tuple}C{(lat, lon, final)}
6test 586 karney.py:581: L{Distance3Tuple}C{(distance, initial, final)}
6testing ktm.py (pygeodesy.named, 23.02.06)
6test 587 ktm.py:203: L{Forward4Tuple}C{(easting, northing, gamma, scale)}
6test 588 ktm.py:319: L{Reverse4Tuple}C{(lat, lon, gamma, scale)}
6testing latlonBase.py (pygeodesy.named, 23.02.06)
6test 589 latlonBase.py:126: L{Bounds2Tuple}C{(latlonSW, latlonNE)}
6test 590 latlonBase.py:172: L{Circin6Tuple}C{(radius, center, deltas, cA, cB, cC)}
6test 591 latlonBase.py:189: L{LatLon3Tuple}C{(lat, lon, height)}
6test 592 latlonBase.py:215: L{Circum3Tuple}C{(radius, center, deltas)}
6test 593 latlonBase.py:218: L{LatLon3Tuple}C{(lat, lon, height)}
6test 594 latlonBase.py:235: L{LatLon3Tuple}C{(lat, lon, height)}
6test 595 latlonBase.py:254: L{Circum4Tuple}C{(radius, center, rank, residuals)}
6test 596 latlonBase.py:403: L{LatLon3Tuple}C{(lat, lon, height)}
6test 597 latlonBase.py:404: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 598 latlonBase.py:666: L{Vector4Tuple}C{(x, y, z, h)}
6test 599 latlonBase.py:803: L{LatLon2Tuple}C{(lat, lon)}
6test 600 latlonBase.py:842: L{LatLon2Tuple}C{(lat, lon)}
6test 601 latlonBase.py:860: L{LatLon3Tuple}C{(lat, lon, height)}
6test 602 latlonBase.py:902: L{NearestOn6Tuple}C{(closest, distance, fi, j, start, end)}
6test 603 latlonBase.py:967: L{PhiLam2Tuple}C{(phi, lam)}
6test 604 latlonBase.py:976: L{PhiLam2Tuple}C{(phi, lam)}
6test 605 latlonBase.py:987: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 606 latlonBase.py:1004: L{Points2Tuple}C{(number, points)}
6test 607 latlonBase.py:1033: L{Radii11Tuple}C{(rA, rB, rC, cR, rIn, riS, roS, a, b, c, s)}
6test 608 latlonBase.py:1239: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 609 latlonBase.py:1281: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 610 latlonBase.py:1306: L{Local9Tuple}C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 611 latlonBase.py:1335: L{Vector4Tuple}C{(x, y, z, h)}
6test 612 latlonBase.py:1388: L{Vector3Tuple}C{(x, y, z)}
6test 613 latlonBase.py:1454: L{Vector3Tuple}C{(x, y, z)}
6test 614 latlonBase.py:1463: L{Vector4Tuple}C{(x, y, z, h)}
6testing lazily.py (pygeodesy.named, 23.02.06)
6testing lcc.py (pygeodesy.named, 23.02.06)
6test 615 lcc.py:172: L{LatLon2Tuple}C{(lat, lon)}
6test 616 lcc.py:226: L{PhiLam2Tuple}C{(phi, lam)}
6test 617 lcc.py:492: L{LatLon3Tuple}C{(lat, lon, height)}
6test 618 lcc.py:498: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 619 lcc.py:517: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 620 lcc.py:523: L{PhiLam4Tuple}C{(phi, lam, height, datum)}
6test 621 lcc.py:534: L{LatLonDatum3Tuple}C{(lat, lon, datum)}
6test 622 lcc.py:561: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 623 lcc.py:641: L{EasNor3Tuple}C{(easting, northing, height)}
6testing ltp.py (pygeodesy.named, 23.02.06)
6test 624 ltp.py:169: L{Vector3Tuple}C{(x, y, z)}
6test 625 ltp.py:287: L{Footprint5Tuple}C{(center, upperleft, upperight, loweright, lowerleft)}
6test 626 ltp.py:478: L{Local9Tuple}C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 627 ltp.py:509: L{Local9Tuple}C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 628 ltp.py:541: L{LatLon3Tuple}C{(lat, lon, height)}
6test 629 ltp.py:553: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 630 ltp.py:610: L{Local9Tuple}C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 631 ltp.py:733: L{ChLV9Tuple}C{(Y, X, h_, lat, lon, height, ltp, ecef, M)}
6test 632 ltp.py:755: L{ChLV9Tuple}C{(Y, X, h_, lat, lon, height, ltp, ecef, M)}
6test 633 ltp.py:870: L{ChLVEN2Tuple}C{(E_LV95, N_LV95)}
6test 634 ltp.py:871: L{ChLVyx2Tuple}C{(y_LV03, x_LV03)}
6test 635 ltp.py:872: L{ChLVYX2Tuple}C{(Y, X)}
6test 636 ltp.py:923: L{ChLVYX2Tuple}C{(Y, X)}
6test 637 ltp.py:1065: L{Vector3Tuple}C{(x, y, z)}
6testing ltpTuples.py (pygeodesy.named, 23.02.06)
6test 638 ltpTuples.py:119: L{Aer4Tuple}C{(azimuth, elevation, slantrange, ltp)}
6test 639 ltpTuples.py:131: L{Enu4Tuple}C{(east, north, up, ltp)}
6test 640 ltpTuples.py:143: L{Ned4Tuple}C{(north, east, down, ltp)}
6test 641 ltpTuples.py:156: L{Xyz4Tuple}C{(x, y, z, ltp)}
6test 642 ltpTuples.py:164: L{Vector3Tuple}C{(x, y, z)}
6test 643 ltpTuples.py:726: L{Aer4Tuple}C{(azimuth, elevation, slantrange, ltp)}
6test 644 ltpTuples.py:743: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 645 ltpTuples.py:766: L{Enu4Tuple}C{(east, north, up, ltp)}
6test 646 ltpTuples.py:781: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 647 ltpTuples.py:803: L{Local9Tuple}C{(x, y, z, lat, lon, height, ltp, ecef, M)}
6test 648 ltpTuples.py:820: L{Ned4Tuple}C{(north, east, down, ltp)}
6test 649 ltpTuples.py:861: L{Xyz4Tuple}C{(x, y, z, ltp)}
6test 650 ltpTuples.py:879: L{Vector3Tuple}C{(x, y, z)}
6test 651 ltpTuples.py:1029: L{LatLon2Tuple}C{(lat, lon)}
6test 652 ltpTuples.py:1035: L{LatLon3Tuple}C{(lat, lon, height)}
6test 653 ltpTuples.py:1053: L{PhiLam2Tuple}C{(phi, lam)}
6test 654 ltpTuples.py:1059: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 655 ltpTuples.py:1077: L{Aer4Tuple}C{(azimuth, elevation, slantrange, ltp)}
6test 656 ltpTuples.py:1090: L{Vector4Tuple}C{(x, y, z, h)}
6test 657 ltpTuples.py:1105: L{Enu4Tuple}C{(east, north, up, ltp)}
6test 658 ltpTuples.py:1118: L{LatLon3Tuple}C{(lat, lon, height)}
6test 659 ltpTuples.py:1119: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 660 ltpTuples.py:1135: L{Ned4Tuple}C{(north, east, down, ltp)}
6test 661 ltpTuples.py:1147: L{Xyz4Tuple}C{(x, y, z, ltp)}
6test 662 ltpTuples.py:1159: L{Vector3Tuple}C{(x, y, z)}
6test 663 ltpTuples.py:1340: L{LatLon3Tuple}C{(lat, lon, height)}
6test 664 ltpTuples.py:1341: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6testing mgrs.py (pygeodesy.named, 23.02.06)
6test 665 mgrs.py:214: L{EasNor2Tuple}C{(easting, northing)}
6test 666 mgrs.py:301: L{LatLonDatum5Tuple}C{(lat, lon, datum, gamma, scale)}
6test 667 mgrs.py:372: L{UtmUps5Tuple}C{(zone, hemipole, easting, northing, band)}
6test 668 mgrs.py:390: L{UtmUps5Tuple}C{(zone, hemipole, easting, northing, band)}
6test 669 mgrs.py:410: L{UtmUps5Tuple}C{(zone, hemipole, easting, northing, band)}
6test 670 mgrs.py:484: L{Mgrs6Tuple}C{(zone, EN, easting, northing, band, datum)}
6test 671 mgrs.py:568: L{Mgrs4Tuple}C{(zone, EN, easting, northing)}
6test 672 mgrs.py:637: L{Mgrs6Tuple}C{(zone, EN, easting, northing, band, datum)}
6testing named.py (pygeodesy.named, 23.02.06)
6testing namedTuples.py (pygeodesy.named, 23.02.06)
6test 673 namedTuples.py:207: L{LatLon3Tuple}C{(lat, lon, height)}
6test 674 namedTuples.py:219: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 675 namedTuples.py:240: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 676 namedTuples.py:305: L{LatLonPrec5Tuple}C{(lat, lon, precision, height, radius)}
6test 677 namedTuples.py:336: L{LatLon3Tuple}C{(lat, lon, height)}
6test 678 namedTuples.py:408: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 679 namedTuples.py:420: L{PhiLam4Tuple}C{(phi, lam, height, datum)}
6test 680 namedTuples.py:446: L{PhiLam4Tuple}C{(phi, lam, height, datum)}
6test 681 namedTuples.py:610: L{Vector3Tuple}C{(x, y, z)}
6test 682 namedTuples.py:629: L{Vector4Tuple}C{(x, y, z, h)}
6test 683 namedTuples.py:652: L{Vector3Tuple}C{(x, y, z)}
6testing nvectorBase.py (pygeodesy.named, 23.02.06)
6test 684 nvectorBase.py:162: L{LatLon2Tuple}C{(lat, lon)}
6test 685 nvectorBase.py:168: L{LatLon3Tuple}C{(lat, lon, height)}
6test 686 nvectorBase.py:174: L{LatLon4Tuple}C{(lat, lon, height, datum)}
6test 687 nvectorBase.py:192: L{PhiLam2Tuple}C{(phi, lam)}
6test 688 nvectorBase.py:198: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 689 nvectorBase.py:204: L{PhiLam4Tuple}C{(phi, lam, height, datum)}
6test 690 nvectorBase.py:212: L{PhiLam2Tuple}C{(phi, lam)}
6test 691 nvectorBase.py:223: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 692 nvectorBase.py:241: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 693 nvectorBase.py:280: L{LatLon2Tuple}C{(lat, lon)}
6test 694 nvectorBase.py:291: L{LatLon3Tuple}C{(lat, lon, height)}
6test 695 nvectorBase.py:310: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 696 nvectorBase.py:385: L{Vector4Tuple}C{(x, y, z, h)}
6test 697 nvectorBase.py:462: L{Vector4Tuple}C{(x, y, z, h)}
6test 698 nvectorBase.py:537: L{Trilaterate5Tuple}C{(min, minPoint, max, maxPoint, n)}
6test 699 nvectorBase.py:579: L{Vector4Tuple}C{(x, y, z, h)}
6testing osgr.py (pygeodesy.named, 23.02.06)
6test 700 osgr.py:304: L{LatLonDatum3Tuple}C{(lat, lon, datum)}
6test 701 osgr.py:541: L{EasNor2Tuple}C{(easting, northing)}
6test 702 osgr.py:630: L{EasNor2Tuple}C{(easting, northing)}
6testing points.py (pygeodesy.named, 23.02.06)
6test 703 points.py:243: L{LatLon2Tuple}C{(lat, lon)}
6test 704 points.py:249: L{LatLon3Tuple}C{(lat, lon, height)}
6test 705 points.py:279: L{PhiLam2Tuple}C{(phi, lam)}
6test 706 points.py:285: L{PhiLam3Tuple}C{(phi, lam, height)}
6test 707 points.py:304: L{Points2Tuple}C{(number, points)}
6test 708 points.py:343: L{Vector4Tuple}C{(x, y, z, h)}
6test 709 points.py:784: L{Shape2Tuple}C{(nrows, ncols)}
6test 710 points.py:985: L{Point3Tuple}C{(x, y, ll)}
6test 711 points.py:1213: L{Bounds2Tuple}C{(latlonSW, latlonNE)}
6test 712 points.py:1215: L{Bounds4Tuple}C{(latS, lonW, latN, lonE)}
6test 713 points.py:1255: L{LatLon2Tuple}C{(lat, lon)}
6test 714 points.py:1322: L{LatLon2Tuple}C{(lat, lon)}
6test 715 points.py:1696: L{NearestOn3Tuple}C{(closest, distance, angle)}
6test 716 points.py:1698: L{NearestOn5Tuple}C{(lat, lon, distance, angle, height)}
6testing props.py (pygeodesy.named, 23.02.06)
6testing resections.py (pygeodesy.named, 23.02.06)
6test 717 resections.py:211: L{Collins5Tuple}C{(pointP, pointH, a, b, c)}
6test 718 resections.py:377: L{Survey3Tuple}C{(PA, PB, PC)}
6test 719 resections.py:444: L{Tienstra7Tuple}C{(pointP, A, B, C, a, b, c)}
6test 720 resections.py:571: L{TriAngle4Tuple}C{(radA, radB, radC, rIn)}
6test 721 resections.py:672: L{TriSide2Tuple}C{(a, radA)}
6test 722 resections.py:719: L{TriSide4Tuple}C{(a, b, radC, d)}
6test 723 resections.py:761: L{Survey3Tuple}C{(PA, PB, PC)}
6testing rhumbsolve.py (pygeodesy.named, 23.02.06)
6test 724 rhumbsolve.py:127: L{Destination3Tuple}C{(lat, lon, final)}
6test 725 rhumbsolve.py:156: L{Distance3Tuple}C{(distance, initial, final)}
6testing rhumbx.py (pygeodesy.named, 23.02.06)
6test 726 rhumbx.py:348: L{Distance3Tuple}C{(distance, initial, final)}
6test 727 rhumbx.py:401: L{RhumbOrder2Tuple}C{(RAorder, TMorder)}
6test 728 rhumbx.py:540: L{Distance2Tuple}C{(distance, initial)}
6test 729 rhumbx.py:625: L{LatLon2Tuple}C{(lat, lon)}
6test 730 rhumbx.py:644: L{NearestOn4Tuple}C{(lat, lon, distance, normal)}
6test 731 rhumbx.py:850: L{Direct9Tuple}C{(a12, lat2, lon2, azi2, s12, m12, M12, M21, S12)}
6test 732 rhumbx.py:867: L{Inverse10Tuple}C{(a12, s12, salp1, calp1, salp2, calp2, m12, M12, M21, S12)}
6testing simplify.py (pygeodesy.named, 23.02.06)
6testing solveBase.py (pygeodesy.named, 23.02.06)
6testing sphericalBase.py (pygeodesy.named, 23.02.06)
6test 733 sphericalBase.py:170: L{Bearing2Tuple}C{(initial, final)}
6test 734 sphericalBase.py:547: L{Vector4Tuple}C{(x, y, z, h)}
6testing sphericalNvector.py (pygeodesy.named, 23.02.06)
6test 735 sphericalNvector.py:80: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 736 sphericalNvector.py:97: L{Vector4Tuple}C{(x, y, z, h)}
6test 737 sphericalNvector.py:663: L{NearestOn3Tuple}C{(closest, distance, angle)}
6test 738 sphericalNvector.py:699: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 739 sphericalNvector.py:716: L{Vector4Tuple}C{(x, y, z, h)}
6test 740 sphericalNvector.py:756: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 741 sphericalNvector.py:773: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 742 sphericalNvector.py:1048: L{NearestOn3Tuple}C{(closest, distance, angle)}
6testing sphericalTrigonometry.py (pygeodesy.named, 23.02.06)
6test 743 sphericalTrigonometry.py:79: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 744 sphericalTrigonometry.py:660: L{NearestOn3Tuple}C{(closest, distance, angle)}
6test 745 sphericalTrigonometry.py:698: L{Ecef9Tuple}C{(x, y, z, lat, lon, height, C, M, datum)}
6test 746 sphericalTrigonometry.py:730: L{Triangle7Tuple}C{(A, a, B, b, C, c, area)}
6test 747 sphericalTrigonometry.py:731: L{Triangle8Tuple}C{(A, a, B, b, C, c, D, E)}
6test 748 sphericalTrigonometry.py:765: L{Trilaterate5Tuple}C{(min, minPoint, max, maxPoint, n)}
6test 749 sphericalTrigonometry.py:1057: L{LatLon3Tuple}C{(lat, lon, height)}
6test 750 sphericalTrigonometry.py:1110: L{LatLon3Tuple}C{(lat, lon, height)}
6test 751 sphericalTrigonometry.py:1224: L{LatLon3Tuple}C{(lat, lon, height)}
6test 752 sphericalTrigonometry.py:1249: L{LatLon2Tuple}C{(lat, lon)}
6test 753 sphericalTrigonometry.py:1274: L{NearestOn3Tuple}C{(closest, distance, angle)}
6test 754 sphericalTrigonometry.py:1275: L{LatLon3Tuple}C{(lat, lon, height)}
6test 755 sphericalTrigonometry.py:1366: L{Triangle7Tuple}C{(A, a, B, b, C, c, area)}
6test 756 sphericalTrigonometry.py:1371: L{Triangle8Tuple}C{(A, a, B, b, C, c, D, E)}
6test 757 sphericalTrigonometry.py:1397: L{Triangle8Tuple}C{(A, a, B, b, C, c, D, E)}
6testing streprs.py (pygeodesy.named, 23.02.06)
6testing trf.py (pygeodesy.named, 23.02.06)
6testing triaxials.py (pygeodesy.named, 23.02.06)
6test 758 triaxials.py:99: L{BetaOmega2Tuple}C{(beta, omega)}
6test 759 triaxials.py:109: L{BetaOmega2Tuple}C{(beta, omega)}
6test 760 triaxials.py:128: L{BetaOmega3Tuple}C{(beta, omega, height)}
6test 761 triaxials.py:138: L{BetaOmega3Tuple}C{(beta, omega, height)}
6test 762 triaxials.py:159: L{Jacobi2Tuple}C{(x, y)}
6test 763 triaxials.py:168: L{Jacobi2Tuple}C{(x, y)}
6test 764 triaxials.py:374: L{Vector4Tuple}C{(x, y, z, h)}
6test 765 triaxials.py:678: L{Vector3Tuple}C{(x, y, z)}
6test 766 triaxials.py:708: L{Vector3Tuple}C{(x, y, z)}
6test 767 triaxials.py:747: L{Vector3Tuple}C{(x, y, z)}
6test 768 triaxials.py:765: L{Vector3Tuple}C{(x, y, z)}
6test 769 triaxials.py:829: L{BetaOmega3Tuple}C{(beta, omega, height)}
6test 770 triaxials.py:855: L{Vector3Tuple}C{(x, y, z)}
6test 771 triaxials.py:883: L{LatLon3Tuple}C{(lat, lon, height)}
6test 772 triaxials.py:972: L{Jacobi2Tuple}C{(x, y)}
6test 773 triaxials.py:985: L{Jacobi2Tuple}C{(x, y)}
6test 774 triaxials.py:999: L{Jacobi2Tuple}C{(x, y)}
6test 775 triaxials.py:1137: L{Vector4Tuple}C{(x, y, z, h)}
6testing units.py (pygeodesy.named, 23.02.06)
6testing unitsBase.py (pygeodesy.named, 23.02.06)
6testing ups.py (pygeodesy.named, 23.02.06)
6test 776 ups.py:158: L{EasNor2Tuple}C{(easting, northing)}
6test 777 ups.py:222: L{LatLonDatum5Tuple}C{(lat, lon, datum, gamma, scale)}
6test 778 ups.py:368: L{UtmUps5Tuple}C{(zone, hemipole, easting, northing, band)}
6test 779 ups.py:403: L{UtmUps8Tuple}C{(zone, hemipole, easting, northing, band, datum, gamma, scale)}
6test 780 ups.py:484: L{UtmUpsLatLon5Tuple}C{(zone, band, hemipole, lat, lon)}
6testing utily.py (pygeodesy.named, 23.02.06)
6test 781 utily.py:144: L{Circle4Tuple}C{(radius, height, lat, beta)}
6testing utm.py (pygeodesy.named, 23.02.06)
6test 782 utm.py:368: L{EasNor2Tuple}C{(easting, northing)}
6test 783 utm.py:424: L{LatLonDatum5Tuple}C{(lat, lon, datum, gamma, scale)}
6test 784 utm.py:625: L{UtmUps5Tuple}C{(zone, hemipole, easting, northing, band)}
6test 785 utm.py:665: L{UtmUps8Tuple}C{(zone, hemipole, easting, northing, band, datum, gamma, scale)}
6test 786 utm.py:759: L{UtmUpsLatLon5Tuple}C{(zone, band, hemipole, lat, lon)}
6testing utmups.py (pygeodesy.named, 23.02.06)
6test 787 utmups.py:89: L{UtmUps5Tuple}C{(zone, hemipole, easting, northing, band)}
6test 788 utmups.py:130: L{UtmUps8Tuple}C{(zone, hemipole, easting, northing, band, datum, gamma, scale)}
6test 789 utmups.py:280: L{UtmUpsLatLon5Tuple}C{(zone, band, hemipole, lat, lon)}
6testing utmupsBase.py (pygeodesy.named, 23.02.06)
6test 790 utmupsBase.py:239: L{EasNor2Tuple}C{(easting, northing)}
6test 791 utmupsBase.py:249: L{EasNor2Tuple}C{(easting, northing)}
6test 792 utmupsBase.py:360: L{EasNor2Tuple}C{(easting, northing)}
6testing vector2d.py (pygeodesy.named, 23.02.06)
6test 793 vector2d.py:133: L{Circin6Tuple}C{(radius, center, deltas, cA, cB, cC)}
6test 794 vector2d.py:197: L{Circum3Tuple}C{(radius, center, deltas)}
6test 795 vector2d.py:247: L{Circum4Tuple}C{(radius, center, rank, residuals)}
6test 796 vector2d.py:317: L{Meeus2Tuple}C{(radius, Type)}
6test 797 vector2d.py:479: L{Radii11Tuple}C{(rA, rB, rC, cR, rIn, riS, roS, a, b, c, s)}
6test 798 vector2d.py:556: L{Soddy4Tuple}C{(radius, center, deltas, outer)}
6testing vector3d.py (pygeodesy.named, 23.02.06)
6test 799 vector3d.py:74: L{Circin6Tuple}C{(radius, center, deltas, cA, cB, cC)}
6test 800 vector3d.py:108: L{Circum3Tuple}C{(radius, center, deltas)}
6test 801 vector3d.py:134: L{Circum4Tuple}C{(radius, center, rank, residuals)}
6test 802 vector3d.py:181: L{Meeus2Tuple}C{(radius, Type)}
6test 803 vector3d.py:227: L{NearestOn6Tuple}C{(closest, distance, fi, j, start, end)}
6test 804 vector3d.py:263: L{Radii11Tuple}C{(rA, rB, rC, cR, rIn, riS, roS, a, b, c, s)}
6test 805 vector3d.py:290: L{Soddy4Tuple}C{(radius, center, deltas, outer)}
6test 806 vector3d.py:505: L{Intersection3Tuple}C{(point, outside1, outside2)}
6test 807 vector3d.py:732: L{NearestOn6Tuple}C{(closest, distance, fi, j, start, end)}
6test 808 vector3d.py:804: L{Vector3Tuple}C{(x, y, z)}
6test 809 vector3d.py:828: L{Vector3Tuple}C{(x, y, z)}
6test 810 vector3d.py:863: L{Vector2Tuple}C{(x, y)}
6testing vector3dBase.py (pygeodesy.named, 23.02.06)
6test 811 vector3dBase.py:852: L{PhiLam2Tuple}C{(phi, lam)}
6test 812 vector3dBase.py:860: L{LatLon2Tuple}C{(lat, lon)}
6test 813 vector3dBase.py:926: L{Vector3Tuple}C{(x, y, z)}
6testing webmercator.py (pygeodesy.named, 23.02.06)
6test 814 webmercator.py:95: L{LatLon2Tuple}C{(lat, lon)}
6test 815 webmercator.py:106: L{LatLon2Tuple}C{(lat, lon)}
6test 816 webmercator.py:152: L{PhiLam2Tuple}C{(phi, lam)}
6test 817 webmercator.py:167: L{LatLon2Tuple}C{(lat, lon)}
6test 818 webmercator.py:279: L{EasNorRadius3Tuple}C{(easting, northing, radius)}
6test 819 webmercator.py:320: L{EasNorRadius3Tuple}C{(easting, northing, radius)}
6testing wgrs.py (pygeodesy.named, 23.02.06)
6test 820 wgrs.py:220: L{LatLon3Tuple}C{(lat, lon, height)}
6test 821 wgrs.py:240: L{LatLonPrec3Tuple}C{(lat, lon, precision)}
6test 822 wgrs.py:293: L{LatLonPrec5Tuple}C{(lat, lon, precision, height, radius)}
6testing xtend (pygeodesy.namedTuples, 22.10.11)
6test 823 LatLon2Tuple(lat=0, lon=1): (0, 1, 2)
6test 824 LatLon2Tuple(lat=0, lon=1): <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 825 LatLon2Tuple(lat=0, lon=1): (0, 1, 2, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 826 LatLon2Tuple(lat=0, lon=1): <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 827 LatLon3Tuple(lat=0, lon=1, height=2): (0, 1, 2, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 828 LatLon3Tuple(lat=0, lon=1, height=2): <class 'pygeodesy.namedTuples.LatLon4Tuple'>
6test 829 PhiLam2Tuple(phi=0, lam=1): (0, 1, 2)
6test 830 PhiLam2Tuple(phi=0, lam=1): <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 831 Vector3Tuple(x=0, y=1, z=2): (0, 1, 2, 4)
6test 832 Vector3Tuple(x=0, y=1, z=2): <class 'pygeodesy.namedTuples.Vector4Tuple'>
6testing bases (pygeodesy.named, 23.02.06)
6test 833 nd.dict: test(1=1, 2=2)
6test 834 nd.name: test
6test 835 nd.dict: test(1=1, 2=2)
6test 836 nd.name: test
6test 837 nd.kwds: test(one=1, two=2)
6test 838 nd.name: test
6test 839 nd.dict: test(1=1, 2=2)
6test 840 nd.name: test
6test 841 nd.list: test(1=1, 2=2)
6test 842 nd.name: test
6test 843 nd.updated: test(1=1, 2=2, name='kwds')
6test 844 nd.name: test
6testing coverage (pygeodesy.named, 23.02.06)
6test 845 nd.name: name
6test 846 nd.named: name
6test 847 nd.named: Neighbors8Dict
6test 848 nd.name: test
6test 849 nd.test: test
6test 850 nd.test: None
6test 851 nd.classnaming: False
6test 852 nd.classname: Neighbors8Dict
6test 853 nd.named2: Neighbors8Dict
6test 854 nd.classnaming: True
6test 855 nd.classname: geohash.Neighbors8Dict
6test 856 nd.named2: geohash.Neighbors8Dict 'test'
6test 857 classnaming: False
6test 858 classnaming: True
6testing unregister (pygeodesy.named, 23.02.06)
6test 859 Conics: 1
6test 860 Conics: 8
6test 861 Conics.Be08Lb.unregister: None
6test 862 Conics.Be72Lb.unregister: None
6test 863 Conics.Fr93Lb.unregister: None
6test 864 Conics.MaNLb.unregister: None
6test 865 Conics.MxLb.unregister: None
6test 866 Conics.PyT_Lb.unregister: None
6test 867 Conics.USA_Lb.unregister: None
6test 868 Conics.WRF_Lb.unregister: None
6test 869 Conics: 0
6test 870 Datums: 6
6test 871 Datums: 18
6test 872 Datums.unregister(BD72): None
6test 873 Datums.unregister(DHDN): None
6test 874 Datums.unregister(ED50): None
6test 875 Datums.unregister(GDA2020): None
6test 876 Datums.unregister(GRS80): None
6test 877 Datums.unregister(Irl1975): None
6test 878 Datums.unregister(Krassovski1940): None
6test 879 Datums.unregister(Krassowsky1940): None
6test 880 Datums.unregister(MGI): None
6test 881 Datums.unregister(NAD27): None
6test 882 Datums.unregister(NAD83): None
6test 883 Datums.unregister(NTF): None
6test 884 Datums.unregister(OSGB36): None
6test 885 Datums.unregister(Potsdam): None
6test 886 Datums.unregister(Sphere): None
6test 887 Datums.unregister(TokyoJapan): None
6test 888 Datums.unregister(WGS72): None
6test 889 Datums.unregister(WGS84): None
6test 890 Datums: 0
6test 891 RefFrames: 0
6test 892 RefFrames: 15
6test 893 RefFrames.ETRF2000.unregister: None
6test 894 RefFrames.GDA2020.unregister: None
6test 895 RefFrames.GDA94.unregister: None
6test 896 RefFrames.ITRF2000.unregister: None
6test 897 RefFrames.ITRF2005.unregister: None
6test 898 RefFrames.ITRF2008.unregister: None
6test 899 RefFrames.ITRF2014.unregister: None
6test 900 RefFrames.ITRF90.unregister: None
6test 901 RefFrames.ITRF91.unregister: None
6test 902 RefFrames.ITRF93.unregister: None
6test 903 RefFrames.NAD83.unregister: None
6test 904 RefFrames.WGS84.unregister: None
6test 905 RefFrames.WGS84g1150.unregister: None
6test 906 RefFrames.WGS84g1674.unregister: None
6test 907 RefFrames.WGS84g1762.unregister: None
6test 908 RefFrames: 0
6test 909 Ellipsoids: 12
6test 910 Ellipsoids: 48
6test 911 Ellipsoids.Airy1830.unregister: None
6test 912 Ellipsoids.AiryModified.unregister: None
6test 913 Ellipsoids.ATS1977.unregister: None
6test 914 Ellipsoids.Australia1966.unregister: None
6test 915 Ellipsoids.Bessel1841.unregister: None
6test 916 Ellipsoids.BesselModified.unregister: None
6test 917 Ellipsoids.CGCS2000.unregister: None
6test 918 Ellipsoids.Clarke1866.unregister: None
6test 919 Ellipsoids.Clarke1880.unregister: None
6test 920 Ellipsoids.Clarke1880IGN.unregister: None
6test 921 Ellipsoids.Clarke1880Mod.unregister: None
6test 922 Ellipsoids.CPM1799.unregister: None
6test 923 Ellipsoids.Delambre1810.unregister: None
6test 924 Ellipsoids.Engelis1985.unregister: None
6test 925 Ellipsoids.Everest1969.unregister: None
6test 926 Ellipsoids.Everest1975.unregister: None
6test 927 Ellipsoids.Fisher1968.unregister: None
6test 928 Ellipsoids.GEM10C.unregister: None
6test 929 Ellipsoids.GPES.unregister: None
6test 930 Ellipsoids.GRS67.unregister: None
6test 931 Ellipsoids.GRS80.unregister: None
6test 932 Ellipsoids.Helmert1906.unregister: None
6test 933 Ellipsoids.IAU76.unregister: None
6test 934 Ellipsoids.IERS1989.unregister: None
6test 935 Ellipsoids.IERS1992TOPEX.unregister: None
6test 936 Ellipsoids.IERS2003.unregister: None
6test 937 Ellipsoids.Intl1924.unregister: None
6test 938 Ellipsoids.Intl1967.unregister: None
6test 939 Ellipsoids.Krassovski1940.unregister: None
6test 940 Ellipsoids.Krassowsky1940.unregister: None
6test 941 Ellipsoids.Maupertuis1738.unregister: None
6test 942 Ellipsoids.Mercury1960.unregister: None
6test 943 Ellipsoids.Mercury1968Mod.unregister: None
6test 944 Ellipsoids.NWL1965.unregister: None
6test 945 Ellipsoids.OSU86F.unregister: None
6test 946 Ellipsoids.OSU91A.unregister: None
6test 947 Ellipsoids.Plessis1817.unregister: None
6test 948 Ellipsoids.PZ90.unregister: None
6test 949 Ellipsoids.SGS85.unregister: None
6test 950 Ellipsoids.SoAmerican1969.unregister: None
6test 951 Ellipsoids.Sphere.unregister: None
6test 952 Ellipsoids.SphereAuthalic.unregister: None
6test 953 Ellipsoids.SpherePopular.unregister: None
6test 954 Ellipsoids.Struve1860.unregister: None
6test 955 Ellipsoids.WGS60.unregister: None
6test 956 Ellipsoids.WGS66.unregister: None
6test 957 Ellipsoids.WGS72.unregister: None
6test 958 Ellipsoids.WGS84.unregister: None
6test 959 Ellipsoids: 0
6test 960 Transforms: 15
6test 961 Transforms: 18
6test 962 Transforms.BD72.unregister: None
6test 963 Transforms.Bessel1841.unregister: None
6test 964 Transforms.Clarke1866.unregister: None
6test 965 Transforms.DHDN.unregister: None
6test 966 Transforms.ED50.unregister: None
6test 967 Transforms.Identity.unregister: None
6test 968 Transforms.Irl1965.unregister: None
6test 969 Transforms.Irl1975.unregister: None
6test 970 Transforms.Krassovski1940.unregister: None
6test 971 Transforms.Krassowsky1940.unregister: None
6test 972 Transforms.MGI.unregister: None
6test 973 Transforms.NAD27.unregister: None
6test 974 Transforms.NAD83.unregister: None
6test 975 Transforms.NTF.unregister: None
6test 976 Transforms.OSGB36.unregister: None
6test 977 Transforms.TokyoJapan.unregister: None
6test 978 Transforms.WGS72.unregister: None
6test 979 Transforms.WGS84.unregister: None
6test 980 Transforms: 0
6test 981 nameof: KsOrder
66 of 981 testNamed.py tests (0.6%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 36.425 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testNamedTuples.py
6testing testNamedTuples.py 22.05.27
6test 1 pygeodesy.albers: Albers7Tuple(x=0.5, y=0.5, lat=0.5, lon=0.5, gamma=0.5, scale=0.5, datum=0.5)
6test 2 pygeodesy.albers: Albers7Tuple(x=Meter, y=Meter, lat=Lat, lon=Lon, gamma=Bearing, scale=_Pass, datum=_Pass)
6test 3 pygeodesy.albers.Albers7Tuple.x: 0.5
6test 4 pygeodesy.albers.Albers7Tuple.y: 0.5
6test 5 pygeodesy.albers.Albers7Tuple.lat: 0.5
6test 6 pygeodesy.albers.Albers7Tuple.lon: 0.5
6test 7 pygeodesy.albers.Albers7Tuple.gamma: 0.5
6test 8 pygeodesy.albers.Albers7Tuple.scale: 0.5
6test 9 pygeodesy.albers.Albers7Tuple.datum: 0.5
6test 10 pygeodesy.albers.Albers7Tuple._validated: True
6test 11 pygeodesy.albers.Albers7Tuple._validated: True
6test 12 pygeodesy.azimuthal: Azimuthal7Tuple(x=0.5, y=0.5, lat=0.5, lon=0.5, azimuth=0.5, scale=0.5, datum=0.5)
6test 13 pygeodesy.azimuthal: Azimuthal7Tuple(x=Easting, y=Northing, lat=Lat_, lon=Lon_, azimuth=Bearing, scale=Scalar, datum=_Pass)
6test 14 pygeodesy.azimuthal.Azimuthal7Tuple.x: 0.5
6test 15 pygeodesy.azimuthal.Azimuthal7Tuple.y: 0.5
6test 16 pygeodesy.azimuthal.Azimuthal7Tuple.lat: 0.5
6test 17 pygeodesy.azimuthal.Azimuthal7Tuple.lon: 0.5
6test 18 pygeodesy.azimuthal.Azimuthal7Tuple.azimuth: 0.5
6test 19 pygeodesy.azimuthal.Azimuthal7Tuple.scale: 0.5
6test 20 pygeodesy.azimuthal.Azimuthal7Tuple.datum: 0.5
6test 21 pygeodesy.azimuthal.Azimuthal7Tuple._validated: True
6test 22 pygeodesy.azimuthal.Azimuthal7Tuple._validated: True
6test 23 pygeodesy.clipy: ClipCS4Tuple(start=0.5, end=0.5, i=0, j=0)
6test 24 pygeodesy.clipy: ClipCS4Tuple(start=_Pass, end=_Pass, i=Number_, j=Number_)
6test 25 pygeodesy.clipy.ClipCS4Tuple.start: 0.5
6test 26 pygeodesy.clipy.ClipCS4Tuple.end: 0.5
6test 27 pygeodesy.clipy.ClipCS4Tuple.i: 0.5
6test 28 pygeodesy.clipy.ClipCS4Tuple.j: 0.5
6test 29 pygeodesy.clipy.ClipCS4Tuple._validated: True
6test 30 pygeodesy.clipy.ClipCS4Tuple._validated: True
6test 31 pygeodesy.clipy: ClipFHP4Tuple(lat=0.5, lon=0.5, height=0.5, clipid=0)
6test 32 pygeodesy.clipy: ClipFHP4Tuple(lat=Lat, lon=Lon, height=_Pass, clipid=Number_)
6test 33 pygeodesy.clipy.ClipFHP4Tuple.lat: 0.5
6test 34 pygeodesy.clipy.ClipFHP4Tuple.lon: 0.5
6test 35 pygeodesy.clipy.ClipFHP4Tuple.height: 0.5
6test 36 pygeodesy.clipy.ClipFHP4Tuple.clipid: 0.5
6test 37 pygeodesy.clipy.ClipFHP4Tuple._validated: True
6test 38 pygeodesy.clipy.ClipFHP4Tuple._validated: True
6test 39 pygeodesy.clipy: ClipGH4Tuple(lat=0.5, lon=0.5, height=0.5, clipid=0)
6test 40 pygeodesy.clipy: ClipGH4Tuple(lat=Lat, lon=Lon, height=_Pass, clipid=Number_)
6test 41 pygeodesy.clipy.ClipGH4Tuple.lat: 0.5
6test 42 pygeodesy.clipy.ClipGH4Tuple.lon: 0.5
6test 43 pygeodesy.clipy.ClipGH4Tuple.height: 0.5
6test 44 pygeodesy.clipy.ClipGH4Tuple.clipid: 0.5
6test 45 pygeodesy.clipy.ClipGH4Tuple._validated: True
6test 46 pygeodesy.clipy.ClipGH4Tuple._validated: True
6test 47 pygeodesy.clipy: ClipLB6Tuple(start=0.5, end=0.5, i=0, fi=0.5, fj=0.5, j=0)
6test 48 pygeodesy.clipy: ClipLB6Tuple(start=_Pass, end=_Pass, i=Number_, fi=_Pass, fj=_Pass, j=Number_)
6test 49 pygeodesy.clipy.ClipLB6Tuple.start: 0.5
6test 50 pygeodesy.clipy.ClipLB6Tuple.end: 0.5
6test 51 pygeodesy.clipy.ClipLB6Tuple.i: 0.5
6test 52 pygeodesy.clipy.ClipLB6Tuple.fi: 0.5
6test 53 pygeodesy.clipy.ClipLB6Tuple.fj: 0.5
6test 54 pygeodesy.clipy.ClipLB6Tuple.j: 0.5
6test 55 pygeodesy.clipy.ClipLB6Tuple._validated: True
6test 56 pygeodesy.clipy.ClipLB6Tuple._validated: True
6test 57 pygeodesy.clipy: ClipSH3Tuple(start=0.5, end=0.5, original=True)
6test 58 pygeodesy.clipy: ClipSH3Tuple(start=_Pass, end=_Pass, original=Bool)
6test 59 pygeodesy.clipy.ClipSH3Tuple.start: 0.5
6test 60 pygeodesy.clipy.ClipSH3Tuple.end: 0.5
6test 61 pygeodesy.clipy.ClipSH3Tuple.original: 0.5
6test 62 pygeodesy.clipy.ClipSH3Tuple._validated: True
6test 63 pygeodesy.clipy.ClipSH3Tuple._validated: True
6test 64 pygeodesy.css: EasNorAziRk4Tuple(easting=0.5, northing=0.5, azimuth=0.5, reciprocal=0.5)
6test 65 pygeodesy.css: EasNorAziRk4Tuple(easting=Easting, northing=Northing, azimuth=Bearing, reciprocal=Scalar)
6test 66 pygeodesy.css.EasNorAziRk4Tuple.easting: 0.5
6test 67 pygeodesy.css.EasNorAziRk4Tuple.northing: 0.5
6test 68 pygeodesy.css.EasNorAziRk4Tuple.azimuth: 0.5
6test 69 pygeodesy.css.EasNorAziRk4Tuple.reciprocal: 0.5
6test 70 pygeodesy.css.EasNorAziRk4Tuple._validated: True
6test 71 pygeodesy.css.EasNorAziRk4Tuple._validated: True
6test 72 pygeodesy.css: EasNorAziRkEqu6Tuple(easting=0.5, northing=0.5, azimuth=0.5, reciprocal=0.5, equatorarc=0.5, equatorazimuth=0.5)
6test 73 pygeodesy.css: EasNorAziRkEqu6Tuple(easting=Easting, northing=Northing, azimuth=Bearing, reciprocal=Scalar, equatorarc=Degrees, equatorazimuth=Bearing)
6test 74 pygeodesy.css.EasNorAziRkEqu6Tuple.easting: 0.5
6test 75 pygeodesy.css.EasNorAziRkEqu6Tuple.northing: 0.5
6test 76 pygeodesy.css.EasNorAziRkEqu6Tuple.azimuth: 0.5
6test 77 pygeodesy.css.EasNorAziRkEqu6Tuple.reciprocal: 0.5
6test 78 pygeodesy.css.EasNorAziRkEqu6Tuple.equatorarc: 0.5
6test 79 pygeodesy.css.EasNorAziRkEqu6Tuple.equatorazimuth: 0.5
6test 80 pygeodesy.css.EasNorAziRkEqu6Tuple._validated: True
6test 81 pygeodesy.css.EasNorAziRkEqu6Tuple._validated: True
6test 82 pygeodesy.css: LatLonAziRk4Tuple(lat=0.5, lon=0.5, azimuth=0.5, reciprocal=0.5)
6test 83 pygeodesy.css: LatLonAziRk4Tuple(lat=Lat_, lon=Lon_, azimuth=Bearing, reciprocal=Scalar)
6test 84 pygeodesy.css.LatLonAziRk4Tuple.lat: 0.5
6test 85 pygeodesy.css.LatLonAziRk4Tuple.lon: 0.5
6test 86 pygeodesy.css.LatLonAziRk4Tuple.azimuth: 0.5
6test 87 pygeodesy.css.LatLonAziRk4Tuple.reciprocal: 0.5
6test 88 pygeodesy.css.LatLonAziRk4Tuple._validated: True
6test 89 pygeodesy.css.LatLonAziRk4Tuple._validated: True
6test 90 pygeodesy.ecef: Ecef9Tuple(x=0.5, y=0.5, z=0.5, lat=0.5, lon=0.5, height=0.5, C=0, M=0.5, datum=0.5)
6test 91 pygeodesy.ecef: Ecef9Tuple(x=Meter, y=Meter, z=Meter, lat=Lat, lon=Lon, height=Height, C=Int, M=_Pass, datum=_Pass)
6test 92 pygeodesy.ecef.Ecef9Tuple.x: 0.5
6test 93 pygeodesy.ecef.Ecef9Tuple.y: 0.5
6test 94 pygeodesy.ecef.Ecef9Tuple.z: 0.5
6test 95 pygeodesy.ecef.Ecef9Tuple.lat: 0.5
6test 96 pygeodesy.ecef.Ecef9Tuple.lon: 0.5
6test 97 pygeodesy.ecef.Ecef9Tuple.height: 0.5
6test 98 pygeodesy.ecef.Ecef9Tuple.C: 0.5
6test 99 pygeodesy.ecef.Ecef9Tuple.M: 0.5
6test 100 pygeodesy.ecef.Ecef9Tuple.datum: 0.5
6test 101 pygeodesy.ecef.Ecef9Tuple._validated: True
6test 102 pygeodesy.ecef.Ecef9Tuple._validated: True
6test 103 pygeodesy.ecef: EcefMatrix(_0_0_=0.5, _0_1_=0.5, _0_2_=0.5, _1_0_=0.5, _1_1_=0.5, _1_2_=0.5, _2_0_=0.5, _2_1_=0.5, _2_2_=0.5)
6test 104 pygeodesy.ecef: EcefMatrix(_0_0_=Scalar, _0_1_=Scalar, _0_2_=Scalar, _1_0_=Scalar, _1_1_=Scalar, _1_2_=Scalar, _2_0_=Scalar, _2_1_=Scalar, _2_2_=Scalar)
6test 105 pygeodesy.ecef.EcefMatrix._0_0_: 0.5
6test 106 pygeodesy.ecef.EcefMatrix._0_1_: 0.5
6test 107 pygeodesy.ecef.EcefMatrix._0_2_: 0.5
6test 108 pygeodesy.ecef.EcefMatrix._1_0_: 0.5
6test 109 pygeodesy.ecef.EcefMatrix._1_1_: 0.5
6test 110 pygeodesy.ecef.EcefMatrix._1_2_: 0.5
6test 111 pygeodesy.ecef.EcefMatrix._2_0_: 0.5
6test 112 pygeodesy.ecef.EcefMatrix._2_1_: 0.5
6test 113 pygeodesy.ecef.EcefMatrix._2_2_: 0.5
6test 114 pygeodesy.ecef.EcefMatrix._validated: True
6test 115 pygeodesy.ecef.EcefMatrix._validated: True
6test 116 pygeodesy.elevations: Elevation2Tuple(elevation=0.5, data_source='0.5')
6test 117 pygeodesy.elevations: Elevation2Tuple(elevation=Meter, data_source=Str)
6test 118 pygeodesy.elevations.Elevation2Tuple.elevation: 0.5
6test 119 pygeodesy.elevations.Elevation2Tuple.data_source: 0.5
6test 120 pygeodesy.elevations.Elevation2Tuple._validated: True
6test 121 pygeodesy.elevations.Elevation2Tuple._validated: True
6test 122 pygeodesy.elevations: GeoidHeight2Tuple(height=0.5, model_name='0.5')
6test 123 pygeodesy.elevations: GeoidHeight2Tuple(height=Meter, model_name=Str)
6test 124 pygeodesy.elevations.GeoidHeight2Tuple.height: 0.5
6test 125 pygeodesy.elevations.GeoidHeight2Tuple.model_name: 0.5
6test 126 pygeodesy.elevations.GeoidHeight2Tuple._validated: True
6test 127 pygeodesy.elevations.GeoidHeight2Tuple._validated: True
6test 128 pygeodesy.ellipsoids: Circle4Tuple(radius=0.5, height=0.5, lat=0.5, beta=0.5)
6test 129 pygeodesy.ellipsoids: Circle4Tuple(radius=Radius, height=Height, lat=Lat, beta=Lat)
6test 130 pygeodesy.ellipsoids.Circle4Tuple.radius: 0.5
6test 131 pygeodesy.ellipsoids.Circle4Tuple.height: 0.5
6test 132 pygeodesy.ellipsoids.Circle4Tuple.lat: 0.5
6test 133 pygeodesy.ellipsoids.Circle4Tuple.beta: 0.5
6test 134 pygeodesy.ellipsoids.Circle4Tuple._validated: True
6test 135 pygeodesy.ellipsoids.Circle4Tuple._validated: True
6test 136 pygeodesy.ellipsoids: Curvature2Tuple(meridional=0.5, prime_vertical=0.5)
6test 137 pygeodesy.ellipsoids: Curvature2Tuple(meridional=Meter, prime_vertical=Meter)
6test 138 pygeodesy.ellipsoids.Curvature2Tuple.meridional: 0.5
6test 139 pygeodesy.ellipsoids.Curvature2Tuple.prime_vertical: 0.5
6test 140 pygeodesy.ellipsoids.Curvature2Tuple._validated: True
6test 141 pygeodesy.ellipsoids.Curvature2Tuple._validated: True
6test 142 pygeodesy.ellipsoids: a_f2Tuple(a=0.5, f=0.5)
6test 143 pygeodesy.ellipsoids: a_f2Tuple(a=_Pass, f=_Pass)
6test 144 pygeodesy.ellipsoids.a_f2Tuple.a: 0.5
6test 145 pygeodesy.ellipsoids.a_f2Tuple.f: 0.5
6test 146 pygeodesy.ellipsoids.a_f2Tuple._validated: True
6test 147 pygeodesy.ellipsoids.a_f2Tuple._validated: True
6test 148 pygeodesy.elliptic: Elliptic3Tuple(sn=0.5, cn=0.5, dn=0.5)
6test 149 pygeodesy.elliptic: Elliptic3Tuple(sn=Scalar, cn=Scalar, dn=Scalar)
6test 150 pygeodesy.elliptic.Elliptic3Tuple.sn: 0.5
6test 151 pygeodesy.elliptic.Elliptic3Tuple.cn: 0.5
6test 152 pygeodesy.elliptic.Elliptic3Tuple.dn: 0.5
6test 153 pygeodesy.elliptic.Elliptic3Tuple._validated: True
6test 154 pygeodesy.elliptic.Elliptic3Tuple._validated: True
6test 155 pygeodesy.formy: Radical2Tuple(ratio=0.5, xline=0.5)
6test 156 pygeodesy.formy: Radical2Tuple(ratio=Scalar, xline=Scalar)
6test 157 pygeodesy.formy.Radical2Tuple.ratio: 0.5
6test 158 pygeodesy.formy.Radical2Tuple.xline: 0.5
6test 159 pygeodesy.formy.Radical2Tuple._validated: True
6test 160 pygeodesy.formy.Radical2Tuple._validated: True
6test 161 pygeodesy.frechet: Frechet6Tuple(fd=0.5, fi1=0.5, fi2=0.5, r=0, n=0, units='test')
6test 162 pygeodesy.frechet: Frechet6Tuple(fd=_Pass, fi1=FIx, fi2=FIx, r=Number_, n=Number_, units=_Pass)
6test 163 pygeodesy.frechet.Frechet6Tuple.fd: 0.5
6test 164 pygeodesy.frechet.Frechet6Tuple.fi1: 0.5
6test 165 pygeodesy.frechet.Frechet6Tuple.fi2: 0.5
6test 166 pygeodesy.frechet.Frechet6Tuple.r: 0.5
6test 167 pygeodesy.frechet.Frechet6Tuple.n: 0.5
6test 168 pygeodesy.frechet.Frechet6Tuple.units: <bound method _NamedTuple.units of Frechet6Tuple(fd=0.5, fi1=0.5, fi2=0.5, r=0.5, n=0.5, units='test')>
6test 169 pygeodesy.frechet.Frechet6Tuple._validated: True
6test 170 pygeodesy.frechet.Frechet6Tuple._validated: True
6test 171 pygeodesy.fsums: Fsum2Tuple(fsum=0.5, residual=0.5)
6test 172 pygeodesy.fsums: Fsum2Tuple(fsum=_Float_Int, residual=_Float_Int)
6test 173 pygeodesy.fsums.Fsum2Tuple.fsum: 0.5
6test 174 pygeodesy.fsums.Fsum2Tuple.residual: 0.5
6test 175 pygeodesy.fsums.Fsum2Tuple._validated: True
6test 176 pygeodesy.fsums.Fsum2Tuple._validated: True
6test 177 pygeodesy.geodsolve: GeodSolve12Tuple(lat1=0.5, lon1=0.5, azi1=0.5, lat2=0.5, lon2=0.5, azi2=0.5, s12=0.5, a12=0.5, m12=0.5, M12=0.5, M21=0.5, S12=0.5)
6test 178 pygeodesy.geodsolve: GeodSolve12Tuple(lat1=_Lat, lon1=_Lon, azi1=Bearing, lat2=_Lat, lon2=_Lon, azi2=Bearing, s12=Meter, a12=Degrees, m12=_Pass, M12=_Pass, M21=_Pass, S12=Meter2)
6test 179 pygeodesy.geodsolve.GeodSolve12Tuple.lat1: 0.5
6test 180 pygeodesy.geodsolve.GeodSolve12Tuple.lon1: 0.5
6test 181 pygeodesy.geodsolve.GeodSolve12Tuple.azi1: 0.5
6test 182 pygeodesy.geodsolve.GeodSolve12Tuple.lat2: 0.5
6test 183 pygeodesy.geodsolve.GeodSolve12Tuple.lon2: 0.5
6test 184 pygeodesy.geodsolve.GeodSolve12Tuple.azi2: 0.5
6test 185 pygeodesy.geodsolve.GeodSolve12Tuple.s12: 0.5
6test 186 pygeodesy.geodsolve.GeodSolve12Tuple.a12: 0.5
6test 187 pygeodesy.geodsolve.GeodSolve12Tuple.m12: 0.5
6test 188 pygeodesy.geodsolve.GeodSolve12Tuple.M12: 0.5
6test 189 pygeodesy.geodsolve.GeodSolve12Tuple.M21: 0.5
6test 190 pygeodesy.geodsolve.GeodSolve12Tuple.S12: 0.5
6test 191 pygeodesy.geodsolve.GeodSolve12Tuple._validated: True
6test 192 pygeodesy.geodsolve.GeodSolve12Tuple._validated: True
6test 193 pygeodesy.geohash: Resolutions2Tuple(res1=0.5, res2=0.5)
6test 194 pygeodesy.geohash: Resolutions2Tuple(res1=Degrees_, res2=Degrees_)
6test 195 pygeodesy.geohash.Resolutions2Tuple.res1: 0.5
6test 196 pygeodesy.geohash.Resolutions2Tuple.res2: 0.5
6test 197 pygeodesy.geohash.Resolutions2Tuple._validated: True
6test 198 pygeodesy.geohash.Resolutions2Tuple._validated: True
6test 199 pygeodesy.geoids: GeoidHeight5Tuple(lat=0.5, lon=0.5, egm84=0.5, egm96=0.5, egm2008=0.5)
6test 200 pygeodesy.geoids: GeoidHeight5Tuple(lat=Lat, lon=Lon, egm84=Height, egm96=Height, egm2008=Height)
6test 201 pygeodesy.geoids.GeoidHeight5Tuple.lat: 0.5
6test 202 pygeodesy.geoids.GeoidHeight5Tuple.lon: 0.5
6test 203 pygeodesy.geoids.GeoidHeight5Tuple.egm84: 0.5
6test 204 pygeodesy.geoids.GeoidHeight5Tuple.egm96: 0.5
6test 205 pygeodesy.geoids.GeoidHeight5Tuple.egm2008: 0.5
6test 206 pygeodesy.geoids.GeoidHeight5Tuple._validated: True
6test 207 pygeodesy.geoids.GeoidHeight5Tuple._validated: True
6test 208 pygeodesy.hausdorff: Hausdorff6Tuple(hd=0.5, i=0, j=0, mn=0, md=0.5, units='test')
6test 209 pygeodesy.hausdorff: Hausdorff6Tuple(hd=_Pass, i=Number_, j=Number_, mn=Number_, md=_Pass, units=_Pass)
6test 210 pygeodesy.hausdorff.Hausdorff6Tuple.hd: 0.5
6test 211 pygeodesy.hausdorff.Hausdorff6Tuple.i: 0.5
6test 212 pygeodesy.hausdorff.Hausdorff6Tuple.j: 0.5
6test 213 pygeodesy.hausdorff.Hausdorff6Tuple.mn: 0.5
6test 214 pygeodesy.hausdorff.Hausdorff6Tuple.md: 0.5
6test 215 pygeodesy.hausdorff.Hausdorff6Tuple.units: <bound method _NamedTuple.units of Hausdorff6Tuple(hd=0.5, i=0.5, j=0.5, mn=0.5, md=0.5, units='test')>
6test 216 pygeodesy.hausdorff.Hausdorff6Tuple._validated: True
6test 217 pygeodesy.hausdorff.Hausdorff6Tuple._validated: True
6test 218 pygeodesy.karney: Area3Tuple(number=0, perimeter=0.5, area=0.5)
6test 219 pygeodesy.karney: Area3Tuple(number=Number_, perimeter=Meter, area=Meter2)
6test 220 pygeodesy.karney.Area3Tuple.number: 0.5
6test 221 pygeodesy.karney.Area3Tuple.perimeter: 0.5
6test 222 pygeodesy.karney.Area3Tuple.area: 0.5
6test 223 pygeodesy.karney.Area3Tuple._validated: True
6test 224 pygeodesy.karney.Area3Tuple._validated: True
6test 225 pygeodesy.karney: Direct9Tuple(a12=0.5, lat2=0.5, lon2=0.5, azi2=0.5, s12=0.5, m12=0.5, M12=0.5, M21=0.5, S12=0.5)
6test 226 pygeodesy.karney: Direct9Tuple(a12=Bearing, lat2=_Lat, lon2=_Lon, azi2=Bearing, s12=Meter, m12=_Pass, M12=_Pass, M21=_Pass, S12=Meter2)
6test 227 pygeodesy.karney.Direct9Tuple.a12: 0.5
6test 228 pygeodesy.karney.Direct9Tuple.lat2: 0.5
6test 229 pygeodesy.karney.Direct9Tuple.lon2: 0.5
6test 230 pygeodesy.karney.Direct9Tuple.azi2: 0.5
6test 231 pygeodesy.karney.Direct9Tuple.s12: 0.5
6test 232 pygeodesy.karney.Direct9Tuple.m12: 0.5
6test 233 pygeodesy.karney.Direct9Tuple.M12: 0.5
6test 234 pygeodesy.karney.Direct9Tuple.M21: 0.5
6test 235 pygeodesy.karney.Direct9Tuple.S12: 0.5
6test 236 pygeodesy.karney.Direct9Tuple._validated: True
6test 237 pygeodesy.karney.Direct9Tuple._validated: True
6test 238 pygeodesy.karney: Inverse10Tuple(a12=0.5, s12=0.5, salp1=0.5, calp1=0.5, salp2=0.5, calp2=0.5, m12=0.5, M12=0.5, M21=0.5, S12=0.5)
6test 239 pygeodesy.karney: Inverse10Tuple(a12=Bearing, s12=Meter, salp1=_Pass, calp1=_Pass, salp2=_Pass, calp2=_Pass, m12=_Pass, M12=_Pass, M21=_Pass, S12=Meter2)
6test 240 pygeodesy.karney.Inverse10Tuple.a12: 0.5
6test 241 pygeodesy.karney.Inverse10Tuple.s12: 0.5
6test 242 pygeodesy.karney.Inverse10Tuple.salp1: 0.5
6test 243 pygeodesy.karney.Inverse10Tuple.calp1: 0.5
6test 244 pygeodesy.karney.Inverse10Tuple.salp2: 0.5
6test 245 pygeodesy.karney.Inverse10Tuple.calp2: 0.5
6test 246 pygeodesy.karney.Inverse10Tuple.m12: 0.5
6test 247 pygeodesy.karney.Inverse10Tuple.M12: 0.5
6test 248 pygeodesy.karney.Inverse10Tuple.M21: 0.5
6test 249 pygeodesy.karney.Inverse10Tuple.S12: 0.5
6test 250 pygeodesy.karney.Inverse10Tuple._validated: True
6test 251 pygeodesy.karney.Inverse10Tuple._validated: True
6test 252 pygeodesy.ltpTuples: Aer4Tuple(azimuth=0.5, elevation=0.5, slantrange=0.5, ltp=0.5)
6test 253 pygeodesy.ltpTuples: Aer4Tuple(azimuth=Meter, elevation=Meter, slantrange=Meter, ltp=_Pass)
6test 254 pygeodesy.ltpTuples.Aer4Tuple.azimuth: 0.5
6test 255 pygeodesy.ltpTuples.Aer4Tuple.elevation: 0.5
6test 256 pygeodesy.ltpTuples.Aer4Tuple.slantrange: 0.5
6test 257 pygeodesy.ltpTuples.Aer4Tuple.ltp: 0.5
6test 258 pygeodesy.ltpTuples.Aer4Tuple._validated: True
6test 259 pygeodesy.ltpTuples.Aer4Tuple._validated: True
6test 260 pygeodesy.ltpTuples: Attitude4Tuple(alt=0.5, tilt=0.5, yaw=0.5, roll=0.5)
6test 261 pygeodesy.ltpTuples: Attitude4Tuple(alt=Meter, tilt=Bearing, yaw=Degrees, roll=Degrees)
6test 262 pygeodesy.ltpTuples.Attitude4Tuple.alt: 0.5
6test 263 pygeodesy.ltpTuples.Attitude4Tuple.tilt: 0.5
6test 264 pygeodesy.ltpTuples.Attitude4Tuple.yaw: 0.5
6test 265 pygeodesy.ltpTuples.Attitude4Tuple.roll: 0.5
6test 266 pygeodesy.ltpTuples.Attitude4Tuple._validated: True
6test 267 pygeodesy.ltpTuples.Attitude4Tuple._validated: True
6test 268 pygeodesy.ltpTuples: ChLV9Tuple(Y=0.5, X=0.5, h_=0.5, lat=0.5, lon=0.5, height=0.5, ltp=0.5, ecef=0.5, M=0.5)
6test 269 pygeodesy.ltpTuples: ChLV9Tuple(Y=Meter, X=Meter, h_=Meter, lat=Lat, lon=Lon, height=Height, ltp=_Pass, ecef=_Pass, M=_Pass)
6test 270 pygeodesy.ltpTuples.ChLV9Tuple.Y: 0.5
6test 271 pygeodesy.ltpTuples.ChLV9Tuple.X: 0.5
6test 272 pygeodesy.ltpTuples.ChLV9Tuple.h_: 0.5
6test 273 pygeodesy.ltpTuples.ChLV9Tuple.lat: 0.5
6test 274 pygeodesy.ltpTuples.ChLV9Tuple.lon: 0.5
6test 275 pygeodesy.ltpTuples.ChLV9Tuple.height: 0.5
6test 276 pygeodesy.ltpTuples.ChLV9Tuple.ltp: 0.5
6test 277 pygeodesy.ltpTuples.ChLV9Tuple.ecef: 0.5
6test 278 pygeodesy.ltpTuples.ChLV9Tuple.M: 0.5
6test 279 pygeodesy.ltpTuples.ChLV9Tuple._validated: True
6test 280 pygeodesy.ltpTuples.ChLV9Tuple._validated: True
6test 281 pygeodesy.ltpTuples: ChLVEN2Tuple(E_LV95=0.5, N_LV95=0.5)
6test 282 pygeodesy.ltpTuples: ChLVEN2Tuple(E_LV95=Meter, N_LV95=Meter)
6test 283 pygeodesy.ltpTuples.ChLVEN2Tuple.E_LV95: 0.5
6test 284 pygeodesy.ltpTuples.ChLVEN2Tuple.N_LV95: 0.5
6test 285 pygeodesy.ltpTuples.ChLVEN2Tuple._validated: True
6test 286 pygeodesy.ltpTuples.ChLVEN2Tuple._validated: True
6test 287 pygeodesy.ltpTuples: ChLVYX2Tuple(Y=0.5, X=0.5)
6test 288 pygeodesy.ltpTuples: ChLVYX2Tuple(Y=Meter, X=Meter)
6test 289 pygeodesy.ltpTuples.ChLVYX2Tuple.Y: 0.5
6test 290 pygeodesy.ltpTuples.ChLVYX2Tuple.X: 0.5
6test 291 pygeodesy.ltpTuples.ChLVYX2Tuple._validated: True
6test 292 pygeodesy.ltpTuples.ChLVYX2Tuple._validated: True
6test 293 pygeodesy.ltpTuples: ChLVyx2Tuple(y_LV03=0.5, x_LV03=0.5)
6test 294 pygeodesy.ltpTuples: ChLVyx2Tuple(y_LV03=Meter, x_LV03=Meter)
6test 295 pygeodesy.ltpTuples.ChLVyx2Tuple.y_LV03: 0.5
6test 296 pygeodesy.ltpTuples.ChLVyx2Tuple.x_LV03: 0.5
6test 297 pygeodesy.ltpTuples.ChLVyx2Tuple._validated: True
6test 298 pygeodesy.ltpTuples.ChLVyx2Tuple._validated: True
6test 299 pygeodesy.ltpTuples: Enu4Tuple(east=0.5, north=0.5, up=0.5, ltp=0.5)
6test 300 pygeodesy.ltpTuples: Enu4Tuple(east=Meter, north=Meter, up=Meter, ltp=_Pass)
6test 301 pygeodesy.ltpTuples.Enu4Tuple.east: 0.5
6test 302 pygeodesy.ltpTuples.Enu4Tuple.north: 0.5
6test 303 pygeodesy.ltpTuples.Enu4Tuple.up: 0.5
6test 304 pygeodesy.ltpTuples.Enu4Tuple.ltp: 0.5
6test 305 pygeodesy.ltpTuples.Enu4Tuple._validated: True
6test 306 pygeodesy.ltpTuples.Enu4Tuple._validated: True
6test 307 pygeodesy.ltpTuples: Footprint5Tuple(center=0.5, upperleft=0.5, upperight=0.5, loweright=0.5, lowerleft=0.5)
6test 308 pygeodesy.ltpTuples: Footprint5Tuple(center=_Pass, upperleft=_Pass, upperight=_Pass, loweright=_Pass, lowerleft=_Pass)
6test 309 pygeodesy.ltpTuples.Footprint5Tuple.center: 0.5
6test 310 pygeodesy.ltpTuples.Footprint5Tuple.upperleft: 0.5
6test 311 pygeodesy.ltpTuples.Footprint5Tuple.upperight: 0.5
6test 312 pygeodesy.ltpTuples.Footprint5Tuple.loweright: 0.5
6test 313 pygeodesy.ltpTuples.Footprint5Tuple.lowerleft: 0.5
6test 314 pygeodesy.ltpTuples.Footprint5Tuple._validated: True
6test 315 pygeodesy.ltpTuples.Footprint5Tuple._validated: True
6test 316 pygeodesy.ltpTuples: Local9Tuple(x=0.5, y=0.5, z=0.5, lat=0.5, lon=0.5, height=0.5, ltp=0.5, ecef=0.5, M=0.5)
6test 317 pygeodesy.ltpTuples: Local9Tuple(x=Meter, y=Meter, z=Meter, lat=Lat, lon=Lon, height=Height, ltp=_Pass, ecef=_Pass, M=_Pass)
6test 318 pygeodesy.ltpTuples.Local9Tuple.x: 0.5
6test 319 pygeodesy.ltpTuples.Local9Tuple.y: 0.5
6test 320 pygeodesy.ltpTuples.Local9Tuple.z: 0.5
6test 321 pygeodesy.ltpTuples.Local9Tuple.lat: 0.5
6test 322 pygeodesy.ltpTuples.Local9Tuple.lon: 0.5
6test 323 pygeodesy.ltpTuples.Local9Tuple.height: 0.5
6test 324 pygeodesy.ltpTuples.Local9Tuple.ltp: 0.5
6test 325 pygeodesy.ltpTuples.Local9Tuple.ecef: 0.5
6test 326 pygeodesy.ltpTuples.Local9Tuple.M: 0.5
6test 327 pygeodesy.ltpTuples.Local9Tuple._validated: True
6test 328 pygeodesy.ltpTuples.Local9Tuple._validated: True
6test 329 pygeodesy.ltpTuples: Ned4Tuple(north=0.5, east=0.5, down=0.5, ltp=0.5)
6test 330 pygeodesy.ltpTuples: Ned4Tuple(north=Meter, east=Meter, down=Meter, ltp=_Pass)
6test 331 pygeodesy.ltpTuples.Ned4Tuple.north: 0.5
6test 332 pygeodesy.ltpTuples.Ned4Tuple.east: 0.5
6test 333 pygeodesy.ltpTuples.Ned4Tuple.down: 0.5
6test 334 pygeodesy.ltpTuples.Ned4Tuple.ltp: 0.5
6test 335 pygeodesy.ltpTuples.Ned4Tuple._validated: True
6test 336 pygeodesy.ltpTuples.Ned4Tuple._validated: True
6test 337 pygeodesy.ltpTuples: Xyz4Tuple(x=0.5, y=0.5, z=0.5, ltp=0.5)
6test 338 pygeodesy.ltpTuples: Xyz4Tuple(x=Meter, y=Meter, z=Meter, ltp=_Pass)
6test 339 pygeodesy.ltpTuples.Xyz4Tuple.x: 0.5
6test 340 pygeodesy.ltpTuples.Xyz4Tuple.y: 0.5
6test 341 pygeodesy.ltpTuples.Xyz4Tuple.z: 0.5
6test 342 pygeodesy.ltpTuples.Xyz4Tuple.ltp: 0.5
6test 343 pygeodesy.ltpTuples.Xyz4Tuple._validated: True
6test 344 pygeodesy.ltpTuples.Xyz4Tuple._validated: True
6test 345 pygeodesy.mgrs: Mgrs4Tuple(zone='0.5', EN='0.5', easting=0.5, northing=0.5)
6test 346 pygeodesy.mgrs: Mgrs4Tuple(zone=Str, EN=Str, easting=Easting, northing=Northing)
6test 347 pygeodesy.mgrs.Mgrs4Tuple.zone: 0.5
6test 348 pygeodesy.mgrs.Mgrs4Tuple.EN: 0.5
6test 349 pygeodesy.mgrs.Mgrs4Tuple.easting: 0.5
6test 350 pygeodesy.mgrs.Mgrs4Tuple.northing: 0.5
6test 351 pygeodesy.mgrs.Mgrs4Tuple._validated: True
6test 352 pygeodesy.mgrs.Mgrs4Tuple._validated: True
6test 353 pygeodesy.mgrs: Mgrs6Tuple(zone='0.5', EN='0.5', easting=0.5, northing=0.5, band='0.5', datum=0.5)
6test 354 pygeodesy.mgrs: Mgrs6Tuple(zone=Str, EN=Str, easting=Easting, northing=Northing, band=Str, datum=_Pass)
6test 355 pygeodesy.mgrs.Mgrs6Tuple.zone: 0.5
6test 356 pygeodesy.mgrs.Mgrs6Tuple.EN: 0.5
6test 357 pygeodesy.mgrs.Mgrs6Tuple.easting: 0.5
6test 358 pygeodesy.mgrs.Mgrs6Tuple.northing: 0.5
6test 359 pygeodesy.mgrs.Mgrs6Tuple.band: 0.5
6test 360 pygeodesy.mgrs.Mgrs6Tuple.datum: 0.5
6test 361 pygeodesy.mgrs.Mgrs6Tuple._validated: True
6test 362 pygeodesy.mgrs.Mgrs6Tuple._validated: True
6test 363 pygeodesy.namedTuples: Bearing2Tuple(initial=0.5, final=0.5)
6test 364 pygeodesy.namedTuples: Bearing2Tuple(initial=Bearing, final=Bearing)
6test 365 pygeodesy.namedTuples.Bearing2Tuple.initial: 0.5
6test 366 pygeodesy.namedTuples.Bearing2Tuple.final: 0.5
6test 367 pygeodesy.namedTuples.Bearing2Tuple._validated: True
6test 368 pygeodesy.namedTuples.Bearing2Tuple._validated: True
6test 369 pygeodesy.namedTuples: Bounds2Tuple(latlonSW=0.5, latlonNE=0.5)
6test 370 pygeodesy.namedTuples: Bounds2Tuple(latlonSW=_Pass, latlonNE=_Pass)
6test 371 pygeodesy.namedTuples.Bounds2Tuple.latlonSW: 0.5
6test 372 pygeodesy.namedTuples.Bounds2Tuple.latlonNE: 0.5
6test 373 pygeodesy.namedTuples.Bounds2Tuple._validated: True
6test 374 pygeodesy.namedTuples.Bounds2Tuple._validated: True
6test 375 pygeodesy.namedTuples: Bounds4Tuple(latS=0.5, lonW=0.5, latN=0.5, lonE=0.5)
6test 376 pygeodesy.namedTuples: Bounds4Tuple(latS=Lat, lonW=Lon, latN=Lat, lonE=Lon)
6test 377 pygeodesy.namedTuples.Bounds4Tuple.latS: 0.5
6test 378 pygeodesy.namedTuples.Bounds4Tuple.lonW: 0.5
6test 379 pygeodesy.namedTuples.Bounds4Tuple.latN: 0.5
6test 380 pygeodesy.namedTuples.Bounds4Tuple.lonE: 0.5
6test 381 pygeodesy.namedTuples.Bounds4Tuple._validated: True
6test 382 pygeodesy.namedTuples.Bounds4Tuple._validated: True
6test 383 pygeodesy.namedTuples: Destination2Tuple(destination=0.5, final=0.5)
6test 384 pygeodesy.namedTuples: Destination2Tuple(destination=_Pass, final=Bearing)
6test 385 pygeodesy.namedTuples.Destination2Tuple.destination: 0.5
6test 386 pygeodesy.namedTuples.Destination2Tuple.final: 0.5
6test 387 pygeodesy.namedTuples.Destination2Tuple._validated: True
6test 388 pygeodesy.namedTuples.Destination2Tuple._validated: True
6test 389 pygeodesy.namedTuples: Destination3Tuple(lat=0.5, lon=0.5, final=0.5)
6test 390 pygeodesy.namedTuples: Destination3Tuple(lat=Lat, lon=Lon, final=Bearing)
6test 391 pygeodesy.namedTuples.Destination3Tuple.lat: 0.5
6test 392 pygeodesy.namedTuples.Destination3Tuple.lon: 0.5
6test 393 pygeodesy.namedTuples.Destination3Tuple.final: 0.5
6test 394 pygeodesy.namedTuples.Destination3Tuple._validated: True
6test 395 pygeodesy.namedTuples.Destination3Tuple._validated: True
6test 396 pygeodesy.namedTuples: Distance2Tuple(distance=0.5, initial=0.5)
6test 397 pygeodesy.namedTuples: Distance2Tuple(distance=Meter, initial=Bearing)
6test 398 pygeodesy.namedTuples.Distance2Tuple.distance: 0.5
6test 399 pygeodesy.namedTuples.Distance2Tuple.initial: 0.5
6test 400 pygeodesy.namedTuples.Distance2Tuple._validated: True
6test 401 pygeodesy.namedTuples.Distance2Tuple._validated: True
6test 402 pygeodesy.namedTuples: Distance3Tuple(distance=0.5, initial=0.5, final=0.5)
6test 403 pygeodesy.namedTuples: Distance3Tuple(distance=Meter, initial=Bearing, final=Bearing)
6test 404 pygeodesy.namedTuples.Distance3Tuple.distance: 0.5
6test 405 pygeodesy.namedTuples.Distance3Tuple.initial: 0.5
6test 406 pygeodesy.namedTuples.Distance3Tuple.final: 0.5
6test 407 pygeodesy.namedTuples.Distance3Tuple._validated: True
6test 408 pygeodesy.namedTuples.Distance3Tuple._validated: True
6test 409 pygeodesy.namedTuples: Distance4Tuple(distance2=0.5, delta_lat=0.5, delta_lon=0.5, unroll_lon2=0.5)
6test 410 pygeodesy.namedTuples: Distance4Tuple(distance2=Degrees2, delta_lat=Degrees, delta_lon=Degrees, unroll_lon2=Degrees)
6test 411 pygeodesy.namedTuples.Distance4Tuple.distance2: 0.5
6test 412 pygeodesy.namedTuples.Distance4Tuple.delta_lat: 0.5
6test 413 pygeodesy.namedTuples.Distance4Tuple.delta_lon: 0.5
6test 414 pygeodesy.namedTuples.Distance4Tuple.unroll_lon2: 0.5
6test 415 pygeodesy.namedTuples.Distance4Tuple._validated: True
6test 416 pygeodesy.namedTuples.Distance4Tuple._validated: True
6test 417 pygeodesy.namedTuples: EasNor2Tuple(easting=0.5, northing=0.5)
6test 418 pygeodesy.namedTuples: EasNor2Tuple(easting=Easting, northing=Northing)
6test 419 pygeodesy.namedTuples.EasNor2Tuple.easting: 0.5
6test 420 pygeodesy.namedTuples.EasNor2Tuple.northing: 0.5
6test 421 pygeodesy.namedTuples.EasNor2Tuple._validated: True
6test 422 pygeodesy.namedTuples.EasNor2Tuple._validated: True
6test 423 pygeodesy.namedTuples: EasNor3Tuple(easting=0.5, northing=0.5, height=0.5)
6test 424 pygeodesy.namedTuples: EasNor3Tuple(easting=Easting, northing=Northing, height=Height)
6test 425 pygeodesy.namedTuples.EasNor3Tuple.easting: 0.5
6test 426 pygeodesy.namedTuples.EasNor3Tuple.northing: 0.5
6test 427 pygeodesy.namedTuples.EasNor3Tuple.height: 0.5
6test 428 pygeodesy.namedTuples.EasNor3Tuple._validated: True
6test 429 pygeodesy.namedTuples.EasNor3Tuple._validated: True
6test 430 pygeodesy.namedTuples: Forward4Tuple(easting=0.5, northing=0.5, gamma=0.5, scale=0.5)
6test 431 pygeodesy.namedTuples: Forward4Tuple(easting=Easting, northing=Northing, gamma=Degrees, scale=Scalar)
6test 432 pygeodesy.namedTuples.Forward4Tuple.easting: 0.5
6test 433 pygeodesy.namedTuples.Forward4Tuple.northing: 0.5
6test 434 pygeodesy.namedTuples.Forward4Tuple.gamma: 0.5
6test 435 pygeodesy.namedTuples.Forward4Tuple.scale: 0.5
6test 436 pygeodesy.namedTuples.Forward4Tuple._validated: True
6test 437 pygeodesy.namedTuples.Forward4Tuple._validated: True
6test 438 pygeodesy.namedTuples: Intersection3Tuple(point=0.5, outside1=0, outside2=0)
6test 439 pygeodesy.namedTuples: Intersection3Tuple(point=_Pass, outside1=Int, outside2=Int)
6test 440 pygeodesy.namedTuples.Intersection3Tuple.point: 0.5
6test 441 pygeodesy.namedTuples.Intersection3Tuple.outside1: 0.5
6test 442 pygeodesy.namedTuples.Intersection3Tuple.outside2: 0.5
6test 443 pygeodesy.namedTuples.Intersection3Tuple._validated: True
6test 444 pygeodesy.namedTuples.Intersection3Tuple._validated: True
6test 445 pygeodesy.namedTuples: LatLon2Tuple(lat=0.5, lon=0.5)
6test 446 pygeodesy.namedTuples: LatLon2Tuple(lat=Lat, lon=Lon)
6test 447 pygeodesy.namedTuples.LatLon2Tuple.lat: 0.5
6test 448 pygeodesy.namedTuples.LatLon2Tuple.lon: 0.5
6test 449 pygeodesy.namedTuples.LatLon2Tuple._validated: True
6test 450 pygeodesy.namedTuples.LatLon2Tuple._validated: True
6test 451 pygeodesy.namedTuples: LatLon3Tuple(lat=0.5, lon=0.5, height=0.5)
6test 452 pygeodesy.namedTuples: LatLon3Tuple(lat=Lat, lon=Lon, height=Height)
6test 453 pygeodesy.namedTuples.LatLon3Tuple.lat: 0.5
6test 454 pygeodesy.namedTuples.LatLon3Tuple.lon: 0.5
6test 455 pygeodesy.namedTuples.LatLon3Tuple.height: 0.5
6test 456 pygeodesy.namedTuples.LatLon3Tuple._validated: True
6test 457 pygeodesy.namedTuples.LatLon3Tuple._validated: True
6test 458 pygeodesy.namedTuples: LatLon4Tuple(lat=0.5, lon=0.5, height=0.5, datum=0.5)
6test 459 pygeodesy.namedTuples: LatLon4Tuple(lat=Lat, lon=Lon, height=Height, datum=_Pass)
6test 460 pygeodesy.namedTuples.LatLon4Tuple.lat: 0.5
6test 461 pygeodesy.namedTuples.LatLon4Tuple.lon: 0.5
6test 462 pygeodesy.namedTuples.LatLon4Tuple.height: 0.5
6test 463 pygeodesy.namedTuples.LatLon4Tuple.datum: 0.5
6test 464 pygeodesy.namedTuples.LatLon4Tuple._validated: True
6test 465 pygeodesy.namedTuples.LatLon4Tuple._validated: True
6test 466 pygeodesy.namedTuples: LatLonDatum3Tuple(lat=0.5, lon=0.5, datum=0.5)
6test 467 pygeodesy.namedTuples: LatLonDatum3Tuple(lat=Lat, lon=Lon, datum=_Pass)
6test 468 pygeodesy.namedTuples.LatLonDatum3Tuple.lat: 0.5
6test 469 pygeodesy.namedTuples.LatLonDatum3Tuple.lon: 0.5
6test 470 pygeodesy.namedTuples.LatLonDatum3Tuple.datum: 0.5
6test 471 pygeodesy.namedTuples.LatLonDatum3Tuple._validated: True
6test 472 pygeodesy.namedTuples.LatLonDatum3Tuple._validated: True
6test 473 pygeodesy.namedTuples: LatLonDatum5Tuple(lat=0.5, lon=0.5, datum=0.5, gamma=0.5, scale=0.5)
6test 474 pygeodesy.namedTuples: LatLonDatum5Tuple(lat=Lat, lon=Lon, datum=_Pass, gamma=Degrees, scale=Scalar)
6test 475 pygeodesy.namedTuples.LatLonDatum5Tuple.lat: 0.5
6test 476 pygeodesy.namedTuples.LatLonDatum5Tuple.lon: 0.5
6test 477 pygeodesy.namedTuples.LatLonDatum5Tuple.datum: 0.5
6test 478 pygeodesy.namedTuples.LatLonDatum5Tuple.gamma: 0.5
6test 479 pygeodesy.namedTuples.LatLonDatum5Tuple.scale: 0.5
6test 480 pygeodesy.namedTuples.LatLonDatum5Tuple._validated: True
6test 481 pygeodesy.namedTuples.LatLonDatum5Tuple._validated: True
6test 482 pygeodesy.namedTuples: LatLonPrec3Tuple(lat=0.5, lon=0.5, precision=0)
6test 483 pygeodesy.namedTuples: LatLonPrec3Tuple(lat=Lat, lon=Lon, precision=Precision_)
6test 484 pygeodesy.namedTuples.LatLonPrec3Tuple.lat: 0.5
6test 485 pygeodesy.namedTuples.LatLonPrec3Tuple.lon: 0.5
6test 486 pygeodesy.namedTuples.LatLonPrec3Tuple.precision: 0.5
6test 487 pygeodesy.namedTuples.LatLonPrec3Tuple._validated: True
6test 488 pygeodesy.namedTuples.LatLonPrec3Tuple._validated: True
6test 489 pygeodesy.namedTuples: LatLonPrec5Tuple(lat=0.5, lon=0.5, precision=0, height=0.5, radius=0.5)
6test 490 pygeodesy.namedTuples: LatLonPrec5Tuple(lat=Lat, lon=Lon, precision=Precision_, height=Height, radius=Radius)
6test 491 pygeodesy.namedTuples.LatLonPrec5Tuple.lat: 0.5
6test 492 pygeodesy.namedTuples.LatLonPrec5Tuple.lon: 0.5
6test 493 pygeodesy.namedTuples.LatLonPrec5Tuple.precision: 0.5
6test 494 pygeodesy.namedTuples.LatLonPrec5Tuple.height: 0.5
6test 495 pygeodesy.namedTuples.LatLonPrec5Tuple.radius: 0.5
6test 496 pygeodesy.namedTuples.LatLonPrec5Tuple._validated: True
6test 497 pygeodesy.namedTuples.LatLonPrec5Tuple._validated: True
6test 498 pygeodesy.namedTuples: NearestOn2Tuple(closest=0.5, fraction=0.5)
6test 499 pygeodesy.namedTuples: NearestOn2Tuple(closest=_Pass, fraction=_Pass)
6test 500 pygeodesy.namedTuples.NearestOn2Tuple.closest: 0.5
6test 501 pygeodesy.namedTuples.NearestOn2Tuple.fraction: 0.5
6test 502 pygeodesy.namedTuples.NearestOn2Tuple._validated: True
6test 503 pygeodesy.namedTuples.NearestOn2Tuple._validated: True
6test 504 pygeodesy.namedTuples: NearestOn3Tuple(closest=0.5, distance=0.5, angle=0.5)
6test 505 pygeodesy.namedTuples: NearestOn3Tuple(closest=_Pass, distance=Meter, angle=Degrees)
6test 506 pygeodesy.namedTuples.NearestOn3Tuple.closest: 0.5
6test 507 pygeodesy.namedTuples.NearestOn3Tuple.distance: 0.5
6test 508 pygeodesy.namedTuples.NearestOn3Tuple.angle: 0.5
6test 509 pygeodesy.namedTuples.NearestOn3Tuple._validated: True
6test 510 pygeodesy.namedTuples.NearestOn3Tuple._validated: True
6test 511 pygeodesy.namedTuples: NearestOn4Tuple(lat=0.5, lon=0.5, distance=0.5, normal=0.5)
6test 512 pygeodesy.namedTuples: NearestOn4Tuple(lat=Lat, lon=Lon, distance=Meter, normal=Bearing)
6test 513 pygeodesy.namedTuples.NearestOn4Tuple.lat: 0.5
6test 514 pygeodesy.namedTuples.NearestOn4Tuple.lon: 0.5
6test 515 pygeodesy.namedTuples.NearestOn4Tuple.distance: 0.5
6test 516 pygeodesy.namedTuples.NearestOn4Tuple.normal: 0.5
6test 517 pygeodesy.namedTuples.NearestOn4Tuple._validated: True
6test 518 pygeodesy.namedTuples.NearestOn4Tuple._validated: True
6test 519 pygeodesy.namedTuples: NearestOn5Tuple(lat=0.5, lon=0.5, distance=0.5, angle=0.5, height=0.5)
6test 520 pygeodesy.namedTuples: NearestOn5Tuple(lat=Lat, lon=Lon, distance=Degrees, angle=Degrees, height=Meter)
6test 521 pygeodesy.namedTuples.NearestOn5Tuple.lat: 0.5
6test 522 pygeodesy.namedTuples.NearestOn5Tuple.lon: 0.5
6test 523 pygeodesy.namedTuples.NearestOn5Tuple.distance: 0.5
6test 524 pygeodesy.namedTuples.NearestOn5Tuple.angle: 0.5
6test 525 pygeodesy.namedTuples.NearestOn5Tuple.height: 0.5
6test 526 pygeodesy.namedTuples.NearestOn5Tuple._validated: True
6test 527 pygeodesy.namedTuples.NearestOn5Tuple._validated: True
6test 528 pygeodesy.namedTuples: NearestOn6Tuple(closest=0.5, distance=0.5, fi=0.5, j=0, start=0.5, end=0.5)
6test 529 pygeodesy.namedTuples: NearestOn6Tuple(closest=_Pass, distance=Meter, fi=FIx, j=Number_, start=_Pass, end=_Pass)
6test 530 pygeodesy.namedTuples.NearestOn6Tuple.closest: 0.5
6test 531 pygeodesy.namedTuples.NearestOn6Tuple.distance: 0.5
6test 532 pygeodesy.namedTuples.NearestOn6Tuple.fi: 0.5
6test 533 pygeodesy.namedTuples.NearestOn6Tuple.j: 0.5
6test 534 pygeodesy.namedTuples.NearestOn6Tuple.start: 0.5
6test 535 pygeodesy.namedTuples.NearestOn6Tuple.end: 0.5
6test 536 pygeodesy.namedTuples.NearestOn6Tuple._validated: True
6test 537 pygeodesy.namedTuples.NearestOn6Tuple._validated: True
6test 538 pygeodesy.namedTuples: NearestOn8Tuple(closest=0.5, distance=0.5, fi=0.5, j=0, start=0.5, end=0.5, initial=0.5, final=0.5)
6test 539 pygeodesy.namedTuples: NearestOn8Tuple(closest=_Pass, distance=Meter, fi=FIx, j=Number_, start=_Pass, end=_Pass, initial=Bearing, final=Bearing)
6test 540 pygeodesy.namedTuples.NearestOn8Tuple.closest: 0.5
6test 541 pygeodesy.namedTuples.NearestOn8Tuple.distance: 0.5
6test 542 pygeodesy.namedTuples.NearestOn8Tuple.fi: 0.5
6test 543 pygeodesy.namedTuples.NearestOn8Tuple.j: 0.5
6test 544 pygeodesy.namedTuples.NearestOn8Tuple.start: 0.5
6test 545 pygeodesy.namedTuples.NearestOn8Tuple.end: 0.5
6test 546 pygeodesy.namedTuples.NearestOn8Tuple.initial: 0.5
6test 547 pygeodesy.namedTuples.NearestOn8Tuple.final: 0.5
6test 548 pygeodesy.namedTuples.NearestOn8Tuple._validated: True
6test 549 pygeodesy.namedTuples.NearestOn8Tuple._validated: True
6test 550 pygeodesy.namedTuples: PhiLam2Tuple(phi=0.5, lam=0.5)
6test 551 pygeodesy.namedTuples: PhiLam2Tuple(phi=Phi, lam=Lam)
6test 552 pygeodesy.namedTuples.PhiLam2Tuple.phi: 0.5
6test 553 pygeodesy.namedTuples.PhiLam2Tuple.lam: 0.5
6test 554 pygeodesy.namedTuples.PhiLam2Tuple._validated: True
6test 555 pygeodesy.namedTuples.PhiLam2Tuple._validated: True
6test 556 pygeodesy.namedTuples: PhiLam3Tuple(phi=0.5, lam=0.5, height=0.5)
6test 557 pygeodesy.namedTuples: PhiLam3Tuple(phi=Phi, lam=Lam, height=Height)
6test 558 pygeodesy.namedTuples.PhiLam3Tuple.phi: 0.5
6test 559 pygeodesy.namedTuples.PhiLam3Tuple.lam: 0.5
6test 560 pygeodesy.namedTuples.PhiLam3Tuple.height: 0.5
6test 561 pygeodesy.namedTuples.PhiLam3Tuple._validated: True
6test 562 pygeodesy.namedTuples.PhiLam3Tuple._validated: True
6test 563 pygeodesy.namedTuples: PhiLam4Tuple(phi=0.5, lam=0.5, height=0.5, datum=0.5)
6test 564 pygeodesy.namedTuples: PhiLam4Tuple(phi=Phi, lam=Lam, height=Height, datum=_Pass)
6test 565 pygeodesy.namedTuples.PhiLam4Tuple.phi: 0.5
6test 566 pygeodesy.namedTuples.PhiLam4Tuple.lam: 0.5
6test 567 pygeodesy.namedTuples.PhiLam4Tuple.height: 0.5
6test 568 pygeodesy.namedTuples.PhiLam4Tuple.datum: 0.5
6test 569 pygeodesy.namedTuples.PhiLam4Tuple._validated: True
6test 570 pygeodesy.namedTuples.PhiLam4Tuple._validated: True
6test 571 pygeodesy.namedTuples: Point3Tuple(x=0.5, y=0.5, ll=0.5)
6test 572 pygeodesy.namedTuples: Point3Tuple(x=Meter, y=Meter, ll=_Pass)
6test 573 pygeodesy.namedTuples.Point3Tuple.x: 0.5
6test 574 pygeodesy.namedTuples.Point3Tuple.y: 0.5
6test 575 pygeodesy.namedTuples.Point3Tuple.ll: 0.5
6test 576 pygeodesy.namedTuples.Point3Tuple._validated: True
6test 577 pygeodesy.namedTuples.Point3Tuple._validated: True
6test 578 pygeodesy.namedTuples: Points2Tuple(number=0, points=0.5)
6test 579 pygeodesy.namedTuples: Points2Tuple(number=Number_, points=_Pass)
6test 580 pygeodesy.namedTuples.Points2Tuple.number: 0.5
6test 581 pygeodesy.namedTuples.Points2Tuple.points: 0.5
6test 582 pygeodesy.namedTuples.Points2Tuple._validated: True
6test 583 pygeodesy.namedTuples.Points2Tuple._validated: True
6test 584 pygeodesy.namedTuples: Reverse4Tuple(lat=0.5, lon=0.5, gamma=0.5, scale=0.5)
6test 585 pygeodesy.namedTuples: Reverse4Tuple(lat=Lat, lon=Lon, gamma=Degrees, scale=Scalar)
6test 586 pygeodesy.namedTuples.Reverse4Tuple.lat: 0.5
6test 587 pygeodesy.namedTuples.Reverse4Tuple.lon: 0.5
6test 588 pygeodesy.namedTuples.Reverse4Tuple.gamma: 0.5
6test 589 pygeodesy.namedTuples.Reverse4Tuple.scale: 0.5
6test 590 pygeodesy.namedTuples.Reverse4Tuple._validated: True
6test 591 pygeodesy.namedTuples.Reverse4Tuple._validated: True
6test 592 pygeodesy.namedTuples: Triangle7Tuple(A=0.5, a=0.5, B=0.5, b=0.5, C=0.5, c=0.5, area=0.5)
6test 593 pygeodesy.namedTuples: Triangle7Tuple(A=Degrees, a=Meter, B=Degrees, b=Meter, C=Degrees, c=Meter, area=Meter2)
6test 594 pygeodesy.namedTuples.Triangle7Tuple.A: 0.5
6test 595 pygeodesy.namedTuples.Triangle7Tuple.a: 0.5
6test 596 pygeodesy.namedTuples.Triangle7Tuple.B: 0.5
6test 597 pygeodesy.namedTuples.Triangle7Tuple.b: 0.5
6test 598 pygeodesy.namedTuples.Triangle7Tuple.C: 0.5
6test 599 pygeodesy.namedTuples.Triangle7Tuple.c: 0.5
6test 600 pygeodesy.namedTuples.Triangle7Tuple.area: 0.5
6test 601 pygeodesy.namedTuples.Triangle7Tuple._validated: True
6test 602 pygeodesy.namedTuples.Triangle7Tuple._validated: True
6test 603 pygeodesy.namedTuples: Triangle8Tuple(A=0.5, a=0.5, B=0.5, b=0.5, C=0.5, c=0.5, D=0.5, E=0.5)
6test 604 pygeodesy.namedTuples: Triangle8Tuple(A=Radians, a=Radians, B=Radians, b=Radians, C=Radians, c=Radians, D=Radians, E=Radians)
6test 605 pygeodesy.namedTuples.Triangle8Tuple.A: 0.5
6test 606 pygeodesy.namedTuples.Triangle8Tuple.a: 0.5
6test 607 pygeodesy.namedTuples.Triangle8Tuple.B: 0.5
6test 608 pygeodesy.namedTuples.Triangle8Tuple.b: 0.5
6test 609 pygeodesy.namedTuples.Triangle8Tuple.C: 0.5
6test 610 pygeodesy.namedTuples.Triangle8Tuple.c: 0.5
6test 611 pygeodesy.namedTuples.Triangle8Tuple.D: 0.5
6test 612 pygeodesy.namedTuples.Triangle8Tuple.E: 0.5
6test 613 pygeodesy.namedTuples.Triangle8Tuple._validated: True
6test 614 pygeodesy.namedTuples.Triangle8Tuple._validated: True
6test 615 pygeodesy.namedTuples: Trilaterate5Tuple(min=0.5, minPoint=0.5, max=0.5, maxPoint=0.5, n=0)
6test 616 pygeodesy.namedTuples: Trilaterate5Tuple(min=Meter, minPoint=_Pass, max=Meter, maxPoint=_Pass, n=Number_)
6test 617 pygeodesy.namedTuples.Trilaterate5Tuple.min: 0.5
6test 618 pygeodesy.namedTuples.Trilaterate5Tuple.minPoint: 0.5
6test 619 pygeodesy.namedTuples.Trilaterate5Tuple.max: 0.5
6test 620 pygeodesy.namedTuples.Trilaterate5Tuple.maxPoint: 0.5
6test 621 pygeodesy.namedTuples.Trilaterate5Tuple.n: 0.5
6test 622 pygeodesy.namedTuples.Trilaterate5Tuple._validated: True
6test 623 pygeodesy.namedTuples.Trilaterate5Tuple._validated: True
6test 624 pygeodesy.namedTuples: UtmUps2Tuple(zone=0, hemipole='0.5')
6test 625 pygeodesy.namedTuples: UtmUps2Tuple(zone=Number_, hemipole=Str)
6test 626 pygeodesy.namedTuples.UtmUps2Tuple.zone: 0.5
6test 627 pygeodesy.namedTuples.UtmUps2Tuple.hemipole: 0.5
6test 628 pygeodesy.namedTuples.UtmUps2Tuple._validated: True
6test 629 pygeodesy.namedTuples.UtmUps2Tuple._validated: True
6test 630 pygeodesy.namedTuples: UtmUps5Tuple(zone=0, hemipole='0.5', easting=0.5, northing=0.5, band='0.5')
6test 631 pygeodesy.namedTuples: UtmUps5Tuple(zone=Number_, hemipole=Str, easting=Easting, northing=Northing, band=Band)
6test 632 pygeodesy.namedTuples.UtmUps5Tuple.zone: 0.5
6test 633 pygeodesy.namedTuples.UtmUps5Tuple.hemipole: 0.5
6test 634 pygeodesy.namedTuples.UtmUps5Tuple.easting: 0.5
6test 635 pygeodesy.namedTuples.UtmUps5Tuple.northing: 0.5
6test 636 pygeodesy.namedTuples.UtmUps5Tuple.band: 0.5
6test 637 pygeodesy.namedTuples.UtmUps5Tuple._validated: True
6test 638 pygeodesy.namedTuples.UtmUps5Tuple._validated: True
6test 639 pygeodesy.namedTuples: UtmUps8Tuple(zone=0, hemipole='0.5', easting=0.5, northing=0.5, band='0.5', datum=0.5, gamma=0.5, scale=0.5)
6test 640 pygeodesy.namedTuples: UtmUps8Tuple(zone=Number_, hemipole=Str, easting=Easting, northing=Northing, band=Band, datum=_Pass, gamma=Degrees, scale=Scalar)
6test 641 pygeodesy.namedTuples.UtmUps8Tuple.zone: 0.5
6test 642 pygeodesy.namedTuples.UtmUps8Tuple.hemipole: 0.5
6test 643 pygeodesy.namedTuples.UtmUps8Tuple.easting: 0.5
6test 644 pygeodesy.namedTuples.UtmUps8Tuple.northing: 0.5
6test 645 pygeodesy.namedTuples.UtmUps8Tuple.band: 0.5
6test 646 pygeodesy.namedTuples.UtmUps8Tuple.datum: 0.5
6test 647 pygeodesy.namedTuples.UtmUps8Tuple.gamma: 0.5
6test 648 pygeodesy.namedTuples.UtmUps8Tuple.scale: 0.5
6test 649 pygeodesy.namedTuples.UtmUps8Tuple._validated: True
6test 650 pygeodesy.namedTuples.UtmUps8Tuple._validated: True
6test 651 pygeodesy.namedTuples: UtmUpsLatLon5Tuple(zone=0, band='0.5', hemipole='0.5', lat=0.5, lon=0.5)
6test 652 pygeodesy.namedTuples: UtmUpsLatLon5Tuple(zone=Number_, band=Band, hemipole=Str, lat=Lat, lon=Lon)
6test 653 pygeodesy.namedTuples.UtmUpsLatLon5Tuple.zone: 0.5
6test 654 pygeodesy.namedTuples.UtmUpsLatLon5Tuple.band: 0.5
6test 655 pygeodesy.namedTuples.UtmUpsLatLon5Tuple.hemipole: 0.5
6test 656 pygeodesy.namedTuples.UtmUpsLatLon5Tuple.lat: 0.5
6test 657 pygeodesy.namedTuples.UtmUpsLatLon5Tuple.lon: 0.5
6test 658 pygeodesy.namedTuples.UtmUpsLatLon5Tuple._validated: True
6test 659 pygeodesy.namedTuples.UtmUpsLatLon5Tuple._validated: True
6test 660 pygeodesy.namedTuples: Vector2Tuple(x=0.5, y=0.5)
6test 661 pygeodesy.namedTuples: Vector2Tuple(x=Scalar, y=Scalar)
6test 662 pygeodesy.namedTuples.Vector2Tuple.x: 0.5
6test 663 pygeodesy.namedTuples.Vector2Tuple.y: 0.5
6test 664 pygeodesy.namedTuples.Vector2Tuple._validated: True
6test 665 pygeodesy.namedTuples.Vector2Tuple._validated: True
6test 666 pygeodesy.namedTuples: Vector3Tuple(x=0.5, y=0.5, z=0.5)
6test 667 pygeodesy.namedTuples: Vector3Tuple(x=Scalar, y=Scalar, z=Scalar)
6test 668 pygeodesy.namedTuples.Vector3Tuple.x: 0.5
6test 669 pygeodesy.namedTuples.Vector3Tuple.y: 0.5
6test 670 pygeodesy.namedTuples.Vector3Tuple.z: 0.5
6test 671 pygeodesy.namedTuples.Vector3Tuple._validated: True
6test 672 pygeodesy.namedTuples.Vector3Tuple._validated: True
6test 673 pygeodesy.namedTuples: Vector4Tuple(x=0.5, y=0.5, z=0.5, h=0.5)
6test 674 pygeodesy.namedTuples: Vector4Tuple(x=Scalar, y=Scalar, z=Scalar, h=Height)
6test 675 pygeodesy.namedTuples.Vector4Tuple.x: 0.5
6test 676 pygeodesy.namedTuples.Vector4Tuple.y: 0.5
6test 677 pygeodesy.namedTuples.Vector4Tuple.z: 0.5
6test 678 pygeodesy.namedTuples.Vector4Tuple.h: 0.5
6test 679 pygeodesy.namedTuples.Vector4Tuple._validated: True
6test 680 pygeodesy.namedTuples.Vector4Tuple._validated: True
6test 681 pygeodesy.points: Shape2Tuple(nrows=0, ncols=0)
6test 682 pygeodesy.points: Shape2Tuple(nrows=Number_, ncols=Number_)
6test 683 pygeodesy.points.Shape2Tuple.nrows: 0.5
6test 684 pygeodesy.points.Shape2Tuple.ncols: 0.5
6test 685 pygeodesy.points.Shape2Tuple._validated: True
6test 686 pygeodesy.points.Shape2Tuple._validated: True
6test 687 pygeodesy.resections: Collins5Tuple(pointP=0.5, pointH=0.5, a=0.5, b=0.5, c=0.5)
6test 688 pygeodesy.resections: Collins5Tuple(pointP=_Pass, pointH=_Pass, a=Distance, b=Distance, c=Distance)
6test 689 pygeodesy.resections.Collins5Tuple.pointP: 0.5
6test 690 pygeodesy.resections.Collins5Tuple.pointH: 0.5
6test 691 pygeodesy.resections.Collins5Tuple.a: 0.5
6test 692 pygeodesy.resections.Collins5Tuple.b: 0.5
6test 693 pygeodesy.resections.Collins5Tuple.c: 0.5
6test 694 pygeodesy.resections.Collins5Tuple._validated: True
6test 695 pygeodesy.resections.Collins5Tuple._validated: True
6test 696 pygeodesy.resections: Survey3Tuple(PA=0.5, PB=0.5, PC=0.5)
6test 697 pygeodesy.resections: Survey3Tuple(PA=Distance, PB=Distance, PC=Distance)
6test 698 pygeodesy.resections.Survey3Tuple.PA: 0.5
6test 699 pygeodesy.resections.Survey3Tuple.PB: 0.5
6test 700 pygeodesy.resections.Survey3Tuple.PC: 0.5
6test 701 pygeodesy.resections.Survey3Tuple._validated: True
6test 702 pygeodesy.resections.Survey3Tuple._validated: True
6test 703 pygeodesy.resections: Tienstra7Tuple(pointP=0.5, A=0.5, B=0.5, C=0.5, a=0.5, b=0.5, c=0.5)
6test 704 pygeodesy.resections: Tienstra7Tuple(pointP=_Pass, A=Degrees, B=Degrees, C=Degrees, a=Distance, b=Distance, c=Distance)
6test 705 pygeodesy.resections.Tienstra7Tuple.pointP: 0.5
6test 706 pygeodesy.resections.Tienstra7Tuple.A: 0.5
6test 707 pygeodesy.resections.Tienstra7Tuple.B: 0.5
6test 708 pygeodesy.resections.Tienstra7Tuple.C: 0.5
6test 709 pygeodesy.resections.Tienstra7Tuple.a: 0.5
6test 710 pygeodesy.resections.Tienstra7Tuple.b: 0.5
6test 711 pygeodesy.resections.Tienstra7Tuple.c: 0.5
6test 712 pygeodesy.resections.Tienstra7Tuple._validated: True
6test 713 pygeodesy.resections.Tienstra7Tuple._validated: True
6test 714 pygeodesy.resections: TriAngle4Tuple(radA=0.5, radB=0.5, radC=0.5, rIn=0.5)
6test 715 pygeodesy.resections: TriAngle4Tuple(radA=Radians, radB=Radians, radC=Radians, rIn=Distance)
6test 716 pygeodesy.resections.TriAngle4Tuple.radA: 0.5
6test 717 pygeodesy.resections.TriAngle4Tuple.radB: 0.5
6test 718 pygeodesy.resections.TriAngle4Tuple.radC: 0.5
6test 719 pygeodesy.resections.TriAngle4Tuple.rIn: 0.5
6test 720 pygeodesy.resections.TriAngle4Tuple._validated: True
6test 721 pygeodesy.resections.TriAngle4Tuple._validated: True
6test 722 pygeodesy.resections: TriSide2Tuple(a=0.5, radA=0.5)
6test 723 pygeodesy.resections: TriSide2Tuple(a=Distance, radA=Radians)
6test 724 pygeodesy.resections.TriSide2Tuple.a: 0.5
6test 725 pygeodesy.resections.TriSide2Tuple.radA: 0.5
6test 726 pygeodesy.resections.TriSide2Tuple._validated: True
6test 727 pygeodesy.resections.TriSide2Tuple._validated: True
6test 728 pygeodesy.resections: TriSide4Tuple(a=0.5, b=0.5, radC=0.5, d=0.5)
6test 729 pygeodesy.resections: TriSide4Tuple(a=Distance, b=Distance, radC=Radians, d=Distance)
6test 730 pygeodesy.resections.TriSide4Tuple.a: 0.5
6test 731 pygeodesy.resections.TriSide4Tuple.b: 0.5
6test 732 pygeodesy.resections.TriSide4Tuple.radC: 0.5
6test 733 pygeodesy.resections.TriSide4Tuple.d: 0.5
6test 734 pygeodesy.resections.TriSide4Tuple._validated: True
6test 735 pygeodesy.resections.TriSide4Tuple._validated: True
6test 736 pygeodesy.rhumbsolve: RhumbSolve7Tuple(lat1=0.5, lon1=0.5, lat2=0.5, lon2=0.5, azi12=0.5, s12=0.5, S12=0.5)
6test 737 pygeodesy.rhumbsolve: RhumbSolve7Tuple(lat1=_Lat, lon1=_Lon, lat2=_Lat, lon2=_Lon, azi12=Bearing, s12=Meter, S12=Meter2)
6test 738 pygeodesy.rhumbsolve.RhumbSolve7Tuple.lat1: 0.5
6test 739 pygeodesy.rhumbsolve.RhumbSolve7Tuple.lon1: 0.5
6test 740 pygeodesy.rhumbsolve.RhumbSolve7Tuple.lat2: 0.5
6test 741 pygeodesy.rhumbsolve.RhumbSolve7Tuple.lon2: 0.5
6test 742 pygeodesy.rhumbsolve.RhumbSolve7Tuple.azi12: 0.5
6test 743 pygeodesy.rhumbsolve.RhumbSolve7Tuple.s12: 0.5
6test 744 pygeodesy.rhumbsolve.RhumbSolve7Tuple.S12: 0.5
6test 745 pygeodesy.rhumbsolve.RhumbSolve7Tuple._validated: True
6test 746 pygeodesy.rhumbsolve.RhumbSolve7Tuple._validated: True
6test 747 pygeodesy.rhumbx: Rhumb8Tuple(lat1=0.5, lon1=0.5, lat2=0.5, lon2=0.5, azi12=0.5, s12=0.5, S12=0.5, a12=0.5)
6test 748 pygeodesy.rhumbx: Rhumb8Tuple(lat1=_Lat, lon1=_Lon, lat2=_Lat, lon2=_Lon, azi12=Bearing, s12=Meter, S12=Meter2, a12=Degrees)
6test 749 pygeodesy.rhumbx.Rhumb8Tuple.lat1: 0.5
6test 750 pygeodesy.rhumbx.Rhumb8Tuple.lon1: 0.5
6test 751 pygeodesy.rhumbx.Rhumb8Tuple.lat2: 0.5
6test 752 pygeodesy.rhumbx.Rhumb8Tuple.lon2: 0.5
6test 753 pygeodesy.rhumbx.Rhumb8Tuple.azi12: 0.5
6test 754 pygeodesy.rhumbx.Rhumb8Tuple.s12: 0.5
6test 755 pygeodesy.rhumbx.Rhumb8Tuple.S12: 0.5
6test 756 pygeodesy.rhumbx.Rhumb8Tuple.a12: 0.5
6test 757 pygeodesy.rhumbx.Rhumb8Tuple._validated: True
6test 758 pygeodesy.rhumbx.Rhumb8Tuple._validated: True
6test 759 pygeodesy.rhumbx: RhumbOrder2Tuple(RAorder=0, TMorder=0)
6test 760 pygeodesy.rhumbx: RhumbOrder2Tuple(RAorder=Int, TMorder=Int)
6test 761 pygeodesy.rhumbx.RhumbOrder2Tuple.RAorder: 0.5
6test 762 pygeodesy.rhumbx.RhumbOrder2Tuple.TMorder: 0.5
6test 763 pygeodesy.rhumbx.RhumbOrder2Tuple._validated: True
6test 764 pygeodesy.rhumbx.RhumbOrder2Tuple._validated: True
6test 765 pygeodesy.trf: Helmert7Tuple(tx=0.5, ty=0.5, tz=0.5, s=0.5, sx=0.5, sy=0.5, sz=0.5)
6test 766 pygeodesy.trf: Helmert7Tuple(tx=Float, ty=Float, tz=Float, s=Float, sx=Float, sy=Float, sz=Float)
6test 767 pygeodesy.trf.Helmert7Tuple.tx: 0.5
6test 768 pygeodesy.trf.Helmert7Tuple.ty: 0.5
6test 769 pygeodesy.trf.Helmert7Tuple.tz: 0.5
6test 770 pygeodesy.trf.Helmert7Tuple.s: 0.5
6test 771 pygeodesy.trf.Helmert7Tuple.sx: 0.5
6test 772 pygeodesy.trf.Helmert7Tuple.sy: 0.5
6test 773 pygeodesy.trf.Helmert7Tuple.sz: 0.5
6test 774 pygeodesy.trf.Helmert7Tuple._validated: True
6test 775 pygeodesy.trf.Helmert7Tuple._validated: True
6test 776 pygeodesy.trf: Helmert7Tuple(tx=0.5, ty=0.5, tz=0.5, s=0.5, sx=0.5, sy=0.5, sz=0.5)
6test 777 pygeodesy.trf: Helmert7Tuple(tx=Float, ty=Float, tz=Float, s=Float, sx=Float, sy=Float, sz=Float)
6test 778 pygeodesy.trf.Helmert7Tuple.tx: 0.5
6test 779 pygeodesy.trf.Helmert7Tuple.ty: 0.5
6test 780 pygeodesy.trf.Helmert7Tuple.tz: 0.5
6test 781 pygeodesy.trf.Helmert7Tuple.s: 0.5
6test 782 pygeodesy.trf.Helmert7Tuple.sx: 0.5
6test 783 pygeodesy.trf.Helmert7Tuple.sy: 0.5
6test 784 pygeodesy.trf.Helmert7Tuple.sz: 0.5
6test 785 pygeodesy.trf.Helmert7Tuple._validated: True
6test 786 pygeodesy.trf.Helmert7Tuple._validated: True
6test 787 pygeodesy.triaxials: BetaOmega2Tuple(beta=0.5, omega=0.5)
6test 788 pygeodesy.triaxials: BetaOmega2Tuple(beta=_Pass, omega=_Pass)
6test 789 pygeodesy.triaxials.BetaOmega2Tuple.beta: 0.5
6test 790 pygeodesy.triaxials.BetaOmega2Tuple.omega: 0.5
6test 791 pygeodesy.triaxials.BetaOmega2Tuple._validated: True
6test 792 pygeodesy.triaxials.BetaOmega2Tuple._validated: True
6test 793 pygeodesy.triaxials: BetaOmega3Tuple(beta=0.5, omega=0.5, height=0.5)
6test 794 pygeodesy.triaxials: BetaOmega3Tuple(beta=_Pass, omega=_Pass, height=Meter)
6test 795 pygeodesy.triaxials.BetaOmega3Tuple.beta: 0.5
6test 796 pygeodesy.triaxials.BetaOmega3Tuple.omega: 0.5
6test 797 pygeodesy.triaxials.BetaOmega3Tuple.height: 0.5
6test 798 pygeodesy.triaxials.BetaOmega3Tuple._validated: True
6test 799 pygeodesy.triaxials.BetaOmega3Tuple._validated: True
6test 800 pygeodesy.triaxials: Jacobi2Tuple(x=0.5, y=0.5)
6test 801 pygeodesy.triaxials: Jacobi2Tuple(x=_Pass, y=_Pass)
6test 802 pygeodesy.triaxials.Jacobi2Tuple.x: 0.5
6test 803 pygeodesy.triaxials.Jacobi2Tuple.y: 0.5
6test 804 pygeodesy.triaxials.Jacobi2Tuple._validated: True
6test 805 pygeodesy.triaxials.Jacobi2Tuple._validated: True
6test 806 pygeodesy.vector2d: Circin6Tuple(radius=0.5, center=0.5, deltas=0.5, cA=0.5, cB=0.5, cC=0.5)
6test 807 pygeodesy.vector2d: Circin6Tuple(radius=Radius, center=_Pass, deltas=_Pass, cA=_Pass, cB=_Pass, cC=_Pass)
6test 808 pygeodesy.vector2d.Circin6Tuple.radius: 0.5
6test 809 pygeodesy.vector2d.Circin6Tuple.center: 0.5
6test 810 pygeodesy.vector2d.Circin6Tuple.deltas: 0.5
6test 811 pygeodesy.vector2d.Circin6Tuple.cA: 0.5
6test 812 pygeodesy.vector2d.Circin6Tuple.cB: 0.5
6test 813 pygeodesy.vector2d.Circin6Tuple.cC: 0.5
6test 814 pygeodesy.vector2d.Circin6Tuple._validated: True
6test 815 pygeodesy.vector2d.Circin6Tuple._validated: True
6test 816 pygeodesy.vector2d: Circum3Tuple(radius=0.5, center=0.5, deltas=0.5)
6test 817 pygeodesy.vector2d: Circum3Tuple(radius=Radius, center=_Pass, deltas=_Pass)
6test 818 pygeodesy.vector2d.Circum3Tuple.radius: 0.5
6test 819 pygeodesy.vector2d.Circum3Tuple.center: 0.5
6test 820 pygeodesy.vector2d.Circum3Tuple.deltas: 0.5
6test 821 pygeodesy.vector2d.Circum3Tuple._validated: True
6test 822 pygeodesy.vector2d.Circum3Tuple._validated: True
6test 823 pygeodesy.vector2d: Circum4Tuple(radius=0.5, center=0.5, rank=0, residuals=0.5)
6test 824 pygeodesy.vector2d: Circum4Tuple(radius=Radius, center=_Pass, rank=Int, residuals=_Pass)
6test 825 pygeodesy.vector2d.Circum4Tuple.radius: 0.5
6test 826 pygeodesy.vector2d.Circum4Tuple.center: 0.5
6test 827 pygeodesy.vector2d.Circum4Tuple.rank: 0.5
6test 828 pygeodesy.vector2d.Circum4Tuple.residuals: 0.5
6test 829 pygeodesy.vector2d.Circum4Tuple._validated: True
6test 830 pygeodesy.vector2d.Circum4Tuple._validated: True
6test 831 pygeodesy.vector2d: Meeus2Tuple(radius=0.5, Type=0.5)
6test 832 pygeodesy.vector2d: Meeus2Tuple(radius=Radius, Type=_Pass)
6test 833 pygeodesy.vector2d.Meeus2Tuple.radius: 0.5
6test 834 pygeodesy.vector2d.Meeus2Tuple.Type: 0.5
6test 835 pygeodesy.vector2d.Meeus2Tuple._validated: True
6test 836 pygeodesy.vector2d.Meeus2Tuple._validated: True
6test 837 pygeodesy.vector2d: Radii11Tuple(rA=0.5, rB=0.5, rC=0.5, cR=0.5, rIn=0.5, riS=0.5, roS=0.5, a=0.5, b=0.5, c=0.5, s=0.5)
6test 838 pygeodesy.vector2d: Radii11Tuple(rA=Meter, rB=Meter, rC=Meter, cR=Meter, rIn=Meter, riS=Meter, roS=Meter, a=Meter, b=Meter, c=Meter, s=Meter)
6test 839 pygeodesy.vector2d.Radii11Tuple.rA: 0.5
6test 840 pygeodesy.vector2d.Radii11Tuple.rB: 0.5
6test 841 pygeodesy.vector2d.Radii11Tuple.rC: 0.5
6test 842 pygeodesy.vector2d.Radii11Tuple.cR: 0.5
6test 843 pygeodesy.vector2d.Radii11Tuple.rIn: 0.5
6test 844 pygeodesy.vector2d.Radii11Tuple.riS: 0.5
6test 845 pygeodesy.vector2d.Radii11Tuple.roS: 0.5
6test 846 pygeodesy.vector2d.Radii11Tuple.a: 0.5
6test 847 pygeodesy.vector2d.Radii11Tuple.b: 0.5
6test 848 pygeodesy.vector2d.Radii11Tuple.c: 0.5
6test 849 pygeodesy.vector2d.Radii11Tuple.s: 0.5
6test 850 pygeodesy.vector2d.Radii11Tuple._validated: True
6test 851 pygeodesy.vector2d.Radii11Tuple._validated: True
6test 852 pygeodesy.vector2d: Soddy4Tuple(radius=0.5, center=0.5, deltas=0.5, outer=0.5)
6test 853 pygeodesy.vector2d: Soddy4Tuple(radius=Radius, center=_Pass, deltas=_Pass, outer=Radius)
6test 854 pygeodesy.vector2d.Soddy4Tuple.radius: 0.5
6test 855 pygeodesy.vector2d.Soddy4Tuple.center: 0.5
6test 856 pygeodesy.vector2d.Soddy4Tuple.deltas: 0.5
6test 857 pygeodesy.vector2d.Soddy4Tuple.outer: 0.5
6test 858 pygeodesy.vector2d.Soddy4Tuple._validated: True
6test 859 pygeodesy.vector2d.Soddy4Tuple._validated: True
6test 860 pygeodesy.webmercator: EasNorRadius3Tuple(easting=0.5, northing=0.5, radius=0.5)
6test 861 pygeodesy.webmercator: EasNorRadius3Tuple(easting=Easting, northing=Northing, radius=Radius)
6test 862 pygeodesy.webmercator.EasNorRadius3Tuple.easting: 0.5
6test 863 pygeodesy.webmercator.EasNorRadius3Tuple.northing: 0.5
6test 864 pygeodesy.webmercator.EasNorRadius3Tuple.radius: 0.5
6test 865 pygeodesy.webmercator.EasNorRadius3Tuple._validated: True
6test 866 pygeodesy.webmercator.EasNorRadius3Tuple._validated: True
6test 867 pygeodesy.named._NamedTuple._validated: False
6all 867 testNamedTuples.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 19.787 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testNavlabExamples.py
./pygeodesy/ellipsoidalNvector.py:57: DeprecationWarning: class L{pygeodesy.ellipsoidalNvector.Ned} has been DEPRECATED, use class L{pygeodesy.Ned}.
  deprecated_class(self.__class__)
./test/testNavlabExamples.py:41: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Ned.toRepr} has been DEPRECATED, use class L{pygeodesy.Ned}.
  t.test(1, 'delta', delta.toRepr(prec=3), '[L:470357.384, B:45.109°, E:-2.12°]')  # DEPRECATED
./test/testNavlabExamples.py:43: DeprecationWarning: Property_RO L{pygeodesy.ellipsoidalNvector.Ned.bearing} has been DEPRECATED, use C{azimuth}.
  t.test(1, 'bearing', delta.bearing, 45.109, fmt='%.3f')  # 45.109°
./test/testNavlabExamples.py:44: DeprecationWarning: Property_RO L{pygeodesy.ellipsoidalNvector.Ned.length} has been DEPRECATED, use C{slantrange}.
  t.test(1, 'length', delta.length, 470357.384, fmt='%.3f')  # 470357.384 m
./test/testNavlabExamples.py:63: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Ned.toRepr} has been DEPRECATED, use class L{pygeodesy.Ned}.
  t.test(2, 'delta', delta.toRepr(prec=3), '[L:3606.938, B:33.69°, E:-1.589°]')  # DEPRECATED
./pygeodesy/ellipsoidalNvector.py:280: DeprecationWarning: Property_RO L{pygeodesy.ellipsoidalNvector.Ned.ned} has been DEPRECATED, use property C{ned4}.
  dn = delta.ned
./pygeodesy/deprecated/__init__.py:64: DeprecationWarning: class L{pygeodesy.deprecated.Ned3Tuple} has been DEPRECATED, use class L{pygeodesy.Ned4Tuple}.
  deprecated_class(cls)
./test/testNavlabExamples.py:71: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Ned.toRepr} has been DEPRECATED, use class L{pygeodesy.Ned}.
  t.test(2, 'delta', delta.toRepr(prec=3), '[L:116807.681, B:222.493°, E:-0.524°]')  # DEPRECATED
./test/testNavlabExamples.py:143: DeprecationWarning: function L{pygeodesy.ellipsoidalNvector.toNed} has been DEPRECATED, use L{pygeodesy.Aer}C{(bearing, elevation, distance).xyzLocal.toNed(B{Ned}, name=B{name})} or L{XyzLocal}C{(pygeodesy.Aer(bearing, elevation, distance)).toNed(B{Ned}, name=B{name})}.
  d = ellipsoidalNvector.toNed(116809.178, 222.493, -0.5416)
./test/testNavlabExamples.py:145: DeprecationWarning: Property_RO L{pygeodesy.ellipsoidalNvector.Ned.bearing} has been DEPRECATED, use C{azimuth}.
  TestsBase.test(t, 'bearing',   d.bearing, '227.507',  fmt='%.3f')  # '222.493'
./test/testNavlabExamples.py:147: DeprecationWarning: Property_RO L{pygeodesy.ellipsoidalNvector.Ned.length} has been DEPRECATED, use C{slantrange}.
  TestsBase.test(t, 'length',    d.length, '116809.178',  fmt='%.3f')
./test/testNavlabExamples.py:148: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Ned.toVector3d} has been DEPRECATED, use property L{xyz}.
  v = d.toVector3d()
6testing testNavlabExamples.py 21.09.17
6test 1 Example 1 delta: [331730.863, 332998.501, 17398.304]
6test 2 Example 1 delta: [L:470357.384, B:45.109°, E:-2.12°]
6test 3 Example 1 elevation: -2.1198
6test 4 Example 1 bearing: 45.109
6test 5 Example 1 length: 470357.384
6test 6 Example 1 delta: [331730.863, 332998.501, 17398.304]
6test 7 Example 1 delta: <class 'pygeodesy.ltpTuples.Ned'>
6test 8 Example 1 delta: (331730.863099, 332998.501491, 17398.304211, Ltp(lat0=1.0, lon0=2.0, height0=3.0, M=EcefMatrix(_0_0_=-0.034899, _0_1_=-0.017442, _0_2_=0.999239, _1_0_=0.999391, _1_1_=-0.000609, _1_2_=0.034894, _2_0_=0.0, _2_1_=0.999848, _2_2_=0.017452), ecef=EcefVeness(a=6378137.0, f=0.003352811, datum=Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), name=''), name=''))
6test 9 Example 1 delta: <class 'pygeodesy.ltpTuples.Ned4Tuple'>
6test 10 Example 1 delta: <class 'pygeodesy.ecef.EcefVeness'>
6test 11 Example 2 LatLon: 53.301°N, 063.435°E, +400.00m
6test 12 Example 2 toNvector: (0.267, 0.535, 0.802, +400.00)
6test 13 Example 2 delta: [3000.0, 2000.0, 100.0]
6test 14 Example 2 delta: [L:3606.938, B:33.69°, E:-1.589°]
6test 15 Example 2 destinationNed: 53.327702°N, 063.465119°E, +296.01m  FAILED, KNOWN, expected 53.327726°N, 063.464965°E, +299.138m
6test 16 Example 2 delta: [-86126, -78900, 1069]
6test 17 Example 2 delta: [L:116807.681, B:222.493°, E:-0.524°]
6test 18 Example 2 destinationNed: 48.88667°N, 002.37472°E, +0.00m  FAILED, KNOWN, expected 48.88667°N, 002.37472°E
6test 19 Example 3 toLatLon: 39.379°N, 048.013°W, +4702059.83m
6test 20 Example 4 toCartesian: [6373290.277, 222560.201, 110568.827]
6test 21 Example 5 distanceTo: 332457
6test 22 Example 6 intermediateChordTo: 89.799981°N, 180.0°E
6test 23 Example 6 intermediateTo: 89.8°N, 180.0°E
6test 24 Example 6 intermediateChordTo: 51.372294°N, 000.707192°E
6test 25 Example 6 intermediateTo: 51.372084°N, 000.707337°E
6test 26 Example 7 meanOf: 67.2362°N, 006.9175°W
6test 27 Example 8 destination(pygeodesy.sphericalNvector): 79.991549°N, 090.017698°W
6test 28 Example 8 destination(pygeodesy.sphericalTrigonometry): 79.991549°N, 090.017698°W
6test 29 Example 8 destination(pygeodesy.ellipsoidalVincenty): 79.991584°N, 090.017621°W
6test 30 Example 8 destination(pygeodesy.ellipsoidalExact): 79.991584°N, 090.017621°W
6test 31 Example 9 intersection: 40.318643°N, 055.901868°E
6test 32 Example 10 crossTrackDistance: 11118
6test 33 toNed: [-78901.1, -86126.6, 1104.1]
6test 34 bearing: 227.507
6test 35 elevation: -0.5416
6test 36 length: 116809.178
6test 37 toVector3d: (-86126.6, -78901.1, -1104.1)
619 of 37 testNavlabExamples.py tests (51.4%) FAILED, incl. 2 KNOWN plus 17 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 14.410 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testOsgr.py
./test/testOsgr.py:25: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertDatum} has been DEPRECATED, use method L{toDatum}.
  r = p.convertDatum(Datums.OSGB36)
./test/testOsgr.py:27: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertDatum} has been DEPRECATED, use method L{toDatum}.
  r = r.convertDatum(Datums.WGS84)
./test/testOsgr.py:25: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertDatum} has been DEPRECATED, use method L{toDatum}.
  r = p.convertDatum(Datums.OSGB36)
./test/testOsgr.py:27: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertDatum} has been DEPRECATED, use method L{toDatum}.
  r = r.convertDatum(Datums.WGS84)
./test/testOsgr.py:25: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertDatum} has been DEPRECATED, use method L{toDatum}.
  r = p.convertDatum(Datums.OSGB36)
./test/testOsgr.py:27: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertDatum} has been DEPRECATED, use method L{toDatum}.
  r = r.convertDatum(Datums.WGS84)
6testing testOsgr.py 22.08.18 (module pygeodesy.osgr 22.09.24)
6testOSgr(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1 WGS84: 51.4778°N, 000.0016°W
6test 2 OSGB36: 51.477284°N, 000.00002°E
6test 3 WGS84: 51.4778°N, 000.0016°W
6test 4 OSgr1: TG 51409 13177
6test 5 OSgr1: [G:TG, E:51409, N:13177]
6test 6 iteration: None
6test 7 toLatLon1: 52°39′28.72″N, 001°42′57.79″E
6test 8 toLatLon1: 52.657979°N, 001.716052°E
6test 9 iteration: 4
6test 10 toOsgr1: 651409.903,313177.270
6test 11 toOsgr1: 651409.903,313177.270
6test 12 toOsgr1: TG5140990313177270
6test 13 toLatLon2: 52°39′27.25″N, 001°43′04.52″E
6test 14 toLatLon2: 52.65757°N, 001.717922°E  FAILED, KNOWN, expected 52.657570°N, 001.717922°E
6test 15 iteration: 4
6test 16 toOsgr2: 651409,313177
6test 17 toOsgr2: 651409,313177
6test 18 toOsgr3: TG 51409 13177
6test 19 toLatLon3: (52.65798, 1.71605, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 20 toOsgr4: TG 51409 13177
6test 21 toLatLon4: (52.657570000, 1.717910000, Datum(name='OSGB36', ellipsoid=Ellipsoids.Airy1830, transform=Transforms.OSGB36))
6test 22 toLatLon4: (52.657569999, 1.717910045, Datum(name='OSGB36', ellipsoid=Ellipsoids.Airy1830, transform=Transforms.OSGB36))
6test 23 toLatLon4: (52.657978296, 1.716040366, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 24 toLatLon4: (52.657978295, 1.716040411, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 25 toOsgr5: 0.001
6test 26 toOsgr5: TG5140900013177000
6test 27 toOsgr5: 651409.000,313177.000
6test 28 toLatLon5: (52.657976595, 1.716038422, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 29 OSGR1: TG 48251 11932
6test 30 OSGR1: [G:TG, E:48251, N:11932]
6test 31 OSGR2: TG 51409 13177
6test 32 OSGR2: [G:TG, E:51409, N:13177]
6test 33 OSGR3: TG 51409 13177
6test 34 OSGR3: [G:TG, E:51409, N:13177]
6test 35 OSGR4: TG 51409 13177
6test 36 OSGR4: [G:TG, E:51409, N:13177]
6test 37 OSGR5: 651409,313177
6test 38 OSGR5: TG51409001317700
6test 39 OSGR5: 651409,313177
6test 40 OSGR5: 651409.000000,313177.000000
6test 41 OSGR5: 651409.00,313177.00
6test 42 OSGR5: [OSGR:651409.000,313177.000]
6test 43 OSGR5: [OSGR:651409,313177]
6test 44 OSGR5: [OSGR:651409.000,313177.000]
6test 45 OSGR5: [OSGR:651,313]
6test 46 OSGR6: 651409.000,313177.000
6test 47 OSGR6: 651409,313177
6test 48 OSGR6: (651409, 313177)
6test 49 OSGR6: 651409,313177
6test 50 OSGR6: 651409,313177
6test 51 OSGR6: (651409, 313177)
6test 52 OSGR6: 651409 313177
6test 53 issue: 38
6test 54 toOsgr: [G:TL, E:29158, N:35174]
6test 55 toOsgr: 529158.072, 235174.785
6test 56 toOsgr: OSGB36
6test 57 toLatLonOSGB36: 51°59′58.37″N, 000°07′06.14″W
6test 58 toLatLonOSGB36: OSGB36
6test 59 toLatLonWGS84 : 52°00′00.0″N, 000°07′12.0″W
6test 60 toLatLonWGS84 : WGS84
6test 61 Osgr: [G:TQ, E:32014, N:23971]
6test 62 Osgr: 532014.0, 123971.0
6test 63 Osgr: OSGB36
6test 64 toLatLonOSGB36: 50.999425N, 000.118417W
6test 65 toLatLonOSGB36: OSGB36
6test 66 toLatLonWGS84 : 50.999995N, 000.120004W
6test 67 toLatLonWGS84 : WGS84
6test 68 parseOSGR: [G:TQ, E:32014, N:23971]
6test 69 parseOSGR: 532014.0, 123971.0
6test 70 parseOSGR: OSGB36
6test 71 toLatLonOSGB36: 50.999425N, 000.118417W
6test 72 toLatLonOSGB36: OSGB36
6test 73 toLatLonWGS84: 50.999995N, 000.120004W
6test 74 toLatLonWGS84: WGS84
6test 75 toOsgr: [G:TQ, E:32013, N:23971]
6test 76 toOsgr: 532013.969, 123971.046
6test 77 toOsgr: OSGB36
6test 78 toLatLonOSGB36: 50.999426N, 000.118417W
6test 79 toLatLonOSGB36: OSGB36
6test 80 toLatLonWGS84 : 50.999995N, 000.120004W
6test 81 toLatLonWGS84 : WGS84
6test 82 toOsgr: [G:TQ, E:48853, N:24427]
6test 83 toOsgr: 548853.602, 124427.985
6test 84 toOsgr: OSGB36
6test 85 toLatLonOSGB36: 50.999422N, 000.121618E
6test 86 toLatLonOSGB36: OSGB36
6test 87 toLatLonWGS84 : 50.999995N, 000.120004E
6test 88 toLatLonWGS84 : WGS84
6test 89 LatLon: 49.926244°N, 006.297934°W
6test 90 datum: WGS84
6test 91 datum: OSGB36
6test 92 toOsgr: [G:SV, E:91645, N:11753]
6test 93 datum: OSGB36
6test 94 LatLon: 49.926244°N, 006.297934°W
6test 95 datum: WGS84
6test 96 distanceTo: 0.0103  FAILED, KNOWN, expected 0.0104

6test 97 prec=-2: [G:SV, E:91600, N:11700]

6test 98 toLatLon: 52.0N, 000.12W
6test 99 toLatLon: 52.0N, 000.12W
6test 100 toLatLon: 52.0N, 000.12W
6test 101 toLatLon: 52.0N, 000.12W
6test 102 toLatLon: 52.0N, 000.12W
6test 103 toLatLon: 52.0N, 000.12W
6test 104 toLatLon: 52.0N, 000.12W
6test 105 toLatLon: 52.0N, 000.12W
6testOSgr(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 106 WGS84: 51.4778°N, 000.0016°W
6test 107 OSGB36: 51.477284°N, 000.00002°E
6test 108 WGS84: 51.4778°N, 000.0016°W
6test 109 OSgr1: TG 51409 13177
6test 110 OSgr1: [G:TG, E:51409, N:13177]
6test 111 iteration: None
6test 112 toLatLon1: 52°39′28.72″N, 001°42′57.79″E
6test 113 toLatLon1: 52.657979°N, 001.716052°E
6test 114 iteration: 4
6test 115 toOsgr1: 651409.903,313177.270
6test 116 toOsgr1: 651409.903,313177.270
6test 117 toOsgr1: TG5140990313177270
6test 118 toLatLon2: 52°39′27.25″N, 001°43′04.52″E
6test 119 toLatLon2: 52.65757°N, 001.717922°E  FAILED, KNOWN, expected 52.657570°N, 001.717922°E
6test 120 iteration: 4
6test 121 toOsgr2: 651409,313177
6test 122 toOsgr2: 651409,313177
6test 123 toOsgr3: TG 51409 13177
6test 124 toLatLon3: (52.65798, 1.71605, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 125 toOsgr4: TG 51409 13177
6test 126 toLatLon4: (52.657570000, 1.717910000, Datum(name='OSGB36', ellipsoid=Ellipsoids.Airy1830, transform=Transforms.OSGB36))
6test 127 toLatLon4: (52.657569999, 1.717910045, Datum(name='OSGB36', ellipsoid=Ellipsoids.Airy1830, transform=Transforms.OSGB36))
6test 128 toLatLon4: (52.657978296, 1.716040366, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 129 toLatLon4: (52.657978295, 1.716040411, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 130 toOsgr5: 0.001
6test 131 toOsgr5: TG5140900013177000
6test 132 toOsgr5: 651409.000,313177.000
6test 133 toLatLon5: (52.657976595, 1.716038422, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 134 OSGR1: TG 48251 11932
6test 135 OSGR1: [G:TG, E:48251, N:11932]
6test 136 OSGR2: TG 51409 13177
6test 137 OSGR2: [G:TG, E:51409, N:13177]
6test 138 OSGR3: TG 51409 13177
6test 139 OSGR3: [G:TG, E:51409, N:13177]
6test 140 OSGR4: TG 51409 13177
6test 141 OSGR4: [G:TG, E:51409, N:13177]
6test 142 OSGR5: 651409,313177
6test 143 OSGR5: TG51409001317700
6test 144 OSGR5: 651409,313177
6test 145 OSGR5: 651409.000000,313177.000000
6test 146 OSGR5: 651409.00,313177.00
6test 147 OSGR5: [OSGR:651409.000,313177.000]
6test 148 OSGR5: [OSGR:651409,313177]
6test 149 OSGR5: [OSGR:651409.000,313177.000]
6test 150 OSGR5: [OSGR:651,313]
6test 151 OSGR6: 651409.000,313177.000
6test 152 OSGR6: 651409,313177
6test 153 OSGR6: (651409, 313177)
6test 154 OSGR6: 651409,313177
6test 155 OSGR6: 651409,313177
6test 156 OSGR6: (651409, 313177)
6test 157 OSGR6: 651409 313177
6test 158 issue: 38
6test 159 toOsgr: [G:TL, E:29158, N:35174]
6test 160 toOsgr: 529158.072, 235174.785
6test 161 toOsgr: OSGB36
6test 162 toLatLonOSGB36: 51°59′58.37″N, 000°07′06.14″W
6test 163 toLatLonOSGB36: OSGB36
6test 164 toLatLonWGS84 : 52°00′00.0″N, 000°07′12.0″W
6test 165 toLatLonWGS84 : WGS84
6test 166 Osgr: [G:TQ, E:32014, N:23971]
6test 167 Osgr: 532014.0, 123971.0
6test 168 Osgr: OSGB36
6test 169 toLatLonOSGB36: 50.999425N, 000.118417W
6test 170 toLatLonOSGB36: OSGB36
6test 171 toLatLonWGS84 : 50.999995N, 000.120004W
6test 172 toLatLonWGS84 : WGS84
6test 173 parseOSGR: [G:TQ, E:32014, N:23971]
6test 174 parseOSGR: 532014.0, 123971.0
6test 175 parseOSGR: OSGB36
6test 176 toLatLonOSGB36: 50.999425N, 000.118417W
6test 177 toLatLonOSGB36: OSGB36
6test 178 toLatLonWGS84: 50.999995N, 000.120004W
6test 179 toLatLonWGS84: WGS84
6test 180 toOsgr: [G:TQ, E:32013, N:23971]
6test 181 toOsgr: 532013.969, 123971.046
6test 182 toOsgr: OSGB36
6test 183 toLatLonOSGB36: 50.999426N, 000.118417W
6test 184 toLatLonOSGB36: OSGB36
6test 185 toLatLonWGS84 : 50.999995N, 000.120004W
6test 186 toLatLonWGS84 : WGS84
6test 187 toOsgr: [G:TQ, E:48853, N:24427]
6test 188 toOsgr: 548853.602, 124427.985
6test 189 toOsgr: OSGB36
6test 190 toLatLonOSGB36: 50.999422N, 000.121618E
6test 191 toLatLonOSGB36: OSGB36
6test 192 toLatLonWGS84 : 50.999995N, 000.120004E
6test 193 toLatLonWGS84 : WGS84
6test 194 LatLon: 49.926244°N, 006.297934°W
6test 195 datum: WGS84
6test 196 datum: OSGB36
6test 197 toOsgr: [G:SV, E:91645, N:11753]
6test 198 datum: OSGB36
6test 199 LatLon: 49.926244°N, 006.297934°W
6test 200 datum: WGS84
6test 201 distanceTo: 0.0104

6test 202 prec=-2: [G:SV, E:91600, N:11700]

6test 203 toLatLon: 52.0N, 000.12W
6test 204 toLatLon: 52.0N, 000.12W
6test 205 toLatLon: 52.0N, 000.12W
6test 206 toLatLon: 52.0N, 000.12W
6test 207 toLatLon: 52.0N, 000.12W
6test 208 toLatLon: 52.0N, 000.12W
6test 209 toLatLon: 52.0N, 000.12W
6test 210 toLatLon: 52.0N, 000.12W
6testOSgr(pygeodesy.ellipsoidalExact, 22.07.07)
6test 211 WGS84: 51.4778°N, 000.0016°W
6test 212 OSGB36: 51.477284°N, 000.00002°E
6test 213 WGS84: 51.4778°N, 000.0016°W
6test 214 OSgr1: TG 51409 13177
6test 215 OSgr1: [G:TG, E:51409, N:13177]
6test 216 iteration: None
6test 217 toLatLon1: 52°39′28.72″N, 001°42′57.79″E
6test 218 toLatLon1: 52.657979°N, 001.716052°E
6test 219 iteration: 4
6test 220 toOsgr1: 651409.903,313177.270
6test 221 toOsgr1: 651409.903,313177.270
6test 222 toOsgr1: TG5140990313177270
6test 223 toLatLon2: 52°39′27.25″N, 001°43′04.52″E
6test 224 toLatLon2: 52.65757°N, 001.717922°E  FAILED, KNOWN, expected 52.657570°N, 001.717922°E
6test 225 iteration: 4
6test 226 toOsgr2: 651409,313177
6test 227 toOsgr2: 651409,313177
6test 228 toOsgr3: TG 51409 13177
6test 229 toLatLon3: (52.65798, 1.71605, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 230 toOsgr4: TG 51409 13177
6test 231 toLatLon4: (52.657570000, 1.717910000, Datum(name='OSGB36', ellipsoid=Ellipsoids.Airy1830, transform=Transforms.OSGB36))
6test 232 toLatLon4: (52.657569999, 1.717910045, Datum(name='OSGB36', ellipsoid=Ellipsoids.Airy1830, transform=Transforms.OSGB36))
6test 233 toLatLon4: (52.657978296, 1.716040366, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 234 toLatLon4: (52.657978295, 1.716040411, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 235 toOsgr5: 0.001
6test 236 toOsgr5: TG5140900013177000
6test 237 toOsgr5: 651409.000,313177.000
6test 238 toLatLon5: (52.657976595, 1.716038422, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84))
6test 239 OSGR1: TG 48251 11932
6test 240 OSGR1: [G:TG, E:48251, N:11932]
6test 241 OSGR2: TG 51409 13177
6test 242 OSGR2: [G:TG, E:51409, N:13177]
6test 243 OSGR3: TG 51409 13177
6test 244 OSGR3: [G:TG, E:51409, N:13177]
6test 245 OSGR4: TG 51409 13177
6test 246 OSGR4: [G:TG, E:51409, N:13177]
6test 247 OSGR5: 651409,313177
6test 248 OSGR5: TG51409001317700
6test 249 OSGR5: 651409,313177
6test 250 OSGR5: 651409.000000,313177.000000
6test 251 OSGR5: 651409.00,313177.00
6test 252 OSGR5: [OSGR:651409.000,313177.000]
6test 253 OSGR5: [OSGR:651409,313177]
6test 254 OSGR5: [OSGR:651409.000,313177.000]
6test 255 OSGR5: [OSGR:651,313]
6test 256 OSGR6: 651409.000,313177.000
6test 257 OSGR6: 651409,313177
6test 258 OSGR6: (651409, 313177)
6test 259 OSGR6: 651409,313177
6test 260 OSGR6: 651409,313177
6test 261 OSGR6: (651409, 313177)
6test 262 OSGR6: 651409 313177
6test 263 issue: 38
6test 264 toOsgr: [G:TL, E:29158, N:35174]
6test 265 toOsgr: 529158.072, 235174.785
6test 266 toOsgr: OSGB36
6test 267 toLatLonOSGB36: 51°59′58.37″N, 000°07′06.14″W
6test 268 toLatLonOSGB36: OSGB36
6test 269 toLatLonWGS84 : 52°00′00.0″N, 000°07′12.0″W
6test 270 toLatLonWGS84 : WGS84
6test 271 Osgr: [G:TQ, E:32014, N:23971]
6test 272 Osgr: 532014.0, 123971.0
6test 273 Osgr: OSGB36
6test 274 toLatLonOSGB36: 50.999425N, 000.118417W
6test 275 toLatLonOSGB36: OSGB36
6test 276 toLatLonWGS84 : 50.999995N, 000.120004W
6test 277 toLatLonWGS84 : WGS84
6test 278 parseOSGR: [G:TQ, E:32014, N:23971]
6test 279 parseOSGR: 532014.0, 123971.0
6test 280 parseOSGR: OSGB36
6test 281 toLatLonOSGB36: 50.999425N, 000.118417W
6test 282 toLatLonOSGB36: OSGB36
6test 283 toLatLonWGS84: 50.999995N, 000.120004W
6test 284 toLatLonWGS84: WGS84
6test 285 toOsgr: [G:TQ, E:32013, N:23971]
6test 286 toOsgr: 532013.969, 123971.046
6test 287 toOsgr: OSGB36
6test 288 toLatLonOSGB36: 50.999426N, 000.118417W
6test 289 toLatLonOSGB36: OSGB36
6test 290 toLatLonWGS84 : 50.999995N, 000.120004W
6test 291 toLatLonWGS84 : WGS84
6test 292 toOsgr: [G:TQ, E:48853, N:24427]
6test 293 toOsgr: 548853.602, 124427.985
6test 294 toOsgr: OSGB36
6test 295 toLatLonOSGB36: 50.999422N, 000.121618E
6test 296 toLatLonOSGB36: OSGB36
6test 297 toLatLonWGS84 : 50.999995N, 000.120004E
6test 298 toLatLonWGS84 : WGS84
6test 299 LatLon: 49.926244°N, 006.297934°W
6test 300 datum: WGS84
6test 301 datum: OSGB36
6test 302 toOsgr: [G:SV, E:91645, N:11753]
6test 303 datum: OSGB36
6test 304 LatLon: 49.926244°N, 006.297934°W
6test 305 datum: WGS84
6test 306 distanceTo: 0.0104

6test 307 prec=-2: [G:SV, E:91600, N:11700]

6test 308 toLatLon: 52.0N, 000.12W
6test 309 toLatLon: 52.0N, 000.12W
6test 310 toLatLon: 52.0N, 000.12W
6test 311 toLatLon: 52.0N, 000.12W
6test 312 toLatLon: 52.0N, 000.12W
6test 313 toLatLon: 52.0N, 000.12W
6test 314 toLatLon: 52.0N, 000.12W
6test 315 toLatLon: 52.0N, 000.12W
610 of 315 testOsgr.py tests (3.2%) FAILED, incl. 4 KNOWN plus 6 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 58.034 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testPoints.py
6testing testPoints.py 21.12.30 (module pygeodesy.points 23.01.21)
6test 1 sizeof(LatLon_.__dict__): 48
6test 2 LatLon2psxy.ABC: True
6test 3 LatLon2psxy.epsilon: 2.220446049250313e-16
6test 4 LatLon2psxy.epsilon: 0.0
6test 5 LatLon2psxy.len: 69
6test 6 LatLon2psxy.iter: 69
6test 7 LatLon2psxy.slice1: 11
6test 8 LatLon2psxy.slice2: <class 'pygeodesy.points.LatLon2psxy'>
6test 9 LatLon2psxy.slice3: (-0.701418, 52.220485, LatLon_(52.220485°N, 000.701418°W))
6test 10 LatLon2psxy.str/repr: LatLon2psxy('[LatLon_(52.220489°N, 000.701206°W) ... ][69]', closed=False, radius=None, wrap=False)
6test 11 LatLon2psxy.find LL: 10
6test 12 LatLon2psxy.find LL: -1
6test 13 LatLon2psxy.count: 1
6test 14 LatLon2psxy.index: 10
6test 15 LatLon2psxy.rfind: 10
6test 16 LatLon2psxy.in: True
6test 17 LatLon2psxy.count: 0
6test 18 LatLon2psxy.find: -1
6test 19 LatLon2psxy.rfind: -1
6test 20 LatLon2psxy.not in: True
6test 21 LatLon2psxy.find LL: 20
6test 22 LatLon2psxy.find LL: -1
6test 23 LatLon2psxy.count: 1
6test 24 LatLon2psxy.index: 20
6test 25 LatLon2psxy.rfind: 20
6test 26 LatLon2psxy.in: True
6test 27 LatLon2psxy.count: 0
6test 28 LatLon2psxy.find: -1
6test 29 LatLon2psxy.rfind: -1
6test 30 LatLon2psxy.not in: True
6test 31 LatLon2psxy.find LL: 30
6test 32 LatLon2psxy.find LL: -1
6test 33 LatLon2psxy.count: 1
6test 34 LatLon2psxy.index: 30
6test 35 LatLon2psxy.rfind: 30
6test 36 LatLon2psxy.in: True
6test 37 LatLon2psxy.count: 0
6test 38 LatLon2psxy.find: -1
6test 39 LatLon2psxy.rfind: -1
6test 40 LatLon2psxy.not in: True
6test 41 LatLon2psxy.find LL: 40
6test 42 LatLon2psxy.find LL: -1
6test 43 LatLon2psxy.count: 1
6test 44 LatLon2psxy.index: 40
6test 45 LatLon2psxy.rfind: 40
6test 46 LatLon2psxy.in: True
6test 47 LatLon2psxy.count: 0
6test 48 LatLon2psxy.find: -1
6test 49 LatLon2psxy.rfind: -1
6test 50 LatLon2psxy.not in: True
6test 51 LatLon2psxy.find LL: 50
6test 52 LatLon2psxy.find LL: -1
6test 53 LatLon2psxy.count: 1
6test 54 LatLon2psxy.index: 50
6test 55 LatLon2psxy.rfind: 50
6test 56 LatLon2psxy.in: True
6test 57 LatLon2psxy.count: 0
6test 58 LatLon2psxy.find: -1
6test 59 LatLon2psxy.rfind: -1
6test 60 LatLon2psxy.not in: True
6test 61 LatLon2psxy.find LL: 60
6test 62 LatLon2psxy.find LL: -1
6test 63 LatLon2psxy.count: 1
6test 64 LatLon2psxy.index: 60
6test 65 LatLon2psxy.rfind: 60
6test 66 LatLon2psxy.in: True
6test 67 LatLon2psxy.count: 0
6test 68 LatLon2psxy.find: -1
6test 69 LatLon2psxy.rfind: -1
6test 70 LatLon2psxy.not in: True
6test 71 LatLon2psxy.enumerate[0]: (-0.701206, 52.220489, LatLon_(52.220489°N, 000.701206°W))
6test 72 LatLon2psxy.enumerate[1]: (-0.705456, 52.221916, LatLon_(52.221916°N, 000.705456°W))
6test 73 LatLon2psxy.enumerate[2]: (-0.71, 52.225944, LatLon_(52.225944°N, 000.71°W))
6test 74 LatLon2psxy.enumerate[3]: (-0.71446, 52.232448, LatLon_(52.232448°N, 000.71446°W))
6test 75 LatLon2psxy.enumerate[4]: (-0.71486, 52.233013, LatLon_(52.233013°N, 000.71486°W))
6test 76 LatLon2psxy.enumerate[5]: (-0.714348, 52.234375, LatLon_(52.234375°N, 000.714348°W))
6test 77 LatLon2psxy.enumerate[6]: (-0.713572, 52.235607, LatLon_(52.235607°N, 000.713572°W))
6test 78 LatLon2psxy.enumerate[7]: (-0.71233, 52.237495, LatLon_(52.237495°N, 000.71233°W))
6test 79 LatLon2psxy.enumerate[8]: (-0.710784, 52.239315, LatLon_(52.239315°N, 000.710784°W))
6test 80 LatLon2psxy.enumerate[9]: (-0.708684, 52.240627, LatLon_(52.240627°N, 000.708684°W))
6test 81 LatLon2psxy.enumerate[10]: (-0.707042, 52.240745, LatLon_(52.240745°N, 000.707042°W))
6test 82 LatLon2psxy.enumerate[11]: (-0.704945, 52.240863, LatLon_(52.240863°N, 000.704945°W))
6test 83 LatLon2psxy.enumerate[*]: 11
6test 84 LatLon2psxy.reversed[11]: (-0.704945, 52.240863, LatLon_(52.240863°N, 000.704945°W))
6test 85 LatLon2psxy.reversed[10]: (-0.707042, 52.240745, LatLon_(52.240745°N, 000.707042°W))
6test 86 LatLon2psxy.reversed[9]: (-0.708684, 52.240627, LatLon_(52.240627°N, 000.708684°W))
6test 87 LatLon2psxy.reversed[8]: (-0.710784, 52.239315, LatLon_(52.239315°N, 000.710784°W))
6test 88 LatLon2psxy.reversed[7]: (-0.71233, 52.237495, LatLon_(52.237495°N, 000.71233°W))
6test 89 LatLon2psxy.reversed[6]: (-0.713572, 52.235607, LatLon_(52.235607°N, 000.713572°W))
6test 90 LatLon2psxy.reversed[5]: (-0.714348, 52.234375, LatLon_(52.234375°N, 000.714348°W))
6test 91 LatLon2psxy.reversed[4]: (-0.71486, 52.233013, LatLon_(52.233013°N, 000.71486°W))
6test 92 LatLon2psxy.reversed[3]: (-0.71446, 52.232448, LatLon_(52.232448°N, 000.71446°W))
6test 93 LatLon2psxy.reversed[2]: (-0.71, 52.225944, LatLon_(52.225944°N, 000.71°W))
6test 94 LatLon2psxy.reversed[1]: (-0.705456, 52.221916, LatLon_(52.221916°N, 000.705456°W))
6test 95 LatLon2psxy.reversed[0]: (-0.701206, 52.220489, LatLon_(52.220489°N, 000.701206°W))
6test 96 LatLon2psxy.findall[0]: (0,)
6test 97 LatLon2psxy.findall[1]: (1,)
6test 98 LatLon2psxy.findall[2]: (2,)
6test 99 LatLon2psxy.findall[3]: (3,)
6test 100 LatLon2psxy.findall[4]: (4,)
6test 101 LatLon2psxy.findall[5]: (5,)
6test 102 LatLon2psxy.findall[6]: (6,)
6test 103 LatLon2psxy.findall[7]: (7,)
6test 104 LatLon2psxy.findall[8]: (8,)
6test 105 LatLon2psxy.findall[9]: (9,)
6test 106 LatLon2psxy.findall[10]: (10,)
6test 107 LatLon2psxy.findall[11]: (11,)
6test 108 LatLon2psxy.findall[*]: 11
6test 109 LatLon2psxy.isNumpy2: False
6test 110 LatLon2psxy.isPoints2: True
6test 111 LatLon2psxy.isTuple2: False
6test 112 no: numpy
6test 113 Tuple2LatLon.ABC: True
6test 114 Tuple2LatLon.epsilon: 2.220446049250313e-16
6test 115 Tuple2LatLon.epsilon: 0.0
6test 116 Tuple2LatLon.len: 69
6test 117 Tuple2LatLon.iter: 69
6test 118 Tuple2LatLon.slice1: 11
6test 119 Tuple2LatLon.slice2: <class 'pygeodesy.points.Tuple2LatLon'>
6test 120 Tuple2LatLon.slice3: 52.220485°N, 000.701418°W
6test 121 Tuple2LatLon.str/repr: Tuple2LatLon('[(0, -0.701206, 0, 52.220489) ... ][69]', ilat=3, ilon=1)
6test 122 Tuple2LatLon.subset: <class 'list'>
6test 123 Tuple2LatLon.count: 1
6test 124 Tuple2LatLon.index: 10
6test 125 Tuple2LatLon.rfind: 10
6test 126 Tuple2LatLon.in: True
6test 127 Tuple2LatLon.count: 0
6test 128 Tuple2LatLon.find: -1
6test 129 Tuple2LatLon.rfind: -1
6test 130 Tuple2LatLon.not in: True
6test 131 Tuple2LatLon.count: 1
6test 132 Tuple2LatLon.index: 20
6test 133 Tuple2LatLon.rfind: 20
6test 134 Tuple2LatLon.in: True
6test 135 Tuple2LatLon.count: 0
6test 136 Tuple2LatLon.find: -1
6test 137 Tuple2LatLon.rfind: -1
6test 138 Tuple2LatLon.not in: True
6test 139 Tuple2LatLon.count: 1
6test 140 Tuple2LatLon.index: 30
6test 141 Tuple2LatLon.rfind: 30
6test 142 Tuple2LatLon.in: True
6test 143 Tuple2LatLon.count: 0
6test 144 Tuple2LatLon.find: -1
6test 145 Tuple2LatLon.rfind: -1
6test 146 Tuple2LatLon.not in: True
6test 147 Tuple2LatLon.count: 1
6test 148 Tuple2LatLon.index: 40
6test 149 Tuple2LatLon.rfind: 40
6test 150 Tuple2LatLon.in: True
6test 151 Tuple2LatLon.count: 0
6test 152 Tuple2LatLon.find: -1
6test 153 Tuple2LatLon.rfind: -1
6test 154 Tuple2LatLon.not in: True
6test 155 Tuple2LatLon.count: 1
6test 156 Tuple2LatLon.index: 50
6test 157 Tuple2LatLon.rfind: 50
6test 158 Tuple2LatLon.in: True
6test 159 Tuple2LatLon.count: 0
6test 160 Tuple2LatLon.find: -1
6test 161 Tuple2LatLon.rfind: -1
6test 162 Tuple2LatLon.not in: True
6test 163 Tuple2LatLon.count: 1
6test 164 Tuple2LatLon.index: 60
6test 165 Tuple2LatLon.rfind: 60
6test 166 Tuple2LatLon.in: True
6test 167 Tuple2LatLon.count: 0
6test 168 Tuple2LatLon.find: -1
6test 169 Tuple2LatLon.rfind: -1
6test 170 Tuple2LatLon.not in: True
6test 171 Tuple2LatLon.enumerate[0]: 52.220489°N, 000.701206°W
6test 172 Tuple2LatLon.enumerate[1]: 52.221916°N, 000.705456°W
6test 173 Tuple2LatLon.enumerate[2]: 52.225944°N, 000.71°W
6test 174 Tuple2LatLon.enumerate[3]: 52.232448°N, 000.71446°W
6test 175 Tuple2LatLon.enumerate[4]: 52.233013°N, 000.71486°W
6test 176 Tuple2LatLon.enumerate[5]: 52.234375°N, 000.714348°W
6test 177 Tuple2LatLon.enumerate[6]: 52.235607°N, 000.713572°W
6test 178 Tuple2LatLon.enumerate[7]: 52.237495°N, 000.71233°W
6test 179 Tuple2LatLon.enumerate[8]: 52.239315°N, 000.710784°W
6test 180 Tuple2LatLon.enumerate[9]: 52.240627°N, 000.708684°W
6test 181 Tuple2LatLon.enumerate[10]: 52.240745°N, 000.707042°W
6test 182 Tuple2LatLon.enumerate[11]: 52.240863°N, 000.704945°W
6test 183 Tuple2LatLon.enumerate[*]: 11
6test 184 Tuple2LatLon.reversed[11]: 52.240863°N, 000.704945°W
6test 185 Tuple2LatLon.reversed[10]: 52.240745°N, 000.707042°W
6test 186 Tuple2LatLon.reversed[9]: 52.240627°N, 000.708684°W
6test 187 Tuple2LatLon.reversed[8]: 52.239315°N, 000.710784°W
6test 188 Tuple2LatLon.reversed[7]: 52.237495°N, 000.71233°W
6test 189 Tuple2LatLon.reversed[6]: 52.235607°N, 000.713572°W
6test 190 Tuple2LatLon.reversed[5]: 52.234375°N, 000.714348°W
6test 191 Tuple2LatLon.reversed[4]: 52.233013°N, 000.71486°W
6test 192 Tuple2LatLon.reversed[3]: 52.232448°N, 000.71446°W
6test 193 Tuple2LatLon.reversed[2]: 52.225944°N, 000.71°W
6test 194 Tuple2LatLon.reversed[1]: 52.221916°N, 000.705456°W
6test 195 Tuple2LatLon.reversed[0]: 52.220489°N, 000.701206°W
6test 196 Tuple2LatLon.findall[0]: (0,)
6test 197 Tuple2LatLon.findall[1]: (1,)
6test 198 Tuple2LatLon.findall[2]: (2,)
6test 199 Tuple2LatLon.findall[3]: (3,)
6test 200 Tuple2LatLon.findall[4]: (4,)
6test 201 Tuple2LatLon.findall[5]: (5,)
6test 202 Tuple2LatLon.findall[6]: (6,)
6test 203 Tuple2LatLon.findall[7]: (7,)
6test 204 Tuple2LatLon.findall[8]: (8,)
6test 205 Tuple2LatLon.findall[9]: (9,)
6test 206 Tuple2LatLon.findall[10]: (10,)
6test 207 Tuple2LatLon.findall[11]: (11,)
6test 208 Tuple2LatLon.findall[*]: 11
6test 209 Tuple2LatLon.isNumpy2: False
6test 210 Tuple2LatLon.isPoints2: False
6test 211 Tuple2LatLon.isTuple2: True
6testing(pygeodesy.points, 23.01.21, LatLon=<class 'pygeodesy.points.LatLon_'>)
6test 212 areaOf: 8.811228e+09
6test 213 centroidOf: 45.5, 1.5
6test 214 perimeterOf: 2.673633e+05
6test 215 isclockwise: False
6test 216 isconvex: True
6test 217 ispolar: False
6test 218 areaOf: 7.086883e+09
6test 219 perimeterOf: 2.687460e+05
6test 220 centroidOf: 0.333333, 0.333333
6test 221 isclockwise: True
6test 222 isconvex: True
6test 223 ispolar: False
6test 224 areaOf: 2.827856e+10
6test 225 perimeterOf: 4.717039e+05
6test 226 centroidOf: 1.0, 1.0
6test 227 isclockwise: False
6test 228 isconvex: True
6test 229 ispolar: False
6test 230 areaOf: 2.747297e+13
6test 231 perimeterOf: 2.332643e+07
6test 232 centroidOf: 52.113, 102.123
6test 233 isclockwise: False
6test 234 isconvex: False
6test 235 ispolar: True
6test 236 areaOf: 8.482014e+10
6test 237 perimeterOf: 1.334104e+06
6test 238 centroidOf: 1.167, 1.667
6test 239 isclockwise: False
6test 240 isconvex: False
6test 241 ispolar: False
6test 242 areaOf: 5.151974e+13
6test 243 perimeterOf: 2.638608e+07
6test 244 centroidOf: -19.444, -133.333
6test 245 isclockwise: True
6test 246 isconvex: True
6test 247 ispolar: False
6test 248 areaOf: 1.751694e+12  FAILED, KNOWN, expected 4.469277e+12
6test 249 perimeterOf: 1.562029e+07
6test 250 centroidOf: -71.443, -69.683
6test 251 isclockwise: True
6test 252 isconvex: False
6test 253 ispolar: True
6test 254 points2: 18
6test 255 nearestOn5: (-77.455114, -16.67063, 4.134666, 307.988253, 0)
6test 256 areaCO: 2.83192062868e+11  FAILED, KNOWN, expected 2.69601367661e+11
6test 257 isclockwise: True
6test 258 perimeterCO: 2098630.956053  FAILED, KNOWN, expected 2099854.381923
6test 259 boundsOf: (-77.9, -163.0, -63.1, 172.0)
6test 260 quadOf: 77.9°S, 163.0°W, 63.1°S, 163.0°W, 63.1°S, 172.0°E, 77.9°S, 172.0°E
6test 261 intermediateTo: 51.368°N, 000.677°E, 'intermediateTo'
6test 262 intermediateTo: True
6test 263 intermediateTo: 51.368°N, 000.677°E
6test 264 intermediateTo: 52.205°N, 000.119°E
6test 265 intermediateTo: 48.857°N, 002.351°E
6test 266 _isLatLon_: _Array2LatLon('[ ... ][1]', ilat=0, ilon=1)
6test 267 latlon: (-66.6, -88.0)
6test 268 philam: (-1.162389, -1.53589)
6test 269 toStr: 66.6°S, 088.0°W, kwds='test'
6test 270 __ne__: False
6test 271 isequalTo: True
6test 272 isequalTo: True
6test 273 latlonheight: (-66.6, -88.0, 0)
6test 274 philamheight: (-1.162389, -1.53589, 0)
6test 275 _N_vector: (0.01386, -0.39691, -0.91775)
6test 276 toNvector: (0.01386, -0.39691, -0.91775)
6test 277 toNvector: (0.01386, -0.396906, -0.917755, 0)  FAILED, KNOWN, expected (0.01386, -0.396906, -0.917755)
6test 278 classof: 66.6°S, 088.0°W
6test 279 others: 66.6°S, 088.0°W
6test 280 copy(LatLon_): (<class 'pygeodesy.points.LatLon_'>, True)
6test 281 LatLon_.copy(): (<class 'pygeodesy.points.LatLon_'>, True)
6testing(pygeodesy.points, 23.01.21, LatLon=<class 'pygeodesy.sphericalNvector.LatLon'>)
6test 282 areaOf: 8.811228e+09
6test 283 centroidOf: 45.5, 1.5
6test 284 perimeterOf: 2.673633e+05
6test 285 isclockwise: False
6test 286 isconvex: True
6test 287 ispolar: False
6test 288 areaOf: 7.086883e+09
6test 289 perimeterOf: 2.687460e+05
6test 290 centroidOf: 0.333333, 0.333333
6test 291 isclockwise: True
6test 292 isconvex: True
6test 293 ispolar: False
6test 294 areaOf: 2.827856e+10
6test 295 perimeterOf: 4.717039e+05
6test 296 centroidOf: 1.0, 1.0
6test 297 isclockwise: False
6test 298 isconvex: True
6test 299 ispolar: False
6test 300 areaOf: 2.747297e+13
6test 301 perimeterOf: 2.332643e+07
6test 302 centroidOf: 52.113, 102.123
6test 303 isclockwise: False
6test 304 isconvex: False
6test 305 ispolar: True
6test 306 areaOf: 8.482014e+10
6test 307 perimeterOf: 1.334104e+06
6test 308 centroidOf: 1.167, 1.667
6test 309 isclockwise: False
6test 310 isconvex: False
6test 311 ispolar: False
6test 312 areaOf: 5.151974e+13
6test 313 perimeterOf: 2.638608e+07
6test 314 centroidOf: -19.444, -133.333
6test 315 isclockwise: True
6test 316 isconvex: True
6test 317 ispolar: False
6test 318 areaOf: 1.751694e+12  FAILED, KNOWN, expected 4.469277e+12
6test 319 perimeterOf: 1.562029e+07
6test 320 centroidOf: -71.443, -69.683
6test 321 isclockwise: True
6test 322 isconvex: False
6test 323 ispolar: True
6test 324 points2: 18
6test 325 nearestOn5: (-77.455114, -16.67063, 4.134666, 307.988253, 0)
6test 326 areaCO: 2.83192062868e+11  FAILED, KNOWN, expected 2.69601367661e+11
6test 327 isclockwise: True
6test 328 perimeterCO: 2098630.956053  FAILED, KNOWN, expected 2099854.381923
6test 329 latlon: (-66.6, -88.0)
6test 330 philam: (-1.162389, -1.53589)
6test 331 latlonheight: (-66.6, -88.0, 0)
6test 332 philamheight: (-1.162389, -1.53589, 0)
6test 333 _N_vector: (0.01386, -0.39691, -0.91775)
6test 334 toNvector: (0.01386, -0.39691, -0.91775)
6test 335 toNvector: (0.01386, -0.396906, -0.917755)
6test 336 classof: 66.6°S, 088.0°W
6test 337 others: 66.6°S, 088.0°W
6test 338 copy(LatLon): (<class 'pygeodesy.sphericalNvector.LatLon'>, True)
6test 339 LatLon.copy(): (<class 'pygeodesy.sphericalNvector.LatLon'>, True)
6testing(pygeodesy.points, 23.01.21, LatLon=<class 'pygeodesy.sphericalTrigonometry.LatLon'>)
6test 340 areaOf: 8.811228e+09
6test 341 centroidOf: 45.5, 1.5
6test 342 perimeterOf: 2.673633e+05
6test 343 isclockwise: False
6test 344 isconvex: True
6test 345 ispolar: False
6test 346 areaOf: 7.086883e+09
6test 347 perimeterOf: 2.687460e+05
6test 348 centroidOf: 0.333333, 0.333333
6test 349 isclockwise: True
6test 350 isconvex: True
6test 351 ispolar: False
6test 352 areaOf: 2.827856e+10
6test 353 perimeterOf: 4.717039e+05
6test 354 centroidOf: 1.0, 1.0
6test 355 isclockwise: False
6test 356 isconvex: True
6test 357 ispolar: False
6test 358 areaOf: 2.747297e+13
6test 359 perimeterOf: 2.332643e+07
6test 360 centroidOf: 52.113, 102.123
6test 361 isclockwise: False
6test 362 isconvex: False
6test 363 ispolar: True
6test 364 areaOf: 8.482014e+10
6test 365 perimeterOf: 1.334104e+06
6test 366 centroidOf: 1.167, 1.667
6test 367 isclockwise: False
6test 368 isconvex: False
6test 369 ispolar: False
6test 370 areaOf: 5.151974e+13
6test 371 perimeterOf: 2.638608e+07
6test 372 centroidOf: -19.444, -133.333
6test 373 isclockwise: True
6test 374 isconvex: True
6test 375 ispolar: False
6test 376 areaOf: 1.751694e+12  FAILED, KNOWN, expected 4.469277e+12
6test 377 perimeterOf: 1.562029e+07
6test 378 centroidOf: -71.443, -69.683
6test 379 isclockwise: True
6test 380 isconvex: False
6test 381 ispolar: True
6test 382 points2: 18
6test 383 nearestOn5: (-77.455114, -16.67063, 4.134666, 307.988253, 0)
6test 384 areaCO: 2.83192062868e+11  FAILED, KNOWN, expected 2.69601367661e+11
6test 385 isclockwise: True
6test 386 perimeterCO: 2098630.956053  FAILED, KNOWN, expected 2099854.381923
6test 387 latlon: (-66.6, -88.0)
6test 388 philam: (-1.162389, -1.53589)
6test 389 latlonheight: (-66.6, -88.0, 0)
6test 390 philamheight: (-1.162389, -1.53589, 0)
6test 391 _N_vector: (0.01386, -0.39691, -0.91775)
6test 392 toNvector: (0.01386, -0.39691, -0.91775)
6test 393 toNvector: (0.01386, -0.396906, -0.917755)
6test 394 classof: 66.6°S, 088.0°W
6test 395 others: 66.6°S, 088.0°W
6test 396 copy(LatLon): (<class 'pygeodesy.sphericalTrigonometry.LatLon'>, True)
6test 397 LatLon.copy(): (<class 'pygeodesy.sphericalTrigonometry.LatLon'>, True)
6testing(pygeodesy.points, 23.01.21, LatLon=<class 'pygeodesy.ellipsoidalNvector.LatLon'>)
6test 398 areaOf: 8.811228e+09
6test 399 centroidOf: 45.5, 1.5
6test 400 perimeterOf: 2.673633e+05
6test 401 isclockwise: False
6test 402 isconvex: True
6test 403 ispolar: False
6test 404 areaOf: 7.086883e+09
6test 405 perimeterOf: 2.687460e+05
6test 406 centroidOf: 0.333333, 0.333333
6test 407 isclockwise: True
6test 408 isconvex: True
6test 409 ispolar: False
6test 410 areaOf: 2.827856e+10
6test 411 perimeterOf: 4.717039e+05
6test 412 centroidOf: 1.0, 1.0
6test 413 isclockwise: False
6test 414 isconvex: True
6test 415 ispolar: False
6test 416 areaOf: 2.747297e+13
6test 417 perimeterOf: 2.332643e+07
6test 418 centroidOf: 52.113, 102.123
6test 419 isclockwise: False
6test 420 isconvex: False
6test 421 ispolar: True
6test 422 areaOf: 8.482014e+10
6test 423 perimeterOf: 1.334104e+06
6test 424 centroidOf: 1.167, 1.667
6test 425 isclockwise: False
6test 426 isconvex: False
6test 427 ispolar: False
6test 428 areaOf: 5.151974e+13
6test 429 perimeterOf: 2.638608e+07
6test 430 centroidOf: -19.444, -133.333
6test 431 isclockwise: True
6test 432 isconvex: True
6test 433 ispolar: False
6test 434 areaOf: 1.751694e+12  FAILED, KNOWN, expected 4.469277e+12
6test 435 perimeterOf: 1.562029e+07
6test 436 centroidOf: -71.443, -69.683
6test 437 isclockwise: True
6test 438 isconvex: False
6test 439 ispolar: True
6test 440 points2: 18
6test 441 nearestOn5: (-77.455114, -16.67063, 4.134666, 307.988253, 0)
6test 442 areaCO: 2.83192062868e+11  FAILED, KNOWN, expected 2.69601367661e+11
6test 443 isclockwise: True
6test 444 perimeterCO: 2098630.956053  FAILED, KNOWN, expected 2099854.381923
6test 445 latlon: (-66.6, -88.0)
6test 446 philam: (-1.162389, -1.53589)
6test 447 latlonheight: (-66.6, -88.0, 0)
6test 448 philamheight: (-1.162389, -1.53589, 0)
6test 449 _N_vector: (0.01386, -0.39691, -0.91775)
6test 450 toNvector: (0.01386, -0.39691, -0.91775)
6test 451 toNvector: (0.01386, -0.396906, -0.917755)
6test 452 classof: 66.6°S, 088.0°W
6test 453 others: 66.6°S, 088.0°W
6test 454 copy(LatLon): (<class 'pygeodesy.ellipsoidalNvector.LatLon'>, True)
6test 455 LatLon.copy(): (<class 'pygeodesy.ellipsoidalNvector.LatLon'>, True)
6testing(pygeodesy.points, 23.01.21, LatLon=<class 'pygeodesy.ellipsoidalVincenty.LatLon'>)
6test 456 areaOf: 8.811228e+09
6test 457 centroidOf: 45.5, 1.5
6test 458 perimeterOf: 2.673633e+05
6test 459 isclockwise: False
6test 460 isconvex: True
6test 461 ispolar: False
6test 462 areaOf: 7.086883e+09
6test 463 perimeterOf: 2.687460e+05
6test 464 centroidOf: 0.333333, 0.333333
6test 465 isclockwise: True
6test 466 isconvex: True
6test 467 ispolar: False
6test 468 areaOf: 2.827856e+10
6test 469 perimeterOf: 4.717039e+05
6test 470 centroidOf: 1.0, 1.0
6test 471 isclockwise: False
6test 472 isconvex: True
6test 473 ispolar: False
6test 474 areaOf: 2.747297e+13
6test 475 perimeterOf: 2.332643e+07
6test 476 centroidOf: 52.113, 102.123
6test 477 isclockwise: False
6test 478 isconvex: False
6test 479 ispolar: True
6test 480 areaOf: 8.482014e+10
6test 481 perimeterOf: 1.334104e+06
6test 482 centroidOf: 1.167, 1.667
6test 483 isclockwise: False
6test 484 isconvex: False
6test 485 ispolar: False
6test 486 areaOf: 5.151974e+13
6test 487 perimeterOf: 2.638608e+07
6test 488 centroidOf: -19.444, -133.333
6test 489 isclockwise: True
6test 490 isconvex: True
6test 491 ispolar: False
6test 492 areaOf: 1.751694e+12  FAILED, KNOWN, expected 4.469277e+12
6test 493 perimeterOf: 1.562029e+07
6test 494 centroidOf: -71.443, -69.683
6test 495 isclockwise: True
6test 496 isconvex: False
6test 497 ispolar: True
6test 498 points2: 18
6test 499 nearestOn5: (-77.455114, -16.67063, 4.134666, 307.988253, 0)
6test 500 areaCO: 2.83192062868e+11  FAILED, KNOWN, expected 2.69601367661e+11
6test 501 isclockwise: True
6test 502 perimeterCO: 2098630.956053  FAILED, KNOWN, expected 2099854.381923
6test 503 latlon: (-66.6, -88.0)
6test 504 philam: (-1.162389, -1.53589)
6test 505 latlonheight: (-66.6, -88.0, 0)
6test 506 philamheight: (-1.162389, -1.53589, 0)
6test 507 _N_vector: (0.01386, -0.39691, -0.91775)
6test 508 toNvector: (0.01386, -0.39691, -0.91775)
6test 509 toNvector: (0.01386, -0.396906, -0.917755)
6test 510 classof: 66.6°S, 088.0°W
6test 511 others: 66.6°S, 088.0°W
6test 512 copy(LatLon): (<class 'pygeodesy.ellipsoidalVincenty.LatLon'>, True)
6test 513 LatLon.copy(): (<class 'pygeodesy.ellipsoidalVincenty.LatLon'>, True)
6testing(pygeodesy.points, 23.01.21, LatLon=<class 'pygeodesy.ellipsoidalKarney.LatLon'>)
6test 514 areaOf: 8.811228e+09
6test 515 centroidOf: 45.5, 1.5
6test 516 perimeterOf: 2.673633e+05
6test 517 isclockwise: False
6test 518 isconvex: True
6test 519 areaOf: 7.086883e+09
6test 520 perimeterOf: 2.687460e+05
6test 521 centroidOf: 0.333333, 0.333333
6test 522 isclockwise: True
6test 523 isconvex: True
6test 524 areaOf: 2.827856e+10
6test 525 perimeterOf: 4.717039e+05
6test 526 centroidOf: 1.0, 1.0
6test 527 isclockwise: False
6test 528 isconvex: True
6test 529 areaOf: 2.747297e+13
6test 530 perimeterOf: 2.332643e+07
6test 531 centroidOf: 52.113, 102.123
6test 532 isclockwise: False
6test 533 isconvex: False
6test 534 areaOf: 8.482014e+10
6test 535 perimeterOf: 1.334104e+06
6test 536 centroidOf: 1.167, 1.667
6test 537 isclockwise: False
6test 538 isconvex: False
6test 539 areaOf: 5.151974e+13
6test 540 perimeterOf: 2.638608e+07
6test 541 centroidOf: -19.444, -133.333
6test 542 isclockwise: True
6test 543 isconvex: True
6test 544 areaOf: 1.751694e+12  FAILED, KNOWN, expected 4.469277e+12
6test 545 perimeterOf: 1.562029e+07
6test 546 centroidOf: -71.443, -69.683
6test 547 isclockwise: True
6test 548 isconvex: False
6test 549 points2: 18
6test 550 nearestOn5: (-77.455114, -16.67063, 4.134666, 307.988253, 0)
6test 551 areaCO: 2.83192062868e+11  FAILED, KNOWN, expected 2.69601367661e+11
6test 552 isclockwise: True
6test 553 perimeterCO: 2098630.956053  FAILED, KNOWN, expected 2099854.381923
6test 554 latlon: (-66.6, -88.0)
6test 555 philam: (-1.162389, -1.53589)
6test 556 latlonheight: (-66.6, -88.0, 0)
6test 557 philamheight: (-1.162389, -1.53589, 0)
6test 558 _N_vector: (0.01386, -0.39691, -0.91775)
6test 559 toNvector: (0.01386, -0.39691, -0.91775)
6test 560 toNvector: (0.01386, -0.396906, -0.917755)
6test 561 classof: 66.6°S, 088.0°W
6test 562 others: 66.6°S, 088.0°W
6test 563 copy(LatLon): (<class 'pygeodesy.ellipsoidalKarney.LatLon'>, True)
6test 564 LatLon.copy(): (<class 'pygeodesy.ellipsoidalKarney.LatLon'>, True)
6testing(pygeodesy.points, 23.01.21, LatLon=<class 'pygeodesy.ellipsoidalExact.LatLon'>)
6test 565 areaOf: 8.811228e+09
6test 566 centroidOf: 45.5, 1.5
6test 567 perimeterOf: 2.673633e+05
6test 568 isclockwise: False
6test 569 isconvex: True
6test 570 ispolar: False
6test 571 areaOf: 7.086883e+09
6test 572 perimeterOf: 2.687460e+05
6test 573 centroidOf: 0.333333, 0.333333
6test 574 isclockwise: True
6test 575 isconvex: True
6test 576 ispolar: False
6test 577 areaOf: 2.827856e+10
6test 578 perimeterOf: 4.717039e+05
6test 579 centroidOf: 1.0, 1.0
6test 580 isclockwise: False
6test 581 isconvex: True
6test 582 ispolar: False
6test 583 areaOf: 2.747297e+13
6test 584 perimeterOf: 2.332643e+07
6test 585 centroidOf: 52.113, 102.123
6test 586 isclockwise: False
6test 587 isconvex: False
6test 588 ispolar: True
6test 589 areaOf: 8.482014e+10
6test 590 perimeterOf: 1.334104e+06
6test 591 centroidOf: 1.167, 1.667
6test 592 isclockwise: False
6test 593 isconvex: False
6test 594 ispolar: False
6test 595 areaOf: 5.151974e+13
6test 596 perimeterOf: 2.638608e+07
6test 597 centroidOf: -19.444, -133.333
6test 598 isclockwise: True
6test 599 isconvex: True
6test 600 ispolar: False
6test 601 areaOf: 1.751694e+12  FAILED, KNOWN, expected 4.469277e+12
6test 602 perimeterOf: 1.562029e+07
6test 603 centroidOf: -71.443, -69.683
6test 604 isclockwise: True
6test 605 isconvex: False
6test 606 ispolar: True
6test 607 points2: 18
6test 608 nearestOn5: (-77.455114, -16.67063, 4.134666, 307.988253, 0)
6test 609 areaCO: 2.83192062868e+11  FAILED, KNOWN, expected 2.69601367661e+11
6test 610 isclockwise: True
6test 611 perimeterCO: 2098630.956053  FAILED, KNOWN, expected 2098430.887891
6test 612 latlon: (-66.6, -88.0)
6test 613 philam: (-1.162389, -1.53589)
6test 614 latlonheight: (-66.6, -88.0, 0)
6test 615 philamheight: (-1.162389, -1.53589, 0)
6test 616 _N_vector: (0.01386, -0.39691, -0.91775)
6test 617 toNvector: (0.01386, -0.39691, -0.91775)
6test 618 toNvector: (0.01386, -0.396906, -0.917755)
6test 619 classof: 66.6°S, 088.0°W
6test 620 others: 66.6°S, 088.0°W
6test 621 copy(LatLon): (<class 'pygeodesy.ellipsoidalExact.LatLon'>, True)
6test 622 LatLon.copy(): (<class 'pygeodesy.ellipsoidalExact.LatLon'>, True)
6testArea(pygeodesy.ellipsoidalExact, 22.07.07)
6test 623 luneOf: 1.27516405431022e+14
622 of 623 testPoints.py tests (3.5%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 758.873 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testProps.py
6testing testProps.py 22.05.13
6test<class 'pygeodesy.named._NamedBase'>(pygeodesy.props, 22.09.23)
6test 1 P1: 1
6test 2 p1: 2
6test 3 P2: 1
6test 4 p2: 3
6test 5 q1: 1
6test 6 q2: 2
6test 7 q3: True
6test 8 u1: None
6test 9 u2: U
6test 10 P3: 4
6test 11 p3: 5
6test 12 q4: False
6test 13 q5: 2
6test 14 u3: None
6test 15 u4: U
6test 16 X1: immutable Property_RO: X.setter X
6test 17 X2: invalid Property_RO: X.deleter X
6test 18 y1: immutable property_RO: y.setter y
6test 19 y2: invalid property_RO: y.deleter y
6test 20 Z1: invalid Property: Z.deleter Z
6test 21 Z2: invalid Property: Z.getter Z
6test<class 'pygeodesy.ellipsoids.Ellipsoid'>(pygeodesy.props, 22.09.23)
6test 22 P1: 1
6test 23 p1: 2
6test 24 P2: 1
6test 25 p2: 3
6test 26 q1: 1
6test 27 q2: 2
6test 28 q3: True
6test 29 u1: None
6test 30 u2: U
6test 31 P3: 4
6test 32 p3: 5
6test 33 q4: False
6test 34 q5: 2
6test 35 u3: None
6test 36 u4: U
6test 37 X1: immutable Property_RO: X.setter X
6test 38 X2: invalid Property_RO: X.deleter X
6test 39 y1: immutable property_RO: y.setter y
6test 40 y2: invalid property_RO: y.deleter y
6test 41 Z1: invalid Property: Z.deleter Z
6test 42 Z2: invalid Property: Z.getter Z
6all 42 testProps.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 661.135 us

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testResections.py
./test/testResections.py:39: DeprecationWarning: method L{__main__.Cartesian_.collins} has been DEPRECATED, use method L{collins5}.
  self.test(collins.__name__, C_(A).collins(C, B, 109.5125, 115.0889), t, nl=1)  # DEPRECATED
./test/testResections.py:55: DeprecationWarning: method L{__main__.Cartesian_.tienstra} has been DEPRECATED, use method L{tienstra7}.
  self.test(tienstra.__name__, C_(A).tienstra(B, C, 115.0889, None, 109.5125), t, nl=1)  # DEPRECATED
./test/testResections.py:64: DeprecationWarning: function L{pygeodesy.deprecated.collins} has been DEPRECATED, use function L{pygeodesy.collins5}.
  self.test(collins.__name__, collins(A, C, B, 109.3, 115.1), t, nl=1)  # DEPRECATED
./test/testResections.py:72: DeprecationWarning: function L{pygeodesy.deprecated.tienstra} has been DEPRECATED, use function L{pygeodesy.tienstra7}.
  self.test(tienstra.__name__, tienstra(A, B, C, 115.1, beta=135.6, gamma=109.3), t, nl=1)  # DEPRECATED
6testing testResections.py 22.09.08
6test 1 cassini: (2128.3903, 5578.1443, 0)
6test 2 cassini: Cartesian_(2128.3903, 5578.1443, 0)
6test 3 collins5: (2128.3903, 5578.1443, 0)
6test 4 collins5: (1830.5948, 2576.2429, 0)
6test 5 collins5: 1581.1388, 1562.0499, 2121.3203
6test 6 collins5: Cartesian_(2128.3903, 5578.1443, 0)
6test 7 collins5: Cartesian_(1830.5948, 2576.2429, 0)
6test 8 collins5: 1581.1388, 1562.0499, 2121.3203
6test 9 collins5: 1581.1388, 1562.0499, 2121.3203
6test 10 collins: (Cartesian_(2128.39, 5578.144, 0), Cartesian_(1830.595, 2576.243, 0), 1581.13883, 1562.049935, 2121.320344)
6test 11 pierlot: (2128.3903, 5578.1443, 0)
6test 12 pierlot: Cartesian_(2128.3903, 5578.1443, 0)
6test 13 pierlot: Cartesian_(2128.3903, 5578.1443, 0.0)
6test 14 tienstra7: (2128.3903, 5578.1443, 0)
6test 15 tienstra7: 47.9357, 84.8896, 47.1747, 1581.1388, 2121.3203, 1562.0499
6test 16 tienstra7: Cartesian_(2128.3903, 5578.1443, 0)
6test 17 tienstra7: 47.9357, 84.8896, 47.1747, 1581.1388, 2121.3203, 1562.0499
6test 18 tienstra: (Cartesian_(2128.39, 5578.144, 0), 47.935673, 84.889582, 47.174744, 1581.13883, 2121.320344, 1562.049935)
6test 19 cassini: (2129.3018, 5575.8016, 0)
6test 20 collins5: (2129.3018, 5575.8016, 0)
6test 21 collins5: (1835.1911, 2563.0708, 0)
6test 22 collins5: 1581.1388, 1562.0499, 2121.3203
6test 23 collins: (Vector3d(2129.30185, 5575.80164, 0), Vector3d(1835.19112, 2563.07083, 0), 1581.13883, 1562.049935, 2121.320344)
6test 24 pierlot: (2129.3018, 5575.8016, 0)
6test 25 tienstra7: (2129.3018, 5575.8016, 0)
6test 26 tienstra7: 47.9357, 84.8896, 47.1747, 1581.1388, 2121.3203, 1562.0499
6test 27 tienstra: (Vector3d(2129.30185, 5575.80164, 0), 47.935673, 84.889582, 47.174744, 1581.13883, 2121.320344, 1562.049935)
6test 28 triSide4: (10.0, 30.0, 0.785398, 8.840862)
6test 29 snellius3: (17.54582, 38.564239, 46.317675)
6test 30 snellius3: (844.880591, 571.107418, 835.462796)
6test 31 snellius3: (128.557522, 100.0, 187.938524)
6test 32 snellius3: (567.480866, 847.344375, 832.446688)
6test 33 snellius3: (4064.197388, 3652.539386, 4988.197388)
6test 34 wildberger3: (17.54582, 38.56424, 46.317675)
6test 35 wildberger3: (844.880591, 571.107418, 835.462796)
6test 36 wildberger3: (128.557522, 100.0, 187.938524)
6test 37 wildberger3: (567.480866, 847.344375, 832.446688)
6test 38 wildberger3: (4064.197353, 3652.539342, 4988.197355)  FAILED, KNOWN, expected (4064.197343, 3652.539342, 4988.197355)
6test 39 triAngle: 3.141592654
6test 40 triAngle4: (1.570796, 1.570796, 0.0, 0.0)
6test 41 triSide2: (2.0, 0.0)
6test 42 triSide2: (2.0, 3.141593)
65 of 42 testResections.py tests (11.9%) FAILED, incl. 1 KNOWN plus 4 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 8.921 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testRhumbx.py
./test/testRhumbx.py:72: DeprecationWarning: method L{pygeodesy.rhumbx.Rhumb.Direct7} has been DEPRECATED, use method L{Rhumb.Direct8}.
  r = R.Direct7(40.6, -73.8, -92.38889, 12782581.068)  # coverage
./pygeodesy/rhumbx.py:175: DeprecationWarning: method L{pygeodesy.rhumbx.Rhumb8Tuple._to7Tuple} has been DEPRECATED, do not use!
  return self.Direct8(lat1, lon1, azi12, s12, outmask=outmask)._to7Tuple()
./pygeodesy/deprecated/__init__.py:64: DeprecationWarning: class L{pygeodesy.deprecated.Rhumb7Tuple} has been DEPRECATED, use class L{Rhumb8Tuple} ignoring item C{a12}.
  deprecated_class(cls)
./test/testRhumbx.py:75: DeprecationWarning: method L{pygeodesy.deprecated.Rhumb7Tuple.toDirect9Tuple} has been DEPRECATED.
  t = str(r.toDirect9Tuple())  # coverage
./pygeodesy/deprecated/__init__.py:205: DeprecationWarning: method L{pygeodesy.deprecated.Rhumb7Tuple.toRhumb8Tuple} has been DEPRECATED.
  return self.toRhumb8Tuple().toDirect9Tuple(self, **kwds)
./test/testRhumbx.py:169: DeprecationWarning: method L{pygeodesy.rhumbx.Rhumb.Inverse7} has been DEPRECATED, use method L{Rhumb.Inverse8}.
  r = P.Inverse7(40.6, -73.8, 51.6, -0.5)  # coverage
./pygeodesy/rhumbx.py:359: DeprecationWarning: method L{pygeodesy.rhumbx.Rhumb8Tuple._to7Tuple} has been DEPRECATED, do not use!
  return self.Inverse8(lat1, lon1, azi12, s12, outmask=outmask)._to7Tuple()
./test/testRhumbx.py:172: DeprecationWarning: method L{pygeodesy.deprecated.Rhumb7Tuple.toInverse10Tuple} has been DEPRECATED.
  t = str(r.toInverse10Tuple())
./pygeodesy/deprecated/__init__.py:213: DeprecationWarning: method L{pygeodesy.deprecated.Rhumb7Tuple.toRhumb8Tuple} has been DEPRECATED.
  return self.toRhumb8Tuple().toInverse10Tuple(self, **kwds)
6testing testRhumbx.py 22.09.12 (module pygeodesy.rhumbx 22.10.11)
6testDirectX vs ...(pygeodesy.rhumbx, 22.10.11)
6test 1 Direct.azi12: -92.38889
6test 2 Direct.lat1: 40.6
6test 3 Direct.lat2: 35.799995945206  FAILED, KNOWN, expected 35.79999
6test 4 Direct.lon1: -73.8
6test 5 Direct.lon2: 140.300004102052  FAILED, KNOWN, expected 140.23651
6test 6 Direct.s12: 12782581.068
6test 7 GDict.azi12: 51
6test 8 GDict.lat1: 40.6
6test 9 GDict.lat2: 71.688899882813
6test 10 GDict.lon1: -73.8
6test 11 GDict.lon2: 0.255519824423416  FAILED, KNOWN, expected 0.255519824423359
6test 12 GDict.S12: 44095641862956.1
6test 13 GDict.s12: 5500000
6test 14 RhumbLine: TMorder=6, azi12=51.0, exact=True, lat1=40.6, lon1=-73.8, rhumb=Rhumb(RAorder=6, TMorder=6, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), exact=True), xTM=ExactTransverseMercator(datum='_WGS84', extendp=False, k0=0.9996, lon0=0.0)
6test 15 Rhumb: Rhumb(RAorder=6, TMorder=6, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), exact=True)
6test 16 Direct.azi12: -92.38889
6test 17 Direct.lat1: 40.6
6test 18 Direct.lat2: 35.799995945206  FAILED, KNOWN, expected 35.8
6test 19 Direct.lon1: -73.8
6test 20 Direct.lon2: 140.300004102052  FAILED, KNOWN, expected 140.3
6test 21 Direct.s12: 12782581.068
6test 22 Direct7: (40.6, -73.8, 35.799996, 140.300004, -92.38889, 12782581.068, -63760638302268.8125)
6test 23 toDirect9Tuple: (NAN, 35.799996, 140.300004, -92.38889, 12782581.068, 12782581.068, 1.0, 1.0, -63760638302268.8125)
6test 24 DirectLine: (40.6, -73.8, 35.799996, 140.300004, -92.38889, 12782581.068, -63760638302268.8125)
6test 25 RhumbLine: TMorder=6, azi12=51.0, exact=True, lat1=40.6, lon1=-73.8, rhumb=Rhumb(RAorder=6, TMorder=6, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), exact=True), xTM=ExactTransverseMercator(datum='_WGS84', extendp=False, k0=0.9996, lon0=0.0)
6test 26 DirectLine: TMorder=6, azi12=-51.0, exact=True, lat1=35.8, lon1=140.3, rhumb=Rhumb(RAorder=6, TMorder=6, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), exact=True), xTM=ExactTransverseMercator(datum='_WGS84', extendp=False, k0=0.9996, lon0=0.0)
6testInverseX vs ...(pygeodesy.rhumbx, 22.10.11)
6test 27 Inverse.azi12: -92.3888879816997  FAILED, KNOWN, expected -92.38889
6test 28 Inverse.lat1: 40.6
6test 29 Inverse.lat2: 35.8
6test 30 Inverse.lon1: -73.8
6test 31 Inverse.lon2: 140.3
6test 32 Inverse.s12: 12782581.0676842
6test 33 Inverse.S12: -63760642939072.5  FAILED, KNOWN, expected -63760642939073
6test 34 GDict.azi12: 77.7683897102557
6test 35 GDict.lat1: 40.6
6test 36 GDict.lat2: 51.6
6test 37 GDict.lon1: -73.8
6test 38 GDict.lon2: -0.5
6test 39 GDict.s12: 5771083.38332803
6test 40 GDict.S12: 37395209100030.4
6test 41 Inverse.azi12: 103.582833003411  FAILED, KNOWN, expected 103.582833333333
6test 42 Inverse.lat1: 40.6397222222222  FAILED, KNOWN, expected 40.639722
6test 43 Inverse.lat2: 1.35916666666667  FAILED, KNOWN, expected 1.359167
6test 44 Inverse.lon2: 103.989444444444  FAILED, KNOWN, expected 103.989444
6test 45 Inverse.s12: 18523563.0423774  FAILED, KNOWN, expected 18523563
6test 46 0,000 Km lat2: 40:38:23.0N
6test 47 0,000 Km lon2: 073:46:44.0W
6test 48 0,000 Km S12 : 0
6test 49 1,000 Km lat2: 36:24:30.3N
6test 50 1,000 Km lon2: 051:28:26.4W
6test 51 1,000 Km S12 : 9817078307820  FAILED, KNOWN, expected 9817078307821
6test 52 2,000 Km lat2: 32:10:26.8N
6test 53 2,000 Km lon2: 030:20:57.3W
6test 54 2,000 Km S12 : 18224745682004  FAILED, KNOWN, expected 18224745682005
6test 55 3,000 Km lat2: 27:56:13.2N
6test 56 3,000 Km lon2: 010:10:54.2W
6test 57 3,000 Km S12 : 25358020327741
6test 58 4,000 Km lat2: 23:41:50.1N
6test 59 4,000 Km lon2: 009:12:45.5E
6test 60 4,000 Km S12 : 31321269267101  FAILED, KNOWN, expected 31321269267102
6test 61 5,000 Km lat2: 19:27:18.7N
6test 62 5,000 Km lon2: 027:59:22.1E
6test 63 5,000 Km S12 : 36195163180159
6test 64 6,000 Km lat2: 15:12:40.2N
6test 65 6,000 Km lon2: 046:17:01.1E
6test 66 6,000 Km S12 : 40041499143669
6test 67 7,000 Km lat2: 10:57:55.9N
6test 68 7,000 Km lon2: 064:12:52.8E
6test 69 7,000 Km S12 : 42906570007050
6test 70 8,000 Km lat2: 06:43:07.3N
6test 71 8,000 Km lon2: 081:53:28.8E
6test 72 8,000 Km S12 : 44823504180199  FAILED, KNOWN, expected 44823504180200
6test 73 9,000 Km lat2: 02:28:16.2N
6test 74 9,000 Km lon2: 099:24:54.5E
6test 75 9,000 Km S12 : 45813843358737
6test 76 10,000 Km lat2: 01:46:36.0S
6test 77 10,000 Km lon2: 116:52:59.7E
6test 78 10,000 Km S12 : 45888525219677
6test 79 Inverse: {a12: 51.420061, azi12: 77.692032, lat1: 40.6, lat2: 51.6, lon1: -73.8, lon2: -0.5, name: '_Prolate', s12: 5733622.743165}
6test 80 Inverse7: (40.6, -73.8, 51.6, -0.5, 77.692032, 5733622.743165, 37469093881942.273438)
6test 81 toInverse10Tuple: (NAN, 5733622.743165, 0.977016, 0.213166, 0.977016, 0.213166, 5733622.743165, 1.0, 1.0, 37469093881942.273438)
6test 82 InverseLine: -102.23161028974432
6test 83 R.exact: True
6test 84 R.exact: False
6test 85 R: Rhumb(RAorder=6, TMorder=6, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), exact=False)
6test 86 R.exact: True
6test 87 R.Line.exact: True
6test 88 R.Line: RhumbLine(TMorder=6, azi12=3.0, exact=True, lat1=1.0, lon1=2.0, rhumb=Rhumb(RAorder=6, TMorder=6, ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), exact=True), xTM=ExactTransverseMercator(datum='_WGS84', extendp=False, k0=0.9996, lon0=0.0))
6test 89 orders: (6, 6)
6test 90 orders: (4, 8)

6test 91 at 0 nearestOn4: NearestOn4Tuple(lat=0.0, lon=0.0, distance=4452779.631731, normal=90.0)
6test 92 at 0 distance2: Distance2Tuple(distance=2212366.254172, initial=180.0)
6test 93 at 0 iteration: 2
6test 94 at 3 nearestOn4: NearestOn4Tuple(lat=1.78887, lon=-0.99811, distance=4567437.385459, normal=93.0)
6test 95 at 3 distance2: Distance2Tuple(distance=2017489.178337, initial=-176.913538)
6test 96 at 3 iteration: 18
6test 97 at 6 nearestOn4: NearestOn4Tuple(lat=3.621299, lon=-1.782857, distance=4665385.363707, normal=96.0)
6test 98 at 6 distance2: Distance2Tuple(distance=1822249.076337, initial=-173.902054)
6test 99 at 6 iteration: 19
6test 100 at 9 nearestOn4: NearestOn4Tuple(lat=5.484985, lon=-2.3602, distance=4747259.943739, normal=99.0)
6test 101 at 9 distance2: Distance2Tuple(distance=1626056.569178, initial=-170.957822)
6test 102 at 9 iteration: 20
6test 103 at 12 nearestOn4: NearestOn4Tuple(lat=7.370116, lon=-2.73481, distance=4813660.672246, normal=102.0)
6test 104 at 12 distance2: Distance2Tuple(distance=1428212.934231, initial=-168.072177)
6test 105 at 12 iteration: 20
6test 106 at 15 nearestOn4: NearestOn4Tuple(lat=9.268415, lon=-2.909634, distance=4865124.821218, normal=105.0)
6test 107 at 15 distance2: Distance2Tuple(distance=1227972.969826, initial=-165.235791)
6test 108 at 15 iteration: 20
6test 109 at 18 nearestOn4: NearestOn4Tuple(lat=11.172185, lon=-2.885742, distance=4902118.749304, normal=108.0)
6test 110 at 18 distance2: Distance2Tuple(distance=1024605.530336, initial=-162.438792)
6test 111 at 18 iteration: 20
6test 112 at 21 nearestOn4: NearestOn4Tuple(lat=13.073424, lon=-2.662411, distance=4925040.440464, normal=111.0)
6test 113 at 21 distance2: Distance2Tuple(distance=817449.876114, initial=-159.670792)
6test 114 at 21 iteration: 19
6test 115 at 24 nearestOn4: NearestOn4Tuple(lat=14.963037, lon=-2.237368, distance=4934228.141285, normal=114.0)
6test 116 at 24 distance2: Distance2Tuple(distance=605965.483538, initial=-156.920863)
6test 117 at 24 iteration: 18
6test 118 at 27 nearestOn4: NearestOn4Tuple(lat=16.830177, lon=-1.607176, distance=4929970.763676, normal=117.0)
6test 119 at 27 distance2: Distance2Tuple(distance=389772.69206, initial=-154.177522)
6test 120 at 27 iteration: 17
6test 121 at 30 nearestOn4: NearestOn4Tuple(lat=18.661739, lon=-0.767728, distance=4912516.651406, normal=120.0)
6test 122 at 30 distance2: Distance2Tuple(distance=168681.79275, initial=-151.428749)
6test 123 at 30 iteration: 15
6test 124 at 33 nearestOn4: NearestOn4Tuple(lat=20.442006, lon=0.285131, distance=4882078.472693, normal=123.0)
6test 125 at 33 distance2: Distance2Tuple(distance=57291.056741, initial=31.337909)
6test 126 at 33 iteration: 14
6test 127 at 36 nearestOn4: NearestOn4Tuple(lat=22.152468, lon=1.554872, distance=4838833.433767, normal=126.0)
6test 128 at 36 distance2: Distance2Tuple(distance=287921.351972, initial=34.135132)
6test 129 at 36 iteration: 13
6test 130 at 39 nearestOn4: NearestOn4Tuple(lat=23.77182, lon=3.04338, distance=4782919.681256, normal=129.0)
6test 131 at 39 distance2: Distance2Tuple(distance=522785.823462, initial=36.975477)
6test 132 at 39 iteration: 12
6test 133 at 42 nearestOn4: NearestOn4Tuple(lat=25.276135, lon=4.749884, distance=4714431.597517, normal=132.0)
6test 134 at 42 distance2: Distance2Tuple(distance=761281.13012, initial=39.870848)
6test 135 at 42 iteration: 12
6test 136 at 45 nearestOn4: NearestOn4Tuple(lat=26.639267, lon=6.669676, distance=4633418.568418, normal=135.0)
6test 137 at 45 distance2: Distance2Tuple(distance=1002647.475734, initial=42.831764)
6test 138 at 45 iteration: 12
6test 139 at 48 nearestOn4: NearestOn4Tuple(lat=27.833525, lon=8.792659, distance=4539893.426211, normal=138.0)
6test 140 at 48 distance2: Distance2Tuple(distance=1245992.475272, initial=45.866374)
6test 141 at 48 iteration: 12
6test 142 at 51 nearestOn4: NearestOn4Tuple(lat=28.830702, lon=11.101809, distance=4433857.579882, normal=141.0)
6test 143 at 51 distance2: Distance2Tuple(distance=1490310.992237, initial=48.979263)
6test 144 at 51 iteration: 12
6test 145 at 54 nearestOn4: NearestOn4Tuple(lat=29.60355, lon=13.571793, distance=4315348.787094, normal=144.0)
6test 146 at 54 distance2: Distance2Tuple(distance=1734498.226471, initial=52.17011)
6test 147 at 54 iteration: 12
6test 148 at 57 nearestOn4: NearestOn4Tuple(lat=30.12774, lon=16.16811, distance=4184513.198865, normal=147.0)
6test 149 at 57 distance2: Distance2Tuple(distance=1977356.104695, initial=55.432438)
6test 150 at 57 iteration: 12
6test 151 at 60 nearestOn4: NearestOn4Tuple(lat=30.384199, lon=18.847259, distance=4041694.757223, normal=150.0)
6test 152 at 60 distance2: Distance2Tuple(distance=2217596.775596, initial=58.752785)
6test 153 at 60 iteration: 13
6test 154 at 63 nearestOn4: NearestOn4Tuple(lat=30.361518, lon=21.558351, distance=3887523.410219, normal=153.0)
6test 155 at 63 distance2: Distance2Tuple(distance=2453850.681967, initial=62.110741)
6test 156 at 63 iteration: 13
6test 157 at 66 nearestOn4: NearestOn4Tuple(lat=30.057906, lon=24.246352, distance=3722973.817216, normal=156.0)
6test 158 at 66 distance2: Distance2Tuple(distance=2684688.240253, initial=65.480201)
6test 159 at 66 iteration: 13
6test 160 at 69 nearestOn4: NearestOn4Tuple(lat=29.482072, lon=26.856511, distance=3549365.860101, normal=159.0)
6test 161 at 69 distance2: Distance2Tuple(distance=2908661.404266, initial=68.831849)
6test 162 at 69 iteration: 13
6test 163 at 72 nearestOn4: NearestOn4Tuple(lat=28.652617, lon=29.339085, distance=3368292.365392, normal=162.0)
6test 164 at 72 distance2: Distance2Tuple(distance=3124363.961966, initial=72.136463)
6test 165 at 72 iteration: 14
6test 166 at 75 nearestOn4: NearestOn4Tuple(lat=27.595973, lon=31.653166, distance=3181483.93514, normal=165.0)
6test 167 at 75 distance2: Distance2Tuple(distance=3330500.367925, initial=75.368254)
6test 168 at 75 iteration: 14
6test 169 at 78 nearestOn4: NearestOn4Tuple(lat=26.34337, lon=33.768789, distance=2990642.863598, normal=168.0)
6test 170 at 78 distance2: Distance2Tuple(distance=3525947.426348, initial=78.507468)
6test 171 at 78 iteration: 15
6test 172 at 81 nearestOn4: NearestOn4Tuple(lat=24.927599, lon=35.667071, distance=2797285.607317, normal=171.0)
6test 173 at 81 distance2: Distance2Tuple(distance=3709794.568962, initial=81.541766)
6test 174 at 81 iteration: 15
6test 175 at 84 nearestOn4: NearestOn4Tuple(lat=23.380219, lon=37.338792, distance=2602624.246813, normal=174.0)
6test 176 at 84 distance2: Distance2Tuple(distance=3881355.597301, initial=84.466366)
6test 177 at 84 iteration: 16
6test 178 at 87 nearestOn4: NearestOn4Tuple(lat=21.729621, lon=38.782099, distance=2407500.005448, normal=177.0)
6test 179 at 87 distance2: Distance2Tuple(distance=4040153.204404, initial=87.283272)
6test 180 at 87 iteration: 16
6test 181 at 90 nearestOn4: NearestOn4Tuple(lat=20.0, lon=40.0, distance=2212366.254172, normal=180.0)
6test 182 at 90 distance2: Distance2Tuple(distance=4185883.452394, initial=90.0)
6test 183 at 90 iteration: 2
6test 184 at 93 nearestOn4: NearestOn4Tuple(lat=18.21113, lon=40.99811, distance=2017309.778494, normal=-177.0)
6test 185 at 93 distance2: Distance2Tuple(distance=4318369.394574, initial=92.628183)
6test 186 at 93 iteration: 18
6test 187 at 96 nearestOn4: NearestOn4Tuple(lat=16.378701, lon=41.782857, distance=1822097.141563, normal=-174.0)
6test 188 at 96 distance2: Distance2Tuple(distance=4437512.122777, initial=95.182272)
6test 189 at 96 iteration: 19
6test 190 at 99 nearestOn4: NearestOn4Tuple(lat=14.515015, lon=42.3602, distance=1626234.955125, normal=-171.0)
6test 191 at 99 distance2: Distance2Tuple(distance=4543245.293056, initial=97.678448)
6test 192 at 99 iteration: 20
6test 193 at 102 nearestOn4: NearestOn4Tuple(lat=12.629884, lon=42.73481, distance=1429036.030972, normal=-168.0)
6test 194 at 102 distance2: Distance2Tuple(distance=4635496.852428, initial=100.133763)
6test 195 at 102 iteration: 20
6test 196 at 105 nearestOn4: NearestOn4Tuple(lat=10.731585, lon=42.909634, distance=1229686.200109, normal=-165.0)
6test 197 at 105 distance2: Distance2Tuple(distance=4714159.823993, initial=102.565486)
6test 198 at 105 iteration: 20
6test 199 at 108 nearestOn4: NearestOn4Tuple(lat=8.827815, lon=42.885742, distance=1027308.413714, normal=-162.0)
6test 200 at 108 distance2: Distance2Tuple(distance=4779072.735062, initial=104.990626)
6test 201 at 108 iteration: 20
6test 202 at 111 nearestOn4: NearestOn4Tuple(lat=6.926576, lon=42.662411, distance=821021.78405, normal=-159.0)
6test 203 at 111 distance2: Distance2Tuple(distance=4830009.484467, initial=107.425584)
6test 204 at 111 iteration: 19
6test 205 at 114 nearestOn4: NearestOn4Tuple(lat=5.036963, lon=42.237368, distance=609993.754392, normal=-156.0)
6test 206 at 114 distance2: Distance2Tuple(distance=4866678.02413, initial=109.885922)
6test 207 at 114 iteration: 18
6test 208 at 117 nearestOn4: NearestOn4Tuple(lat=3.169823, lon=41.607176, distance=393484.06554, normal=-153.0)
6test 209 at 117 distance2: Distance2Tuple(distance=4888727.07477, initial=112.386218)
6test 210 at 117 iteration: 17
6test 211 at 120 nearestOn4: NearestOn4Tuple(lat=1.338261, lon=40.767728, distance=170879.9747, normal=-150.0)
6test 212 at 120 distance2: Distance2Tuple(distance=4895760.153166, initial=114.939984)
6test 213 at 120 iteration: 15
6test 214 at 123 nearestOn4: NearestOn4Tuple(lat=-0.442006, lon=39.714869, distance=58276.59935, normal=-147.0)
6test 215 at 123 distance2: Distance2Tuple(distance=4887356.42216, initial=117.559632)
6test 216 at 123 iteration: 14
6test 217 at 126 nearestOn4: NearestOn4Tuple(lat=-2.152468, lon=38.445128, distance=294267.652925, normal=-144.0)
6test 218 at 126 distance2: Distance2Tuple(distance=4863098.229148, initial=120.256447)
6test 219 at 126 iteration: 13
6test 220 at 129 nearestOn4: NearestOn4Tuple(lat=-3.77182, lon=36.95662, distance=537179.270746, normal=-141.0)
6test 221 at 129 distance2: Distance2Tuple(distance=4822605.581331, initial=123.040514)
6test 222 at 129 iteration: 12
6test 223 at 132 nearestOn4: NearestOn4Tuple(lat=-5.276135, lon=35.250116, distance=786877.93689, normal=-138.0)
6test 224 at 132 distance2: Distance2Tuple(distance=4765578.049049, initial=125.920549)
6test 225 at 132 iteration: 12
6test 226 at 135 nearestOn4: NearestOn4Tuple(lat=-6.639267, lon=33.330324, distance=1042977.288036, normal=-135.0)
6test 227 at 135 distance2: Distance2Tuple(distance=4691844.442335, initial=128.903552)
6test 228 at 135 iteration: 12
6test 229 at 138 nearestOn4: NearestOn4Tuple(lat=-7.833525, lon=31.207341, distance=1304791.465619, normal=-132.0)
6test 230 at 138 distance2: Distance2Tuple(distance=4601419.700187, initial=131.994235)
6test 231 at 138 iteration: 12
6test 232 at 141 nearestOn4: NearestOn4Tuple(lat=-8.830702, lon=28.898191, distance=1571275.925114, normal=-129.0)
6test 233 at 141 distance2: Distance2Tuple(distance=4494566.344609, initial=135.194197)
6test 234 at 141 iteration: 12
6test 235 at 144 nearestOn4: NearestOn4Tuple(lat=-9.60355, lon=26.428207, distance=1840964.643721, normal=-126.0)
6test 236 at 144 distance2: Distance2Tuple(distance=4371854.291284, initial=138.500907)
6test 237 at 144 iteration: 12
6test 238 at 147 nearestOn4: NearestOn4Tuple(lat=-10.12774, lon=23.83189, distance=2111923.120701, normal=-123.0)
6test 239 at 147 distance2: Distance2Tuple(distance=4234208.109837, initial=141.906658)
6test 240 at 147 iteration: 12
6test 241 at 150 nearestOn4: NearestOn4Tuple(lat=-10.384199, lon=21.152741, distance=2381745.725116, normal=-120.0)
6test 242 at 150 distance2: Distance2Tuple(distance=4082926.581705, initial=145.397815)
6test 243 at 150 iteration: 13
6test 244 at 153 nearestOn4: NearestOn4Tuple(lat=-10.361518, lon=18.441649, distance=2647627.022313, normal=-117.0)
6test 245 at 153 distance2: Distance2Tuple(distance=3919658.690883, initial=148.954759)
6test 246 at 153 iteration: 13
6test 247 at 156 nearestOn4: NearestOn4Tuple(lat=-10.057906, lon=15.753648, distance=2906522.653561, normal=-114.0)
6test 248 at 156 distance2: Distance2Tuple(distance=3746326.345058, initial=152.55284)
6test 249 at 156 iteration: 13
6test 250 at 159 nearestOn4: NearestOn4Tuple(lat=-9.482072, lon=13.143489, distance=3155385.639627, normal=-111.0)
6test 251 at 159 distance2: Distance2Tuple(distance=3564997.75099, initial=156.164419)
6test 252 at 159 iteration: 13
6test 253 at 162 nearestOn4: NearestOn4Tuple(lat=-8.652617, lon=10.660915, distance=3391430.460883, normal=-108.0)
6test 254 at 162 distance2: Distance2Tuple(distance=3377731.675499, initial=159.761632)
6test 255 at 162 iteration: 14
6test 256 at 165 nearestOn4: NearestOn4Tuple(lat=-7.595973, lon=8.346834, distance=3612359.931242, normal=-105.0)
6test 257 at 165 distance2: Distance2Tuple(distance=3186423.160726, initial=163.319215)
6test 258 at 165 iteration: 14
6test 259 at 168 nearestOn4: NearestOn4Tuple(lat=-6.34337, lon=6.231211, distance=3816501.539103, normal=-102.0)
6test 260 at 168 distance2: Distance2Tuple(distance=2992679.463282, initial=166.816688)
6test 261 at 168 iteration: 15
6test 262 at 171 nearestOn4: NearestOn4Tuple(lat=-4.927599, lon=4.332929, distance=4002834.001406, normal=-99.0)
6test 263 at 171 distance2: Distance2Tuple(distance=2797742.696107, initial=170.239499)
6test 264 at 171 iteration: 15
6test 265 at 174 nearestOn4: NearestOn4Tuple(lat=-3.380219, lon=2.661208, distance=4170920.680715, normal=-96.0)
6test 266 at 174 distance2: Distance2Tuple(distance=2602460.6285, initial=173.5791)
6test 267 at 174 iteration: 16
6test 268 at 177 nearestOn4: NearestOn4Tuple(lat=-1.729621, lon=1.217901, distance=4320786.90777, normal=-93.0)
6test 269 at 177 distance2: Distance2Tuple(distance=2407296.638562, initial=176.832261)
6test 270 at 177 iteration: 16
6test 271 at 180 nearestOn4: NearestOn4Tuple(lat=-0.0, lon=0.0, distance=4452779.631731, normal=-90.0)
6test 272 at 180 distance2: Distance2Tuple(distance=2212366.254172, initial=180.0)
6test 273 at 180 iteration: 2
6test 274 at 183 nearestOn4: NearestOn4Tuple(lat=1.78887, lon=-0.99811, distance=4567437.385459, normal=-87.0)
6test 275 at 183 distance2: Distance2Tuple(distance=2017489.178337, initial=-176.913538)
6test 276 at 183 iteration: 18
6test 277 at 186 nearestOn4: NearestOn4Tuple(lat=3.621299, lon=-1.782857, distance=4665385.363707, normal=-84.0)
6test 278 at 186 distance2: Distance2Tuple(distance=1822249.076337, initial=-173.902054)
6test 279 at 186 iteration: 19
6test 280 at 189 nearestOn4: NearestOn4Tuple(lat=5.484985, lon=-2.3602, distance=4747259.943739, normal=-81.0)
6test 281 at 189 distance2: Distance2Tuple(distance=1626056.569178, initial=-170.957822)
6test 282 at 189 iteration: 20
6test 283 at 192 nearestOn4: NearestOn4Tuple(lat=7.370116, lon=-2.73481, distance=4813660.672246, normal=-78.0)
6test 284 at 192 distance2: Distance2Tuple(distance=1428212.934231, initial=-168.072177)
6test 285 at 192 iteration: 20
6test 286 at 195 nearestOn4: NearestOn4Tuple(lat=9.268415, lon=-2.909634, distance=4865124.821218, normal=-75.0)
6test 287 at 195 distance2: Distance2Tuple(distance=1227972.969826, initial=-165.235791)
6test 288 at 195 iteration: 20
6test 289 at 198 nearestOn4: NearestOn4Tuple(lat=11.172185, lon=-2.885742, distance=4902118.749304, normal=-72.0)
6test 290 at 198 distance2: Distance2Tuple(distance=1024605.530336, initial=-162.438792)
6test 291 at 198 iteration: 20
6test 292 at 201 nearestOn4: NearestOn4Tuple(lat=13.073424, lon=-2.662411, distance=4925040.440464, normal=-69.0)
6test 293 at 201 distance2: Distance2Tuple(distance=817449.876114, initial=-159.670792)
6test 294 at 201 iteration: 19
6test 295 at 204 nearestOn4: NearestOn4Tuple(lat=14.963037, lon=-2.237368, distance=4934228.141285, normal=-66.0)
6test 296 at 204 distance2: Distance2Tuple(distance=605965.483538, initial=-156.920863)
6test 297 at 204 iteration: 18
6test 298 at 207 nearestOn4: NearestOn4Tuple(lat=16.830177, lon=-1.607176, distance=4929970.763676, normal=-63.0)
6test 299 at 207 distance2: Distance2Tuple(distance=389772.69206, initial=-154.177522)
6test 300 at 207 iteration: 17
6test 301 at 210 nearestOn4: NearestOn4Tuple(lat=18.661739, lon=-0.767728, distance=4912516.651406, normal=-60.0)
6test 302 at 210 distance2: Distance2Tuple(distance=168681.79275, initial=-151.428749)
6test 303 at 210 iteration: 15
6test 304 at 213 nearestOn4: NearestOn4Tuple(lat=20.442006, lon=0.285131, distance=4882078.472693, normal=-57.0)
6test 305 at 213 distance2: Distance2Tuple(distance=57291.056741, initial=31.337909)
6test 306 at 213 iteration: 14
6test 307 at 216 nearestOn4: NearestOn4Tuple(lat=22.152468, lon=1.554872, distance=4838833.433767, normal=-54.0)
6test 308 at 216 distance2: Distance2Tuple(distance=287921.351972, initial=34.135132)
6test 309 at 216 iteration: 13
6test 310 at 219 nearestOn4: NearestOn4Tuple(lat=23.77182, lon=3.04338, distance=4782919.681256, normal=-51.0)
6test 311 at 219 distance2: Distance2Tuple(distance=522785.823462, initial=36.975477)
6test 312 at 219 iteration: 12
6test 313 at 222 nearestOn4: NearestOn4Tuple(lat=25.276135, lon=4.749884, distance=4714431.597517, normal=-48.0)
6test 314 at 222 distance2: Distance2Tuple(distance=761281.13012, initial=39.870848)
6test 315 at 222 iteration: 12
6test 316 at 225 nearestOn4: NearestOn4Tuple(lat=26.639267, lon=6.669676, distance=4633418.568418, normal=-45.0)
6test 317 at 225 distance2: Distance2Tuple(distance=1002647.475734, initial=42.831764)
6test 318 at 225 iteration: 12
6test 319 at 228 nearestOn4: NearestOn4Tuple(lat=27.833525, lon=8.792659, distance=4539893.426211, normal=-42.0)
6test 320 at 228 distance2: Distance2Tuple(distance=1245992.475272, initial=45.866374)
6test 321 at 228 iteration: 12
6test 322 at 231 nearestOn4: NearestOn4Tuple(lat=28.830702, lon=11.101809, distance=4433857.579882, normal=-39.0)
6test 323 at 231 distance2: Distance2Tuple(distance=1490310.992237, initial=48.979263)
6test 324 at 231 iteration: 12
6test 325 at 234 nearestOn4: NearestOn4Tuple(lat=29.60355, lon=13.571793, distance=4315348.787094, normal=-36.0)
6test 326 at 234 distance2: Distance2Tuple(distance=1734498.226471, initial=52.17011)
6test 327 at 234 iteration: 12
6test 328 at 237 nearestOn4: NearestOn4Tuple(lat=30.12774, lon=16.16811, distance=4184513.198865, normal=-33.0)
6test 329 at 237 distance2: Distance2Tuple(distance=1977356.104695, initial=55.432438)
6test 330 at 237 iteration: 12
6test 331 at 240 nearestOn4: NearestOn4Tuple(lat=30.384199, lon=18.847259, distance=4041694.757223, normal=-30.0)
6test 332 at 240 distance2: Distance2Tuple(distance=2217596.775596, initial=58.752785)
6test 333 at 240 iteration: 13
6test 334 at 243 nearestOn4: NearestOn4Tuple(lat=30.361518, lon=21.558351, distance=3887523.410219, normal=-27.0)
6test 335 at 243 distance2: Distance2Tuple(distance=2453850.681967, initial=62.110741)
6test 336 at 243 iteration: 13
6test 337 at 246 nearestOn4: NearestOn4Tuple(lat=30.057906, lon=24.246352, distance=3722973.817216, normal=-24.0)
6test 338 at 246 distance2: Distance2Tuple(distance=2684688.240253, initial=65.480201)
6test 339 at 246 iteration: 13
6test 340 at 249 nearestOn4: NearestOn4Tuple(lat=29.482072, lon=26.856511, distance=3549365.860101, normal=-21.0)
6test 341 at 249 distance2: Distance2Tuple(distance=2908661.404266, initial=68.831849)
6test 342 at 249 iteration: 13
6test 343 at 252 nearestOn4: NearestOn4Tuple(lat=28.652617, lon=29.339085, distance=3368292.365392, normal=-18.0)
6test 344 at 252 distance2: Distance2Tuple(distance=3124363.961966, initial=72.136463)
6test 345 at 252 iteration: 14
6test 346 at 255 nearestOn4: NearestOn4Tuple(lat=27.595973, lon=31.653166, distance=3181483.93514, normal=-15.0)
6test 347 at 255 distance2: Distance2Tuple(distance=3330500.367925, initial=75.368254)
6test 348 at 255 iteration: 14
6test 349 at 258 nearestOn4: NearestOn4Tuple(lat=26.34337, lon=33.768789, distance=2990642.863598, normal=-12.0)
6test 350 at 258 distance2: Distance2Tuple(distance=3525947.426348, initial=78.507468)
6test 351 at 258 iteration: 15
6test 352 at 261 nearestOn4: NearestOn4Tuple(lat=24.927599, lon=35.667071, distance=2797285.607317, normal=-9.0)
6test 353 at 261 distance2: Distance2Tuple(distance=3709794.568962, initial=81.541766)
6test 354 at 261 iteration: 15
6test 355 at 264 nearestOn4: NearestOn4Tuple(lat=23.380219, lon=37.338792, distance=2602624.246813, normal=-6.0)
6test 356 at 264 distance2: Distance2Tuple(distance=3881355.597301, initial=84.466366)
6test 357 at 264 iteration: 16
6test 358 at 267 nearestOn4: NearestOn4Tuple(lat=21.729621, lon=38.782099, distance=2407500.005448, normal=-3.0)
6test 359 at 267 distance2: Distance2Tuple(distance=4040153.204404, initial=87.283272)
6test 360 at 267 iteration: 16
6test 361 at 270 nearestOn4: NearestOn4Tuple(lat=20.0, lon=40.0, distance=2212366.254172, normal=0.0)
6test 362 at 270 distance2: Distance2Tuple(distance=4185883.452394, initial=90.0)
6test 363 at 270 iteration: 2
6test 364 at 273 nearestOn4: NearestOn4Tuple(lat=18.21113, lon=40.99811, distance=2017309.778494, normal=3.0)
6test 365 at 273 distance2: Distance2Tuple(distance=4318369.394574, initial=92.628183)
6test 366 at 273 iteration: 18
6test 367 at 276 nearestOn4: NearestOn4Tuple(lat=16.378701, lon=41.782857, distance=1822097.141563, normal=6.0)
6test 368 at 276 distance2: Distance2Tuple(distance=4437512.122777, initial=95.182272)
6test 369 at 276 iteration: 19
6test 370 at 279 nearestOn4: NearestOn4Tuple(lat=14.515015, lon=42.3602, distance=1626234.955125, normal=9.0)
6test 371 at 279 distance2: Distance2Tuple(distance=4543245.293056, initial=97.678448)
6test 372 at 279 iteration: 20
6test 373 at 282 nearestOn4: NearestOn4Tuple(lat=12.629884, lon=42.73481, distance=1429036.030972, normal=12.0)
6test 374 at 282 distance2: Distance2Tuple(distance=4635496.852428, initial=100.133763)
6test 375 at 282 iteration: 20
6test 376 at 285 nearestOn4: NearestOn4Tuple(lat=10.731585, lon=42.909634, distance=1229686.200109, normal=15.0)
6test 377 at 285 distance2: Distance2Tuple(distance=4714159.823993, initial=102.565486)
6test 378 at 285 iteration: 20
6test 379 at 288 nearestOn4: NearestOn4Tuple(lat=8.827815, lon=42.885742, distance=1027308.413714, normal=18.0)
6test 380 at 288 distance2: Distance2Tuple(distance=4779072.735062, initial=104.990626)
6test 381 at 288 iteration: 20
6test 382 at 291 nearestOn4: NearestOn4Tuple(lat=6.926576, lon=42.662411, distance=821021.78405, normal=21.0)
6test 383 at 291 distance2: Distance2Tuple(distance=4830009.484467, initial=107.425584)
6test 384 at 291 iteration: 19
6test 385 at 294 nearestOn4: NearestOn4Tuple(lat=5.036963, lon=42.237368, distance=609993.754392, normal=24.0)
6test 386 at 294 distance2: Distance2Tuple(distance=4866678.02413, initial=109.885922)
6test 387 at 294 iteration: 18
6test 388 at 297 nearestOn4: NearestOn4Tuple(lat=3.169823, lon=41.607176, distance=393484.06554, normal=27.0)
6test 389 at 297 distance2: Distance2Tuple(distance=4888727.07477, initial=112.386218)
6test 390 at 297 iteration: 17
6test 391 at 300 nearestOn4: NearestOn4Tuple(lat=1.338261, lon=40.767728, distance=170879.9747, normal=30.0)
6test 392 at 300 distance2: Distance2Tuple(distance=4895760.153166, initial=114.939984)
6test 393 at 300 iteration: 15
6test 394 at 303 nearestOn4: NearestOn4Tuple(lat=-0.442006, lon=39.714869, distance=58276.59935, normal=33.0)
6test 395 at 303 distance2: Distance2Tuple(distance=4887356.42216, initial=117.559632)
6test 396 at 303 iteration: 14
6test 397 at 306 nearestOn4: NearestOn4Tuple(lat=-2.152468, lon=38.445128, distance=294267.652925, normal=36.0)
6test 398 at 306 distance2: Distance2Tuple(distance=4863098.229148, initial=120.256447)
6test 399 at 306 iteration: 13
6test 400 at 309 nearestOn4: NearestOn4Tuple(lat=-3.77182, lon=36.95662, distance=537179.270746, normal=39.0)
6test 401 at 309 distance2: Distance2Tuple(distance=4822605.581331, initial=123.040514)
6test 402 at 309 iteration: 12
6test 403 at 312 nearestOn4: NearestOn4Tuple(lat=-5.276135, lon=35.250116, distance=786877.93689, normal=42.0)
6test 404 at 312 distance2: Distance2Tuple(distance=4765578.049049, initial=125.920549)
6test 405 at 312 iteration: 12
6test 406 at 315 nearestOn4: NearestOn4Tuple(lat=-6.639267, lon=33.330324, distance=1042977.288036, normal=45.0)
6test 407 at 315 distance2: Distance2Tuple(distance=4691844.442335, initial=128.903552)
6test 408 at 315 iteration: 12
6test 409 at 318 nearestOn4: NearestOn4Tuple(lat=-7.833525, lon=31.207341, distance=1304791.465619, normal=48.0)
6test 410 at 318 distance2: Distance2Tuple(distance=4601419.700187, initial=131.994235)
6test 411 at 318 iteration: 12
6test 412 at 321 nearestOn4: NearestOn4Tuple(lat=-8.830702, lon=28.898191, distance=1571275.925114, normal=51.0)
6test 413 at 321 distance2: Distance2Tuple(distance=4494566.344609, initial=135.194197)
6test 414 at 321 iteration: 12
6test 415 at 324 nearestOn4: NearestOn4Tuple(lat=-9.60355, lon=26.428207, distance=1840964.643721, normal=54.0)
6test 416 at 324 distance2: Distance2Tuple(distance=4371854.291284, initial=138.500907)
6test 417 at 324 iteration: 12
6test 418 at 327 nearestOn4: NearestOn4Tuple(lat=-10.12774, lon=23.83189, distance=2111923.120701, normal=57.0)
6test 419 at 327 distance2: Distance2Tuple(distance=4234208.109837, initial=141.906658)
6test 420 at 327 iteration: 12
6test 421 at 330 nearestOn4: NearestOn4Tuple(lat=-10.384199, lon=21.152741, distance=2381745.725116, normal=60.0)
6test 422 at 330 distance2: Distance2Tuple(distance=4082926.581705, initial=145.397815)
6test 423 at 330 iteration: 13
6test 424 at 333 nearestOn4: NearestOn4Tuple(lat=-10.361518, lon=18.441649, distance=2647627.022313, normal=63.0)
6test 425 at 333 distance2: Distance2Tuple(distance=3919658.690883, initial=148.954759)
6test 426 at 333 iteration: 13
6test 427 at 336 nearestOn4: NearestOn4Tuple(lat=-10.057906, lon=15.753648, distance=2906522.653561, normal=66.0)
6test 428 at 336 distance2: Distance2Tuple(distance=3746326.345058, initial=152.55284)
6test 429 at 336 iteration: 13
6test 430 at 339 nearestOn4: NearestOn4Tuple(lat=-9.482072, lon=13.143489, distance=3155385.639627, normal=69.0)
6test 431 at 339 distance2: Distance2Tuple(distance=3564997.75099, initial=156.164419)
6test 432 at 339 iteration: 13
6test 433 at 342 nearestOn4: NearestOn4Tuple(lat=-8.652617, lon=10.660915, distance=3391430.460883, normal=72.0)
6test 434 at 342 distance2: Distance2Tuple(distance=3377731.675499, initial=159.761632)
6test 435 at 342 iteration: 14
6test 436 at 345 nearestOn4: NearestOn4Tuple(lat=-7.595973, lon=8.346834, distance=3612359.931242, normal=75.0)
6test 437 at 345 distance2: Distance2Tuple(distance=3186423.160726, initial=163.319215)
6test 438 at 345 iteration: 14
6test 439 at 348 nearestOn4: NearestOn4Tuple(lat=-6.34337, lon=6.231211, distance=3816501.539103, normal=78.0)
6test 440 at 348 distance2: Distance2Tuple(distance=2992679.463282, initial=166.816688)
6test 441 at 348 iteration: 15
6test 442 at 351 nearestOn4: NearestOn4Tuple(lat=-4.927599, lon=4.332929, distance=4002834.001406, normal=81.0)
6test 443 at 351 distance2: Distance2Tuple(distance=2797742.696107, initial=170.239499)
6test 444 at 351 iteration: 15
6test 445 at 354 nearestOn4: NearestOn4Tuple(lat=-3.380219, lon=2.661208, distance=4170920.680715, normal=84.0)
6test 446 at 354 distance2: Distance2Tuple(distance=2602460.6285, initial=173.5791)
6test 447 at 354 iteration: 16
6test 448 at 357 nearestOn4: NearestOn4Tuple(lat=-1.729621, lon=1.217901, distance=4320786.90777, normal=87.0)
6test 449 at 357 distance2: Distance2Tuple(distance=2407296.638562, initial=176.832261)
6test 450 at 357 iteration: 16
6test 451 at 360 nearestOn4: NearestOn4Tuple(lat=0.0, lon=0.0, distance=4452779.631731, normal=90.0)
6test 452 at 360 distance2: Distance2Tuple(distance=2212366.254172, initial=180.0)
6test 453 at 360 iteration: 2
6test 454 azi..: iteration=20, max=0.541766, mean=-2.031871, min=-6.096448, stdev=2.057729
6test 455 xTM: KTransverseMercator(ellipsoid=Ellipsoid(name='WGS84', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594), k0=0.9996, TMorder=7)
6test 456 intersection2: intersection2(lat=23.944114, lon=-45.833131)  FAILED, KNOWN, expected (26.9774, -43.4088)
6test 457 nearestOn4: NearestOn4Tuple(lat=23.944114, lon=-45.833131, distance=0.000043, normal=125.0)
6test 458 nearestOn4: NearestOn4Tuple(lat=23.944114, lon=-45.833131, distance=0.000246, normal=40.0)
6test 459 xTM: KTransverseMercator(ellipsoid=Ellipsoid(name='_', a=6371008.771415, b=6371008.771415, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371008.771415, L=10007557.17611675, R1=6371008.771415, R2=6371008.771415, R3=6371008.771415, Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
6test 460 intersection2: intersection2(lat=37.0, lon=-42.376015)  FAILED, KNOWN, expected (37.0, -41.7028)
6test 461 nearestOn4: NearestOn4Tuple(lat=37.0, lon=-42.376015, distance=0.000129, normal=180.0)
6test 462 nearestOn4: NearestOn4Tuple(lat=37.0, lon=-42.376015, distance=0.000081, normal=45.0)
6test 463 xTM: KTransverseMercator(ellipsoid=Ellipsoid(name='_', a=6371008.771415, b=6371008.771415, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371008.771415, L=10007557.17611675, R1=6371008.771415, R2=6371008.771415, R3=6371008.771415, Rbiaxial=6371008.771415, Rtriaxial=6371008.771415), k0=0.9996, TMorder=6)
628 of 463 testRhumbx.py tests (6.0%) FAILED, incl. 18 KNOWN plus 10 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 6.558 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testRoutes.py
./test/testRoutes.py:17099: DeprecationWarning: function L{pygeodesy.ellipsoidalVincenty.areaOf} has been DEPRECATED, use function L{ellipsoidalExact.areaOf} or L{ellipsoidalKarney.areaOf}.
  r = f(pts, wrap=True, **kwds)
./test/testRoutes.py:17099: DeprecationWarning: function L{pygeodesy.ellipsoidalVincenty.perimeterOf} has been DEPRECATED, use function L{ellipsoidalExact.perimeterOf} or L{ellipsoidalKarney.perimeterOf}.
  r = f(pts, wrap=True, **kwds)
6testing testRoutes.py 21.08.18
6test 1 points.areaOf('Antarctica', adjust=True, radius=6371.01, wrap=True): 1751693.701  FAILED, KNOWN, expected 13552524.800
6test 2 points.areaOf('PtsFFI', adjust=True, radius=6371.01, wrap=True): 1.288
6test 3 points.areaOf('RdpFFI', adjust=True, radius=6371.01, wrap=True): 1.241
6test 4 points.areaOf('Pts', adjust=True, radius=6371.01, wrap=True): 131184.240
6test 5 points.areaOf('VwPts', adjust=True, radius=6371.01, wrap=True): 140310.144
6test 6 points.areaOf('_JFK_LHR1', adjust=True, radius=6371.01, wrap=True): 41383852.921  FAILED, KNOWN, expected 40041368.849
6test 7 points.areaOf('_JFK_LHR2', adjust=True, radius=6371.01, wrap=True): 82767705.842  FAILED, KNOWN, expected 80082737.697
6test 8 points.areaOf('Antarctica', adjust=False, radius=6371.01, wrap=True): 10446635.730  FAILED, KNOWN, expected 13552524.800
6test 9 points.areaOf('PtsFFI', adjust=False, radius=6371.01, wrap=True): 2.185  FAILED, KNOWN, expected 1.288
6test 10 points.areaOf('RdpFFI', adjust=False, radius=6371.01, wrap=True): 2.105  FAILED, KNOWN, expected 1.241
6test 11 points.areaOf('Pts', adjust=False, radius=6371.01, wrap=True): 233595.011  FAILED, KNOWN, expected 131184.240
6test 12 points.areaOf('VwPts', adjust=False, radius=6371.01, wrap=True): 258465.911  FAILED, KNOWN, expected 140310.144
6test 13 points.areaOf('_JFK_LHR1', adjust=False, radius=6371.01, wrap=True): 41780731.678  FAILED, KNOWN, expected 40041368.849
6test 14 points.areaOf('_JFK_LHR2', adjust=False, radius=6371.01, wrap=True): 83561463.357  FAILED, KNOWN, expected 80082737.697
6test 15 sphericalTrigonometry.areaOf('Antarctica', radius=6371.01, wrap=True): 241480413.388
6test 16 sphericalTrigonometry.areaOf('PtsFFI', radius=6371.01, wrap=True): 1.338
6test 17 sphericalTrigonometry.areaOf('RdpFFI', radius=6371.01, wrap=True): 1.289
6test 18 sphericalTrigonometry.areaOf('Pts', radius=6371.01, wrap=True): 125942.444
6test 19 sphericalTrigonometry.areaOf('VwPts', radius=6371.01, wrap=True): 118897.757
6test 20 sphericalTrigonometry.areaOf('_JFK_LHR1', radius=6371.01, wrap=True): 40105639.197
6test 21 sphericalTrigonometry.areaOf('_JFK_LHR2', radius=6371.01, wrap=True): 80211278.393
6test 22 ellipsoidalVincenty.areaOf('Antarctica', wrap=True): 1.366270e+13
6test 23 ellipsoidalVincenty.areaOf('PtsFFI', wrap=True): 1.343272e+06
6test 24 ellipsoidalVincenty.areaOf('RdpFFI', wrap=True): 1.294375e+06
6test 25 ellipsoidalVincenty.areaOf('Pts', wrap=True): 1.271286e+11
6test 26 ellipsoidalVincenty.areaOf('VwPts', wrap=True): 1.200540e+11
6test 27 ellipsoidalVincenty.areaOf('_JFK_LHR1', wrap=True): 4.004137e+13
6test 28 ellipsoidalVincenty.areaOf('_JFK_LHR2', wrap=True): 8.008274e+13
6test 29 ellipsoidalVincenty.areaOf('Antarctica', wrap=True): 1.366270e+13
6test 30 ellipsoidalVincenty.areaOf('PtsFFI', wrap=True): 1.343272e+06
6test 31 ellipsoidalVincenty.areaOf('RdpFFI', wrap=True): 1.294375e+06
6test 32 ellipsoidalVincenty.areaOf('Pts', wrap=True): 1.271286e+11
6test 33 ellipsoidalVincenty.areaOf('VwPts', wrap=True): 1.200540e+11
6test 34 ellipsoidalVincenty.areaOf('_JFK_LHR1', wrap=True): 4.004137e+13
6test 35 ellipsoidalVincenty.areaOf('_JFK_LHR2', wrap=True): 8.008274e+13
6test 36 points.perimeterOf('Antarctica', closed=False, radius=6.37101e+06, wrap=True): 15620294.792  FAILED, KNOWN, expected 16765661.499
6test 37 points.perimeterOf('PtsFFI', closed=False, radius=6.37101e+06, wrap=True): 3224.123
6test 38 points.perimeterOf('RdpFFI', closed=False, radius=6.37101e+06, wrap=True): 3185.467
6test 39 points.perimeterOf('Pts', closed=False, radius=6.37101e+06, wrap=True): 2762313.129
6test 40 points.perimeterOf('VwPts', closed=False, radius=6.37101e+06, wrap=True): 2672557.850
6test 41 points.perimeterOf('_JFK_LHR1', closed=False, radius=6.37101e+06, wrap=True): 16034670.768  FAILED, KNOWN, expected 15766750.804
6test 42 points.perimeterOf('_JFK_LHR2', closed=False, radius=6.37101e+06, wrap=True): 26286857.120  FAILED, KNOWN, expected 25981742.208
6test 43 sphericalTrigonometry.perimeterOf('Antarctica', closed=False, radius=6.37101e+06, wrap=True): 15470624.834
6test 44 sphericalTrigonometry.perimeterOf('PtsFFI', closed=False, radius=6.37101e+06, wrap=True): 3224.123
6test 45 sphericalTrigonometry.perimeterOf('RdpFFI', closed=False, radius=6.37101e+06, wrap=True): 3185.467
6test 46 sphericalTrigonometry.perimeterOf('Pts', closed=False, radius=6.37101e+06, wrap=True): 2762313.116
6test 47 sphericalTrigonometry.perimeterOf('VwPts', closed=False, radius=6.37101e+06, wrap=True): 2672556.441
6test 48 sphericalTrigonometry.perimeterOf('_JFK_LHR1', closed=False, radius=6.37101e+06, wrap=True): 15789078.314
6test 49 sphericalTrigonometry.perimeterOf('_JFK_LHR2', closed=False, radius=6.37101e+06, wrap=True): 26041264.665
6test 50 ellipsoidalVincenty.perimeterOf: No module named 'geographiclib': required by karney._Wrapped  FAILED, KNOWN, expected DEPRECATED
6test 51 no module: geographiclib.Geodesic
6test 52 isclockwise('Antarctica', adjust=False, wrap=True): 1.000
6test 53 isclockwise('PtsFFI', adjust=False, wrap=True): 1.000
6test 54 isclockwise('RdpFFI', adjust=False, wrap=True): 1.000
6test 55 isclockwise('Pts', adjust=False, wrap=True): 1.000
6test 56 isclockwise('VwPts', adjust=False, wrap=True): 1.000
6test 57 isclockwise('_JFK_LHR1', adjust=False, wrap=True): 0.000
6test 58 isclockwise('_JFK_LHR2', adjust=False, wrap=True): 0.000
629 of 58 testRoutes.py tests (50.0%) FAILED, incl. 14 KNOWN plus 15 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 5:51.546

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testSimplify.py
6testing testSimplify.py 20.04.06 (module pygeodesy.simplify 22.10.05)
6test 1 simplify1(16614, adjust=True) 1m (86.286 ms): 16597
6test 2 simplifyRW(16614, adjust=True, shortest=False, indices=True) 1m (93.981 ms): 7095
6test 3 simplifyRW(16614, adjust=True, shortest=False) 1m (94.348 ms): 7095
6test 4 simplifyRW(16614, adjust=True, shortest=True) 1m (137.067 ms): 8302
6test 5 simplifyVWm(16614, adjust=True, indices=True) 1m (192.456 ms): 16328
6test 6 simplifyVWm(16614, adjust=True) 1m (193.829 ms): 16328
6test 7 simplifyVWm(16614, adjust=False) 1m (184.409 ms): 16373
6test 8 simplifyRDPm(16614, adjust=True, shortest=False) 1m (196.614 ms): 15864
6test 9 simplifyRDPm(16614, adjust=True, shortest=True) 1m (201.293 ms): 15867
6test 10 simplifyRDPgr(16614, adjust=True, shortest=True, modified=True) 1m (61.907 ms): 15867
6test 11 simplifyRDPm(16614, adjust=False, shortest=False) 1m (181.432 ms): 15869
6test 12 simplifyRDPfw(16614, adjust=False, shortest=False, modified=True) 1m (47.899 ms): 15869
6test 13 simplifyRDP(16614, adjust=True, shortest=True, indices=True) 1m (1.447 sec): 10960
6test 14 simplifyRDP(16614, adjust=True, shortest=True) 1m (1.451 sec): 10960
6test 15 simplifyRDPgr(16614, adjust=True, shortest=True, modified=False) 1m (539.069 ms): 10960
6test 16 simplifyRDP(16614, adjust=False, shortest=False, indices=True) 1m (1.284 sec): 11248
6test 17 simplifyRDP(16614, adjust=False, shortest=False) 1m (1.280 sec): 11248
6test 18 simplifyRDPfw(16614, adjust=False, shortest=False, modified=False) 1m (293.085 ms): 11248
6test 19 simplifyVW(1661, adjust=True) 1m (25.629 ms): 1641
6test 20 simplifyVW(1661, adjust=False) 1m (21.160 ms): 1646
6test 21 simplifyRDP(1661, adjust=True, shortest=False) 1m (106.836 ms): 1231
6test 22 simplifyRDP(1661, adjust=True, shortest=True) 1m (111.746 ms): 1231
6test 23 simplifyRDPgr(1661, adjust=True, shortest=True) 1m (41.325 ms): 1231
6test 24 simplifyRDP(1661, adjust=False, shortest=False) 1m (98.956 ms): 1267
6test 25 simplifyRDPfw(1661, adjust=False, shortest=False) 1m (22.900 ms): 1267
6test 26 simplifyRDPgr(1661, adjust=False, shortest=True) 1m (34.877 ms): 1267
6test 27 simplifyVW(69, adjust=False) 1m (708.818 us): 69
6test 28 simplifyRDP(69, adjust=False, shortest=False) 1m (2.214 ms): 50
6test 29 simplifyRDPfw(69, adjust=False, shortest=False) 1m (527.859 us): 50
6test 30 simplifyRDPgr(69, adjust=False, shortest=True) 1m (770.807 us): 50
6test 31 simplifyRDPgr(69, adjust=True, shortest=True) 1m (895.977 us): 45
6test 32 simplifyRDP(5, adjust=False, shortest=True) 1m (59.843 us): 5
6test 33 simplifyVW(5, adjust=False, attr='name') 30m (52.214 us): 5
6test 34 no module: numpy
6all 34 testSimplify.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 8.436 sec

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testSpherical.py
./test/testSpherical.py:284: DeprecationWarning: method L{pygeodesy.sphericalNvector.LatLon.rhumbBearingTo} has been DEPRECATED, use method C{.rhumbAzimuthTo}.
  b = p.rhumbBearingTo(q)  # rhumbAzimuthTo
6testing testSpherical.py 23.01.09
6testLatLon(pygeodesy.sphericalNvector, 23.01.18)
6test 1 isEllipsoidal: False
6test 2 isSpherical: True
6test 3 lat/lonDMS: 52.20472°N, 000.14056°E
6test 4 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 5 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 6 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 7 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 8 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 9 isequalTo: True
6test 10 isequalTo: True
6test 11 latlon2: 52.20472, 0.14056
6test 12 latlon2: 52.2047, 0.1406
6test 13 latlon2: 52.205, 0.141
6test 14 latlon2: 52.2, 0.14
6test 15 latlon2: 52.2, 0.1
6test 16 latlon2: 52.0, 0.0
6test 17 chordTo: 12036677.26
6test 18 chordTo: 12036463.78
6test 19 initialBearingTo: 156.1666
6test 20 initialBearingTo: 65.8921
6test 21 initialBearingTo: 0.0
6test 22 initialBearingTo: 180.0
6test 23 finalBearingTo: 157.8904
6test 24 finalBearingTo: 93.8581
6test 25 bearingTo2: 156.1666, 157.8904
6test 26 ispolar: True
6test 27 copy: True
6test 28 __eq__: True
6test 29 __ne__: False
6test 30 equirectangularTo: 404329.56
6test 31 distanceTo: 404279.720589
6test 32 distanceTo: 404279.720589
6test 33 distanceTo: 2145
6test 34 distanceTo: 18013602.92
6test 35 distanceTo: 20015114.35
6test 36 intermediateTo: 51.372084°N, 000.707337°E
6test 37 intermediateTo: True
6test 38 intermediateTo: 404279.721
6test 39 intermediateTo+5: 35.160975°N, 008.989542°E
6test 40 intermediateTo+5: 5.000
6test 41 intermediateTo-4: 64.911647°N, 013.726301°W
6test 42 intermediateTo-4: 4.000
6test 43 intermediateTo-h: 125.000
6test 44 intermediateChordTo: 51.372294°N, 000.707192°E
6test 45 intermediateChordTo: True
6test 46 intermediateChordTo-h: 125.000
6test 47 midpointTo: 50.536327°N, 001.274614°E
6test 48 destination: 51.513546°N, 000.098345°W
6test 49 destination: 51°30′49″N, 000°05′54″W
6test 50 destination: 34°37′N, 116°33′W
6test 51 destination: 34.613647°N, 116.55116°W
6test 52 destination: 0.604122N, 2.034201W
6test 53 destination: 31.96383509°N, 064.37329146°E
6test 54 alongTrackDistanceTo: can't multiply sequence by non-int of type 'float'  FAILED, KNOWN, expected incompatible ...
6test 55 alongTrackDistanceTo: 62331.58
6test 56 alongTrackDistanceTo: 99.588
6test 57 alongTrackDistanceTo: -7702.7
6test 58 alongTrackDistanceTo: 7587.6
6test 59 crossTrackDistanceTo: -305.66528160755445  FAILED, KNOWN, expected TypeError
6test 60 crossTrackDistanceTo: -307.55
6test 61 crossTrackDistanceTo: 7.4524
6test 62 greatCircle: (-0.79408, 0.12856, 0.59406)
6test 63 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4773243.784965, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 64 neareston6: (LatLon(45°30′03.93″N, 002°00′00.0″E), 38968.531578, 1.501091, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 65 chordTo: 124799.103
6test 66 cosineAndoyerLambertTo: 124801.098
6test 67 cosineAndoyerLambertTo: 124801.098
6test 68 cosineForsyheAndoyerLambertTo: 124801.098
6test 69 cosineForsyheAndoyerLambertTo: 124801.098
6test 70 cosineLawTo: 124801.098
6test 71 cosineLawTo: 124801.098
6test 72 equirectangularTo: 124804.754
6test 73 equirectangularTo: 124804.754
6test 74 euclideanTo: 130015.089
6test 75 euclideanTo: 130015.089
6test 76 flatLocalTo: 124804.754
6test 77 flatLocalTo: 124804.754
6test 78 flatPolarTo: 133663.257
6test 79 flatPolarTo: 133663.257
6test 80 hartzell: 53.3206°N, 001.7297°W
6test 81 hartzell: 53.3206°N, 001.7297°W
6test 82 height4: 0.0
6test 83 height4: (3803904.2, -114870.8, 5109488.3, 0.0)
6test 84 height4: 53°19′14.2″N, 001°43′46.9″W
6test 85 height4: 53°19′14.2″N, 001°43′46.9″W
6test 86 haversineTo: 124801.098
6test 87 haversineTo: 124801.098
6test 88 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 89 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 90 thomasTo: 124801.098
6test 91 thomasTo: 124801.098
6test 92 vincentysTo: 124801.098
6test 93 vincentysTo: 124801.098
6test 94 greatCircleTo: (-0.79408, 0.12859, 0.59406)
6test 95 isclockwise: False
6test 96 isclockwise*: False
6test 97 isclockwise: True
6test 98 isclockwise*: True
6test 99 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 100 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 101 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 102 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 103 isconvex: False
6test 104 isconvex*: False
6test 105 isconvex: True
6test 106 isconvex*: True
6test 107 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 108 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 109 isenclosedBy1: True
6test 110 isenclosedBy1*: True
6test 111 isenclosedBy2: False
6test 112 isenclosedBy2*: False
6test 113 isenclosedBy3: False
6test 114 isenclosedBy3*: False
6test 115 isenclosedBy4: False
6test 116 isenclosedBy4*: False
6test 117 isenclosedBy5: False
6test 118 isenclosedBy5*: False
6test 119 isenclosedBy6: True
6test 120 isenclosedBy6*: True
6test 121 isenclosedBy7: True
6test 122 isenclosedBy7*: True
6test 123 isenclosedBy-CCW: True
6test 124 isenclosedBy-CW : True
6test 125 isenclosedBy-CCW: True
6test 126 initialBearingTo: 102.432182
6test 127 compassAngleTo: 100.017
6test 128 compassAngleTo: 105.599
6test 129 initialBearingTo: 288.715918
6test 130 compassAngleTo: 280.017
6test 131 compassAngleTo: 285.599
6test 132 equirectangularTo: 592.185
6test 133 distanceTo: 591.831
6test 134 compassAngleTo: 0.0
6test 135 compassAngleTo: 45.0
6test 136 compassAngleTo: 90.0
6test 137 compassAngleTo: 180.0
6test 138 compassAngleTo: 225.0
6test 139 compassAngleTo: 315.0
6test 140 compassAngleTo: 270.0
6test 141 compassAngleTo: 359.4
6test 142 latlon2: (53.0, 1.0)
6test 143 philam2: (0.93, 0.02)
6test 144 compassAngleTo: 31
6test 145 compassAngleTo: 45

6test 146 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 147 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 148 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 149 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 150 isequalTo: <class 'bool'>
6test 151 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 152 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 153 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 154 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 155 compassAngleTo: <class 'float'>
6test 156 cosineLawTo: <class 'float'>
6test 157 euclideanTo: <class 'float'>
6test 158 flatLocalTo: <class 'float'>
6test 159 flatPolarTo: <class 'float'>
6test 160 haversineTo: <class 'float'>
6test 161 hubenyTo: <class 'float'>
6test 162 vincentysTo: <class 'float'>
6test 163 toVector: (0.615661, 0.0, 0.788011)
6test 164 toVector3d: (0.61566, 0.0, 0.78801)
6test 165 trilaterate5 (pygeodesy.sphericalNvector) .min: 223.305
6test 166 trilaterate5 (pygeodesy.sphericalNvector) .point: 42.67456065°N, 002.49539502°E
6test 167 trilaterate5 (pygeodesy.sphericalNvector) .min- is .maxPoint: True
6test 168 trilaterate5 (pygeodesy.sphericalNvector) .n: 1
6test 169 trilaterate5 (pygeodesy.sphericalNvector) .error: sphericalNvector.LatLon.trilaterate5(area=True, wrap=False), MRO(nvectorBase.LatLonNvectorBase, sphericalBase.LatLonSphericalBase, latlonBase.LatLonBase, named._NamedBase, named._Named): not implemented
6test 170 radii11: Radii11Tuple(rA=7701.409157, rB=1361.530045, rC=499.257353, cR=4886.694635, rIn=739.915482, riS=179.523525, roS=6087.250896, a=1860.787398, b=8200.666509, c=9062.939201, s=9562.196554)
622 tests skipped (22): No module named 'numpy': required by vector2d._numpy
6test 171 area cw/ccw: 1.0
6testVectorial(pygeodesy.sphericalNvector, 23.01.18)
6test 172 crossTrackDistanceTo: -305.67
6test 173 crossTrackDistanceTo: -307.55
6test 174 toLatLon: 44.995674°N, 045.0°E
6test 175 toNvector: (0.50004, 0.50004, 0.70705)
6test 176 isequalTo: False
6test 177 isequalTo: True
6test 178 length: 0.99992449715
6test 179 euclid: 0.99995577
6test 180 length: 1.00
6test 181 euclid: 1.0000
6test 182 meanOf: 44.995674°N, 045.0°E
6test 183 meanOf: LatLon
6test 184 apply: (0.5, 0.5, 0.707)
6test 185 init: (0.5, 0.5, 0.707)
6test 186 i***: (0.5, 0.5, 0.707)
6test 187 abs: 0.99992449715
6test 188 sumOf: (52.70504, 0.61904, 0.70705)
6test 189 sumOf: Nv
6test 190 sumOf: sumOf
6test 191 length: 52.7134151513
6test 192 sizeof: 128  FAILED, KNOWN, expected 72
6test 193 copy: True
6test 194 length: 52.2051356286
6test 195 length: 52.2051356286
6test 196 sizeof: 128
6test 197 toCartesian: [3185744.919, 3185744.919, 4504643.315]
6test 198 toLatLon: 44.995674°N, 045.0°E, -0.00m  FAILED, KNOWN, expected 44.995674°N, 045.0°E
6test 199 toNvector: (0.50004, 0.50004, 0.70705, -0.00)
6test 200 intersection: 02.499372°N, 002.5°E
6test 201 isenclosedBy: True
6test 202 isenclosedBy*: True
6test 203 isenclosedBy: True
6test 204 isenclosedBy*: True
6test 205 iswithin: False
6test 206 iswithin: True
6test 207 nearestOn: 51.0°N, 001.0°E
6test 208 nearestOn: 50.987°N, 000.298°W
6test 209 nearestOn: 51.0°N, 002.0°E
6test 210 nearestOn: 50.995°N, 002.655°E
6test 211 nearestOn: 51.0°N, 001.9°E
6test 212 nearestOn: True
6test 213 distanceTo: 42.712
6test 214 nearestOn: 51.0°N, 002.0°E
6test 215 nearestOn: True
6test 216 nearestOn: 00.0°N, 000.0°E
6test 217 nearestOn: True
6test 218 nearestOn: 00.0°N, 020.0°E
6test 219 nearestOn: True
6test 220 nearestOn: 02.0°N, 002.0°E
6test 221 nearestOn: 02.0°N, 002.0°E
6test 222 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4773243.784965, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 223 neareston6: (LatLon(45°30′03.93″N, 002°00′00.0″E), 38968.531578, 1.501091, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 224 BasseC: 47.3038°N, 002.5721°W
6test 225 BasseH: 47.311067°N, 002.528617°W
6test 226 triangulate: 47.323667°N, 002.568501°W
6test 227 triangulate: True
6test 228 trilaterate: 37.419078°N, 121.960579°W
6test 229 trilaterate: True
6test 230 trilaterate: 08.068912°S, 034.888699°W
6test 231 trilaterate: True
6test 232 trilaterate: 08.068912°S, 034.888695°W  FAILED, KNOWN, expected 08.068912°S, 034.888699°W
6test 233 trilaterate: True
6test 234 trilaterate: 42.67456065°N, 002.49539502°E
6test 235 trilaterate: distance1 (5110), distance2 (5110), distance3 (5110), point1 (LatLon(42°41′19.82″N, 002°26′19.89″E)), point2 (LatLon(42°38′07.52″N, 002°31′21.25″E)) or point3 (LatLon(42°38′43.44″N, 002°30′17.32″E)): no intersection (useZ=False, z=-8.13526e-05)
6testNvector(pygeodesy.sphericalNvector, 23.01.18)
6test 236 sumOf: Nvector
6test 237 ecef.x, .y, .z: 3185744.91853, 3185744.91853, 4504643.3148
6test 238 ecef.lat, .lon: 44.995674, 45.0
6test 239 ecef.height: 0.0
6test 240 ecef.M: -0.707106781, -0.499962243, 0.500037754, 0.707106781, -0.499962243, 0.500037754, 0.0, 0.707160174, 0.707053385
6test 241 .isEllipsoidal: False
6test 242 .isSpherical: True
6test 243 .latlon: (44.995674, 45.0)
6test 244 .philam: (0.785323, 0.785398)
6test 245 .latlonheight: (44.995674, 45.0, 0.0)
6test 246 .philamheight: (0.785323, 0.785398, 0.0)
6test 247 parse: (0.5, 0.5, 0.707)
6test 248 cmp: 0
6test 249 eq: True
6test 250 ge: True
6test 251 gt: False
6test 252 le: True
6test 253 lt: False
6test 254 ne: False
6test 255 *: (1.0, 1.0, 1.414)
6test 256 +: (1.0, 1.0, 1.414)
6test 257 /: (0.5, 0.5, 0.707)
6test 258 -: (0.5, 0.5, 0.707)
6test 259 @: (0.0, 0.0, 0.0)
6test 260 @: (0.0, 0.0, 0.0)
6test 261 rotate: (0.26268, 0.26268, 0.37143)
6test 262 crosserrors: True
6test 263 0: divisor (0): float division by zero
6test 264 intersections2: (500.0, 0.0, 0.0)
6test 265 nearestOn: (0.0, 0.0, 0.0)
6test 266 nearestOn: True
6test 267 nearestOn: (100.0, 100.0, 100.0)
6test 268 nearestOn: True
6test 269 iscolinearWith: False
6test 270 iscolinearWith: True
6test 271 nearestOn: (0.0, 0.0, 0.0)
6test 272 nearestOn: True
6test 273 nearestOn: (100.0, 100.0, 100.0)
6test 274 nearestOn: True
6test 275 iscolinearWith: False
6test 276 iscolinearWith: True
6testSpherical(pygeodesy.sphericalNvector, 23.01.18)
6test 277 isSpherical: True
6test 278 isEllipsoidal: False
6test 279 datum: name='Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.WGS84
6test 280 ellipsoid: name='SphereAuthalic', a=6371000, b=6371000, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371000, L=10007543.39801029, R1=6371000, R2=6371000, R3=6371000, Rbiaxial=6371000, Rtriaxial=6371000
6test 281 datum: name='Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.WGS84
6test 282 isSpherical: True
6test 283 isEllipsoidal: False
6test 284 intersection1: 50.907608°N, 004.508575°E
6test 285 intersection1: 50°54′27.39″N, 004°30′30.87″E
6test 286 intersection1: True
6test 287 intersection2: True
6test 288 intersection2: 43.5719°N, 116.188757°W
6test 289 intersection2: 43°34′18.84″N, 116°11′19.53″W
6test 290 intersection3: 51.882166°N, 000.267801°E
6test 291 intersection4: 00.0°N, 026.565051°E
6test 292 intersection5: 26.565051°N, 000.0°W
6test 293 intersection6: 50.907809°N, 004.50841°E
6test 294 intersection7: 01°52′46.41″S, 005°39′06.87″E
6test 295 intersection8: 28°15′40.35″S, 032°14′33.2″E
6test 296 toward 1,1 N,E nearest: 00.999848°N, 001.0°E
6test 297 toward 1,1 E,N nearest: 00.999848°N, 001.0°E
6test 298 toward 1,1 N,E antipodal: 00.999848°S, 179.0°W
6test 299 toward/away 1,1 N,W antipodal: 00.999848°N, 001.0°E
6test 300 toward/away 1,1 W,N antipodal: 00.999848°S, 179.0°W
6test 301 toward/away 1,1 S,E antipodal: 00.999848°S, 179.0°W
6test 302 toward/away 1,1 E,S antipodal: 00.999848°N, 001.0°E
6test 303 away 1,1 S,W antipodal: 00.999848°S, 179.0°W
6test 304 away 1,1 W,S antipodal: 00.999848°S, 179.0°W
6test 305 1E/90E N,E antipodal: 00.017454°N, 001.0°E
6test 306 1E/90E N,E nearest: 00.017454°N, 179.0°W
6test 307 brng+end 1a: 01.000305°N, 002.0°E
6test 308 brng+end 1b: 01.000305°N, 002.0°E
6test 309 brng+end 2a: 01.000305°S, 178.0°W
6test 310 brng+end 2b: 01.000305°S, 178.0°W
6test 311 intersection7: 02.499372°N, 002.5°E
6test 312 maxLat0: 90.0
6test 313 maxLat1: 89.0
6test 314 maxLat90: 0.0
6test 315 minLat0: -90.0
6test 316 minLat1: -89.0
6test 317 minLat90: -0.0
6test 318 parse: 00.0°N, 000.0°E
6test 319 intersecant2: (LatLon(04°15′07.82″N, 006°15′50.15″E), LatLon(01°14′59.64″S, 000°44′59.28″E))
6test 320 intersecant2: 699204  FAILED, KNOWN, expected 700000
6test 321 intersecant2: 699931  FAILED, KNOWN, expected 700000
6test 322 intersecant2: 45
6test 323 intersecant2: (LatLon(04°15′12.05″N, 006°15′26.13″E), LatLon(01°15′02.91″S, 000°44′56.74″E))
6test 324 intersecant2: 698456  FAILED, KNOWN, expected 700000
6test 325 intersecant2: 700022  FAILED, KNOWN, expected 700000
6test 326 intersecant2: 45
6test 327 intersecant2: (LatLon(04°15′15.1″N, 006°15′29.19″E), LatLon(01°15′28.78″S, 000°44′30.85″E))
6test 328 intersecant2: 698511  FAILED, KNOWN, expected 700000
6test 329 intersecant2: 700010  FAILED, KNOWN, expected 700000
6test 330 intersecant2: 45
6test 331 isenclosedBy: True
./test/testSpherical.py:284: DeprecationWarning: method L{pygeodesy.sphericalTrigonometry.LatLon.rhumbBearingTo} has been DEPRECATED, use method C{.rhumbAzimuthTo}.
  b = p.rhumbBearingTo(q)  # rhumbAzimuthTo
6test 332 isenclosedBy*: True
6test 333 isenclosedBy: True
6test 334 isenclosedBy*: True
6test 335 rhumbBearingTo: 116.722
6test 336 rhumbDestination: 50.964155°N, 001.853°E
6test 337 rhumbDestination: True
6test 338 rhumbDistanceTo: 40307.8
6test 339 rhumbMidpointo-0.5: 51.0455°N, 001.595727°E
6test 340 rhumbMidpointo: True
6test 341 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 342 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 343 rhumbMidpointo-0.75: 51.00475°N, 001.72442°E
6test 344 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 345 rhumbMidpointo-2.0: 50.801°N, 002.366196°E
6test 346 areaOf: 8.66605875e+09
6test 347 perimeterOf: 3.78258541e+05
6test 348 perimeterOf: 2.67063461e+05
6test 349 areaOf: 6.18e+09
6test 350 perimeterOf: 3.79639757e+05
6test 351 perimeterOf: 2.68444678e+05
6test 352 nearestOn3: 46.000996°N, 001.353049°E
6test 353 nearestOn3: 569987.49
6test 354 distanceTo: 569987.49
6test 355 nearestOn3: 46.0°N, 002.0°E
6test 356 nearestOn3: 134989.80
6test 357 distanceTo: 134989.80
6test 358 nearestOn3: 45.330691°N, 001.318551°E
6test 359 distance: 64856.28
6test 360 distanceTo: 64856.28
6test 361 compassAngleTo: 304.54
6test 362 difference: 1000.53
6test 363 ispolar: True
6test 364 ispolar*: True
6test 365 ispolar: False  FAILED, KNOWN, expected True
6test 366 ispolar*: False  FAILED, KNOWN, expected True
6test 367 ispolar: True
6test 368 ispolar*: True
6test 369 nearestOn: 01.5°N, 001.5°E, +149.99m
6test 370 nearestOn3: 01.5°N, 001.5°E, +149.99m
6test 371 midpointTo: 50.5363°N, 001.2746°E, +150.00m
6test 372 intermediateTo: 50.5363°N, 001.2746°E, +150.00m
6testLatLon(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 373 isEllipsoidal: False
6test 374 isSpherical: True
6test 375 lat/lonDMS: 52.20472°N, 000.14056°E
6test 376 lat/lonDMS F_DM: 52°12.283′N, 000°08.434′E
6test 377 lat/lonDMS F_DM: 52°12.2832′N, 000°08.4336′E
6test 378 lat/lonDMS F_DMS: 52°12′17″N, 000°08′26″E
6test 379 lat/lonDMS F_DMS: 52°12′17.0″N, 000°08′26.0″E
6test 380 lat/lonDMS F_RAD: 0.911144N, 0.002453E
6test 381 isequalTo: True
6test 382 isequalTo: True
6test 383 latlon2: 52.20472, 0.14056
6test 384 latlon2: 52.2047, 0.1406
6test 385 latlon2: 52.205, 0.141
6test 386 latlon2: 52.2, 0.14
6test 387 latlon2: 52.2, 0.1
6test 388 latlon2: 52.0, 0.0
6test 389 chordTo: 12036677.26
6test 390 chordTo: 12036463.78
6test 391 initialBearingTo: 156.1666
6test 392 initialBearingTo: 65.8921
6test 393 initialBearingTo: 0.0
6test 394 initialBearingTo: 180.0
6test 395 finalBearingTo: 157.8904
6test 396 finalBearingTo: 93.8581
6test 397 bearingTo2: 156.1666, 157.8904
6test 398 ispolar: True
6test 399 copy: True
6test 400 __eq__: True
6test 401 __ne__: False
6test 402 equirectangularTo: 404329.56
6test 403 distanceTo: 404279.720589
6test 404 distanceTo: 404279.720589
6test 405 distanceTo: 2145
6test 406 antipodal: False
6test 407 distanceTo dateline: 19967403.498  FAILED, KNOWN, expected 19119590.551
6test 408 distanceTo unrolled: 19967403.498  FAILED, KNOWN, expected 19119590.551
6test 409 antipodal: False
6test 410 distanceTo dateline: 9491735
6test 411 distanceTo unrolled: 9491735
6test 412 distanceTo: 18013602.92
6test 413 distanceTo: 20015114.35
6test 414 intermediateTo: 51.372084°N, 000.707337°E
6test 415 intermediateTo: True
6test 416 intermediateTo: 404279.721
6test 417 intermediateTo+5: 35.160975°N, 008.989542°E
6test 418 intermediateTo+5: 5.000
6test 419 intermediateTo-4: 64.911647°N, 013.726301°W
6test 420 intermediateTo-4: 4.000
6test 421 intermediateTo-h: 125.000
6test 422 midpointTo: 50.536327°N, 001.274614°E
6test 423 destination: 51.513546°N, 000.098345°W
6test 424 destination: 51°30′49″N, 000°05′54″W
6test 425 destination: 34°37′N, 116°33′W
6test 426 destination: 34.613647°N, 116.55116°W
6test 427 destination: 0.604122N, 2.034201W
6test 428 destination: 31.96383509°N, 064.37329146°E
6test 429 alongTrackDistanceTo: type(end) (96): incompatible with sphericalTrigonometry.LatLon.alongTrackDistanceTo(end)  FAILED, KNOWN, expected incompatible ...
6test 430 alongTrackDistanceTo: 62331.58
6test 431 alongTrackDistanceTo: 99.588
6test 432 alongTrackDistanceTo: -7702.7
6test 433 alongTrackDistanceTo: 7587.6
6test 434 crossTrackDistanceTo: type(end) (96): incompatible with sphericalTrigonometry.LatLon.crossTrackDistanceTo(end)  FAILED, KNOWN, expected incompatible ...
6test 435 crossTrackDistanceTo: -307.55
6test 436 crossTrackDistanceTo: 7.4524
6test 437 greatCircle: (-0.79408, 0.12856, 0.59406)
6test 438 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4773243.784965, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 439 neareston6: (LatLon(45°30′03.93″N, 002°00′00.0″E), 38968.531578, 1.501091, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))  FAILED, KNOWN, expected (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 440 chordTo: 124799.103
6test 441 cosineAndoyerLambertTo: 124801.098
6test 442 cosineAndoyerLambertTo: 124801.098
6test 443 cosineForsyheAndoyerLambertTo: 124801.098
6test 444 cosineForsyheAndoyerLambertTo: 124801.098
6test 445 cosineLawTo: 124801.098
6test 446 cosineLawTo: 124801.098
6test 447 equirectangularTo: 124804.754
6test 448 equirectangularTo: 124804.754
6test 449 euclideanTo: 130015.089
6test 450 euclideanTo: 130015.089
6test 451 flatLocalTo: 124804.754
6test 452 flatLocalTo: 124804.754
6test 453 flatPolarTo: 133663.257
6test 454 flatPolarTo: 133663.257
6test 455 hartzell: 53.3206°N, 001.7297°W
6test 456 hartzell: 53.3206°N, 001.7297°W
6test 457 height4: 0.0
6test 458 height4: (3803904.2, -114870.8, 5109488.3, 0.0)
6test 459 height4: 53°19′14.2″N, 001°43′46.9″W
6test 460 height4: 53°19′14.2″N, 001°43′46.9″W
6test 461 haversineTo: 124801.098
6test 462 haversineTo: 124801.098
6test 463 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°19′14.16″N, 001°43′46.92″W)>
6test 464 hubenyTo: <bound method LatLonBase.flatLocalTo of LatLon(53°11′19.32″N, 000°08′00.24″E)>
6test 465 thomasTo: 124801.098
6test 466 thomasTo: 124801.098
6test 467 vincentysTo: 124801.098
6test 468 vincentysTo: 124801.098
6test 469 isclockwise: False
6test 470 isclockwise*: False
6test 471 isclockwise: True
6test 472 isclockwise*: True
6test 473 isclockwise: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 474 isclockwise*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 475 isclockwise: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 476 isclockwise*: zero or polar area: (LatLon(85°00′00.0″N, 135°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″W), LatLon(85°00′00.0″N, 045°00′00.0″E))...  FAILED, KNOWN, expected zero or polar area
6test 477 isconvex: False
6test 478 isconvex*: False
6test 479 isconvex: True
6test 480 isconvex*: True
6test 481 isconvex: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 482 isconvex*: points (3): too few  FAILED, KNOWN, expected points (2): too few
6test 483 isenclosedBy1: True
6test 484 isenclosedBy1*: True
6test 485 isenclosedBy2: False
6test 486 isenclosedBy2*: False
6test 487 isenclosedBy3: False
6test 488 isenclosedBy3*: False
6test 489 isenclosedBy4: False
6test 490 isenclosedBy4*: False
6test 491 isenclosedBy5: False
6test 492 isenclosedBy5*: False
6test 493 isenclosedBy6: True
6test 494 isenclosedBy6*: True
6test 495 isenclosedBy7: True
6test 496 isenclosedBy7*: True
6test 497 isenclosedBy-CCW: True
6test 498 isenclosedBy-CW : True
6test 499 isenclosedBy-CCW: True
6test 500 initialBearingTo: 102.432182
6test 501 compassAngleTo: 100.017
6test 502 compassAngleTo: 105.599
6test 503 initialBearingTo: 288.715918
6test 504 compassAngleTo: 280.017
6test 505 compassAngleTo: 285.599
6test 506 equirectangularTo: 592.185
6test 507 distanceTo: 591.831
6test 508 bearingTo: 0.0
6test 509 compassAngleTo: 0.0
6test 510 bearingTo: 45.0
6test 511 compassAngleTo: 45.0
6test 512 bearingTo: 90.0
6test 513 compassAngleTo: 90.0
6test 514 bearingTo: 180.0
6test 515 compassAngleTo: 180.0
6test 516 bearingTo: 225.0
6test 517 compassAngleTo: 225.0
6test 518 bearingTo: 315.0
6test 519 compassAngleTo: 315.0
6test 520 bearingTo: 270.0
6test 521 compassAngleTo: 270.0
6test 522 bearingTo: 0.0  FAILED, KNOWN, expected 359.4
6test 523 compassAngleTo: 359.4
6test 524 latlon2: (53.0, 1.0)
6test 525 philam2: (0.93, 0.02)
6test 526 bearingTo: 31
6test 527 compassAngleTo: 31
6test 528 compassAngleTo: 45

6test 529 boundsOf: <class 'pygeodesy.namedTuples.Bounds2Tuple'>
6test 530 latlon: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 531 latlon2: <class 'pygeodesy.namedTuples.LatLon2Tuple'>
6test 532 latlonheight: <class 'pygeodesy.namedTuples.LatLon3Tuple'>
6test 533 isequalTo: <class 'bool'>
6test 534 philam: <class 'pygeodesy.namedTuples.PhiLam2Tuple'>
6test 535 philamheight: <class 'pygeodesy.namedTuples.PhiLam3Tuple'>
6test 536 xyz: <class 'pygeodesy.namedTuples.Vector3Tuple'>
6test 537 xyzh: <class 'pygeodesy.namedTuples.Vector4Tuple'>
6test 538 compassAngleTo: <class 'float'>
6test 539 cosineLawTo: <class 'float'>
6test 540 euclideanTo: <class 'float'>
6test 541 flatLocalTo: <class 'float'>
6test 542 flatPolarTo: <class 'float'>
6test 543 haversineTo: <class 'float'>
6test 544 hubenyTo: <class 'float'>
6test 545 vincentysTo: <class 'float'>
6test 546 toNvector: (0.61566, 0.0, 0.78801)
6test 547 toVector: (0.615661, 0.0, 0.788011)
6test 548 toVector3d: (0.61566, 0.0, 0.78801)
6test 549 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 313.671
6test 550 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.66937229°N, 002.48639477°E
6test 551 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 1591.044
6test 552 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.65153054°N, 002.46822157°E
6test 553 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 3
6test 554 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 133.815
6test 555 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 160.242
6test 556 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.67817811°N, 002.49966641°E
6test 557 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 2
6test 558 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 2403.293
6test 559 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 2403.293
6test 560 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.66135649°N, 002.47981645°E
6test 561 trilaterate5 (pygeodesy.sphericalTrigonometry) .min- is .maxPoint: True
6test 562 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 1
6test 563 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 1340.608
6test 564 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.69128229°N, 002.50129001°E
6test 565 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 1499.220
6test 566 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.64295864°N, 002.44242391°E
6test 567 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 3
6test 568 radii11: Radii11Tuple(rA=7237.243793, rB=1825.695409, rC=2.255158, cR=57690.493993, rIn=57.33247, riS=2.087691, roS=2.443616, a=1827.950567, b=7239.49895, c=9062.939201, s=9065.194359)
627 tests skipped (49): No module named 'numpy': required by vector2d._numpy
6test 569 radii11: Radii11Tuple(rA=7237.243793, rB=1825.695409, rC=2.255158, cR=57690.493993, rIn=57.33247, riS=2.087691, roS=2.443616, a=1827.950567, b=7239.49895, c=9062.939201, s=9065.194359)
622 tests skipped (71): No module named 'numpy': required by vector2d._numpy
6test 570 area cw/ccw: 1.0
6testSpherical(pygeodesy.sphericalTrigonometry, 23.01.18)
6test 571 isSpherical: True
6test 572 isEllipsoidal: False
6test 573 datum: name='Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.WGS84
6test 574 ellipsoid: name='SphereAuthalic', a=6371000, b=6371000, f_=0, f=0, f2=0, n=0, e=0, e2=0, e22=0, e32=0, A=6371000, L=10007543.39801029, R1=6371000, R2=6371000, R3=6371000, Rbiaxial=6371000, Rtriaxial=6371000
6test 575 datum: name='Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.WGS84
6test 576 isSpherical: True
6test 577 isEllipsoidal: False
6test 578 intersection1: 50.907608°N, 004.508575°E
6test 579 intersection1: 50°54′27.39″N, 004°30′30.87″E
6test 580 intersection1: True
6test 581 intersection2: True
6test 582 intersection2: 43.5719°N, 116.188757°W
6test 583 intersection2: 43°34′18.84″N, 116°11′19.53″W
6test 584 intersection3: 51.882166°N, 000.267801°E
6test 585 intersection4: 00.0°N, 026.565051°E
6test 586 intersection5: 26.565051°N, 000.0°W
6test 587 intersection6: 50.907809°N, 004.50841°E
6test 588 intersection7: 01°52′46.41″S, 005°39′06.87″E
6test 589 intersection8: 28°15′40.35″S, 032°14′33.2″E
6test 590 toward 1,1 N,E nearest: 00.999848°N, 001.0°E
6test 591 toward 1,1 E,N nearest: 00.999848°N, 001.0°E
6test 592 toward 1,1 N,E antipodal: 00.999848°S, 179.0°W
6test 593 toward/away 1,1 N,W antipodal: 00.999848°N, 001.0°E
6test 594 toward/away 1,1 W,N antipodal: 00.999848°S, 179.0°W
6test 595 toward/away 1,1 S,E antipodal: 00.999848°S, 179.0°W
6test 596 toward/away 1,1 E,S antipodal: 00.999848°N, 001.0°E
6test 597 away 1,1 S,W antipodal: 00.999848°S, 179.0°W
6test 598 away 1,1 W,S antipodal: 00.999848°S, 179.0°W
6test 599 1E/90E N,E antipodal: 00.017454°N, 001.0°E
6test 600 1E/90E N,E nearest: 00.017454°N, 179.0°W
6test 601 brng+end 1a: 01.000305°N, 002.0°E
6test 602 brng+end 1b: 01.000305°N, 002.0°E
6test 603 brng+end 2a: 01.000305°S, 178.0°W
6test 604 brng+end 2b: 01.000305°S, 178.0°W
6test 605 intersection7: 02.499372°N, 002.5°E
6test 606 maxLat0: 90.0
6test 607 maxLat1: 89.0
6test 608 maxLat90: 0.0
6test 609 minLat0: -90.0
6test 610 minLat1: -89.0
6test 611 minLat90: -0.0
6test 612 parse: 00.0°N, 000.0°E
6test 613 crossingParallels: 009°35′38.65″E, 170°24′21.35″E
6test 614 intersecant2: (LatLon(04°15′07.82″N, 006°15′50.15″E), LatLon(01°14′59.64″S, 000°44′59.28″E))
6test 615 intersecant2: 699204  FAILED, KNOWN, expected 700000
6test 616 intersecant2: 699931  FAILED, KNOWN, expected 700000
6test 617 intersecant2: 45
6test 618 intersecant2: (LatLon(04°15′12.05″N, 006°15′26.13″E), LatLon(01°15′02.91″S, 000°44′56.74″E))
6test 619 intersecant2: 698456  FAILED, KNOWN, expected 700000
6test 620 intersecant2: 700022  FAILED, KNOWN, expected 700000
6test 621 intersecant2: 45
6test 622 intersecant2: (LatLon(04°15′15.1″N, 006°15′29.19″E), LatLon(01°15′28.78″S, 000°44′30.85″E))
6test 623 intersecant2: 698511  FAILED, KNOWN, expected 700000
6test 624 intersecant2: 700010  FAILED, KNOWN, expected 700000
6test 625 intersecant2: 45
6test 626 intersections2 (pygeodesy.sphericalTrigonometry): 36.98931°N, 088.151425°W, 38.23838°N, 092.390487°W
6test 627 intersections2 (pygeodesy.sphericalTrigonometry): 36.989310429, -088.151425243, 38.238379679, -092.390486808
6test 628 intersections2 (pygeodesy.sphericalTrigonometry): 00.0°N, 035.26439°W, 00.0°N, 035.26439°E
6test 629 intersections2 (pygeodesy.sphericalTrigonometry): 22.622036°N, 000.0°E, 22.622036°S, 000.0°E
6test 630 intersections2 (pygeodesy.sphericalTrigonometry): 14.612841°N, 026.110934°W, 14.612841°S, 026.110934°E
6test 631 intersections2 (pygeodesy.sphericalTrigonometry): 00.000001°S, 045.0°E, 00.000001°N, 045.0°E
6test 632 intersections2 (pygeodesy.sphericalTrigonometry) 5: 04.999927°S, 005.038296°W, 04.999927°N, 005.038296°E
6test 633 intersections2 (pygeodesy.sphericalTrigonometry) 5: 1.67511e-15 (% of radius)
6test 634 intersections2 (pygeodesy.sphericalTrigonometry) 10: 09.997596°S, 010.311703°W, 09.997596°N, 010.311703°E
6test 635 intersections2 (pygeodesy.sphericalTrigonometry) 10: 4.18779e-16 (% of radius)
6test 636 intersections2 (pygeodesy.sphericalTrigonometry) 15: 14.98089°S, 016.083107°W, 14.98089°N, 016.083107°E
6test 637 intersections2 (pygeodesy.sphericalTrigonometry) 15: 4.18779e-16 (% of radius)
6test 638 intersections2 (pygeodesy.sphericalTrigonometry) 20: 19.914036°S, 022.676142°W, 19.914036°N, 022.676142°E
6test 639 intersections2 (pygeodesy.sphericalTrigonometry) 20: 4.18779e-16 (% of radius)
6test 640 intersections2 (pygeodesy.sphericalTrigonometry) 25: 24.713956°S, 030.518915°W, 24.713956°N, 030.518915°E
6test 641 intersections2 (pygeodesy.sphericalTrigonometry) 25: 5.02534e-16 (% of radius)
6test 642 intersections2 (pygeodesy.sphericalTrigonometry) 30: 29.205932°S, 040.202966°W, 29.205932°N, 040.202966°E
6test 643 intersections2 (pygeodesy.sphericalTrigonometry) 30: 4.18779e-16 (% of radius)
6test 644 intersections2 (pygeodesy.sphericalTrigonometry) 35: 33.037697°S, 052.55362°W, 33.037697°N, 052.55362°E
6test 645 intersections2 (pygeodesy.sphericalTrigonometry) 35: 7.17906e-16 (% of radius)
6test 646 intersections2 (pygeodesy.sphericalTrigonometry) 40: 35.512876°S, 068.682565°W, 35.512876°N, 068.682565°E
6test 647 intersections2 (pygeodesy.sphericalTrigonometry) 40: 6.28168e-16 (% of radius)
6test 648 intersections2 (pygeodesy.sphericalTrigonometry) 45: 35.26439°S, 090.0°W, 35.26439°N, 090.0°E
6test 649 intersections2 (pygeodesy.sphericalTrigonometry) 45: 1.86124e-16 (% of radius)
6test 650 intersections2 (pygeodesy.sphericalTrigonometry) 50: 29.382901°S, 118.837195°W, 29.382901°N, 118.837195°E
6test 651 intersections2 (pygeodesy.sphericalTrigonometry) 50: 1.67511e-16 (% of radius)
6test 652 intersections2 (pygeodesy.sphericalTrigonometry) 55: 00.687458°S, 179.605668°E abutting
6test 653 intersections2 (pygeodesy.sphericalTrigonometry) 55: 0.0144095 (% of radius)
6test 654 intersections2 (pygeodesy.sphericalTrigonometry) 60: 13.848979°S, 172.919423°E abutting
6test 655 intersections2 (pygeodesy.sphericalTrigonometry) 60: 0.258708 (% of radius)
6test 656 intersections2 (pygeodesy.sphericalTrigonometry) 65: 27.163786°S, 167.475402°E abutting
6test 657 intersections2 (pygeodesy.sphericalTrigonometry) 65: 0.457099 (% of radius)
6test 658 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E Random +/- 89
6test 659 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 31.589485°S, 155.861783°E  d 1.25855e-09 meter
6test 660 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 30.924778°S, 128.002062°W  d 1.3951e-09 meter
6test 661 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 33.731132°S, 090.634884°E  d 1.50979e-09 meter
6test 662 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 31.211467°S, 075.318038°W  d 1.22082e-09 meter
6test 663 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 44.008442°S, 165.370729°W  d 1.3951e-09 meter
6test 664 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 15.716809°S, 097.37329°W  d 3.64072e-09 meter
6test 665 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 30.963095°S, 110.822277°W  d 2.75457e-09 meter
6test 666 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 44.63285°N, 112.8296°W  d 1.25855e-09 meter
6test 667 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 23.013126°S, 058.186133°W  d 2.41567e-09 meter
6test 668 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 06.322186°S, 019.600807°W  d 6.03918e-10 meter
6test 669 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 31.865082°S, 093.061209°W  d 1.81175e-09 meter
6test 670 intersections2 (pygeodesy.sphericalTrigonometry): 31.371904°S, 021.365248°E, 60.00072°S, 018.127614°W  d 5.78606e-09 meter
6test 671 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 313.671
6test 672 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.66937229°N, 002.48639477°E
6test 673 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 1591.044
6test 674 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.65153054°N, 002.46822157°E
6test 675 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 3
6test 676 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 133.815
6test 677 trilaterate5 (pygeodesy.sphericalTrigonometry) .inter: 42.6767291°N, 002.49916157°E
6test 678 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 2
6test 679 trilaterate5 (pygeodesy.sphericalTrigonometry) .min: 2403.293
6test 680 trilaterate5 (pygeodesy.sphericalTrigonometry) .max: 2403.293
6test 681 trilaterate5 (pygeodesy.sphericalTrigonometry) .point: 42.66135649°N, 002.47981645°E
6test 682 trilaterate5 (pygeodesy.sphericalTrigonometry) .min- is .maxPoint: True
6test 683 trilaterate5 (pygeodesy.sphericalTrigonometry) .n: 1
6test 684 trilaterate5 (pygeodesy.sphericalTrigonometry) .inter: area (False), eps (1000) or wrap (False): no intersection (min 1340.608)
6test 685 isenclosedBy: True
6test 686 isenclosedBy*: True
6test 687 isenclosedBy: points[3] (LatLon(47°00′00.0″N, 003°00′00.0″E)): not convex
6test 688 isenclosedBy*: points[3] (LatLon(47°00′00.0″N, 003°00′00.0″E)): not convex
6test 689 rhumbBearingTo: 116.722
6test 690 rhumbDestination: 50.964155°N, 001.853°E
6test 691 rhumbDestination: True
6test 692 rhumbDistanceTo: 40307.8
6test 693 rhumbMidpointo-0.5: 51.0455°N, 001.595727°E
6test 694 rhumbMidpointo: True
6test 695 rhumbMidpointo-0.0: 51.127°N, 001.338°E
6test 696 rhumbMidpointo-0.25: 51.08625°N, 001.46692°E
6test 697 rhumbMidpointo-0.75: 51.00475°N, 001.72442°E
6test 698 rhumbMidpointo-1.0: 50.964°N, 001.853°E
6test 699 rhumbMidpointo-2.0: 50.801°N, 002.366196°E
6test 700 areaOf: 8.66605875e+09
6test 701 perimeterOf: 3.78258541e+05
6test 702 perimeterOf: 2.67063461e+05
6test 703 areaOf: 6.18e+09
6test 704 perimeterOf: 3.79639757e+05
6test 705 perimeterOf: 2.68444678e+05
6test 706 nearestOn3: 46.0°N, 001.369324°E
6test 707 nearestOn3: 570101.83
6test 708 distanceTo: 570101.82
6test 709 nearestOn3: 46.0°N, 002.0°E
6test 710 nearestOn3: 134992.48
6test 711 distanceTo: 134989.80
6test 712 nearestOn3: 45.5°N, 001.5°E
6test 713 distance: 78626.79
6test 714 angle: 315.00
6test 715 compassAngleTo: 315.00
6test 716 nearestOn3: 45.331319°N, 001.331319°E
6test 717 distance: 64074.48
6test 718 angle: 305.10
6test 719 distanceTo: 64074.12
6test 720 compassAngleTo: 305.10
6test 721 difference: 1000.53
6test 722 nearestOn3: 00.5°N, 001.5°E
6test 723 distance: 235880.385
6test 724 angle: 135.00
6test 725 nearestOn3: 01.5°N, 002.5°E
6test 726 distance: 235880.385
6test 727 angle: 135.00
6test 728 nearestOn3: 02.5°N, 003.5°E
6test 729 distance: 235880.385
6test 730 angle: 135.00
6test 731 nearestOn3: 03.5°N, 004.5°E
6test 732 distance: 235880.385
6test 733 angle: 135.00
6test 734 nearestOn3: 04.5°N, 005.5°E
6test 735 distance: 235880.385
6test 736 angle: 135.00
6test 737 nearestOn3: 05.5°N, 006.5°E
6test 738 distance: 235880.385
6test 739 angle: 135.00
6test 740 nearestOn3: 06.5°N, 007.5°E
6test 741 distance: 235880.385
6test 742 angle: 135.00
6test 743 nearestOn3: 07.5°N, 008.5°E
6test 744 distance: 235880.385
6test 745 angle: 135.00
6test 746 meanOf: 04.004858°N, 004.990226°E
6test 747 nearestOn3: 07.5°N, 008.5°E
6test 748 toCartesian: [6245667.211, 766871.506, 996645.349]
6test 749 ispolar: True
6test 750 ispolar*: True
6test 751 ispolar: False  FAILED, KNOWN, expected True
6test 752 ispolar*: False  FAILED, KNOWN, expected True
6test 753 ispolar: True
6test 754 ispolar*: True
6test 755 triangle7: (22.142114, 2189776.256122, 84.91384, 6998970.168483, 84.91384, 6998970.168483, 8479698853790.72168)
6test 756 triangle7: Triangle8Tuple(A=0.38645, a=0.34371, B=1.48203, b=1.09857, C=1.48203, c=1.09857, D=3.74234, E=0.20891)
6test 757 nearestOn: 01.5°N, 001.5°E, +149.99m
6test 758 nearestOn3: 01.5°N, 001.5°E, +149.99m
6test 759 midpointTo: 50.5363°N, 001.2746°E, +150.00m
6test 760 intermediateTo: 50.5363°N, 001.2746°E, +150.00m
644 of 760 testSpherical.py tests (5.8%) FAILED, incl. 42 KNOWN plus 2 DeprecationWarnings, 71 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 122.239 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testStreprs.py
6testing testStreprs.py 21.02.11 (module pygeodesy.streprs 23.02.22)
6test 1 anstr: a-b__
6test 2 fstr: 0.123000
6test 3 fstr: 0.123
6test 4 fstr: 0.123, 456.789
6test 5 fstr: 1.23000e-01
6test 6 fstr: 1.23e-01
6test 7 fstr: fmt ('X'): not '[%[<flags>][<width>].*]F|f|E|e|G|g'
6test 8 fstr(1.000000): 1.0
6test 9 fstr(1.000000): 1.0
6test 10 fstr(-1.000000): -1.0
6test 11 fstr(INF): INF
6test 12 fstr(INF): INF
6test 13 fstr(NAN): NAN
6test 14 fstr(-0.000000): -0.0
6test 15 fstr(0.000000): 0.0
6test 16 fstrzs(0.0): 0.0
6test 17 fstrzs(0.00): 0.0
6test 18 fstrzs(0.000): 0.0
6test 19 fstrzs(00.0): 00.0
6test 20 fstrzs(000.00): 000.0
6test 21 fstrzs(0.000): 0.0
6test 22 fstrzs(0.010): 0.01
6test 23 fstrzs(0.0200): 0.02
6test 24 fstrzs(0.0e+01): 0.0e+01
6test 25 fstrzs(0.00e+02): 0.0e+02
6test 26 fstrzs(0.000e+03): 0.0e+03
6test 27 fstrzs(00.0e+00): 00.0e+00
6test 28 fstrzs(000.00e+01): 000.0e+01
6test 29 fstrzs(0.000e+02): 0.0e+02
6test 30 fstrzs(0.010e+03): 0.01e+03
6test 31 fstrzs(0.0200e+00): 0.02e+00
6test 32 fstrzs(0, ap1z=True): 0.0
6test 33 fstrzs(0.0, ap1z=True): 0.0
6test 34 fstrzs(0., ap1z=True): 0.
6test 35 fstrzs(1e10, ap1z=True): 1.0e10
6test 36 fstrzs(2E+2, ap1z=True): 2.0E+2
6test 37 fstrzs(3.E3, ap1z=True): 3.E3
6test 38 instr: LatLon_(45.0°N, 090.0°E, +1.20)
6test 39 instr: LatLon_(45, 90, h=1.2)
6test 40 unstr: f(1.1, 2.2)
6test 41 unstr: f(x=1.1, y=2.2)
6test 42 F: 0.001
6test 43 F: 0.001
6test 44 F: 0.001
6test 45 F: 0.001
6test 46 f: 0.001
6test 47 f: 0.001
6test 48 f: 0.001
6test 49 f: 0.001
6test 50 E: 1.0E-03
6test 51 E: 1.0E-03
6test 52 E: 1.0E-03
6test 53 E: 1.0E-03
6test 54 e: 1.0e-03
6test 55 e: 1.0e-03
6test 56 e: 1.0e-03
6test 57 e: 1.0e-03
6test 58 G: 0.001
6test 59 G: 0.001
6test 60 G: 0.001
6test 61 G: 0.001
6test 62 g: 0.001
6test 63 g: 0.001
6test 64 g: 0.001
6test 65 g: 0.001
6all 65 testStreprs.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 808.954 us

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testTMcoords.py
6testing testTMcoords.py 22.10.04
6test 1 TMcoords: 258
6all 1 testTMcoords.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 54.836 us

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testTrf.py
./test/testTrf.py:29: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ETRF2000)
./test/testTrf.py:38: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000)
./test/testTrf.py:42: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:46: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF2000, RefFrames.ITRF2000)
./test/testTrf.py:50: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2014)  # # via ITRF2000
./test/testTrf.py:52: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.NAD83)
./test/testTrf.py:59: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)
./test/testTrf.py:64: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)  # epoch 2010.4559
./test/testTrf.py:69: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = x.convertRefFrame(RefFrames.ITRF2005)  # epoch 2010.4559
./test/testTrf.py:74: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF93, RefFrames.ITRF2000, 2017)
./test/testTrf.py:84: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:86: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:88: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000, 2012)
./test/testTrf.py:90: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2014, 2012)
./test/testTrf.py:106: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0, reframe=RefFrames.ITRF2000).convertRefFrame('ITRF2000')
./test/testTrf.py:112: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0).convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:119: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame('ITRF2000', RefFrames.ITRF2000)
./test/testTrf.py:125: DeprecationWarning: method L{pygeodesy.ellipsoidalNvector.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame(RefFrames.ITRF2000, 'ITRF2000')
./test/testTrf.py:29: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ETRF2000)
./test/testTrf.py:38: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000)
./test/testTrf.py:42: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:46: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF2000, RefFrames.ITRF2000)
./test/testTrf.py:50: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2014)  # # via ITRF2000
./test/testTrf.py:52: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.NAD83)
./test/testTrf.py:59: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)
./test/testTrf.py:64: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)  # epoch 2010.4559
./test/testTrf.py:69: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = x.convertRefFrame(RefFrames.ITRF2005)  # epoch 2010.4559
./test/testTrf.py:74: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF93, RefFrames.ITRF2000, 2017)
./test/testTrf.py:84: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:86: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:88: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000, 2012)
./test/testTrf.py:90: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2014, 2012)
./test/testTrf.py:106: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0, reframe=RefFrames.ITRF2000).convertRefFrame('ITRF2000')
./test/testTrf.py:112: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0).convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:119: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame('ITRF2000', RefFrames.ITRF2000)
./test/testTrf.py:125: DeprecationWarning: method L{pygeodesy.ellipsoidalVincenty.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame(RefFrames.ITRF2000, 'ITRF2000')
./test/testTrf.py:29: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ETRF2000)
./test/testTrf.py:38: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000)
./test/testTrf.py:42: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:46: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF2000, RefFrames.ITRF2000)
./test/testTrf.py:50: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2014)  # # via ITRF2000
./test/testTrf.py:52: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.NAD83)
./test/testTrf.py:59: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)
./test/testTrf.py:64: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)  # epoch 2010.4559
./test/testTrf.py:69: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = x.convertRefFrame(RefFrames.ITRF2005)  # epoch 2010.4559
./test/testTrf.py:74: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF93, RefFrames.ITRF2000, 2017)
./test/testTrf.py:84: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:86: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:88: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000, 2012)
./test/testTrf.py:90: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2014, 2012)
./test/testTrf.py:106: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0, reframe=RefFrames.ITRF2000).convertRefFrame('ITRF2000')
./test/testTrf.py:112: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0).convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:119: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame('ITRF2000', RefFrames.ITRF2000)
./test/testTrf.py:125: DeprecationWarning: method L{pygeodesy.ellipsoidalKarney.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame(RefFrames.ITRF2000, 'ITRF2000')
./test/testTrf.py:29: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ETRF2000)
./test/testTrf.py:38: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000)
./test/testTrf.py:42: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:46: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF2000, RefFrames.ITRF2000)
./test/testTrf.py:50: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.ITRF2014)  # # via ITRF2000
./test/testTrf.py:52: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.NAD83)
./test/testTrf.py:59: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)
./test/testTrf.py:64: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = p.convertRefFrame(RefFrames.GDA94)  # epoch 2010.4559
./test/testTrf.py:69: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = x.convertRefFrame(RefFrames.ITRF2005)  # epoch 2010.4559
./test/testTrf.py:74: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF93, RefFrames.ITRF2000, 2017)
./test/testTrf.py:84: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:86: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ITRF91, RefFrames.ITRF2005, 2007)
./test/testTrf.py:88: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2000, 2012)
./test/testTrf.py:90: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  x = c.convertRefFrame(RefFrames.ETRF2000, RefFrames.ITRF2014, 2012)
./test/testTrf.py:106: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0, reframe=RefFrames.ITRF2000).convertRefFrame('ITRF2000')
./test/testTrf.py:112: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.LatLon.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = LatLon(0, 0).convertRefFrame(RefFrames.ITRF2000)
./test/testTrf.py:119: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame('ITRF2000', RefFrames.ITRF2000)
./test/testTrf.py:125: DeprecationWarning: method L{pygeodesy.ellipsoidalExact.Cartesian.convertRefFrame} has been DEPRECATED, use method L{toRefFrame}.
  t = c.convertRefFrame(RefFrames.ITRF2000, 'ITRF2000')
6testing testTrf.py 22.10.28 (module pygeodesy.trf 22.10.07)
6testTrf(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1 convertRefFrame: 51.47787826°N, 000.00147125°W, -0.00m  FAILED, KNOWN, expected 51.47787826°N, 000.00147125°W
6test 2 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 3 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 4 toLatLon: 50.7978°N, 004.3592°E, +148.96m
6test 5 convertRefFrame: [3980574.395, -102.214, 4966829.941]
6test 6 Nil: True
6test 7 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 8 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 9 Nil: True
6test 10 reframe: True
6test 11 Roundtrip: True
6test 12 reframe: True
6test 13 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 14 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 15 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 16 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 17 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 18 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 19 Roundtrip: 23°40′12.41482″S, 133°53′07.86712″E, +603.26m
6test 20 GNSStrans: [3370658.18892, 711877.42369, 5349787.1243]
6test 21 Cartesian: [-734972.563, 4893188.492, 4011982.811]
6test 22 EUREF C1: [4027894.0444, 307045.6209, 4919474.8613]
6test 23 EUREF C2: [4027894.0444, 307045.6209, 4919474.8613]
6test 24 EUREF C4: [4027894.3559, 307045.2508, 4919474.6447]
6test 25 EUREF C5: [4027894.3662, 307045.253, 4919474.6263]
6test 26 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6test 27 TRFError: epoch (1899): below 1900 limit
6test 28 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 29 TRFError: no conversion: LatLon(00°00′00.0″N, 000°00′00.0″E).reframe MISSING
6test 30 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 31 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6testTrf(pygeodesy.ellipsoidalVincenty, 22.09.12)
6test 32 convertRefFrame: 51.47787826°N, 000.00147125°W, -0.00m  FAILED, KNOWN, expected 51.47787826°N, 000.00147125°W
6test 33 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 34 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 35 toLatLon: 50.7978°N, 004.3592°E, +148.96m
6test 36 convertRefFrame: [3980574.395, -102.214, 4966829.941]
6test 37 Nil: True
6test 38 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 39 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 40 Nil: True
6test 41 reframe: True
6test 42 Roundtrip: True
6test 43 reframe: True
6test 44 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 45 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 46 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 47 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 48 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 49 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 50 Roundtrip: 23°40′12.41482″S, 133°53′07.86712″E, +603.26m
6test 51 GNSStrans: [3370658.18892, 711877.42369, 5349787.1243]
6test 52 Cartesian: [-734972.563, 4893188.492, 4011982.811]
6test 53 EUREF C1: [4027894.0444, 307045.6209, 4919474.8613]
6test 54 EUREF C2: [4027894.0444, 307045.6209, 4919474.8613]
6test 55 EUREF C4: [4027894.3559, 307045.2508, 4919474.6447]
6test 56 EUREF C5: [4027894.3662, 307045.253, 4919474.6263]
6test 57 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6test 58 TRFError: epoch (1899): below 1900 limit
6test 59 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 60 TRFError: no conversion: LatLon(00°00′00.0″N, 000°00′00.0″E).reframe MISSING
6test 61 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 62 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6testTrf(pygeodesy.ellipsoidalKarney, 22.07.07)
6test 63 convertRefFrame: 51.47787826°N, 000.00147125°W, -0.00m  FAILED, KNOWN, expected 51.47787826°N, 000.00147125°W
6test 64 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 65 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 66 toLatLon: 50.7978°N, 004.3592°E, +148.96m
6test 67 convertRefFrame: [3980574.395, -102.214, 4966829.941]
6test 68 Nil: True
6test 69 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 70 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 71 Nil: True
6test 72 reframe: True
6test 73 Roundtrip: True
6test 74 reframe: True
6test 75 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 76 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 77 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 78 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 79 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 80 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 81 Roundtrip: 23°40′12.41482″S, 133°53′07.86712″E, +603.26m
6test 82 GNSStrans: [3370658.18892, 711877.42369, 5349787.1243]
6test 83 Cartesian: [-734972.563, 4893188.492, 4011982.811]
6test 84 EUREF C1: [4027894.0444, 307045.6209, 4919474.8613]
6test 85 EUREF C2: [4027894.0444, 307045.6209, 4919474.8613]
6test 86 EUREF C4: [4027894.3559, 307045.2508, 4919474.6447]
6test 87 EUREF C5: [4027894.3662, 307045.253, 4919474.6263]
6test 88 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6test 89 TRFError: epoch (1899): below 1900 limit
6test 90 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 91 TRFError: no conversion: LatLon(00°00′00.0″N, 000°00′00.0″E).reframe MISSING
6test 92 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 93 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6testTrf(pygeodesy.ellipsoidalExact, 22.07.07)
6test 94 convertRefFrame: 51.47787826°N, 000.00147125°W, -0.00m  FAILED, KNOWN, expected 51.47787826°N, 000.00147125°W
6test 95 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 96 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 97 toLatLon: 50.7978°N, 004.3592°E, +148.96m
6test 98 convertRefFrame: [3980574.395, -102.214, 4966829.941]
6test 99 Nil: True
6test 100 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 101 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 102 Nil: True
6test 103 reframe: True
6test 104 Roundtrip: True
6test 105 reframe: True
6test 106 copy(RefFrame): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 107 RefFrame.copy(): (<class 'pygeodesy.trf.RefFrame'>, True)
6test 108 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 109 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 110 Geodetic: 23°40′12.44582″S, 133°53′07.84795″E, +603.34m
6test 111 Cartesian: [-4052051.7614, 4212836.1945, -2545106.0147]
6test 112 Roundtrip: 23°40′12.41482″S, 133°53′07.86712″E, +603.26m
6test 113 GNSStrans: [3370658.18892, 711877.42369, 5349787.1243]
6test 114 Cartesian: [-734972.563, 4893188.492, 4011982.811]
6test 115 EUREF C1: [4027894.0444, 307045.6209, 4919474.8613]
6test 116 EUREF C2: [4027894.0444, 307045.6209, 4919474.8613]
6test 117 EUREF C4: [4027894.3559, 307045.2508, 4919474.6447]
6test 118 EUREF C5: [4027894.3662, 307045.253, 4919474.6263]
6test 119 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6test 120 TRFError: epoch (1899): below 1900 limit
6test 121 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 122 TRFError: no conversion: LatLon(00°00′00.0″N, 000°00′00.0″E).reframe MISSING
6test 123 TypeError: type(reframe2) ('ITRF2000'): not a RefFrame
6test 124 TypeError: type(reframe) ('ITRF2000'): not a RefFrame
6test 125 TRFError: day (2), month (1) or year (None): int() argument must be a string, a bytes-like object or a number, not 'NoneType'
6test 126 toStr: name='GDA94', epoch=1994, ellipsoid=Ellipsoid(name='GRS80')
6test 127 str: name='GDA94', epoch=1994, ellipsoid=Ellipsoid(name='GRS80')
6test 128 toStr2: RefFrame(name='GDA94', epoch=1994, ellipsoid=Ellipsoid(name='GRS80'))
6test 129 repr: RefFrame(name='GDA94', epoch=1994, ellipsoid=Ellipsoid(name='GRS80'))
6test 130 epoch: 2020.003
6test 131 y-m-d: (2020, 1, 1)
6test 132 epoch: 2020.251
6test 133 y-m-d: (2020, 4, 1)
6test 134 epoch: 2020.500
6test 135 y-m-d: (2020, 7, 1)
6test 136 epoch: 2020.751
6test 137 y-m-d: (2020, 10, 1)
6test 138 epoch: 2021.000
6test 139 y-m-d: (2021, 1, 1)  FAILED, KNOWN, expected (2020, 12, 31)
6test 140 Epoch (2020).std_repr: False
6test 141 Epoch (2020.001): (2020, 1, 1)
6test 142 Epoch (2020.086): (2020, 2, 1)
6test 143 Epoch (2020.165): (2020, 3, 1)
6test 144 Epoch (2020.250): (2020, 4, 1)
6test 145 Epoch (2020.332): (2020, 5, 1)
6test 146 Epoch (2020.416): (2020, 6, 1)
6test 147 Epoch (2020.498): (2020, 7, 1)
6test 148 Epoch (2020.583): (2020, 8, 1)
6test 149 Epoch (2020.668): (2020, 9, 1)
6test 150 Epoch (2020.750): (2020, 10, 1)
6test 151 Epoch (2020.834): (2020, 11, 1)
6test 152 Epoch (2020.916): (2020, 12, 1)
6test 153 Epoch (2021.001): (2021, 1, 1)  FAILED, KNOWN, expected (2020, 13, 1)
678 of 153 testTrf.py tests (51.0%) FAILED, incl. 6 KNOWN plus 72 DeprecationWarnings (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 13.052 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testTriaxials.py
6testing testTriaxials.py 2.02.06
6testJacobiConformal(pygeodesy.triaxials, 23.02.07)
6test 1 JacobiConformal: JacobiConformal(name='Test', a=6378172, b=6378102, c=6356752, e2ab=0.00002195, e2bc=0.006683577, e2ac=0.00670538, xyQ2=xyQ2(x=1.572093, y=4.246581), volume=1083207266220584468480, area=510065604942135.9375, area_p=510065609807745.0)
6test 2 xR: 1.5720928043230937  FAILED, KNOWN, expected 1.572092804
6test 3 yR: 4.246581015231322  FAILED, KNOWN, expected 4.246581015
6test 4 xyR2.toDegrees: (90.074283, 243.31117)
6test 5 xyR2.toDegrees: ('90°04′27.42″', '243°18′40.21″')
6test 6 area: 510065604942135
6test 7 area_p: 510065609807745
6test 8 error: 9.54e-09
6test 9 volume: 1.083207e+21
6test 10 JacobiConformal: JacobiConformal(name='Itokawa25134', a=267.5, b=147, c=104.5, e2ab=0.6980138, e2bc=0.494643436, e2ac=0.847389292, xyQ2=xyQ2(x=3.13215, y=1.42547), volume=17212581.945495993, area=359464.659686278, area_p=359430.867250807)
6test 11 xyR2: (0.0, 0.61539)
6test 12 toDegrees: (0.0, 35.259243)
6test 13 toDegrees: ('00°00′00.0″', '35°15′33.27″')
6test 14 xyQ2: (3.13215, 1.42547)
6test 15 toDegrees: (179.458966, 81.673412)  FAILED, KNOWN, expected (179.4589659, 81.673412)
6test 16 toDegrees: ('179°27′32.28″', '81°40′24.28″')
6testTriaxial(pygeodesy.triaxials, 23.02.07)
6test 17 Triaxial: Triaxial(name='Test', a=6378388, b=6378318, c=6356911.9461, e2ab=0.000021949, e2bc=0.006700868, e2ac=0.00672267, volume=1083307891664673177600, area=510097198412933.0625, area_p=510097203304282.5)
6test 18 Triaxial_: Triaxial_(name='Un', a=6356911.9461, b=6378388, c=6378318, e2ab=-0.00676817, e2bc=0.000021949, e2ac=-0.006746073, volume=1083307891664673308672, area=510097198412933.0625, area_p=510097203304282.5)
6test 19 forwardBetaOmega: (4234607.381429, 3551286.590486, 3176009.080037)
6test 20 forwardBetaOmega: (4233813.533025, 3550620.827453, 3175409.655093)
6test 21 length: 1196.973671
6test 22 forwardCartesian: (4233813.533151, 3550620.827558, 3175409.654809, 1196.973671)
6test 23 forwardCartesian: (4239665.951888, 3553574.566129, 3164352.410834, 12911.309173)
6test 24 reverseCartesian: (4234607.381429, 3551286.590486, 3176009.080037)
6test 25 reverseCartesian: (4248255.186992, 3560773.833183, 3170763.143924)  FAILED, KNOWN, expected (4234607.381429, 3551286.590486, 3176009.080037)
6test 26 forwardBetaOmega_: (4233813.533025, 3550620.827453, 3175409.655093)
6test 27 reverseLatLon: (30.051881, 39.984967, 0.0)
6test 28 forwardLatLon: (4233813.533025, 3550620.827453, 3175409.655093)
6test 29 reverseBetaOmega: (0.520687, 0.698121, 12892.55755)
6test 30 reverseBetaOmega: (0.521162, 0.698437, 12918.032538)
6test 31 toDegrees: (29.860398, 40.017494, 12918.032538)
6test 32 toDegrees: ('29°51′37.43″', '40°01′02.98″', 12918.032538)
6test 33 hartzell4: (884268.349816, 5592134.174908, 2927668.068131, 12669388.912805)
6test 34 hartzell4: 0
6test 35 hartzell4: (3642143.609933, 3678204.437754, 3714265.265575, 11296443.179278)
6test 36 hartzell4: 0
6test 37 hartzell4: (884080.396945, 5592040.198472, 2927517.711001, 12669647.302276)
6test 38 hartzell4: (3642031.283571, 3678090.99925, 3714150.714929, 11296639.666827)
6test 39 hartzell4: (888679.181482, 5594339.590741, 2931196.612187, 12663325.092381)
6test 40 hartzell4: 0
6test 41 hartzell4: (3642304.092727, 3678366.509487, 3714428.926247, 11296162.453809)
6test 42 hartzell4: 0
6test 43 height4: (1.206423, 1.61288, 0.433517, 3.593736)
6test 44 height4: 56
6test 45 height4: 0
6test 46 height4: (-1.206423, -1.61288, -0.433517, 3.593736)
6test 47 height4: (0.0, 1.746769, 0.487031, 3.375213)
6test 48 height4: (1.563196, 0.0, 0.853517, 2.190477)
6test 49 height4: (1.297504, 1.803267, 0.0, 2.306326)

6test 50 height4(-2, -4, -3): (-1.206423, -1.61288, -0.433517, 3.593736) 56
6test 51 signBit(-2, -4, -3): (True, True, True)

6test 52 height4(-2, -4, 0): (-1.297504, -1.803267, 0.0, 2.306326) 55
6test 53 signBit(-2, -4, 0): (True, True, False)

6test 54 height4(-2, -4, 3): (-1.206423, -1.61288, 0.433517, 3.593736) 56
6test 55 signBit(-2, -4, 3): (True, True, False)

6test 56 height4(-2, 0, -3): (-1.563196, 0.0, -0.853517, 2.190477) 57
6test 57 signBit(-2, 0, -3): (True, False, True)

6test 58 height4(-2, 0, 0): (-2.25, 0.0, 0.661438, -0.707107) None
6test 59 signBit(-2, 0, 0): (True, False, False)

6test 60 height4(-2, 0, 3): (-1.563196, 0.0, 0.853517, 2.190477) 57
6test 61 signBit(-2, 0, 3): (True, False, False)

6test 62 height4(-2, 4, -3): (-1.206423, 1.61288, -0.433517, 3.593736) 56
6test 63 signBit(-2, 4, -3): (True, False, True)

6test 64 height4(-2, 4, 0): (-1.297504, 1.803267, 0.0, 2.306326) 55
6test 65 signBit(-2, 4, 0): (True, False, False)

6test 66 height4(-2, 4, 3): (-1.206423, 1.61288, 0.433517, 3.593736) 56
6test 67 signBit(-2, 4, 3): (True, False, False)

6test 68 height4(0, -4, -3): (0.0, -1.746769, -0.487031, 3.375213) 58
6test 69 signBit(0, -4, -3): (False, True, True)

6test 70 height4(0, -4, 0): (0.0, -2.0, 0.0, 2.0) None
6test 71 signBit(0, -4, 0): (False, True, False)

6test 72 height4(0, -4, 3): (0.0, -1.746769, 0.487031, 3.375213) 58
6test 73 signBit(0, -4, 3): (False, True, False)

6test 74 height4(0, 0, -3): (0.0, 0.0, -1.0, 2.0) None
6test 75 signBit(0, 0, -3): (False, False, True)

6test 76 height4(0, 0, 0): (0.0, 0.0, 0.0, -1.0) None
6test 77 signBit(0, 0, 0): (False, False, False)

6test 78 height4(0, 0, 3): (0.0, 0.0, 1.0, 2.0) None
6test 79 signBit(0, 0, 3): (False, False, False)

6test 80 height4(0, 4, -3): (0.0, 1.746769, -0.487031, 3.375213) 58
6test 81 signBit(0, 4, -3): (False, False, True)

6test 82 height4(0, 4, 0): (0.0, 2.0, 0.0, 2.0) None
6test 83 signBit(0, 4, 0): (False, False, False)

6test 84 height4(0, 4, 3): (0.0, 1.746769, 0.487031, 3.375213) 58
6test 85 signBit(0, 4, 3): (False, False, False)

6test 86 height4(2, -4, -3): (1.206423, -1.61288, -0.433517, 3.593736) 56
6test 87 signBit(2, -4, -3): (False, True, True)

6test 88 height4(2, -4, 0): (1.297504, -1.803267, 0.0, 2.306326) 55
6test 89 signBit(2, -4, 0): (False, True, False)

6test 90 height4(2, -4, 3): (1.206423, -1.61288, 0.433517, 3.593736) 56
6test 91 signBit(2, -4, 3): (False, True, False)

6test 92 height4(2, 0, -3): (1.563196, 0.0, -0.853517, 2.190477) 57
6test 93 signBit(2, 0, -3): (False, False, True)

6test 94 height4(2, 0, 0): (2.25, 0.0, 0.661438, -0.707107) None
6test 95 signBit(2, 0, 0): (False, False, False)

6test 96 height4(2, 0, 3): (1.563196, 0.0, 0.853517, 2.190477) 57
6test 97 signBit(2, 0, 3): (False, False, False)

6test 98 height4(2, 4, -3): (1.206423, 1.61288, -0.433517, 3.593736) 56
6test 99 signBit(2, 4, -3): (False, False, True)

6test 100 height4(2, 4, 0): (1.297504, 1.803267, 0.0, 2.306326) 55
6test 101 signBit(2, 4, 0): (False, False, False)

6test 102 height4(2, 4, 3): (1.206423, 1.61288, 0.433517, 3.593736) 56
6test 103 signBit(2, 4, 3): (False, False, False)

6test 104 _normalTo5: 2.356, 1.116, 0.268, 6.503, 59
6test 105 _normalTo5: 2.356, 0.268, 1.116, 6.503, 59
6test 106 _normalTo5: 1.116, 2.356, 0.268, 6.503, 59
6test 107 _normalTo5: 1.116, 0.268, 2.356, 6.503, 59
6test 108 _normalTo5: 0.268, 2.356, 1.116, 6.503, 59
6test 109 _normalTo5: 0.268, 1.116, 2.356, 6.503, 59

6test 110 height4(4116143.0232757395, -7909577.256290015, 0.0): (2937894.565962, -5656340.813765, 0.0, 2542704.051416) 54
6test 111 height4(-12495880.818456447, -10488091.899957266, -12744131.79486672): (-3833975.977519, -3233013.744195, -3928391.176032, 14331156.170325) 55
6test 112 height4(3348189.3506155666, 2544832.036606388, 698272.4181411591): (5005398.065983, 3791796.735581, 1040436.27027, -2101984.250293) 53
6test 113 height4(2463969.270494719, 0.0, -8824250.234105838): (1711709.447195, 0.0, -6142737.632939, 2785032.256899) 54
6test 114 height4(4649060.130488607, -10403937.164450938, -9703616.155549996): (1973670.792872, -4433948.856871, -4135434.036244, 8590874.263673) 55
6test 115 height4(4441248.082872745, 2127826.4355995446, 4435158.481281962): (4267232.971071, 2044993.497562, 4262501.09187, 258753.026799) 52
6test 116 height4(0.0, -8270547.927888339, 2421091.4858975634): (0.0, -6121486.548202, 1791972.498481, 2239253.338501) 54
6test 117 height4(1890961.8519288662, -11333159.838790266, 5575137.253811143): (941239.398326, -5660270.459553, 2784434.212987, 6393095.502963) 55
6test 118 height4(-12027991.670086771, -12505105.880054386, -8469971.725987481): (-3957325.608227, -4132943.874175, -2799288.841286, 12937750.643508) 55
6test 119 height4(3174968.621058757, 1884294.7863992276, 3145653.763583456): (4174126.751933, 2472049.78349, 4126883.968431, -1518744.752091) 53
6test 120 height4(-9365369.875075137, -6529021.666937837, 3800219.201169445): (-4948238.340319, -3460612.701807, 2014229.979578, 5667092.911915) 56
6test 121 height4(0.0, 4478594.672077738, 5010158.558167031): (0.0, 4250849.758721, 4755377.319441, 341732.680858) 52
6test 122 height4(881396.9340433755, 3182704.7854854153, 3768992.720160119): (1123753.786641, 4050362.805442, 4796511.239491, -1366514.394788) 53
6test 123 height4(5288711.333060958, 6300636.859168471, -7215540.592812703): (3073787.037226, 3672254.980665, -4205457.773992, 4568903.534951) 55
6test 124 height4(-10800974.102935122, 3762349.2389487335, 1210463.3130610224): (-5970050.79652, 2085844.963997, 671073.82937, 5141928.392297) 55
6test 125 height4(3854354.982100461, 2755610.1676837974, -7343129.912433261): (2807193.081834, 2010630.603384, -5357881.99945, 2364899.97095) 54
6test 126 height4(6054917.289193788, 4095693.4973130766, 1209035.3162619567): (5199037.419717, 3520100.553248, 1039118.957575, 1045327.296679) 52
6test 127 height4(-9548462.825246448, -7960042.362115585, -7950243.704959199): (-4112371.120457, -3441435.166259, -3437156.000066, 8386707.616544) 54
6test 128 height4(-8937049.875178715, -10905842.351957496, 0.0): (-4028453.19021, -4934122.167301, 0.0, 7730185.20991) 55
6test 129 height4(2399945.503029899, 6017372.192355257, -8941790.369406944): (1382345.68709, 3475856.756249, -5165060.983815, 4664600.191802) 56
6test 130 height4(-6410203.75873897, -6443242.017579161, 3919636.753075051): (-4119228.031467, -4150430.607543, 2524824.186594, 3528605.395982) 55
6test 131 height4(3099442.915525232, -11148976.068611274, -12537370.887972994): (1153867.296898, -4168154.229711, -4687154.854699, 10683774.136668) 55
6test 132 height4(6353291.025062796, 5963000.804662281, 1638254.2689909039): (4558573.569443, 4286675.638488, 1177699.209134, 2498637.182829) 54
6test 133 height4(-7643741.797306838, 2701257.9716429967, -7979818.671050414): (-4272469.694518, 1514358.343013, -4473541.055003, 5006814.260613) 55
6test 134 height4(3540738.1526847496, 5960922.845099755, -11037553.09025392): (1726696.608557, 2916984.547578, -5401178.94087, 6657703.856045) 55
6test 135 height4(3963624.272242905, -6823719.050691676, 4064677.433230245): (2841836.542199, -4901791.701819, 2919826.972794, 2502577.675594) 54
6test 136 height4(6173703.7556147985, -11063823.741847122, 6281708.370588761): (2774456.229259, -4990543.751792, 2833447.411781, 7767246.437643) 55
6test 137 height4(-12264035.995214673, 5203029.09747428, 5792365.081815462): (-5366067.816245, 2285200.243161, 2544008.675498, 8163792.596802) 51
6test 138 height4(-8200151.843236788, -6392399.590399532, -8571746.819440924): (-3867972.652871, -3026011.746011, -4057616.607578, 7104767.077529) 55
6test 139 height4(3694244.295399449, 0.0, 5390283.890156098): (3601532.647419, 0.0, 5255891.887962, 163268.674046) 52
6test 140 height4(818441.9064114821, 3165491.1384413145, -7627154.196780972): (628079.053248, 2433028.320686, -5862277.639249, 1920294.003163) 54
6test 141 height4(-8776416.242129209, -11606988.22557452, -8654841.487898339): (-3293207.573398, -4373703.693163, -3261241.733572, 10558262.202727) 56
6test 142 height4(-7059980.579126951, 4392412.398344076, 6084394.604415437): (-4357721.165249, 2718178.580613, 3765204.908829, 3934959.422973) 55
6test 143 height4(3663275.417384695, 1307848.7308403577, -6822481.012041017): (2970075.784027, 1061715.857859, -5538489.420062, 1479777.527577) 54
6test 144 height4(-8020870.982307101, 3921658.7972269855, -9436148.008323466): (-3924840.906174, 1925590.18226, -4633230.963849, 6620405.15651) 55
6test 145 height4(-6737306.842604698, 3946125.08133555, -10860143.258288804): (-3201606.445278, 1881860.271539, -5179014.111566, 7002684.834145) 54
6test 146 height4(0.0, 3428425.367798598, 4094655.2545059132): (0.0, 4094724.450362, 4890453.986953, -1037906.590205) 52
6test 147 height4(-8553407.687812919, 3222873.2726795594, -12531375.635337517): (-3504054.599797, 1325567.64529, -5154087.687117, 9138933.894177) 56
6test 148 height4(1336778.1098591571, 5740585.602980785, 5991645.012791319): (1012774.734476, 4356301.747431, 4546796.66729, 2027019.171467) 54
6test 149 height4(-9464220.157313803, 3243051.231123229, 2069919.3141717534): (-5889618.282649, 2023299.876606, 1291386.604867, 3856382.386209) 54
6test 150 height4(-9460764.57763581, -10041932.400302444, -7337671.549926835): (-3847147.04343, -4099828.464778, -2995718.629294, 9256017.295032) 55
6test 151 height4(-11481151.994965913, 5037960.537901072, 5730113.731463004): (-5294001.721811, 2331468.76562, 2651752.342563, 7421740.702604) 55
6test 152 height4(6339322.434941433, 1620020.5591337834, -10560482.646999508): (3244020.522818, 831743.057971, -5421853.61198, 6050436.654125) 56
6test 153 height4(785356.9155917803, 985480.0545529799, -11613510.174160693): (427503.2269, 538087.063843, -6341089.595752, 5303455.336503) 56
6test 154 height4(5744989.206833013, 1862229.1911518276, -11323589.797427626): (2845668.507058, 925559.127607, -5627951.831415, 6459388.761173) 55
6test 155 height4(2411622.939575853, 5783042.106219645, 0.0): (2453996.804921, 5883959.088915, 0.0, -109452.189839) 53
6test 156 height4(1821255.69645059, 6148059.654947656, -8940558.147976806): (1052835.414898, 3564193.09341, -5183030.653169, 4624483.648059) 55
6test 157 height4(1644361.5355123086, -9715993.676827192, -8220419.277136085): (814540.075369, -4829234.016849, -4085829.146538, 6454754.77289) 55
6test 158 height4(-8552292.972904561, -12312452.401617529, 6128594.544857949): (-3355101.516651, -4850042.380948, 2414104.590046, 9823227.472371) 54
6test 159 height4(0.0, 716395.3309484696, -11112536.723530766): (0.0, 410345.031631, -6365104.960641, 4757286.530051) 54
6test 160 height4(1377505.0044504618, 3486586.63407009, -8330502.2142308755): (959814.296052, 2434336.931846, -5816323.239186, 2757315.883658) 55
6test 161 height4(-9371198.525259042, -9617886.032006297, -7134758.539704134): (-3916279.839087, -4035162.524841, -2993333.814792, 8835968.446204) 51
6test 162 height4(4155349.313908009, -11499275.981508378, 0.0): (2160661.155418, -5998648.176127, 0.0, 5851126.99426) 56
6test 163 height4(3272447.1606543874, -12591569.179050853, 2400101.8854255397): (1572270.540545, -6070913.04437, 1157174.615508, 6852329.907749) 55
6test 164 height4(-10699897.531376528, -7675216.046963609, -8063871.558263849): (-4403710.020357, -3171400.67907, -3331950.292303, 9072894.185939) 55
6test 165 height4(-8048379.0639778, 5734437.847291783, -10722298.29892253): (-3507646.268922, 2508698.897111, -4690727.585571, 8209962.932984) 55
6test 166 height4(756920.1974546646, 3643146.6811452187, -9840891.6901299): (457668.776346, 2208684.417595, -5966061.261847, 4142649.423561) 56
6test 167 height4(-9377440.612636339, -8185078.847272053, -8798479.916242056): (-3909436.098745, -3425771.915272, -3682456.977044, 8872641.464148) 52
6test 168 height4(3732984.8954228526, -7667827.5309621375, -7271882.848441153): (2118195.355946, -4363619.799718, -4138255.812469, 4831661.452191) 56
6test 169 height4(-10353806.734810308, 2930884.429724878, 3614429.1635277574): (-5798620.377028, 1646302.791647, 2030236.169479, 4990945.820323) 55
6test 170 height4(4078189.1061418536, 2634217.834651734, -9289165.450295161): (2474924.326092, 1602859.89831, -5652191.189421, 4106304.777055) 55
6test 171 height4(6246423.767052889, 863147.7755539097, -11385322.721545339): (3050785.170198, 423020.656191, -5579777.786881, 6641548.758483) 55
6test 172 height4(-6652388.645175275, -10501296.979187861, -9496053.330269245): (-2701954.874427, -4282335.269249, -3872355.537359, 9268623.878048) 54
6test 173 height4(5061435.434561419, 4088009.158570561, -7005157.531054421): (3368147.334339, 2726509.965197, -4672076.66472, 3188129.698235) 54
6test 174 height4(-11957297.11746514, -10227005.463553512, -12211838.829057436): (-3813396.957968, -3276578.286548, -3912430.595161, 13546649.946891) 55
6test 175 height4(-7272879.070613295, -6951817.413527768, 3831593.995757401): (-4295854.354512, -4117544.306141, 2269423.363634, 4397289.766595) 55
6test 176 height4(-6976823.799740521, -7104725.418263445, -9722680.20815617): (-3186136.726842, -3256440.591045, -4456323.390927, 7544078.387876) 54
6test 177 height4(-10650647.884535164, -11496391.632350838, 3228657.459819736): (-4229727.108355, -4584179.226971, 1287408.223965, 9631996.290841) 55
6test 178 height4(-8225045.970920973, 845173.0673400235, 3583711.872962375): (-5803416.401019, 597518.69507, 2533588.861605, 2651109.352877) 53
6test 179 height4(-7680075.03855495, 0.0, -11014188.712829461): (-3635532.698554, 0.0, -5232272.833434, 7056123.154854) 55
6test 180 height4(-6852956.414020714, 3049595.4321596557, 5379981.891770515): (-4722094.099295, 2105754.192757, 3714867.338082, 2864265.519539) 54
6test 181 height4(-9567725.790070739, 1165649.4602303158, -11626807.865957107): (-4025979.920204, 492408.149209, -4911478.587201, 8732688.501897) 55
6test 182 height4(-8360054.670337438, -6746259.06143688, 2452881.2735920544): (-4824012.670283, -3903902.864734, 1419412.090315, 4653024.857861) 55
6test 183 height4(-7949564.690744551, 2832288.7426023507, 886937.4003897684): (-5956626.28138, 2125822.949039, 665702.450812, 2125992.079927) 53
6test 184 height4(-10831306.599580402, 4466764.2778737005, -9832087.168209072): (-4500426.822199, 1863269.876041, -4101312.791213, 8927485.469944) 55
6test 185 height4(6153027.2435759725, -7181420.700906023, 4934184.078314456): (3668545.707553, -4293346.67598, 2949830.778438, 4295495.09312) 55
6test 186 height4(-10418782.215900326, -9951523.299684824, 4951727.499879996): (-4346047.537274, -4167466.910227, 2073642.05653, 8866610.999285) 55
6test 187 height4(-7083606.011518458, 3509258.891321303, -11612419.30156981): (-3204722.814154, 1593504.063237, -5272969.645923, 7674924.974005) 55
6test 188 height4(5819168.21730463, -7670030.058229113, -7330376.373596243): (3057428.306408, -4042781.629981, -3863714.106038, 5727293.058066) 56
6test 189 height4(1246850.450839378, 4249846.603682513, -9921947.753743978): (729887.737624, 2494750.755391, -5824342.520606, 4487536.131352) 56
6test 190 height4(-7489070.053403748, 3127135.224169364, 2110092.039666349): (-5679304.220856, 2375308.448537, 1602774.629301, 2024318.85435) 52
6test 191 height4(-11032549.809304282, -10361325.203457037, -11285285.79759558): (-3712104.858418, -3501879.808538, -3814100.941368, 12508377.535107) 56
6test 192 height4(2248284.472639834, -6999269.460403761, 5588035.282030238): (1549602.634625, -4834260.560193, 3859522.099849, 2857127.520734) 54
6test 193 height4(5411932.117598441, 4604455.16870271, -8175667.529393345): (3177488.067644, 2710921.52596, -4813467.006362, 4458991.166805) 55
6test 194 height4(-7281994.837077363, 936623.1532185363, 0.0): (-6305225.415486, 811721.294691, 0.0, 984722.792069) 51
6test 195 height4(2249170.937617569, -10337112.065305531, -10983095.158295369): (937089.0135, -4323785.611012, -4593927.410298, 8871477.810013) 56
6test 196 height4(-8532403.044646645, 4687850.080403337, -6783739.945263287): (-4571646.221166, 2519604.518535, -3646056.935024, 5498539.633763) 56
6test 197 height4(-8145181.312760993, 2191733.554342149, -12243727.168613167): (-3481357.195325, 940395.509401, -5253285.344375, 8496080.22556) 55
6test 198 height4(-11662711.433137586, 0.0, 3251798.546356613): (-6123426.549974, 0.0, 1712785.648173, 5749107.558362) 55
6test 199 height4(3491909.2968526552, -10972242.224397652, -11595099.499052113): (1357440.923849, -4282937.102174, -4526004.465963, 9963677.174638) 54
6test 200 height4(-11997032.670648701, 5460053.853622567, -6940890.555734954): (-5118589.153204, 2338570.898465, -2972784.045383, 8532438.709977) 55
6test 201 height4(2509409.1262935065, 0.0, -8135512.086087595): (1876548.639548, 0.0, -6094074.979647, 2137282.820601) 54
6test 202 height4(-6960548.2287816955, -11189660.837596262, -11763247.734691933): (-2502910.063038, -4041034.181604, -4248119.787165, 11289399.857883) 56
6test 203 height4(-6838422.20496806, 711490.6187023022, -7273537.493297011): (-4345455.711873, 453225.416934, -4633266.709819, 3640413.803434) 55
6test 204 height4(-11840251.657726314, 6065017.615349559, -8227808.8086717045): (-4810588.898735, 2474037.340564, -3356237.850485, 9275963.639412) 49
6test 205 height4(-6533822.767784062, 5709547.605811414, 5377556.147037099): (-4070773.963443, 3566262.766325, 3358868.612795, 3838668.867803) 53
6test 206 height4(2954877.016549729, 5706944.019840387, -10158655.140132997): (1562914.556532, 3028147.140259, -5390202.789847, 5643726.608288) 56
6test 207 height4(-9417345.209509479, 0.0, 2764739.332783837): (-6099972.674749, 0.0, 1795063.999404, 3456187.319366) 54
6test 208 height4(918907.5177936481, 1163368.7493796023, 0.0): (4002415.770219, 4955409.157204, 0.0, -4887493.590517) 54
6test 209 height4(-9238387.697469495, 2587836.7279913803, -8439376.225238515): (-4596103.789001, 1291814.353905, -4212780.268093, 6410506.00701) 54
6test 210 height4(-10564091.672070859, 1976698.5559207604, 3144265.7890013824): (-5997391.379173, 1125471.806174, 1790232.019632, 4838671.92453) 55
6test 211 height4(1489403.7852795713, 1686765.2919083072, -12522116.077697074): (744185.248209, 845641.998822, -6277762.18707, 6344666.624304) 55
6test 212 height4(-11154383.297298534, -12376469.572844429, 2351912.4430914577): (-4212113.419103, -4693233.876407, 891847.605119, 10457485.890967) 55
6test 213 height4(5407097.130151426, -7060987.080311948, 845730.5959392731): (3851040.444418, -5038721.425837, 603509.684607, 2563111.733103) 54
6test 214 height4(-8224975.877214895, -11145815.319047656, -11833249.690494208): (-2867629.856978, -3903068.518918, -4143736.844079, 11844287.458793) 56
6test 215 height4(-10999191.998229042, 3876962.953741531, -10220021.622111775): (-4507690.451404, 1595186.554309, -4205000.323302, 9139287.559464) 55
6test 216 height4(2609627.6305274535, 5884809.937998727, 934550.8679719309): (2557166.580247, 5767287.687288, 915887.073364, 130046.062754) 53
6test 217 height4(1214554.4961401487, 1020940.1767477526, 4545329.419127276): (1612083.730669, 1352123.401061, 6019833.652434, -1562649.850226) 53
6test 218 height4(-9455963.95394476, -7130168.868478816, 2134049.4287003786): (-4995595.612941, -3778858.694886, 1130995.379245, 5668534.470495) 55
6test 219 height4(3681083.9293062007, 4627669.399152024, 1479118.9124968462): (3847999.679943, 4836033.109152, 1545718.69456, -275157.835481) 52
6test 220 height4(2069021.1683777042, -12076214.17636955, -9966382.084294796): (832233.736683, -4877080.794912, -4024954.670062, 9415823.082121) 55
6test 221 height4(-8669182.04076896, 1159677.292885833, -6508155.234090867): (-5055971.156186, 678238.109116, -3806264.643441, 4537321.825481) 55
6test 222 height4(-10024786.050089587, -10469471.681189314, 2806046.836309872): (-4315234.665595, -4523974.132404, 1212508.659009, 8395670.434058) 55
6test 223 height4(4816700.267703071, -7784422.318136495, 1924229.6820691996): (3276271.23782, -5306294.439465, 1311652.618447, 2981491.243997) 54
6test 224 height4(-7659785.996399556, 966888.7637076747, -10411373.708781535): (-3756527.292146, 475813.492636, -5123460.989988, 6590796.943903) 54
6test 225 height4(2837427.49653172, 4644568.687582738, -8932424.904523266): (1725579.337516, 2832051.281011, -5446548.519464, 4083229.095917) 55
6test 226 height4(-7610132.8656951105, -12612764.972009836, -8421414.507555068): (-2849138.273917, -4742004.836178, -3166144.888181, 10594045.185436) 55
6test 227 height4(3369144.8101529055, 1785903.5281509322, -9927415.78620458): (2015141.892934, 1071072.534215, -5953786.865194, 4258407.454861) 55
6test 228 height4(-9212296.338134168, 2476163.5737799155, -10445147.729740238): (-4139118.586479, 1116683.519536, -4710425.391072, 7776397.547669) 54
6test 229 height4(4805449.584088972, 2318246.4192973473, 1939398.1676732916): (5387378.957275, 2596866.850058, 2172492.128019, -686005.782894) 52
6test 230 height4(5635924.990427144, -10038261.567493025, -6654793.6510177385): (2694009.15564, -4815252.583248, -3192200.775228, 6922733.640113) 55
6test 231 height4(3851530.765975977, -8201132.359373327, 0.0): (2705292.384432, -5771974.793448, 0.0, 2686013.571711) 53
6test 232 height4(-9331353.859267434, -8730487.365505783, 5838310.288908199): (-4221445.541043, -3964211.088698, 2650942.162016, 7680355.990698) 52
6test 233 height4(851617.2609760127, 5170289.6209029015, -11524221.728590406): (427641.889115, 2604993.341062, -5806288.647409, 6281342.12093) 56
6test 234 height4(-11845723.124424346, -9665735.490793072, -8992359.932414448): (-4243193.202013, -3477314.623247, -3235017.686893, 11368465.322422) 55
6test 235 height4(-12488513.18048275, 3456196.4869758347, -11217888.011409651): (-4630122.2378, 1286830.097605, -4176648.26112, 10772163.940473) 56
6test 236 height4(-11628859.787030421, -10656705.901313694, 2967288.6289340025): (-4604327.624731, -4236617.747948, 1179642.335321, 9682833.431762) 55
6test 237 height4(-8228329.087667104, 0.0, 3005850.9852260128): (-5972046.385092, 0.0, 2185635.267362, 2400742.688788) 53
6test 238 height4(-10650627.290830133, 1840841.8118993402, -8227866.074412009): (-4983813.349353, 864488.579466, -3863891.728124, 7218747.673722) 54
6test 239 height4(2509939.8193772044, -12379652.573064942, -11900203.19196039): (918590.136532, -4550110.837531, -4373829.679889, 10976357.129976) 56
6test 240 height4(-12269083.791943282, -7509914.795492565, -12735974.358642966): (-4056712.186401, -2494340.538895, -4230060.17059, 12843270.949624) 54
6test 241 height4(1948193.7087623288, -7410529.290411415, 1296787.0277262588): (1596847.899382, -6081455.023886, 1064204.813194, 1394265.674191) 54
6test 242 height4(-7606384.1932753185, -12608695.083014233, -9336059.95068923): (-2771208.747339, -4613399.098202, -3415926.137, 11061268.636541) 55
6test 243 height4(-10055628.989911012, -11545698.586586038, -11087282.464738986): (-3378843.855802, -3896924.741856, -3742144.90156, 12531330.610789) 56
6test 244 height4(-7815802.771250976, -9866582.192352304, 1981494.858466437): (-3899207.77995, -4938954.799131, 991873.991411, 6371858.246447) 55
6test 245 height4(3178970.599824922, -9215455.319385814, -9247190.639941847): (1503739.55673, -4374658.959944, -4389673.38775, 7059403.820201) 55
6test 246 height4(5090214.591279717, 5979346.942750903, 4286143.881865681): (3620466.408223, 4261142.067259, 3054472.834696, 2574762.374317) 54
6test 247 height4(-10113922.559099142, 5718052.296721143, 4200875.6202337295): (-5204197.225526, 2951901.554918, 2168647.462672, 5990571.263402) 56
6test 248 height4(2827461.6810029824, 5839894.304508335, -11283715.011728523): (1380794.493494, 2861763.232391, -5529373.926155, 6638866.767999) 54
6test 249 height4(3099600.445562474, 0.0, 4590163.66264799): (3568186.412913, 0.0, 5278739.957913, -832892.624051) 53
6test 250 height4(4517278.208845248, -11463768.861480845, -6827139.246174003): (2037930.088587, -5190931.356674, -3091373.001344, 7710486.81337) 56
6test 251 height4(-7234661.98239168, 3852416.08198792, 5164465.078644277): (-4749449.050326, 2534908.38087, 3398217.445943, 3321406.412988) 54
6test 252 height4(-6571354.7635006355, 6308088.062689725, 6015837.810406401): (-3828090.693994, 3685068.655597, 3514309.375428, 4545698.304555) 55
6test 253 height4(-12251867.237401789, -7620471.967908403, 4484962.1324988585): (-5153731.466765, -3218074.998519, 1893945.881051, 8745169.850252) 55
6test 254 height4(-9305085.801485807, 1869573.3883274924, 1461745.4153142723): (-6160146.204984, 1240512.237532, 969900.243132, 3244730.29241) 54
6test 255 height4(4942343.461157029, -6775196.866637095, -7964359.529239294): (2717285.318663, -3736290.647685, -4392030.172793, 5191085.799329) 56
6test 256 height4(1462739.0077304775, -8256367.858716278, -11911008.809470963): (638086.194843, -3615352.67945, -5215606.55344, 8188252.898271) 55
6test 257 height4(3135605.3263245514, 5013382.224611734, -6487604.049503159): (2273751.020689, 3642130.986122, -4713098.028388, 2402497.538433) 54
6test 258 height4(-10049089.830810813, -10841154.49043119, -8254532.975425103): (-3771033.112081, -4085422.635394, -3110627.621196, 10560003.378504) 56
6test 259 height4(-7181662.102282611, 2398662.8354493403, -6664241.698207236): (-4528038.258685, 1516123.108682, -4212234.039221, 3719265.711449) 55
6test 260 height4(1021931.6908990337, 0.0, 1683140.2967326397): (3343759.335305, 0.0, 5424646.350082, -4403379.515506) 54
6test 261 height4(-10850510.627826858, 3358828.3089922713, 1984018.0814847318): (-5982283.666645, 1857447.451466, 1097160.329049, 5171101.903655) 55
6test 262 height4(-9707020.124395514, 5563653.716404029, 1559787.7586347866): (-5463018.671122, 3140401.751644, 880413.057802, 4934090.433325) 54
6test 263 height4(-8285059.464681997, -12363266.13618832, 0.0): (-3537661.777466, -5299441.350982, 0.0, 8510899.211992) 52
6test 264 height4(-12372159.012104442, -7128332.829816097, -9460044.746102467): (-4589867.153798, -2655724.21764, -3524375.830777, 10761062.207697) 54
6test 265 height4(-7713362.509789214, 5221979.56181035, 4441112.77254845): (-4753238.133607, 3226286.234465, 2743821.69494, 3952964.100698) 54
6test 266 height4(-9482602.39758575, 5643298.46952745, -9303511.37430293): (-4175500.450435, 2494313.921481, -4112062.093651, 8064278.045484) 51
6test 267 height4(-7413830.659714995, -10536398.193377282, 5519752.225896688): (-3361773.05347, -4795308.723306, 2512110.775673, 7643636.977303) 55
6test 268 height4(3965147.873634688, 4780649.862903045, -7080694.437414176): (2678769.132069, 3236764.152335, -4793987.455618, 3044237.535845) 54
6test 269 height4(-9060007.816726206, -7542416.426511502, 642679.0385887302): (-4878815.445435, -4074232.627522, 347156.313409, 5440404.598044) 55
6test 270 height4(-12600946.004384058, 5561857.577370735, 1395456.9027637038): (-5785719.526591, 2563043.89584, 643054.037149, 7483736.066453) 55
6test 271 height4(-9890770.094196955, 1824078.9656109726, 0.0): (-6251673.394223, 1155807.081725, 0.0, 3699947.581055) 54
6test 272 height4(-11259089.716283094, -6948498.8234814545, -7802960.084778492): (-4658410.195629, -2886293.253619, -3241180.955583, 8993348.266901) 51
6test 273 height4(4933034.46367314, 1154976.0789975899, -11675992.496838352): (2463807.529881, 578801.296818, -5851208.283015, 6352729.34791) 55
6test 274 height4(0.0, 4748228.646032508, -9640384.65371214): (0.0, 2818275.15156, -5721926.250222, 4367955.671788) 55
6test 275 height4(-8827768.771163285, 1904650.2608353945, 4912780.404550623): (-5459668.821995, 1180989.286557, 3046172.181286, 3918163.949152) 54
6test 276 height4(2901170.0033957693, 4156287.133458808, 2574436.915810363): (3254108.360429, 4658105.682025, 2885274.915038, -687755.48076) 53
6test 277 height4(1248653.5878293463, -10916853.6601111, -10848027.891647797): (513765.656154, -4509644.650901, -4481155.676402, 9062529.964921) 56
6test 278 height4(4998351.616143073, 2889086.5808119774, -9689655.329270829): (2818041.436261, 1633640.732674, -5478985.903558, 4905062.055748) 56
6test 279 height4(-7026751.234366718, -11150704.73722147, -6759186.450578359): (-3014555.26745, -4802211.297155, -2910904.438256, 8438623.103438) 55
6test 280 height4(5537842.440101142, -8184192.575812722, -9877541.598052824): (2518961.494488, -3736382.145018, -4509403.888241, 7596944.271454) 54
6test 281 height4(-12401479.856622264, -8229681.24221948, -6512857.697560619): (-4851027.846476, -3232395.418479, -2558039.634511, 9880423.931871) 55
6test 282 height4(-6385442.176081174, 2794016.3284197515, 2195700.9450224834): (-5557973.672527, 2434069.403665, 1912828.254772, 945665.306493) 52
6test 283 height4(-9170459.527784847, 5816660.025340674, 4516102.9265555): (-4957158.248941, 3153979.301515, 2448750.997289, 5395898.470392) 55
6test 284 height4(6282857.662767767, 2379868.453011989, 846260.753796093): (5900546.789713, 2235968.517599, 795090.119144, 411688.266676) 51
6test 285 height4(3560700.841974894, 6333428.325752689, 6293489.37971139): (2356995.479974, 4201943.720635, 4175415.189545, 3237031.278102) 54
6test 286 height4(-10043588.58782732, 4162923.86324526, -8623425.308875343): (-4600307.557507, 1913734.314447, -3964220.763095, 7509750.262218) 55
6test 287 height4(3659680.1407647724, -12592373.521292547, -8765071.356084567): (1474035.684779, -5092366.331044, -3544555.812151, 9395793.318619) 55
6test 288 height4(5969552.349305935, 5081411.197300898, -7160936.774863497): (3575670.032658, 3051914.783164, -4300848.006328, 4246131.88736) 55
6test 289 height4(2094319.2629239112, -8380508.293012049, -11438961.887230515): (928445.040945, -3729168.678278, -5090061.034874, 7956303.472475) 55
6test 290 height4(-10022271.036992354, 1994995.4563942559, -8505570.870959705): (-4791601.398246, 957156.366317, -4080745.308322, 6929364.769325) 55
6test 291 height4(2447762.5240525287, -10385423.57304992, 4931041.690897571): (1324144.88665, -5635503.586511, 2675733.346019, 5376864.532801) 56
6test 292 height4(5759650.200642194, 5297050.471487385, -9295041.53803186): (3013765.219828, 2780619.527874, -4879263.403136, 5776798.902374) 55
6test 293 height4(-10797990.496432556, 3153982.449304089, -12006473.468691075): (-4170204.813325, 1223121.162326, -4656073.611562, 10083855.73233) 55
6test 294 height4(2877139.404008808, 0.0, -10302282.99101644): (1710898.513647, 0.0, -6142965.070592, 4319727.234157) 56
6test 295 height4(-11651226.981302124, 2121384.825301484, 0.0): (-6254143.582039, 1142273.70321, 0.0, 5485177.099055) 55
6test 296 height4(4039725.442560969, 0.0, -11613721.021073064): (2088679.1296, 0.0, -6024195.358523, 5920251.586514) 56
6test 297 height4(4023406.2858018545, 0.0, -6935083.771948828): (3194733.507348, 0.0, -5514323.687923, 1644766.788974) 51
6test 298 height4(4497842.654572794, 1280677.4078034502, 0.0): (6116548.469368, 1737370.541568, 0.0, -1681896.885448) 52
6test 299 height4(5545101.312826797, -6910561.998277579, -12174914.499623574): (2339934.638185, -2927510.672836, -5157574.918179, 8682214.353185) 55
6test 300 height4(-7446886.030600827, -11478586.464280875, 5062783.8739360925): (-3243774.413587, -5018978.650834, 2213660.226566, 8216458.234947) 55
6test 301 height4(-10989138.954986561, 2214629.5423373757, -10466928.573965402): (-4553548.868779, 921299.04735, -4354248.659386, 8969636.518001) 55
6test 302 height4(5386061.885592021, -6904951.002444417, -10494995.323641207): (2504415.68775, -3222259.741324, -4897530.05082, 7293676.522489) 55
6test 303 height4(1471594.0009367587, -7656626.984954643, -6648882.199633082): (913679.775075, -4765975.420859, -4138656.174736, 3868897.704062) 55
6test 304 height4(-6386345.513406853, 2928878.109179931, -11724528.844299965): (-2969608.851341, 1366825.167416, -5471444.323662, 7294872.502863) 55
6test 305 height4(4443229.054817159, -7127540.026656312, 2794554.196827273): (3194450.722476, -5134031.11509, 2012930.136753, 2478802.387264) 54
6test 306 height4(1675595.5677370362, 4390403.161336001, 0.0): (2278116.710896, 5954736.952524, 0.0, -1676356.745507) 53
6test 307 height4(-12637743.968686065, 1907532.2320286324, 2825359.1837069304): (-6137498.671355, 929604.155989, 1376876.385397, 6731094.61116) 54
6test 308 height4(5815021.681753495, 4620191.673811842, 3526647.7089858158): (4500201.523002, 3580974.818089, 2733387.525982, 1854180.53086) 53
6test 309 height4(0.0, 2359117.7922331085, -10145109.763383742): (0.0, 1444665.539826, -6212562.095948, 4037468.771221) 55
6test 310 height4(3950449.88109517, -9884870.911548702, -8334476.746190475): (1857164.705983, -4663636.496708, -3932122.093227, 7143098.636413) 55
6test 311 height4(-11953377.869446637, 2191333.090491556, -7373730.689908943): (-5345093.479277, 983535.719013, -3309510.457592, 7851501.968966) 54
6test 312 height4(811424.7980344597, 4626901.644848256, -9995650.328796493): (467276.16505, 2672118.31424, -5772613.008438, 4666225.493946) 56
6test 313 height4(5910625.750099764, -12212283.0323852, -9713728.40285888): (2250178.32271, -4668659.801012, -3713431.659523, 10310610.449129) 56
6test 314 height4(944584.3568261276, -7046560.859370731, 3508961.620001335): (758892.279701, -5668797.307037, 2822867.383402, 1550302.955922) 54
6test 315 height4(0.0, -8856044.549791833, -9879770.279295687): (0.0, -4257414.216741, -4749501.293237, 6889634.30157) 55
6test 316 height4(2078116.355093353, -10948402.995208396, -10352466.551412662): (868037.257939, -4591162.871654, -4341204.312464, 8832557.224004) 56
6test 317 height4(-7656138.360686855, -6769778.4475975325, -6601034.825057321): (-4000709.920034, -3548934.31552, -3460437.376399, 5796494.314876) 56
6test 318 height4(-10934873.041815784, -10453038.09919439, 4209241.470530457): (-4425479.827239, -4247473.256303, 1710355.15609, 9334113.12626) 55
6test 319 height4(-9124666.568946209, 2238040.0450642644, -11862565.076514283): (-3831852.46123, 943531.666101, -5001056.04304, 8761845.658221) 55
6test 320 height4(-10057452.456706628, -10620272.55214424, -11215749.760540739): (-3466139.611232, -3676303.620388, -3882377.736458, 12059952.520458) 56
6test 321 height4(2241091.9560445338, -8363451.184839322, -9104358.772715576): (1133940.551719, -4245813.328341, -4621894.627228, 6186534.616807) 56
6test 322 height4(-8369758.303636403, -8984021.321840433, -10710764.479776526): (-3263646.412487, -3517594.573373, -4193625.826109, 9921053.18363) 55
6test 323 height4(-7177338.2347677555, -9205234.020120159, 0.0): (-3909520.430343, -5029516.51762, 0.0, 5302381.52754) 55
6test 324 height4(-8577124.010161595, -8130865.827468435, -11517278.460727105): (-3302173.122316, -3143360.834483, -4452474.727178, 10129746.527817) 56
6test 325 height4(-6559222.766406311, 3683125.720070481, -12177241.101536393): (-2912244.321886, 1641414.787248, -5426820.024858, 7939598.227899) 55
6test 326 height4(2933140.0286457096, -7400750.492030916, -9583500.00347494): (1496713.948439, -3788906.908836, -4906340.302623, 6081492.976288) 56
6test 327 height4(-12701274.51661694, 4673401.178239451, -9812603.158182265): (-4828298.835209, 1783994.168474, -3745749.312973, 10350803.569156) 56
6test 328 height4(-9581786.10062119, 1457229.2282208733, -11811765.292624742): (-3985165.453889, 608466.165997, -4931940.370452, 8909239.718347) 56
6test 329 height4(998681.9714163197, -11301927.34664469, -11004414.682222446): (401392.664844, -4560835.529992, -4440717.663998, 9427682.214804) 55
6test 330 height4(-6411471.514834145, -10182053.856642513, 1195348.5977856764): (-3371098.052407, -5370760.380623, 630507.792964, 5719393.397748) 55
6test 331 height4(0.0, 3741004.354277465, 2988833.708380913): (0.0, 4983227.253507, 3981322.857887, -1590016.491505) 53
6test 332 height4(6095640.928108903, -11792612.241862511, -7757354.276954964): (2519014.631401, -4892578.587169, -3218369.028099, 9000283.728391) 56
6test 333 height4(-8338915.003616015, -8268858.292585032, 0.0): (-4514574.090719, -4490491.021521, 0.0, 5376024.800269) 56
6test 334 height4(-7121718.311579688, 5282021.641216015, 4410994.499399576): (-4573541.165044, 3400273.771754, 2839532.406364, 3536053.580505) 55
6test 335 height4(3661736.2904985957, 4876865.505250435, -6993230.703462849): (2511299.471323, 3351741.136228, -4806230.171169, 2903873.369167) 54
6test 336 height4(-7049996.641298381, 1832984.5513706373, 1422429.7191612227): (-6039736.409325, 1571833.212341, 1219767.663209, 1062966.446839) 52
6test 337 height4(-9488487.868127951, 4438208.465879382, -10359635.56512305): (-4093042.148141, 1921853.476956, -4485921.293336, 8363216.862798) 55
6test 338 height4(4128214.6492247353, 5648523.09974365, -8947197.980049344): (2311357.300002, 3171951.764248, -5024288.083662, 4982328.598396) 56
6test 339 height4(4498438.904841516, -7347316.566359582, -12541030.095213462): (1878530.553478, -3080270.974472, -5257603.673284, 8838546.164187) 55
6test 340 height4(932275.5841283912, -8775251.848524546, -9781504.088277526): (449807.995196, -4248699.676795, -4735841.596803, 6795672.116548) 55
6test 341 height4(-12138137.637075303, -12156585.977959894, 3784740.9646003363): (-4384270.182999, -4409871.683389, 1372917.412268, 11222786.450106) 56
6test 342 height4(4406366.366970137, 5887977.73234416, -8414771.781753883): (2507440.88246, 3360286.40342, -4802290.031172, 4800538.079042) 55
6test 343 height4(3057348.6094769165, 3311442.8409165274, 4880334.601760621): (2932772.680392, 3177383.851792, 4682757.130591, 269309.917727) 53
6test 344 height4(4307511.459294715, 5927401.973816677, 5873309.253572141): (2918691.389975, 4025024.013203, 3988264.057716, 3016829.209683) 55
6test 345 height4(-8633325.162060238, -9893852.565959899, -8635679.083960192): (-3490471.507506, -4016188.93929, -3505415.74675, 9344275.002887) 55
6test 346 height4(-9910448.662672875, 797044.4311480836, -9473513.411457634): (-4586887.979933, 370235.88417, -4400499.209514, 7365998.70837) 55
6test 347 height4(5558980.720673491, -6823569.28338195, -9091004.365497872): (2792801.97077, -3439630.832709, -4582551.630246, 6279246.004128) 53
6test 348 height4(6282639.778930463, 2794179.1090362826, -7356459.434895397): (3968378.125745, 1769301.83421, -4658145.335758, 3699605.304011) 54
6test 349 height4(3787815.350314727, 5024117.99897291, -7798241.361250024): (2404938.433229, 3197733.119203, -4963357.887976, 3644803.781262) 55
6test 350 height4(-6754935.040459622, 2358659.331268296, 5166810.13976735): (-4868540.787516, 1703173.763779, 3730899.870637, 2459671.300747) 53
6test 351 height4(0.0, 5245130.427672354, -12129667.368158888): (0.0, 2531600.809567, -5854406.760835, 6836822.264631) 51
6test 352 height4(-8694298.269636812, 2558852.6281476654, -7311518.860999069): (-4746969.368204, 1401376.213619, -4004172.328837, 5278228.69816) 55
6test 353 height4(-8307323.288779264, -8790452.266473632, -8123812.2854173705): (-3623501.138156, -3848821.523852, -3556895.234627, 8198453.249479) 52
6test 354 height4(1400070.28691057, -11039888.871470008, -11221245.032757157): (562802.834451, -4455748.226434, -4528885.09365, 9425476.453482) 56
6test 355 height4(1729328.0793895673, -7955723.440919776, 687139.4902473849): (1347910.425079, -6210230.797449, 536377.905304, 1793029.01564) 54
6test 356 height4(1716281.5606455319, -8223380.065331333, -8391441.346161632): (919075.035442, -4417444.175024, -4507677.723315, 5495844.441312) 56
6test 357 height4(-7375703.4787615165, 5688784.500498547, -12277658.822208203): (-3041013.125473, 2354797.588796, -5082110.156025, 9037750.261747) 55
6test 358 height4(-12706417.189693201, 2846141.5665136822, 6376876.1313626915): (-5570485.45337, 1252475.371281, 2806178.804901, 8137024.830028) 55
6test 359 height4(4365928.701679253, 2857635.882149675, -11411386.240872912): (2211946.543881, 1452605.554897, -5800621.505618, 6172068.556894) 56
6test 360 height4(-12526701.746125251, 1285560.2626697572, 4392705.233327541): (-5970734.533981, 614913.699954, 2101110.136338, 6977240.212816) 54
6test 361 height4(-11880370.542999506, -11572759.417358683, -9344471.478232553): (-3964528.858979, -3879254.045196, -3132273.689677, 12666569.221463) 56
6test 362 height4(-6422953.526178614, -9421245.43433154, -10230700.041940514): (-2664024.016704, -3923048.736215, -4260054.685505, 8944737.221445) 55
6test 363 height4(-8012196.808474258, -10844663.553298412, -12391743.160730192): (-2778967.854164, -3777975.768505, -4316873.04728, 11938521.218521) 56
6test 364 height4(1808212.2749252971, 1885479.0643897813, -7760519.026666635): (1406268.437862, 1468554.311064, -6044452.348193, 1811151.551653) 54
6test 365 height4(5019974.313997275, -9654617.433709161, -11130805.973301044): (2048927.247013, -3956320.996201, -4561182.376298, 9190084.720516) 55
6test 366 height4: (0.545455, 1.090909, 0.818182, 3.916483)
6test 367 height4: None
6test 368 height4: 0
6test 369 height4: (1.090909, 0.545455, 0.818182, 3.916483)
6test 370 height4: None
6test 371 height4: 0
6test 372 height4: (0.742781, 1.114172, 1.485563, 3.385165)
6test 373 height4: None
6test 374 height4: 0
6test 375 toTriaxial: name='WGS84', a=6378137, b=6378137, c=6356752.314245179, e2ab=0, e2bc=0.00669438, e2ac=0.00669438, volume=1083207319801408126976, area=510065621724088.4375, area_p=510065626589516.8125
6test 376 toEllipsoid: name='_', a=6378137, b=6356752.31424518, f_=298.25722356, f=0.00335281, f2=0.00336409, n=0.00167922, e=0.08181919, e2=0.00669438, e22=0.0067395, e32=0.00335843, A=6367449.14582341, L=10001965.72931272, R1=6371008.77141506, R2=6371007.18091847, R3=6371000.79000916, Rbiaxial=6367453.63451633, Rtriaxial=6372797.5559594
6test 377 toEllipsoid: name='', a=2, b=3, f_=-2, f=-0.5, f2=-0.33333333, n=-0.2, e=1.11803399, e2=-1.25, e22=-0.55555556, e32=-0.38461538, A=2.52506313, L=5.31091776, R1=2.33333333, R2=2.32061115, R3=2.28942849, Rbiaxial=2.54950976, Rtriaxial=2.29128785
6test 378 Triaxials: 12
6test 379 Amalthea: name='Amalthea', a=125000, b=73000, c=64000, e2ab=0.658944, e2bc=0.231375493, e2ac=0.737856, volume=2446253479595252, area=93239507787.490371704, area_p=93212299402.670425415
6test 380 Ariel: name='Ariel', a=581100, b=577900, c=577700, e2ab=0.01098327, e2bc=0.000692042, e2ac=0.011667711, volume=812633172614203904, area=4211301462766.580078125, area_p=4211301574065.829589844
6test 381 Earth: name='Earth', a=6378173.435, b=6378103.9, c=6356754.399999999, e2ab=0.000021804, e2bc=0.006683418, e2ac=0.006705077, volume=1083208241574987694080, area=510065911057441.0625, area_p=510065915922713.6875
6test 382 Enceladus: name='Enceladus', a=256600, b=251400, c=248300, e2ab=0.040119337, e2bc=0.024509841, e2ac=0.06364586, volume=67094551514082248, area=798618496278.596679688, area_p=798619018175.109863281
6test 383 Europa: name='Europa', a=1564130, b=1561230, c=1560930, e2ab=0.003704694, e2bc=0.000384275, e2ac=0.004087546, volume=15966575194402123776, area=30663773697323.51953125, area_p=30663773794562.45703125
6test 384 Io: name='Io', a=1829400, b=1819300, c=1815700, e2ab=0.011011391, e2bc=0.003953651, e2ac=0.014921506, volume=25313121117889765376, area=41691875849096.7421875, area_p=41691877397441.2109375
6test 385 Mars: name='Mars', a=3394600, b=3393300, c=3376300, e2ab=0.000765776, e2bc=0.009994646, e2ac=0.010752768, volume=162907283585817247744, area=144249140795107.4375, area_p=144249144150662.15625
6test 386 Mimas: name='Mimas', a=207400, b=196800, c=190600, e2ab=0.09960581, e2bc=0.062015624, e2ac=0.155444317, volume=32587072869017956, area=493855762247.691894531, area_p=493857714107.9375
6test 387 Miranda: name='Miranda', a=240400, b=234200, c=232900, e2ab=0.050915557, e2bc=0.011070811, e2ac=0.061422691, volume=54926187094835456, area=698880863325.756958008, area_p=698881306767.950317383
6test 388 Moon: name='Moon', a=1735550, b=1735324, c=1734898, e2ab=0.000260419, e2bc=0.000490914, e2ac=0.000751206, volume=21886698675223740416, area=37838824729886.09375, area_p=37838824733332.2265625
6test 389 Tethys: name='Tethys', a=535600, b=528200, c=525800, e2ab=0.027441672, e2bc=0.009066821, e2ac=0.036259685, volume=623086233855821440, area=3528073490771.394042969, area_p=3528074261832.738769531
6test 390 WGS84_35: name='WGS84_35', a=6378172, b=6378102, c=6356752.314245179, e2ab=0.00002195, e2bc=0.006683478, e2ac=0.006705281, volume=1083207319768789942272, area=510065621722018.125, area_p=510065626587483.3125
64 of 390 testTriaxials.py tests (1.0%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 121.291 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testUnits.py
6testing testUnits.py 22.09.23
6testing _Lat(1.0,) (pygeodesy.units, 23.03.09)
6test 1 .classname: _Lat
6test 2 isinstance: True
6test 3 .name: _lat
6test 4 .named: _lat
6test 5 .named2: _Lat '_lat'
6test 6 .str: 1.0
6test 7 .toStr: 1.0
6test 8 .std_repr: True
6test 9 .repr: 1.0
6test 10 .toRepr: _lat (1.0)
6test 11 .units: _lat
6test 12 _lat: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 13 _lat: U ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 14 _lat: TypeError
6test 15 _lat: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 16 .named: Test
6test 17 .named2: _Lat 'Test'
6test 18 .str: 1.0
6test 19 .toStr: 1.0
6test 20 .repr: 1.0
6test 21 .toRepr: Test (1.0)
6test 22 .units: _lat
6test 23 .name: Test
6test 24 ._name: Test
6test 25 .str: 1.0
6test 26 .repr: 1.0
6test 27 delattr: ''
6testing _Lon(1.0,) (pygeodesy.units, 23.03.09)
6test 28 .classname: _Lon
6test 29 isinstance: True
6test 30 .name: _lon
6test 31 .named: _lon
6test 32 .named2: _Lon '_lon'
6test 33 .str: 1.0
6test 34 .toStr: 1.0
6test 35 .std_repr: True
6test 36 .repr: 1.0
6test 37 .toRepr: _lon (1.0)
6test 38 .units: _lon
6test 39 _lon: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 40 _lon: U ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 41 _lon: TypeError
6test 42 _lon: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 43 .named: Test
6test 44 .named2: _Lon 'Test'
6test 45 .str: 1.0
6test 46 .toStr: 1.0
6test 47 .repr: 1.0
6test 48 .toRepr: Test (1.0)
6test 49 .units: _lon
6test 50 .name: Test
6test 51 ._name: Test
6test 52 .str: 1.0
6test 53 .repr: 1.0
6test 54 delattr: ''
6testing _Lat(1.0,) (pygeodesy.units, 23.03.09)
6test 55 .classname: _Lat
6test 56 isinstance: True
6test 57 .name: _lat
6test 58 .named: _lat
6test 59 .named2: _Lat '_lat'
6test 60 .str: 1.0
6test 61 .toStr: 1.0
6test 62 .std_repr: True
6test 63 .repr: 1.0
6test 64 .toRepr: _lat (1.0)
6test 65 .units: _lat
6test 66 _lat: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 67 _lat: U ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 68 _lat: TypeError
6test 69 _lat: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 70 .named: Test
6test 71 .named2: _Lat 'Test'
6test 72 .str: 1.0
6test 73 .toStr: 1.0
6test 74 .repr: 1.0
6test 75 .toRepr: Test (1.0)
6test 76 .units: _lat
6test 77 .name: Test
6test 78 ._name: Test
6test 79 .str: 1.0
6test 80 .repr: 1.0
6test 81 delattr: ''
6testing _Lon(1.0,) (pygeodesy.units, 23.03.09)
6test 82 .classname: _Lon
6test 83 isinstance: True
6test 84 .name: _lon
6test 85 .named: _lon
6test 86 .named2: _Lon '_lon'
6test 87 .str: 1.0
6test 88 .toStr: 1.0
6test 89 .std_repr: True
6test 90 .repr: 1.0
6test 91 .toRepr: _lon (1.0)
6test 92 .units: _lon
6test 93 _lon: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 94 _lon: U ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 95 _lon: TypeError
6test 96 _lon: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 97 .named: Test
6test 98 .named2: _Lon 'Test'
6test 99 .str: 1.0
6test 100 .toStr: 1.0
6test 101 .repr: 1.0
6test 102 .toRepr: Test (1.0)
6test 103 .units: _lon
6test 104 .name: Test
6test 105 ._name: Test
6test 106 .str: 1.0
6test 107 .repr: 1.0
6test 108 delattr: ''
6testing Bearing(1.0,) (pygeodesy.units, 23.03.09)
6test 109 .classname: Bearing
6test 110 isinstance: True
6test 111 .name: bearing
6test 112 .named: bearing
6test 113 .named2: Bearing 'bearing'
6test 114 .str: 1.0
6test 115 .toStr: 1.0
6test 116 .std_repr: True
6test 117 .repr: 1.0
6test 118 .toRepr: bearing (1.0)
6test 119 .units: bearing
6test 120 bearing: bearing ('X'): strDMS ('X') or suffix ('N'): could not convert string to float: 'X'
6test 121 bearing: U ('X'): strDMS ('X') or suffix ('N'): could not convert string to float: 'X'
6test 122 bearing: TypeError
6test 123 bearing: bearing ('X'): strDMS ('X') or suffix ('N'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 124 .named: Test
6test 125 .named2: Bearing 'Test'
6test 126 .str: 1.0
6test 127 .toStr: 1.0
6test 128 .repr: 1.0
6test 129 .toRepr: Test (1.0)
6test 130 .units: bearing
6test 131 .name: Test
6test 132 ._name: Test
6test 133 .str: 1.0
6test 134 .repr: 1.0
6test 135 delattr: ''
6testing Degrees(1.0,) (pygeodesy.units, 23.03.09)
6test 136 .classname: Degrees
6test 137 isinstance: True
6test 138 .name: degrees
6test 139 .named: degrees
6test 140 .named2: Degrees 'degrees'
6test 141 .str: 1.0
6test 142 .toStr: 1.0
6test 143 .std_repr: True
6test 144 .repr: 1.0
6test 145 .toRepr: degrees (1.0)
6test 146 .units: degrees
6test 147 degrees: degrees ('X'): strDMS ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 148 degrees: U ('X'): strDMS ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 149 degrees: TypeError
6test 150 degrees: degrees ('X'): strDMS ('X') or suffix ('NSEW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 151 .named: Test
6test 152 .named2: Degrees 'Test'
6test 153 .str: 1.0
6test 154 .toStr: 1.0
6test 155 .repr: 1.0
6test 156 .toRepr: Test (1.0)
6test 157 .units: degrees
6test 158 .name: Test
6test 159 ._name: Test
6test 160 .str: 1.0
6test 161 .repr: 1.0
6test 162 delattr: ''
6testing Degrees2(1.0,) (pygeodesy.units, 23.03.09)
6test 163 .classname: Degrees2
6test 164 isinstance: True
6test 165 .name: degrees2
6test 166 .named: degrees2
6test 167 .named2: Degrees2 'degrees2'
6test 168 .str: 1.0
6test 169 .toStr: 1.0
6test 170 .std_repr: True
6test 171 .repr: 1.0
6test 172 .toRepr: degrees2 (1.0)
6test 173 .units: degrees2
6test 174 degrees2: degrees2 ('X'): could not convert string to float: 'X'
6test 175 degrees2: U ('X'): could not convert string to float: 'X'
6test 176 degrees2: TypeError
6test 177 degrees2: degrees2 ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 178 .named: Test
6test 179 .named2: Degrees2 'Test'
6test 180 .str: 1.0
6test 181 .toStr: 1.0
6test 182 .repr: 1.0
6test 183 .toRepr: Test (1.0)
6test 184 .units: degrees2
6test 185 .name: Test
6test 186 ._name: Test
6test 187 .str: 1.0
6test 188 .repr: 1.0
6test 189 delattr: ''
6testing Degrees_(1.0,) (pygeodesy.units, 23.03.09)
6test 190 .classname: Degrees_
6test 191 isinstance: True
6test 192 .name: degrees_
6test 193 .named: degrees_
6test 194 .named2: Degrees_ 'degrees_'
6test 195 .str: 1.0
6test 196 .toStr: 1.0
6test 197 .std_repr: True
6test 198 .repr: 1.0
6test 199 .toRepr: degrees_ (1.0)
6test 200 .units: degrees_
6test 201 degrees_: degrees ('X'): strDMS ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 202 degrees_: U ('X'): strDMS ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 203 degrees_: TypeError
6test 204 degrees_: degrees ('X'): strDMS ('X') or suffix ('NSEW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 205 .named: Test
6test 206 .named2: Degrees_ 'Test'
6test 207 .str: 1.0
6test 208 .toStr: 1.0
6test 209 .repr: 1.0
6test 210 .toRepr: Test (1.0)
6test 211 .units: degrees_
6test 212 .name: Test
6test 213 ._name: Test
6test 214 .str: 1.0
6test 215 .repr: 1.0
6test 216 delattr: ''
6testing Distance(1.0,) (pygeodesy.units, 23.03.09)
6test 217 .classname: Distance
6test 218 isinstance: True
6test 219 .name: distance
6test 220 .named: distance
6test 221 .named2: Distance 'distance'
6test 222 .str: 1.0
6test 223 .toStr: 1.0
6test 224 .std_repr: True
6test 225 .repr: 1.0
6test 226 .toRepr: distance (1.0)
6test 227 .units: distance
6test 228 distance: distance ('X'): could not convert string to float: 'X'
6test 229 distance: U ('X'): could not convert string to float: 'X'
6test 230 distance: TypeError
6test 231 distance: distance ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 232 .named: Test
6test 233 .named2: Distance 'Test'
6test 234 .str: 1.0
6test 235 .toStr: 1.0
6test 236 .repr: 1.0
6test 237 .toRepr: Test (1.0)
6test 238 .units: distance
6test 239 .name: Test
6test 240 ._name: Test
6test 241 .str: 1.0
6test 242 .repr: 1.0
6test 243 delattr: ''
6testing Distance_(1.0,) (pygeodesy.units, 23.03.09)
6test 244 .classname: Distance_
6test 245 isinstance: True
6test 246 .name: distance_
6test 247 .named: distance_
6test 248 .named2: Distance_ 'distance_'
6test 249 .str: 1.0
6test 250 .toStr: 1.0
6test 251 .std_repr: True
6test 252 .repr: 1.0
6test 253 .toRepr: distance_ (1.0)
6test 254 .units: distance_
6test 255 distance_: distance ('X'): could not convert string to float: 'X'
6test 256 distance_: U ('X'): could not convert string to float: 'X'
6test 257 distance_: TypeError
6test 258 distance_: distance ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 259 .named: Test
6test 260 .named2: Distance_ 'Test'
6test 261 .str: 1.0
6test 262 .toStr: 1.0
6test 263 .repr: 1.0
6test 264 .toRepr: Test (1.0)
6test 265 .units: distance_
6test 266 .name: Test
6test 267 ._name: Test
6test 268 .str: 1.0
6test 269 .repr: 1.0
6test 270 delattr: ''
6testing Easting(1.0,) (pygeodesy.units, 23.03.09)
6test 271 .classname: Easting
6test 272 isinstance: True
6test 273 .name: easting
6test 274 .named: easting
6test 275 .named2: Easting 'easting'
6test 276 .str: 1.0
6test 277 .toStr: 1.0
6test 278 .std_repr: True
6test 279 .repr: 1.0
6test 280 .toRepr: easting (1.0)
6test 281 .units: easting
6test 282 easting: easting ('X'): could not convert string to float: 'X'
6test 283 easting: U ('X'): could not convert string to float: 'X'
6test 284 easting: TypeError
6test 285 easting: easting ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 286 .named: Test
6test 287 .named2: Easting 'Test'
6test 288 .str: 1.0
6test 289 .toStr: 1.0
6test 290 .repr: 1.0
6test 291 .toRepr: Test (1.0)
6test 292 .units: easting
6test 293 .name: Test
6test 294 ._name: Test
6test 295 .str: 1.0
6test 296 .repr: 1.0
6test 297 delattr: ''
6testing Feet(1.0,) (pygeodesy.units, 23.03.09)
6test 298 .classname: Feet
6test 299 isinstance: True
6test 300 .name: feet
6test 301 .named: feet
6test 302 .named2: Feet 'feet'
6test 303 .str: 1.0
6test 304 .toStr: 1.0
6test 305 .std_repr: True
6test 306 .repr: 1.0
6test 307 .toRepr: feet (1.0)
6test 308 .units: feet
6test 309 feet: feet ('X'): could not convert string to float: 'X'
6test 310 feet: U ('X'): could not convert string to float: 'X'
6test 311 feet: TypeError
6test 312 feet: feet ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 313 .named: Test
6test 314 .named2: Feet 'Test'
6test 315 .str: 1.0
6test 316 .toStr: 1.0
6test 317 .repr: 1.0
6test 318 .toRepr: Test (1.0)
6test 319 .units: feet
6test 320 .name: Test
6test 321 ._name: Test
6test 322 .str: 1.0
6test 323 .repr: 1.0
6test 324 delattr: ''
6testing Float_(1.0,) (pygeodesy.units, 23.03.09)
6test 325 .classname: Float_
6test 326 isinstance: True
6test 327 .name: float_
6test 328 .named: float_
6test 329 .named2: Float_ 'float_'
6test 330 .str: 1.0
6test 331 .toStr: 1.0
6test 332 .std_repr: True
6test 333 .repr: 1.0
6test 334 .toRepr: float_ (1.0)
6test 335 .units: float_
6test 336 float_: Float_ ('X'): could not convert string to float: 'X'
6test 337 float_: U ('X'): could not convert string to float: 'X'
6test 338 float_: TypeError
6test 339 float_: Float_ ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 340 .named: Test
6test 341 .named2: Float_ 'Test'
6test 342 .str: 1.0
6test 343 .toStr: 1.0
6test 344 .repr: 1.0
6test 345 .toRepr: Test (1.0)
6test 346 .units: float_
6test 347 .name: Test
6test 348 ._name: Test
6test 349 .str: 1.0
6test 350 .repr: 1.0
6test 351 delattr: ''
6testing Height(1.0,) (pygeodesy.units, 23.03.09)
6test 352 .classname: Height
6test 353 isinstance: True
6test 354 .name: height
6test 355 .named: height
6test 356 .named2: Height 'height'
6test 357 .str: 1.0
6test 358 .toStr: 1.0
6test 359 .std_repr: True
6test 360 .repr: 1.0
6test 361 .toRepr: height (1.0)
6test 362 .units: height
6test 363 height: height ('X'): could not convert string to float: 'X'
6test 364 height: U ('X'): could not convert string to float: 'X'
6test 365 height: TypeError
6test 366 height: height ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 367 .named: Test
6test 368 .named2: Height 'Test'
6test 369 .str: 1.0
6test 370 .toStr: 1.0
6test 371 .repr: 1.0
6test 372 .toRepr: Test (1.0)
6test 373 .units: height
6test 374 .name: Test
6test 375 ._name: Test
6test 376 .str: 1.0
6test 377 .repr: 1.0
6test 378 delattr: ''
6testing HeightX(1.0,) (pygeodesy.units, 23.03.09)
6test 379 .classname: HeightX
6test 380 isinstance: True
6test 381 .name: heightx
6test 382 .named: heightx
6test 383 .named2: HeightX 'heightx'
6test 384 .str: 1.0
6test 385 .toStr: 1.0
6test 386 .std_repr: True
6test 387 .repr: 1.0
6test 388 .toRepr: heightx (1.0)
6test 389 .units: heightx
6test 390 heightx: height ('X'): could not convert string to float: 'X'
6test 391 heightx: U ('X'): could not convert string to float: 'X'
6test 392 heightx: TypeError
6test 393 heightx: height ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 394 .named: Test
6test 395 .named2: HeightX 'Test'
6test 396 .str: 1.0
6test 397 .toStr: 1.0
6test 398 .repr: 1.0
6test 399 .toRepr: Test (1.0)
6test 400 .units: heightx
6test 401 .name: Test
6test 402 ._name: Test
6test 403 .str: 1.0
6test 404 .repr: 1.0
6test 405 delattr: ''
6testing Height_(1.0,) (pygeodesy.units, 23.03.09)
6test 406 .classname: Height_
6test 407 isinstance: True
6test 408 .name: height_
6test 409 .named: height_
6test 410 .named2: Height_ 'height_'
6test 411 .str: 1.0
6test 412 .toStr: 1.0
6test 413 .std_repr: True
6test 414 .repr: 1.0
6test 415 .toRepr: height_ (1.0)
6test 416 .units: height_
6test 417 height_: height ('X'): could not convert string to float: 'X'
6test 418 height_: U ('X'): could not convert string to float: 'X'
6test 419 height_: TypeError
6test 420 height_: height ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 421 .named: Test
6test 422 .named2: Height_ 'Test'
6test 423 .str: 1.0
6test 424 .toStr: 1.0
6test 425 .repr: 1.0
6test 426 .toRepr: Test (1.0)
6test 427 .units: height_
6test 428 .name: Test
6test 429 ._name: Test
6test 430 .str: 1.0
6test 431 .repr: 1.0
6test 432 delattr: ''
6testing Lam(1.0,) (pygeodesy.units, 23.03.09)
6test 433 .classname: Lam
6test 434 isinstance: True
6test 435 .name: lam
6test 436 .named: lam
6test 437 .named2: Lam 'lam'
6test 438 .str: 1.0
6test 439 .toStr: 1.0
6test 440 .std_repr: True
6test 441 .repr: 1.0
6test 442 .toRepr: lam (1.0)
6test 443 .units: lam
6test 444 lam: lam ('X'): strRad ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 445 lam: U ('X'): strRad ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 446 lam: TypeError
6test 447 lam: lam ('X'): strRad ('X') or suffix ('EW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 448 .named: Test
6test 449 .named2: Lam 'Test'
6test 450 .str: 1.0
6test 451 .toStr: 1.0
6test 452 .repr: 1.0
6test 453 .toRepr: Test (1.0)
6test 454 .units: lam
6test 455 .name: Test
6test 456 ._name: Test
6test 457 .str: 1.0
6test 458 .repr: 1.0
6test 459 delattr: ''
6testing Lat(1.0,) (pygeodesy.units, 23.03.09)
6test 460 .classname: Lat
6test 461 isinstance: True
6test 462 .name: lat
6test 463 .named: lat
6test 464 .named2: Lat 'lat'
6test 465 .str: 1.0
6test 466 .toStr: 1.0
6test 467 .std_repr: True
6test 468 .repr: 1.0
6test 469 .toRepr: lat (1.0)
6test 470 .units: lat
6test 471 lat: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 472 lat: U ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 473 lat: TypeError
6test 474 lat: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 475 .named: Test
6test 476 .named2: Lat 'Test'
6test 477 .str: 1.0
6test 478 .toStr: 1.0
6test 479 .repr: 1.0
6test 480 .toRepr: Test (1.0)
6test 481 .units: lat
6test 482 .name: Test
6test 483 ._name: Test
6test 484 .str: 1.0
6test 485 .repr: 1.0
6test 486 delattr: ''
6testing Lat_(1.0,) (pygeodesy.units, 23.03.09)
6test 487 .classname: Lat_
6test 488 isinstance: True
6test 489 .name: lat_
6test 490 .named: lat_
6test 491 .named2: Lat_ 'lat_'
6test 492 .str: 1.0
6test 493 .toStr: 1.0
6test 494 .std_repr: True
6test 495 .repr: 1.0
6test 496 .toRepr: lat_ (1.0)
6test 497 .units: lat_
6test 498 lat_: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 499 lat_: U ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 500 lat_: TypeError
6test 501 lat_: lat ('X'): strDMS ('X') or suffix ('NS'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 502 .named: Test
6test 503 .named2: Lat_ 'Test'
6test 504 .str: 1.0
6test 505 .toStr: 1.0
6test 506 .repr: 1.0
6test 507 .toRepr: Test (1.0)
6test 508 .units: lat_
6test 509 .name: Test
6test 510 ._name: Test
6test 511 .str: 1.0
6test 512 .repr: 1.0
6test 513 delattr: ''
6testing Lon(1.0,) (pygeodesy.units, 23.03.09)
6test 514 .classname: Lon
6test 515 isinstance: True
6test 516 .name: lon
6test 517 .named: lon
6test 518 .named2: Lon 'lon'
6test 519 .str: 1.0
6test 520 .toStr: 1.0
6test 521 .std_repr: True
6test 522 .repr: 1.0
6test 523 .toRepr: lon (1.0)
6test 524 .units: lon
6test 525 lon: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 526 lon: U ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 527 lon: TypeError
6test 528 lon: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 529 .named: Test
6test 530 .named2: Lon 'Test'
6test 531 .str: 1.0
6test 532 .toStr: 1.0
6test 533 .repr: 1.0
6test 534 .toRepr: Test (1.0)
6test 535 .units: lon
6test 536 .name: Test
6test 537 ._name: Test
6test 538 .str: 1.0
6test 539 .repr: 1.0
6test 540 delattr: ''
6testing Lon_(1.0,) (pygeodesy.units, 23.03.09)
6test 541 .classname: Lon_
6test 542 isinstance: True
6test 543 .name: lon_
6test 544 .named: lon_
6test 545 .named2: Lon_ 'lon_'
6test 546 .str: 1.0
6test 547 .toStr: 1.0
6test 548 .std_repr: True
6test 549 .repr: 1.0
6test 550 .toRepr: lon_ (1.0)
6test 551 .units: lon_
6test 552 lon_: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 553 lon_: U ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'
6test 554 lon_: TypeError
6test 555 lon_: lon ('X'): strDMS ('X') or suffix ('EW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 556 .named: Test
6test 557 .named2: Lon_ 'Test'
6test 558 .str: 1.0
6test 559 .toStr: 1.0
6test 560 .repr: 1.0
6test 561 .toRepr: Test (1.0)
6test 562 .units: lon_
6test 563 .name: Test
6test 564 ._name: Test
6test 565 .str: 1.0
6test 566 .repr: 1.0
6test 567 delattr: ''
6testing Meter(1.0,) (pygeodesy.units, 23.03.09)
6test 568 .classname: Meter
6test 569 isinstance: True
6test 570 .name: meter
6test 571 .named: meter
6test 572 .named2: Meter 'meter'
6test 573 .str: 1.0
6test 574 .toStr: 1.0
6test 575 .std_repr: True
6test 576 .repr: 1.0
6test 577 .toRepr: meter (1.0)
6test 578 .units: meter
6test 579 meter: meter ('X'): could not convert string to float: 'X'
6test 580 meter: U ('X'): could not convert string to float: 'X'
6test 581 meter: TypeError
6test 582 meter: meter ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 583 .named: Test
6test 584 .named2: Meter 'Test'
6test 585 .str: 1.0
6test 586 .toStr: 1.0
6test 587 .repr: 1.0
6test 588 .toRepr: Test (1.0)
6test 589 .units: meter
6test 590 .name: Test
6test 591 ._name: Test
6test 592 .str: 1.0
6test 593 .repr: 1.0
6test 594 delattr: ''
6testing Meter2(1.0,) (pygeodesy.units, 23.03.09)
6test 595 .classname: Meter2
6test 596 isinstance: True
6test 597 .name: meter2
6test 598 .named: meter2
6test 599 .named2: Meter2 'meter2'
6test 600 .str: 1.0
6test 601 .toStr: 1.0
6test 602 .std_repr: True
6test 603 .repr: 1.0
6test 604 .toRepr: meter2 (1.0)
6test 605 .units: meter2
6test 606 meter2: meter2 ('X'): could not convert string to float: 'X'
6test 607 meter2: U ('X'): could not convert string to float: 'X'
6test 608 meter2: TypeError
6test 609 meter2: meter2 ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 610 .named: Test
6test 611 .named2: Meter2 'Test'
6test 612 .str: 1.0
6test 613 .toStr: 1.0
6test 614 .repr: 1.0
6test 615 .toRepr: Test (1.0)
6test 616 .units: meter2
6test 617 .name: Test
6test 618 ._name: Test
6test 619 .str: 1.0
6test 620 .repr: 1.0
6test 621 delattr: ''
6testing Meter3(1.0,) (pygeodesy.units, 23.03.09)
6test 622 .classname: Meter3
6test 623 isinstance: True
6test 624 .name: meter3
6test 625 .named: meter3
6test 626 .named2: Meter3 'meter3'
6test 627 .str: 1.0
6test 628 .toStr: 1.0
6test 629 .std_repr: True
6test 630 .repr: 1.0
6test 631 .toRepr: meter3 (1.0)
6test 632 .units: meter3
6test 633 meter3: meter3 ('X'): could not convert string to float: 'X'
6test 634 meter3: U ('X'): could not convert string to float: 'X'
6test 635 meter3: TypeError
6test 636 meter3: meter3 ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 637 .named: Test
6test 638 .named2: Meter3 'Test'
6test 639 .str: 1.0
6test 640 .toStr: 1.0
6test 641 .repr: 1.0
6test 642 .toRepr: Test (1.0)
6test 643 .units: meter3
6test 644 .name: Test
6test 645 ._name: Test
6test 646 .str: 1.0
6test 647 .repr: 1.0
6test 648 delattr: ''
6testing Meter_(1.0,) (pygeodesy.units, 23.03.09)
6test 649 .classname: Meter_
6test 650 isinstance: True
6test 651 .name: meter_
6test 652 .named: meter_
6test 653 .named2: Meter_ 'meter_'
6test 654 .str: 1.0
6test 655 .toStr: 1.0
6test 656 .std_repr: True
6test 657 .repr: 1.0
6test 658 .toRepr: meter_ (1.0)
6test 659 .units: meter_
6test 660 meter_: meter ('X'): could not convert string to float: 'X'
6test 661 meter_: U ('X'): could not convert string to float: 'X'
6test 662 meter_: TypeError
6test 663 meter_: meter ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 664 .named: Test
6test 665 .named2: Meter_ 'Test'
6test 666 .str: 1.0
6test 667 .toStr: 1.0
6test 668 .repr: 1.0
6test 669 .toRepr: Test (1.0)
6test 670 .units: meter_
6test 671 .name: Test
6test 672 ._name: Test
6test 673 .str: 1.0
6test 674 .repr: 1.0
6test 675 delattr: ''
6testing Northing(1.0,) (pygeodesy.units, 23.03.09)
6test 676 .classname: Northing
6test 677 isinstance: True
6test 678 .name: northing
6test 679 .named: northing
6test 680 .named2: Northing 'northing'
6test 681 .str: 1.0
6test 682 .toStr: 1.0
6test 683 .std_repr: True
6test 684 .repr: 1.0
6test 685 .toRepr: northing (1.0)
6test 686 .units: northing
6test 687 northing: northing ('X'): could not convert string to float: 'X'
6test 688 northing: U ('X'): could not convert string to float: 'X'
6test 689 northing: TypeError
6test 690 northing: northing ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 691 .named: Test
6test 692 .named2: Northing 'Test'
6test 693 .str: 1.0
6test 694 .toStr: 1.0
6test 695 .repr: 1.0
6test 696 .toRepr: Test (1.0)
6test 697 .units: northing
6test 698 .name: Test
6test 699 ._name: Test
6test 700 .str: 1.0
6test 701 .repr: 1.0
6test 702 delattr: ''
6testing Phi(1.0,) (pygeodesy.units, 23.03.09)
6test 703 .classname: Phi
6test 704 isinstance: True
6test 705 .name: phi
6test 706 .named: phi
6test 707 .named2: Phi 'phi'
6test 708 .str: 1.0
6test 709 .toStr: 1.0
6test 710 .std_repr: True
6test 711 .repr: 1.0
6test 712 .toRepr: phi (1.0)
6test 713 .units: phi
6test 714 phi: phi ('X'): strRad ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 715 phi: U ('X'): strRad ('X') or suffix ('NS'): could not convert string to float: 'X'
6test 716 phi: TypeError
6test 717 phi: phi ('X'): strRad ('X') or suffix ('NS'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 718 .named: Test
6test 719 .named2: Phi 'Test'
6test 720 .str: 1.0
6test 721 .toStr: 1.0
6test 722 .repr: 1.0
6test 723 .toRepr: Test (1.0)
6test 724 .units: phi
6test 725 .name: Test
6test 726 ._name: Test
6test 727 .str: 1.0
6test 728 .repr: 1.0
6test 729 delattr: ''
6testing Radians(1.0,) (pygeodesy.units, 23.03.09)
6test 730 .classname: Radians
6test 731 isinstance: True
6test 732 .name: radians
6test 733 .named: radians
6test 734 .named2: Radians 'radians'
6test 735 .str: 1.0
6test 736 .toStr: 1.0
6test 737 .std_repr: True
6test 738 .repr: 1.0
6test 739 .toRepr: radians (1.0)
6test 740 .units: radians
6test 741 radians: radians ('X'): strRad ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 742 radians: U ('X'): strRad ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 743 radians: TypeError
6test 744 radians: radians ('X'): strRad ('X') or suffix ('NSEW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 745 .named: Test
6test 746 .named2: Radians 'Test'
6test 747 .str: 1.0
6test 748 .toStr: 1.0
6test 749 .repr: 1.0
6test 750 .toRepr: Test (1.0)
6test 751 .units: radians
6test 752 .name: Test
6test 753 ._name: Test
6test 754 .str: 1.0
6test 755 .repr: 1.0
6test 756 delattr: ''
6testing Radians2(1.0,) (pygeodesy.units, 23.03.09)
6test 757 .classname: Radians2
6test 758 isinstance: True
6test 759 .name: radians2
6test 760 .named: radians2
6test 761 .named2: Radians2 'radians2'
6test 762 .str: 1.0
6test 763 .toStr: 1.0
6test 764 .std_repr: True
6test 765 .repr: 1.0
6test 766 .toRepr: radians2 (1.0)
6test 767 .units: radians2
6test 768 radians2: radians2 ('X'): could not convert string to float: 'X'
6test 769 radians2: U ('X'): could not convert string to float: 'X'
6test 770 radians2: TypeError
6test 771 radians2: radians2 ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 772 .named: Test
6test 773 .named2: Radians2 'Test'
6test 774 .str: 1.0
6test 775 .toStr: 1.0
6test 776 .repr: 1.0
6test 777 .toRepr: Test (1.0)
6test 778 .units: radians2
6test 779 .name: Test
6test 780 ._name: Test
6test 781 .str: 1.0
6test 782 .repr: 1.0
6test 783 delattr: ''
6testing Radians_(1.0,) (pygeodesy.units, 23.03.09)
6test 784 .classname: Radians_
6test 785 isinstance: True
6test 786 .name: radians_
6test 787 .named: radians_
6test 788 .named2: Radians_ 'radians_'
6test 789 .str: 1.0
6test 790 .toStr: 1.0
6test 791 .std_repr: True
6test 792 .repr: 1.0
6test 793 .toRepr: radians_ (1.0)
6test 794 .units: radians_
6test 795 radians_: radians ('X'): strRad ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 796 radians_: U ('X'): strRad ('X') or suffix ('NSEW'): could not convert string to float: 'X'
6test 797 radians_: TypeError
6test 798 radians_: radians ('X'): strRad ('X') or suffix ('NSEW'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 799 .named: Test
6test 800 .named2: Radians_ 'Test'
6test 801 .str: 1.0
6test 802 .toStr: 1.0
6test 803 .repr: 1.0
6test 804 .toRepr: Test (1.0)
6test 805 .units: radians_
6test 806 .name: Test
6test 807 ._name: Test
6test 808 .str: 1.0
6test 809 .repr: 1.0
6test 810 delattr: ''
6testing Radius_(1.0,) (pygeodesy.units, 23.03.09)
6test 811 .classname: Radius_
6test 812 isinstance: True
6test 813 .name: radius_
6test 814 .named: radius_
6test 815 .named2: Radius_ 'radius_'
6test 816 .str: 1.0
6test 817 .toStr: 1.0
6test 818 .std_repr: True
6test 819 .repr: 1.0
6test 820 .toRepr: radius_ (1.0)
6test 821 .units: radius_
6test 822 radius_: radius ('X'): could not convert string to float: 'X'
6test 823 radius_: U ('X'): could not convert string to float: 'X'
6test 824 radius_: TypeError
6test 825 radius_: radius ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 826 .named: Test
6test 827 .named2: Radius_ 'Test'
6test 828 .str: 1.0
6test 829 .toStr: 1.0
6test 830 .repr: 1.0
6test 831 .toRepr: Test (1.0)
6test 832 .units: radius_
6test 833 .name: Test
6test 834 ._name: Test
6test 835 .str: 1.0
6test 836 .repr: 1.0
6test 837 delattr: ''
6testing Scalar(1.0,) (pygeodesy.units, 23.03.09)
6test 838 .classname: Scalar
6test 839 isinstance: True
6test 840 .name: scalar
6test 841 .named: scalar
6test 842 .named2: Scalar 'scalar'
6test 843 .str: 1.0
6test 844 .toStr: 1.0
6test 845 .std_repr: True
6test 846 .repr: 1.0
6test 847 .toRepr: scalar (1.0)
6test 848 .units: scalar
6test 849 scalar: scalar ('X'): could not convert string to float: 'X'
6test 850 scalar: U ('X'): could not convert string to float: 'X'
6test 851 scalar: TypeError
6test 852 scalar: scalar ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 853 .named: Test
6test 854 .named2: Scalar 'Test'
6test 855 .str: 1.0
6test 856 .toStr: 1.0
6test 857 .repr: 1.0
6test 858 .toRepr: Test (1.0)
6test 859 .units: scalar
6test 860 .name: Test
6test 861 ._name: Test
6test 862 .str: 1.0
6test 863 .repr: 1.0
6test 864 delattr: ''
6testing Scalar_(1.0,) (pygeodesy.units, 23.03.09)
6test 865 .classname: Scalar_
6test 866 isinstance: True
6test 867 .name: scalar_
6test 868 .named: scalar_
6test 869 .named2: Scalar_ 'scalar_'
6test 870 .str: 1.0
6test 871 .toStr: 1.0
6test 872 .std_repr: True
6test 873 .repr: 1.0
6test 874 .toRepr: scalar_ (1.0)
6test 875 .units: scalar_
6test 876 scalar_: scalar ('X'): could not convert string to float: 'X'
6test 877 scalar_: U ('X'): could not convert string to float: 'X'
6test 878 scalar_: TypeError
6test 879 scalar_: scalar ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 880 .named: Test
6test 881 .named2: Scalar_ 'Test'
6test 882 .str: 1.0
6test 883 .toStr: 1.0
6test 884 .repr: 1.0
6test 885 .toRepr: Test (1.0)
6test 886 .units: scalar_
6test 887 .name: Test
6test 888 ._name: Test
6test 889 .str: 1.0
6test 890 .repr: 1.0
6test 891 delattr: ''
6testing Float(1.0,) (pygeodesy.units, 23.03.09)
6test 892 .classname: Float
6test 893 isinstance: True
6test 894 .name: float
6test 895 .named: float
6test 896 .named2: Float 'float'
6test 897 .str: 1.0
6test 898 .toStr: 1.0
6test 899 .std_repr: True
6test 900 .repr: 1.0
6test 901 .toRepr: float (1.0)
6test 902 .units: float
6test 903 float: Float ('X'): could not convert string to float: 'X'
6test 904 float: U ('X'): could not convert string to float: 'X'
6test 905 float: TypeError
6test 906 float: Float ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 907 .named: Test
6test 908 .named2: Float 'Test'
6test 909 .str: 1.0
6test 910 .toStr: 1.0
6test 911 .repr: 1.0
6test 912 .toRepr: Test (1.0)
6test 913 .units: float
6test 914 .name: Test
6test 915 ._name: Test
6test 916 .str: 1.0
6test 917 .repr: 1.0
6test 918 delattr: ''
6testing Radius(1.0,) (pygeodesy.units, 23.03.09)
6test 919 .classname: Radius
6test 920 isinstance: True
6test 921 .name: radius
6test 922 .named: radius
6test 923 .named2: Radius 'radius'
6test 924 .str: 1.0
6test 925 .toStr: 1.0
6test 926 .std_repr: True
6test 927 .repr: 1.0
6test 928 .toRepr: radius (1.0)
6test 929 .units: radius
6test 930 radius: radius ('X'): could not convert string to float: 'X'
6test 931 radius: U ('X'): could not convert string to float: 'X'
6test 932 radius: TypeError
6test 933 radius: radius ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 934 .named: Test
6test 935 .named2: Radius 'Test'
6test 936 .str: 1.0
6test 937 .toStr: 1.0
6test 938 .repr: 1.0
6test 939 .toRepr: Test (1.0)
6test 940 .units: radius
6test 941 .name: Test
6test 942 ._name: Test
6test 943 .str: 1.0
6test 944 .repr: 1.0
6test 945 delattr: ''
6testing Band('U',) (pygeodesy.units, 23.03.09)
6test 946 .classname: Band
6test 947 isinstance: True
6test 948 .name: band
6test 949 .named: band
6test 950 .named2: Band 'band'
6test 951 .str: U
6test 952 .toStr: U
6test 953 .std_repr: True
6test 954 .repr: 'U'
6test 955 .toRepr: band ('U')
6test 956 .units: band
6test 957 error: X  FAILED, KNOWN, expected <class 'ValueError'>
6test 958 error: X  FAILED, KNOWN, expected <class 'ValueError'>
6test 959 Error: X  FAILED, KNOWN, expected <class 'TypeError'>
6test 960 .named: Test
6test 961 .named2: Band 'Test'
6test 962 .str: U
6test 963 .toStr: U
6test 964 .repr: 'U'
6test 965 .toRepr: Test ('U')
6test 966 .units: band
6test 967 .name: Test
6test 968 ._name: Test
6test 969 .str: U
6test 970 .repr: 'U'
6test 971 delattr: ''
6testing Str('U',) (pygeodesy.units, 23.03.09)
6test 972 .classname: Str
6test 973 isinstance: True
6test 974 .name: str
6test 975 .named: str
6test 976 .named2: Str 'str'
6test 977 .str: U
6test 978 .toStr: U
6test 979 .std_repr: True
6test 980 .repr: 'U'
6test 981 .toRepr: str ('U')
6test 982 .units: str
6test 983 error: X  FAILED, KNOWN, expected <class 'ValueError'>
6test 984 error: X  FAILED, KNOWN, expected <class 'ValueError'>
6test 985 Error: X  FAILED, KNOWN, expected <class 'TypeError'>
6test 986 .named: Test
6test 987 .named2: Str 'Test'
6test 988 .str: U
6test 989 .toStr: U
6test 990 .repr: 'U'
6test 991 .toRepr: Test ('U')
6test 992 .units: str
6test 993 .name: Test
6test 994 ._name: Test
6test 995 .str: U
6test 996 .repr: 'U'
6test 997 delattr: ''
6testing Bool(True,) (pygeodesy.units, 23.03.09)
6test 998 .classname: Bool
6test 999 isinstance: True
6test 1000 .name: bool
6test 1001 .named: bool
6test 1002 .named2: Bool 'bool'
6test 1003 .str: True
6test 1004 .toStr: True
6test 1005 .std_repr: True
6test 1006 .repr: True
6test 1007 .toRepr: bool (True)
6test 1008 .units: bool
6test 1009 error: True  FAILED, KNOWN, expected <class 'ValueError'>
6test 1010 error: True  FAILED, KNOWN, expected <class 'ValueError'>
6test 1011 Error: True  FAILED, KNOWN, expected <class 'TypeError'>
6test 1012 .named: Test
6test 1013 .named2: Bool 'Test'
6test 1014 .str: True
6test 1015 .toStr: True
6test 1016 .repr: True
6test 1017 .toRepr: Test (True)
6test 1018 .units: bool
6test 1019 .name: Test
6test 1020 ._name: Test
6test 1021 .str: True
6test 1022 .repr: True
6test 1023 delattr: ''
6testing Int(2,) (pygeodesy.units, 23.03.09)
6test 1024 .classname: Int
6test 1025 isinstance: True
6test 1026 .name: int
6test 1027 .named: int
6test 1028 .named2: Int 'int'
6test 1029 .str: 2
6test 1030 .toStr: 2
6test 1031 .std_repr: True
6test 1032 .repr: 2
6test 1033 .toRepr: int (2)
6test 1034 .units: int
6test 1035 int: Int ('X'): invalid literal for int() with base 10: 'X'
6test 1036 int: U ('X'): invalid literal for int() with base 10: 'X'
6test 1037 int: TypeError
6test 1038 int: Int ('X'): invalid literal for int() with base 10: 'X'  FAILED, KNOWN, expected 'X'
6test 1039 .named: Test
6test 1040 .named2: Int 'Test'
6test 1041 .str: 2
6test 1042 .toStr: 2
6test 1043 .repr: 2
6test 1044 .toRepr: Test (2)
6test 1045 .units: int
6test 1046 .name: Test
6test 1047 ._name: Test
6test 1048 .str: 2
6test 1049 .repr: 2
6test 1050 delattr: ''
6testing Int_(2,) (pygeodesy.units, 23.03.09)
6test 1051 .classname: Int_
6test 1052 isinstance: True
6test 1053 .name: int_
6test 1054 .named: int_
6test 1055 .named2: Int_ 'int_'
6test 1056 .str: 2
6test 1057 .toStr: 2
6test 1058 .std_repr: True
6test 1059 .repr: 2
6test 1060 .toRepr: int_ (2)
6test 1061 .units: int_
6test 1062 int_: Int_ ('X'): invalid literal for int() with base 10: 'X'
6test 1063 int_: U ('X'): invalid literal for int() with base 10: 'X'
6test 1064 int_: TypeError
6test 1065 int_: Int_ ('X'): invalid literal for int() with base 10: 'X'  FAILED, KNOWN, expected 'X'
6test 1066 .named: Test
6test 1067 .named2: Int_ 'Test'
6test 1068 .str: 2
6test 1069 .toStr: 2
6test 1070 .repr: 2
6test 1071 .toRepr: Test (2)
6test 1072 .units: int_
6test 1073 .name: Test
6test 1074 ._name: Test
6test 1075 .str: 2
6test 1076 .repr: 2
6test 1077 delattr: ''
6testing Number_(2,) (pygeodesy.units, 23.03.09)
6test 1078 .classname: Number_
6test 1079 isinstance: True
6test 1080 .name: number_
6test 1081 .named: number_
6test 1082 .named2: Number_ 'number_'
6test 1083 .str: 2
6test 1084 .toStr: 2
6test 1085 .std_repr: True
6test 1086 .repr: 2
6test 1087 .toRepr: number_ (2)
6test 1088 .units: number_
6test 1089 number_: number ('X'): invalid literal for int() with base 10: 'X'
6test 1090 number_: U ('X'): invalid literal for int() with base 10: 'X'
6test 1091 number_: TypeError
6test 1092 number_: number ('X'): invalid literal for int() with base 10: 'X'  FAILED, KNOWN, expected 'X'
6test 1093 .named: Test
6test 1094 .named2: Number_ 'Test'
6test 1095 .str: 2
6test 1096 .toStr: 2
6test 1097 .repr: 2
6test 1098 .toRepr: Test (2)
6test 1099 .units: number_
6test 1100 .name: Test
6test 1101 ._name: Test
6test 1102 .str: 2
6test 1103 .repr: 2
6test 1104 delattr: ''
6testing Precision_(2,) (pygeodesy.units, 23.03.09)
6test 1105 .classname: Precision_
6test 1106 isinstance: True
6test 1107 .name: precision_
6test 1108 .named: precision_
6test 1109 .named2: Precision_ 'precision_'
6test 1110 .str: 2
6test 1111 .toStr: 2
6test 1112 .std_repr: True
6test 1113 .repr: 2
6test 1114 .toRepr: precision_ (2)
6test 1115 .units: precision_
6test 1116 precision_: precision ('X'): invalid literal for int() with base 10: 'X'
6test 1117 precision_: U ('X'): invalid literal for int() with base 10: 'X'
6test 1118 precision_: TypeError
6test 1119 precision_: precision ('X'): invalid literal for int() with base 10: 'X'  FAILED, KNOWN, expected 'X'
6test 1120 .named: Test
6test 1121 .named2: Precision_ 'Test'
6test 1122 .str: 2
6test 1123 .toStr: 2
6test 1124 .repr: 2
6test 1125 .toRepr: Test (2)
6test 1126 .units: precision_
6test 1127 .name: Test
6test 1128 ._name: Test
6test 1129 .str: 2
6test 1130 .repr: 2
6test 1131 delattr: ''
6testing Zone(2,) (pygeodesy.units, 23.03.09)
6test 1132 .classname: Zone
6test 1133 isinstance: True
6test 1134 .name: zone
6test 1135 .named: zone
6test 1136 .named2: Zone 'zone'
6test 1137 .str: 2
6test 1138 .toStr: 2
6test 1139 .std_repr: True
6test 1140 .repr: 2
6test 1141 .toRepr: zone (2)
6test 1142 .units: zone
6test 1143 zone: zone ('X'): invalid literal for int() with base 10: 'X'
6test 1144 zone: U ('X'): invalid literal for int() with base 10: 'X'
6test 1145 zone: TypeError
6test 1146 zone: zone ('X'): invalid literal for int() with base 10: 'X'  FAILED, KNOWN, expected 'X'
6test 1147 .named: Test
6test 1148 .named2: Zone 'Test'
6test 1149 .str: 2
6test 1150 .toStr: 2
6test 1151 .repr: 2
6test 1152 .toRepr: Test (2)
6test 1153 .units: zone
6test 1154 .name: Test
6test 1155 ._name: Test
6test 1156 .str: 2
6test 1157 .repr: 2
6test 1158 delattr: ''
6testing Epoch(1901,) (pygeodesy.units, 23.03.09)
6test 1159 .classname: Epoch
6test 1160 isinstance: True
6test 1161 .name: epoch
6test 1162 .named: epoch
6test 1163 .named2: Epoch 'epoch'
6test 1164 .str: 1901
6test 1165 .toStr: 1901
6test 1166 .std_repr: False
6test 1167 .repr: epoch (1901)
6test 1168 .toRepr: epoch (1901)
6test 1169 .units: epoch
6test 1170 epoch: epoch ('X'): could not convert string to float: 'X'
6test 1171 epoch: U ('X'): could not convert string to float: 'X'
6test 1172 epoch: TypeError
6test 1173 epoch: epoch ('X'): could not convert string to float: 'X'  FAILED, KNOWN, expected 'X'
6test 1174 .named: Test
6test 1175 .named2: Epoch 'Test'
6test 1176 .str: 1901
6test 1177 .toStr: 1901
6test 1178 .repr: Test (1901)
6test 1179 .toRepr: Test (1901)
6test 1180 .units: epoch
6test 1181 .name: Test
6test 1182 ._name: Test
6test 1183 .str: 1901
6test 1184 .repr: Test (1901)
6test 1185 delattr: ''
6testing(pygeodesy.units, 23.03.09)
6test 1186 Bearing: 1.0
6test 1187 Bearing_: 0.01745
6test 1188 Lam_: 6.30
6test 1189 Phi_: 6.30
6test 1190 FIx: 1.0  FAILED, KNOWN, expected 1
6test 1191 FIx: 1.5
6test 1192 Dash: -
6test 1193 Dash: -
6test 1194 Dash: '-'
6test 1195 Dash: Dash ('-')
6test 1196 Join_d: c-a-l-l
6test 1197 Join_d: c-a-l-l
6test 1198 Join_d: 'c-a-l-l'
6test 1199 Join_d: Join_d ('c-a-l-l')
651 of 1199 testUnits.py tests (4.3%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 16.479 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testUps.py
6testing testUps.py 22.07.27 (module pygeodesy.ups 22.10.05)
6test 1 Ups: 00 N 448251.0 5411932.0001
6test 2 Ups: 00 N 448252 5411933
6test 3 Ups: 00 N 448251.795 5411932.678
6test 4 Ups: 00Z N 448251.8 5411932.7 n/a n/a
6test 5 Ups2: [Z:00, H:N, E:448252, N:5411933]
6test 6 UtmUps.toLatLon: 43.610051°N, 004.46308°E
6test 7 UtmUps.toLatLon: 43°36′36.18″N, 004°27′47.09″E
6test 8 UtmUps.toMgrs: 60T UP 60176 38249
6test 9 toUps: lat ('43.684097°'): inside UTM range [-79.5, 83.5]
6test 10 UtmUps.toUtm: 60 N 360177 4838249
6test 11 toUpsID1: 00 N 1530125.78 2426773.6 -132.24798917° 0.99647445
6test 12 toUtmUps8ID2: 38 N 467367.68 8100752.13 -57.37878422′ 0.99961302  FAILED, KNOWN, expected 38 N 3320416.75 632668.43 +44.0° 1.01619505
6test 13 toUtmUps8ID2: 00 N 3320416.75 632668.43 +44.0° 1.01619505
6test 14 toUpsID3: 00 S 2222979.47 1797474.9 -132.24786194° 0.99455723
6test 15 Ups.toLatLonID4: 84°17′14.04″N, 132°14′52.76″W
6test 16 Ups.toLatLonID4: 84.287234°N, 132.247989°W
6test 17 Ups.toLatLonID5: 73°00′00.0″N, 044°00′00.0″E
6test 18 Ups.toLatLonID5: 73.0°N, 044.0°E
6test 19 Ups.toLatLonID6: 87°17′14.4″S, 132°14′52.3″E
6test 20 Ups.toLatLonID6: 87.287333°S, 132.247861°E
6test 21 latlon: 84.0°N, 084.0°E
6test 22 toUps: 00 N 2663075 1930308
6test 23 toUps: 00 N 2663075.299562 1930307.977716 +84.0° 0.99673
6test 24 toUps(None): (0, 'N', 2663075.299562, 1930307.977716, 'Z', ...)
6test 25 .scale0: 0.994000
6test 26 rescale0: 0.997261
6test 27 NGA-10.2-1: 00 N 2000000.0 2000000.0 +0.0″ 0.994
6test 28 NGA-10.2-2: 00 N 1998062.320046 2111009.610243 -179.0° 0.994076
6test 29 NGA-10.2-3: 00 N 1777930.731071 2000000.0 -90.0° 0.994303
6test 30 NGA-10.2-4: 00 N 1994185.827038 1666906.254073 -1.0° 0.994682
6test 31 NGA-10.2-5: 00 N 2000000.0 1555731.570643 +0.0″ 0.995212
6test 32 NGA-10.2-6: 00 N 2009694.068153 1444627.207468 +1.0° 0.995895
6test 33 NGA-10.2-7: 00 N 2666626.157825 1988363.997132 +89.0° 0.996730
6test 34 NGA-10.2-8: 46 N 459200.256323 9217519.441609 -2.97767886° 0.997718
6test 35 NGA-10.2-9: 46 N 468930.934996 9105366.008486 -1.98055172° 0.998860
6test 36 NGA-10.2-10: 60 N 534921.971582 8993806.415149 +1.97539632° 1.000156
6test 37 NGA-10.2-11: 01 N 441867.784867 8883084.955948 -2.95450468° 1.001608
6test 38 NGA-10.2-12: 31 N 243900.35203 4432069.056899 -1.92940969° 1.0004075
6test 39 NGA-10.2-13: 01 N 277707.830749 331796.291679 -6.28291137′ 1.00021172
6test 40 NGA-10.2-14: 16 N 166223.907623 221366.16603 -6.28776606′ 1.00097936
6test 41 NGA-10.2-15: 30 N 722561.736479 110597.972524 +2.09515682′ 1.00021322
6test 42 NGA-10.2-16: 31 N 166021.443081 0.0 +0.0″ 1.00098106
6test 43 NGA-10.2-17: 31 S 277438.263521 9889402.027476 +2.09515682′ 1.00021322
6test 44 NGA-10.2-18: 46 S 166223.907623 9778633.83397 +6.28776606′ 1.00097936
6test 45 NGA-10.2-19: 60 S 722292.169251 9668203.708321 -6.28291137′ 1.00021172
6test 46 NGA-10.2-20: 01 S 166831.065275 9557263.747314 +12.56782777′ 1.00097428
6test 47 NGA-10.3-1: -64.9164123332 -135.0
6test 48 NGA-10.3-2: -70.0552944014 -153.4349488229
6test 49 NGA-10.3-3: -72.1263610163 180.0  FAILED, KNOWN, expected -72.1263610163 -180.0
6test 50 NGA-10.3-4: -70.0552944014 153.4349488229
6test 51 NGA-10.3-5: -64.9164123332 135.0
6test 52 NGA-10.3-6: -70.0552944014 -116.5650511771
6test 53 NGA-10.3-7: -77.3120791908 -135.0
6test 54 NGA-10.3-8: -81.0106632645 180.0
6test 55 NGA-10.3-9: -77.3120791908 135.0
6test 56 NGA-10.3-10: -70.0552944014 116.5650511771
6test 57 NGA-10.3-11: -72.1263610163 -90.0
6test 58 NGA-10.3-12: -81.0106632645 -90.0
6test 59 NGA-10.3-13: -90.0 0.0
6test 60 NGA-10.3-14: -81.0106632645 90.0
6test 61 NGA-10.3-15: -72.1263610163 90.0
6test 62 NGA-10.3-16: -70.0552944014 -63.4349488229
6test 63 NGA-10.3-17: -77.3120791908 -45.0
6test 64 NGA-10.3-18: -81.0106632645 0.0
6test 65 NGA-10.3-19: -77.3120791908 45.0
6test 66 NGA-10.3-20: -70.0552944014 63.4349488229
6test 67 NGA-10.3-21: -64.9164123332 -45.0
6test 68 NGA-10.3-22: -70.0552944014 -26.5650511771
6test 69 NGA-10.3-23: -72.1263610163 0.0
6test 70 NGA-10.3-24: -70.0552944014 26.5650511771
6test 71 NGA-10.3-25: -64.9164123332 45.0
6test 72 toUps: 00 N 2000000 1288738
6test 73 toUtm: 02 N 611555 10703765
6test 74 toUtm: [Z:00Z, H:N, E:2000000, N:2000000]
62 of 74 testUps.py tests (2.7%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 12.033 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testUtily.py
6testing testUtily.py 22.09.15 (module pygeodesy.utily 22.10.23)
6test 1 degrees90(PI_2): 90.0
6test 2 degrees90(PI): -180.0
6test 3 degrees90(PI2): 0.0
6test 4 degrees90(-PI_2): -90.0
6test 5 degrees90(-PI): -180.0
6test 6 degrees90(-PI2): 0.0
6test 7 degrees180(PI_2): 90.0
6test 8 degrees180(PI): 180.0
6test 9 degrees180(PI2): 0.0
6test 10 degrees180(-PI_2): -90.0
6test 11 degrees180(-PI): -180.0
6test 12 degrees180(-PI2): 0.0
6test 13 degrees360(PI_2): 90.0
6test 14 degrees360(PI): 180.0
6test 15 degrees360(PI2): 0.0
6test 16 degrees360(-PI_2): 270.0
6test 17 degrees360(-PI): 180.0
6test 18 degrees360(-PI2): 0.0
6test 19 degrees2grades(90): 100.0
6test 20 degrees2grades(180): 200.0
6test 21 degrees2grades(360): 400.0
6test 22 degrees2grades(-90): -100.0
6test 23 degrees2grades(-180): -200.0
6test 24 degrees2grades(-360): -400.0
6test 25 grades400(PI_2): 100.0
6test 26 grades400(PI): 200.0
6test 27 grades400(PI2): 0.0
6test 28 grades400(-PI_2): 300.0
6test 29 grades400(-PI): 200.0
6test 30 grades400(-PI2): 0.0
6test 31 grades2degrees(100): 90.0
6test 32 grades2degrees(200): 180.0
6test 33 grades2degrees(400): 360.0
6test 34 grades2degrees(-100): -90.0
6test 35 grades2degrees(-200): -180.0
6test 36 grades2degrees(-400): -360.0
6test 37 grades2radians(100): 1.5707963267948966
6test 38 grades2radians(200): 3.141592653589793
6test 39 grades2radians(400): 6.283185307179586
6test 40 grades2radians(-100): -1.5707963267948966
6test 41 grades2radians(-200): -3.141592653589793
6test 42 grades2radians(-400): -6.283185307179586
6test 43 radiansPI_2(90): 1.5707963267948966
6test 44 radiansPI_2(180): -3.141592653589793
6test 45 radiansPI_2(360): 0.0
6test 46 radiansPI_2(-90): -1.5707963267948966
6test 47 radiansPI_2(-180): -3.141592653589793
6test 48 radiansPI_2(-360): 0.0
6test 49 radiansPI(90): 1.5707963267948966
6test 50 radiansPI(180): 3.141592653589793
6test 51 radiansPI(360): 0.0
6test 52 radiansPI(-90): -1.5707963267948966
6test 53 radiansPI(-180): -3.141592653589793
6test 54 radiansPI(-360): 0.0
6test 55 radiansPI2(90): 1.5707963267948966
6test 56 radiansPI2(180): 3.141592653589793
6test 57 radiansPI2(360): 0.0
6test 58 radiansPI2(-90): 4.71238898038469
6test 59 radiansPI2(-180): 3.141592653589793
6test 60 radiansPI2(-360): 0.0
6test 61 wrap90(90): 90.0
6test 62 wrap90(180): -180.0
6test 63 wrap90(360): 0.0
6test 64 wrap90(-90): -90.0
6test 65 wrap90(-180): -180.0
6test 66 wrap90(-360): 0.0
6test 67 wrap180(90): 90.0
6test 68 wrap180(180): 180.0
6test 69 wrap180(360): 0.0
6test 70 wrap180(-90): -90.0
6test 71 wrap180(-180): -180.0
6test 72 wrap180(-360): 0.0
6test 73 wrap360(90): 90.0
6test 74 wrap360(180): 180.0
6test 75 wrap360(360): 0.0
6test 76 wrap360(-90): 270.0
6test 77 wrap360(-180): 180.0
6test 78 wrap360(-360): 0.0
6test 79 wrapPI_2(PI_2): 1.5707963267948966
6test 80 wrapPI_2(PI): -3.141592653589793
6test 81 wrapPI_2(PI2): 0.0
6test 82 wrapPI_2(-PI_2): -1.5707963267948966
6test 83 wrapPI_2(-PI): -3.141592653589793
6test 84 wrapPI_2(-PI2): 0.0
6test 85 wrapPI(PI_2): 1.5707963267948966
6test 86 wrapPI(PI): 3.141592653589793
6test 87 wrapPI(PI2): 0.0
6test 88 wrapPI(-PI_2): -1.5707963267948966
6test 89 wrapPI(-PI): -3.141592653589793
6test 90 wrapPI(-PI2): 0.0
6test 91 wrapPI2(PI_2): 1.5707963267948966
6test 92 wrapPI2(PI): 3.141592653589793
6test 93 wrapPI2(PI2): 0.0
6test 94 wrapPI2(-PI_2): 4.71238898038469
6test 95 wrapPI2(-PI): 3.141592653589793
6test 96 wrapPI2(-PI2): 0.0
6test 97 unroll180: -160.0, -250.0
6test 98 unroll180: 200.0, 110.0
6test 99 unroll180: -160.0, -250.0
6test 100 unroll180: 920.0, 830.0
6test 101 unroll180: -160.0, -270.0
6test 102 unroll180: 200.0, 90.0
6test 103 unroll180: -160.0, -990.0
6test 104 unroll180: 920.0, 90.0
6test 105 cot_ : -0.345499391106
6test 106 cotd_: -0.345499391106
6test 107 sincos2: 3.885780586188048e-16  FAILED, KNOWN, expected 1.7763568394002505e-15
6test 108 sincos2d: 9.992007221626409e-16  FAILED, KNOWN, expected 1.7763568394002505e-15
6test 109 iFt2m: 187441
6test 110 iFt2m: 757050
6test 111 sFt2m: 187441
6test 112 sFt2m: 757050
6test 113 m2iFt: 614963.91
6test 114 m2iFt: 2483759.84
6test 115 m2sFt: 614962.68
6test 116 m2sFt: 2483754.88

6test 117 acre2ha: 0.404686
6test 118 acre2m2: 4046.856422
6test 119 chain2m: 20.116800
6test 120 fathom2m: 1.828800
6test 121 furlong2m: 201.168000
6test 122 toise2m: 1.949044
6test 123 yard2m: 0.914400
6test 124 m2chain: 0.049710
6test 125 m2fathom: 0.546807
6test 126 m2furlong: 0.004971
6test 127 m2toise: 0.513072
6test 128 m2yard: 1.093613
6test 129 degrees2m: 10007557.1761
6test 130 degrees2m: 8666798.7443
6test 131 m2degrees: 90.0
6test 132 degrees2m: 20015114.3522
6test 133 degrees2m: 19987684.3336
6test 134 m2degrees: 180.0

6test 135 m2degrees2m(45, lat=0): 45.00
6test 136 m2degrees2m(45, lat=7): 45.00
6test 137 m2degrees2m(45, lat=14): 45.00
6test 138 m2degrees2m(45, lat=21): 45.00
6test 139 m2degrees2m(45, lat=28): 45.00
6test 140 m2degrees2m(45, lat=35): 45.00
6test 141 m2degrees2m(45, lat=42): 45.00
6test 142 m2degrees2m(45, lat=49): 45.00
6test 143 m2degrees2m(45, lat=56): 45.00
6test 144 m2degrees2m(45, lat=63): 45.00
6test 145 m2degrees2m(45, lat=70): 45.00
6test 146 m2degrees2m(45, lat=77): 45.00
6test 147 m2degrees2m(45, lat=84): 45.00
6test 148 isPoints2: False
6test 149 tan_2_semi: PI[1] edge (3.141592): semi-circular
6test 150 sincostan3(+0.0000): (0.0, 1.0, 0.0)
6test 151 sincostan3(-0.0000): (0.0, 1.0, 0.0)
6test 152 sincostan3(+1.5708): (1.0, 0.0, inf)
6test 153 sincostan3(-1.5708): (-1.0, 0.0, -inf)
6test 154 sincostan3(+3.1416): (0.0, -1.0, -0.0)
6test 155 sincostan3(-3.1416): (0.0, -1.0, -0.0)  FAILED, KNOWN, expected (-0.0, -1.0, 0.0)
6test 156 sincostan3(+4.7124): (-1.0, 0.0, -inf)  FAILED, KNOWN, expected (-1.0, -0.0, inf)
6test 157 sincostan3(-1.5708): (-1.0, 0.0, -inf)
6test 158 sincostan3(+6.2832): (0.0, 1.0, 0.0)  FAILED, KNOWN, expected (-0.0, 1.0, -0.0)
6test 159 sincostan3(-6.2832): (0.0, 1.0, 0.0)
65 of 159 testUtily.py tests (3.1%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 6.489 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testUtm.py
6testing testUtm.py 22.07.25 (module pygeodesy.utm 22.10.07)
6test 1 Utm1: 03 N 448251.0 5411932.0001
6test 2 Utm2: 31 N 448252 5411933
6test 3 Utm2: 31 N 448251.795 5411932.678
6test 4 Utm2: 31 N 448251.8 5411932.7 n/a n/a
6test 5 Utm.toLatLon1: 48.8582°N, 002.2945°E
6test 6 Utm.toLatLon1: 48°51′29.52″N, 002°17′40.2″E
6test 7 toUtm1: 31 N 448252 5411933
6test 8 toUtm1: 31 N 448251.795 5411932.678
6test 9 toUtm2: [Z:31U, H:N, E:448252, N:5411933, C:-31.87873265′, S:0.9996329]
6test 10 toUtm4: 48 N 377302 1483035
6test 11 toUtm5: 48P N 377302.354183 1483034.777084 -15.77480856′ 0.99978623
6test 12 toUtm6: 13 S 622698 8516965
6test 13 toUtm7: 13L S 622697.645817 8516965.222916 -15.77480856′ 0.99978623
6test 14 toEtm: 13 S 622698 8516965
6test 15 toMgrs1: 13L FF 22697 16965
6test 16 toMgrs2: 31U DQ 48251 11932
6test 17 toUtm14: 14 S -27436 8512042
6test 18 Utm8: 18 N 516620 4574500
6test 19 Utm8.toLatLon: 41.321801°N, 074.801413°W
6test 20 Utm8.toLatLon: 41.321801N, 074.801413W
6test 21 toUtm(61.44°N, 025.4°E): 35V N 414668 6812845
6test 22 toUtm(47.04°S, 073.48°W): 18G S 615472 4789270
6test 23 toUtm(40.4°N, 074.7°W): 18T N 525458 4472198
6test 24 toUtm(44.5°N, 088.5°W): 16T N 380753 4928503
6test 25 toUtm(50.8694°N, 115.6508°W): 11U N 594937 5636169
6test 26 toUtm(00.0°N, 000.0°E): 31N N 166021 0
6test 27 toUtm(00.13°N, 000.2324°W): 30N N 808084 14386
6test 28 toUtm(45.6456°S, 023.3545°E): 34G S 683474 4942631
6test 29 toUtm(12.765°S, 033.8765°W): 25L S 404859 8588691
6test 30 toUtm(80.5434°S, 170.654°W): lat ('-80.5434°'): outside UTM range [-80, 84)
6test 31 toUtm(90.0°N, 177.0°E): lat ('90.0°'): outside UTM range [-80, 84)
6test 32 toUtm(90.0°S, 177.0°W): lat ('-90.0°'): outside UTM range [-80, 84)
6test 33 toUtm(90.0°N, 003.0°E): lat ('90.0°'): outside UTM range [-80, 84)
6test 34 toUtm(23.4578°N, 135.4545°W): 08Q N 453580 2594273
6test 35 toUtm(77.345°N, 156.9876°E): 57X N 450794 8586116
6test 36 toUtm(89.3454°S, 048.9306°W): lat ('-89.3454°'): outside UTM range [-80, 84)
6test 37 toUtm(60.0°N, 001.0°E): 31V N 388456 6653097
6test 38 toUtm(60.0°N, 003.0°E): 32V N 165640 6666594
6test 39 toUtm(60.0°N, 006.0°E): 32V N 332705 6655205
6test 40 toUtm(60.0°N, 009.0°E): 32V N 500000 6651411
6test 41 toUtm(60.0°N, 012.0°E): 33V N 332705 6655205
6test 42 toUtm(76.0°N, 001.0°E): 31X N 446000 8436100
6test 43 toUtm(76.0°N, 007.0°E): 31X N 607943 8438843
6test 44 toUtm(76.0°N, 013.0°E): 33X N 446000 8436100
6test 45 toUtm(76.0°N, 019.0°E): 33X N 607943 8438843
6test 46 toUtm(76.0°N, 025.0°E): 35X N 446000 8436100
6test 47 toUtm(76.0°N, 031.0°E): 35X N 607943 8438843
6test 48 toUtm(76.0°N, 037.0°E): 37X N 446000 8436100
6test 49 toUtm(50.77535°N, 006.08389°E): 32U N 294409 5628898
6test 50 toUtm(40.71435°N, 074.00597°W): 18T N 583960 4507523
6test 51 toUtm(41.28646°S, 174.77624°E): 60G S 313784 5427057
6test 52 toUtm(33.92487°S, 018.42406°E): 34H S 261878 6243186
6test 53 toUtm(32.89018°S, 068.84405°W): 19H S 514586 6360877
6test 54 toUtm(64.83778°N, 147.71639°W): 06W N 466013 7190568
6test 55 toUtm(56.7968°N, 005.00601°W): 30V N 377486 6296562
6test 56 toUtm(84.0°N, 005.00601°W): lat ('84.0°'): outside UTM range [-80, 84)
6test 57 toUtm('Mt Assiniboine'): [Z:11U, H:N, E:594934, N:5636174]
6test 58 Utm9: 55 S 321441 5810117
6test 59 Utm9.toLatLon(eps=2.2204e-12): -37.83891644, 144.97077387
6test 60 Utm9.toLatLon(eps=2.2204e-13): -37.83891644, 144.97077387
6test 61 Utm9.toLatLon(eps=2.2204e-14): -37.83891644, 144.97077387
6test 62 Utm9.toLatLon(eps=2.2204e-15): -37.83891644, 144.97077387
6test 63 Utm9.toLatLon(eps=2.2204e-16): -37.83891644, 144.97077387
6test 64 Utm9.toLatLon(eps=2.2204e-17): -37.83891644, 144.97077387
6test 65 Utm9.toLatLon(eps=2.2204e-18): -37.83891644, 144.97077387
6test 66 Utm9.toLatLon(eps=2.2204e-19): -37.83891644, 144.97077387
6test 67 Utm9.toLatLon(eps=2.2204e-20): -37.83891644, 144.97077387
6test 68 Utm10: 31 N 400000 5000000
6test 69 Utm10.toLatLon(eps=2.2204e-12): 45.14639288, 1.72796704
6test 70 Utm10.toLatLon(eps=2.2204e-13): 45.14639288, 1.72796704
6test 71 Utm10.toLatLon(eps=2.2204e-14): 45.14639288, 1.72796704
6test 72 Utm10.toLatLon(eps=2.2204e-15): 45.14639288, 1.72796704
6test 73 Utm10.toLatLon(eps=2.2204e-16): 45.14639288, 1.72796704
6test 74 Utm10.toLatLon(eps=2.2204e-17): 45.14639288, 1.72796704
6test 75 Utm10.toLatLon(eps=2.2204e-18): 45.14639288, 1.72796704
6test 76 Utm10.toLatLon(eps=2.2204e-19): 45.14639288, 1.72796704
6test 77 Utm10.toLatLon(eps=2.2204e-20): 45.14639288, 1.72796704
6test 78 Utm111: 37 N 1399093 8314607
6test 79 Utm111.toLatLon(eps=2.2204e-12): 70.54298527, 40.28205459
6test 80 Utm111.toLatLon(eps=2.2204e-13): 70.54298527, 40.28205459
6test 81 Utm111.toLatLon(eps=2.2204e-14): 70.54298527, 40.28205459
6test 82 Utm111.toLatLon(eps=2.2204e-15): 70.54298527, 40.28205459
6test 83 Utm111.toLatLon(eps=2.2204e-16): 70.54298527, 40.28205459
6test 84 Utm111.toLatLon(eps=2.2204e-17): 70.54298527, 40.28205459
6test 85 Utm111.toLatLon(eps=2.2204e-18): 70.54298527, 40.28205459
6test 86 Utm111.toLatLon(eps=2.2204e-19): 70.54298527, 40.28205459
6test 87 Utm111.toLatLon(eps=2.2204e-20): 70.54298527, 40.28205459
6test 88 CV#86: [Z:01, H:N, E:100000, N:0, C:n/a, S:n/a]
6test 89 CV#86: 00.0°N, 179.407673°E
6test 90 CV#86: [Z:60, H:N, E:767993, N:0, C:+0.0″, S:1.000489]  FAILED, KNOWN, expected [Z:01, H:N, E:100000, N:0, ...]
6test 91 #63: 32 N 280000 5653000
6test 92 toMgrs: 32U KB 80000 53000
6test 93 toLatLon: (50.986484, 5.865326, Datum(name='WGS84', ellipsoid=Ellipsoids.WGS84, transform=Transforms.WGS84), -2.436605, 1.000194)
6test 94 band: U
6test 95 band: band ('?'): not 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W' or 'X'
6test 96 datum: Datum(name='_Sphere', ellipsoid=Ellipsoids.Sphere, transform=Transforms.Identity)  FAILED, KNOWN, expected same
6test 97 repr: [Z:32U, H:N, E:280000, N:5653000]
6test 98 E.N.: (280000.0, 5653000.0)
62 of 98 testUtm.py tests (2.0%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 12.336 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testUtmTMcoords.py
6testing testUtmTMcoords.py 22.10.04 (module pygeodesy.utm 22.10.07)
6test 1 line 1 toUtm8.easting: 1548706.791619
6test 2 line 1 toUtm8.northing: 8451449.198772
6test 3 line 1 toUtm8.gamma: 43.922790
6test 4 line 1 toUtm8.scale: 1.029060
6test 5 line 1 toUtm8.lat: 70.579277
6test 6 line 1 toUtm8.lon: 45.599420
6test 7 line 2 toUtm8.easting: 2624150.740929
6test 8 line 2 toUtm8.northing: 1204434.041605
6test 9 line 2 toUtm8.gamma: 4.292619
6test 10 line 2 toUtm8.scale: 1.086051
6test 11 line 2 toUtm8.lat: 10.018894
6test 12 line 2 toUtm8.lon: 23.313324
6test 13 line 3 toUtm8.easting: 9855841.232935
6test 14 line 3 toUtm8.northing: 6145496.115157  FAILED, KNOWN, expected 6145496.115155
6test 15 line 3 toUtm8.gamma: 53.348315
6test 16 line 3 toUtm8.scale: 2.445098
6test 17 line 3 toUtm8.lat: 19.479896
6test 18 line 3 toUtm8.lon: 75.662049
6test 19 line 4 toUtm8.easting: 3206390.691996
6test 20 line 4 toUtm8.northing: 2650745.400406
6test 21 line 4 toUtm8.gamma: 11.666950
6test 22 line 4 toUtm8.scale: 1.129359
6test 23 line 4 toUtm8.lat: 21.072465
6test 24 line 4 toUtm8.lon: 29.828684
6test 25 line 5 toUtm8.easting: 4328154.083501
6test 26 line 5 toUtm8.northing: 749647.623690
6test 27 line 5 toUtm8.gamma: 4.024317
6test 28 line 5 toUtm8.scale: 1.240829
6test 29 line 5 toUtm8.lat: 5.458957
6test 30 line 5 toUtm8.lon: 36.385237
6test 31 line 6 toUtm8.easting: 847598.266514
6test 32 line 6 toUtm8.northing: 7947180.962440
6test 33 line 6 toUtm8.gamma: 21.639091
6test 34 line 6 toUtm8.scale: 1.008399
6test 35 line 6 toUtm8.lat: 70.175454
6test 36 line 6 toUtm8.lon: 22.865350
6test 37 line 7 toUtm8.easting: 2727657.337974
6test 38 line 7 toUtm8.northing: 8283916.696410
6test 39 line 7 toUtm8.gamma: 55.690909
6test 40 line 7 toUtm8.scale: 1.091942
6test 41 line 7 toUtm8.lat: 61.965605
6test 42 line 7 toUtm8.lon: 58.931371
6test 43 line 8 toUtm8.easting: 2331001.751890
6test 44 line 8 toUtm8.northing: 1313608.224751
6test 45 line 8 toUtm8.gamma: 4.214690
6test 46 line 8 toUtm8.scale: 1.067599
6test 47 line 8 toUtm8.lat: 11.116050
6test 48 line 8 toUtm8.lon: 20.901069
6test 49 line 9 toUtm8.easting: 6035557.239480
6test 50 line 9 toUtm8.northing: 5791770.791879
6test 51 line 9 toUtm8.gamma: 43.698170
6test 52 line 9 toUtm8.scale: 1.481260
6test 53 line 9 toUtm8.lat: 32.210543
6test 54 line 9 toUtm8.lon: 60.705849
6test 55 line 10 toUtm8.easting: 1064553.125852
6test 56 line 10 toUtm8.northing: 9417273.737208
6test 57 line 10 toUtm8.gamma: 61.100380
6test 58 line 10 toUtm8.scale: 1.013475
6test 59 line 10 toUtm8.lat: 79.187451
6test 60 line 10 toUtm8.lon: 61.532382
6test 61 line 11 toUtm8.easting: 1400137.116164
6test 62 line 11 toUtm8.northing: 9616907.017686
6test 63 line 11 toUtm8.gamma: 74.527087
6test 64 line 11 toUtm8.scale: 1.023640
6test 65 line 11 toUtm8.lat: 77.103759
6test 66 line 11 toUtm8.lon: 74.899105
6test skipped (1): line 12 toUtm8.'21.889514024862 80.019885892785 9860691.0166261508479 7433039.1433282732643 65.357693372142649007 2.43897318400097845293'
6test skipped (2): line 13 toUtm8.'30.53629567699 82.186177919416 8076501.8336948099169 8561614.1747819103782 75.073393190238557702 1.90620203595203984732'
6test 67 line 14 toUtm8.easting: 3335099.866623
6test 68 line 14 toUtm8.northing: 6740519.084015
6test 69 line 14 toUtm8.gamma: 40.611821
6test 70 line 14 toUtm8.scale: 1.139021
6test 71 line 14 toUtm8.lat: 49.990485
6test 72 line 14 toUtm8.lon: 48.203179
6test skipped (3): line 15 toUtm8.'14.486311853451 80.905136710227 12051574.9284996192629 6587213.0519512810474 59.033236797073779959 3.3574686117030164354'
6test 73 line 16 toUtm8.easting: 5387578.735298
6test 74 line 16 toUtm8.northing: 4111216.907168
6test 75 line 16 toUtm8.gamma: 27.574337
6test 76 line 16 toUtm8.scale: 1.379357
6test 77 line 16 toUtm8.lat: 25.936824
6test 78 line 16 toUtm8.lon: 49.913598
6test 79 line 17 toUtm8.easting: 2622214.380233
6test 80 line 17 toUtm8.northing: 8678923.984567
6test 81 line 17 toUtm8.gamma: 61.697275
6test 82 line 17 toUtm8.scale: 1.084810
6test 83 line 17 toUtm8.lat: 64.402196
6test 84 line 17 toUtm8.lon: 64.091395
6test skipped (4): line 18 toUtm8.'48.451353594584 84.856197560189 5068474.169632778036 9492066.9937094951003 83.156739839119105102 1.3299901985118008373'
6test 85 line 19 toUtm8.easting: 738062.047779
6test 86 line 19 toUtm8.northing: 3031007.074116
6test 87 line 19 toUtm8.gamma: 3.416802
6test 88 line 19 toUtm8.scale: 1.006332
6test 89 line 19 toUtm8.lat: 27.203895
6test 90 line 19 toUtm8.lon: 7.440229
6test 91 line 20 toUtm8.easting: 1944413.834565
6test 92 line 20 toUtm8.northing: 9613299.224493
6test 93 line 20 toUtm8.gamma: 78.462831
6test 94 line 20 toUtm8.scale: 1.046134
6test 95 line 20 toUtm8.lat: 72.509000
6test 96 line 20 toUtm8.lon: 78.982283
6test 97 line 21 toUtm8.easting: 2114521.418406
6test 98 line 21 toUtm8.northing: 4954077.440098
6test 99 line 21 toUtm8.gamma: 17.571878
6test 100 line 21 toUtm8.scale: 1.055093
6test 101 line 21 toUtm8.lat: 41.824954
6test 102 line 21 toUtm8.lon: 25.392744
6test 103 line 22 toUtm8.easting: 620365.905090
6test 104 line 22 toUtm8.northing: 4755542.026562
6test 105 line 22 toUtm8.gamma: 5.152022
6test 106 line 22 toUtm8.scale: 1.004338
6test 107 line 22 toUtm8.lat: 42.701376
6test 108 line 22 toUtm8.lon: 7.572738
6test 109 line 23 toUtm8.easting: 263004.770989
6test 110 line 23 toUtm8.northing: 4493669.762451
6test 111 line 23 toUtm8.gamma: 2.020523
6test 112 line 23 toUtm8.scale: 1.000452
6test 113 line 23 toUtm8.lat: 40.552052
6test 114 line 23 toUtm8.lon: 3.106056
6test 115 line 24 toUtm8.easting: 3217221.739462
6test 116 line 24 toUtm8.northing: 437776.119161
6test 117 line 24 toUtm8.gamma: 1.848169
6test 118 line 24 toUtm8.scale: 1.130558
6test 119 line 24 toUtm8.lat: 3.501242
6test 120 line 24 toUtm8.lon: 27.806507
6test skipped (5): line 25 toUtm8.'10.148714782203 85.373767569431 14661142.4449607145297 7476100.8241849819567 68.376669038799719822 4.89664968310721668858'
6test 121 line 26 toUtm8.easting: 967777.158554
6test 122 line 26 toUtm8.northing: 6615684.266592
6test 123 line 26 toUtm8.gamma: 14.410044
6test 124 line 26 toUtm8.scale: 1.011100
6test 125 line 26 toUtm8.lat: 58.582623
6test 126 line 26 toUtm8.lon: 16.755558
6test 127 line 27 toUtm8.easting: 7558840.728461
6test 128 line 27 toUtm8.northing: 4144728.130764
6test 129 line 27 toUtm8.gamma: 32.557264
6test 130 line 27 toUtm8.scale: 1.791490
6test 131 line 27 toUtm8.lat: 19.793004
6test 132 line 27 toUtm8.lon: 61.746763
6test 133 line 28 toUtm8.easting: 1056008.314161
6test 134 line 28 toUtm8.northing: 9290799.692669
6test 135 line 28 toUtm8.gamma: 55.843278
6test 136 line 28 toUtm8.scale: 1.013253
6test 137 line 28 toUtm8.lat: 78.666776
6test 138 line 28 toUtm8.lon: 56.365355
6test 139 line 29 toUtm8.easting: 1943965.134687
6test 140 line 29 toUtm8.northing: 1389972.228690
6test 141 line 29 toUtm8.gamma: 3.774869
6test 142 line 29 toUtm8.scale: 1.046724
6test 143 line 29 toUtm8.lat: 11.998788
6test 144 line 29 toUtm8.lon: 17.597873
6test 145 line 30 toUtm8.easting: 5803077.072902
6test 146 line 30 toUtm8.northing: 5649957.943659
6test 147 line 30 toUtm8.gamma: 41.717943
6test 148 line 30 toUtm8.scale: 1.442572
6test 149 line 30 toUtm8.lat: 32.540378
6test 150 line 30 toUtm8.lon: 58.764613
6test 151 line 31 toUtm8.easting: 2928716.986009
6test 152 line 31 toUtm8.northing: 5731835.058317
6test 153 line 31 toUtm8.gamma: 28.538550
6test 154 line 31 toUtm8.scale: 1.106780
6test 155 line 31 toUtm8.lat: 45.160356
6test 156 line 31 toUtm8.lon: 37.465285
6test 157 line 32 toUtm8.easting: 326141.975756
6test 158 line 32 toUtm8.northing: 8881325.164543
6test 159 line 32 toUtm8.gamma: 16.111415
6test 160 line 32 toUtm8.scale: 1.000900
6test 161 line 32 toUtm8.lat: 79.584190
6test 162 line 32 toUtm8.lon: 16.367006
6test 163 line 33 toUtm8.easting: 3933015.267450
6test 164 line 33 toUtm8.northing: 7932373.909512
6test 165 line 33 toUtm8.gamma: 58.577424
6test 166 line 33 toUtm8.scale: 1.194811
6test 167 line 33 toUtm8.lat: 52.470664
6test 168 line 33 toUtm8.lon: 64.125580
6test 169 line 34 toUtm8.easting: 8598926.983213
6test 170 line 34 toUtm8.northing: 6214135.167503
6test 171 line 34 toUtm8.gamma: 52.612878
6test 172 line 34 toUtm8.scale: 2.051367
6test 173 line 34 toUtm8.lat: 23.702673
6test 174 line 34 toUtm8.lon: 72.630363
6test 175 line 35 toUtm8.easting: 6620553.333772
6test 176 line 35 toUtm8.northing: 6540527.122948
6test 177 line 35 toUtm8.gamma: 52.350140
6test 178 line 35 toUtm8.scale: 1.586614
6test 179 line 35 toUtm8.lat: 32.603520
6test 180 line 35 toUtm8.lon: 67.280123
6test 181 line 36 toUtm8.easting: 1515136.758292
6test 182 line 36 toUtm8.northing: 3858996.087537
6test 183 line 36 toUtm8.gamma: 9.225127
6test 184 line 36 toUtm8.scale: 1.028029
6test 185 line 36 toUtm8.lat: 33.776224
6test 186 line 36 toUtm8.lon: 16.280993
6test 187 line 37 toUtm8.easting: 479854.373445
6test 188 line 37 toUtm8.northing: 8980501.389896
6test 189 line 37 toUtm8.gamma: 25.021222
6test 190 line 37 toUtm8.scale: 1.002415
6test 191 line 37 toUtm8.lat: 79.932747
6test 192 line 37 toUtm8.lon: 25.363622
6test 193 line 38 toUtm8.easting: 5243446.564940
6test 194 line 38 toUtm8.northing: 140657.213960
6test 195 line 38 toUtm8.gamma: 0.862817
6test 196 line 38 toUtm8.scale: 1.360358
6test 197 line 38 toUtm8.lat: 0.935056
6test 198 line 38 toUtm8.lon: 42.538824
6test skipped (6): line 39 toUtm8.'13.490862440668 83.178380075606 12806457.9232176809509 7170118.6846750266674 64.708921319446620085 3.7405880916836789809'
6test 199 line 40 toUtm8.easting: 1202993.459158
6test 200 line 40 toUtm8.northing: 5557316.053599
6test 201 line 40 toUtm8.gamma: 12.579061
6test 202 line 40 toUtm8.scale: 1.017426
6test 203 line 40 toUtm8.lat: 48.979057
6test 204 line 40 toUtm8.lon: 16.474542
6test 205 line 41 toUtm8.easting: 1729088.710196
6test 206 line 41 toUtm8.northing: 7770874.289954
6test 207 line 41 toUtm8.gamma: 36.021783
6test 208 line 41 toUtm8.scale: 1.036397
6test 209 line 41 toUtm8.lat: 65.036016
6test 210 line 41 toUtm8.lon: 38.729091
6test 211 line 42 toUtm8.easting: 2437301.517425
6test 212 line 42 toUtm8.northing: 5539327.748318
6test 213 line 42 toUtm8.gamma: 23.461879
6test 214 line 42 toUtm8.scale: 1.073459
6test 215 line 42 toUtm8.lat: 45.510091
6test 216 line 42 toUtm8.lon: 31.303729
6test 217 line 43 toUtm8.easting: 3647186.135066
6test 218 line 43 toUtm8.northing: 2086412.330983
6test 219 line 43 toUtm8.gamma: 10.023991
6test 220 line 43 toUtm8.scale: 1.168707
6test 221 line 43 toUtm8.lat: 16.058010
6test 222 line 43 toUtm8.lon: 32.520026
6test 223 line 44 toUtm8.easting: 1818497.243556
6test 224 line 44 toUtm8.northing: 4275471.745057
6test 225 line 44 toUtm8.gamma: 12.499656
6test 226 line 44 toUtm8.scale: 1.040604
6test 227 line 44 toUtm8.lat: 36.845200
6test 228 line 44 toUtm8.lon: 20.282283
6test 229 line 45 toUtm8.easting: 3751304.113783
6test 230 line 45 toUtm8.northing: 5130454.001592
6test 231 line 45 toUtm8.gamma: 28.959707
6test 232 line 45 toUtm8.scale: 1.177681
6test 233 line 45 toUtm8.lat: 37.865481
6test 234 line 45 toUtm8.lon: 41.990402
6test 235 line 46 toUtm8.easting: 2616733.138544
6test 236 line 46 toUtm8.northing: 394644.463815
6test 237 line 46 toUtm8.gamma: 1.390425
6test 238 line 46 toUtm8.scale: 1.085595
6test 239 line 46 toUtm8.lat: 3.287272
6test 240 line 46 toUtm8.lon: 22.917604
6test 241 line 47 toUtm8.easting: 1756506.573942
6test 242 line 47 toUtm8.northing: 5570393.986394
6test 243 line 47 toUtm8.gamma: 17.897894
6test 244 line 47 toUtm8.scale: 1.037732
6test 245 line 47 toUtm8.lat: 47.813686
6test 246 line 47 toUtm8.lon: 23.545092
6test 247 line 48 toUtm8.easting: 8752461.894711
6test 248 line 48 toUtm8.northing: 6087728.152284
6test 249 line 48 toUtm8.gamma: 51.628465
6test 250 line 48 toUtm8.scale: 2.095465
6test 251 line 48 toUtm8.lat: 22.836853
6test 252 line 48 toUtm8.lon: 72.604385
6test 253 line 49 toUtm8.easting: 1309272.216432
6test 254 line 49 toUtm8.northing: 59520.028899
6test 255 line 49 toUtm8.gamma: 0.109069
6test 256 line 49 toUtm8.scale: 1.020897
6test 257 line 49 toUtm8.lat: 0.527262
6test 258 line 49 toUtm8.lon: 11.684209
6test 259 line 50 toUtm8.easting: 328652.277129
6test 260 line 50 toUtm8.northing: 2233043.958874
6test 261 line 50 toUtm8.gamma: 1.084863
6test 262 line 50 toUtm8.scale: 1.000935
6test 263 line 50 toUtm8.lat: 20.166742
6test 264 line 50 toUtm8.lon: 3.143948
6test skipped (7): line 51 toUtm8.'28.604629015528 85.988721094779 8637959.7164470998207 9190635.1560309800028 81.802562643198123218 2.05432863342852874819'
6test skipped (8): line 52 toUtm8.'28.984047991106 85.833447775172 8548521.4551470334531 9172410.9432821880799 81.583928102890161419 2.02964145862183583179'
6test 265 line 53 toUtm8.easting: 796987.281104
6test 266 line 53 toUtm8.northing: 7677446.357675
6test 267 line 53 toUtm8.gamma: 18.084472
6test 268 line 53 toUtm8.scale: 1.007381
6test 269 line 53 toUtm8.lat: 68.071020
6test 270 line 53 toUtm8.lon: 19.392823
6test skipped (9): line 54 toUtm8.'61.416576191872 81.981611413918 3291036.4967623295988 9513199.6006662170596 80.890253980644739593 1.13482563910814382209'
6test 271 line 55 toUtm8.easting: 7087225.330906
6test 272 line 55 toUtm8.northing: 8382823.855822
6test 273 line 55 toUtm8.gamma: 72.253756
6test 274 line 55 toUtm8.scale: 1.678070
6test 275 line 55 toUtm8.lat: 35.074753
6test 276 line 55 toUtm8.lon: 79.496003
6test 277 line 56 toUtm8.easting: 5090358.125724
6test 278 line 56 toUtm8.northing: 4318294.133489
6test 279 line 56 toUtm8.gamma: 28.266280
6test 280 line 56 toUtm8.scale: 1.336264
6test 281 line 56 toUtm8.lat: 28.078790
6test 282 line 56 toUtm8.lon: 48.684350
6test skipped (10): line 57 toUtm8.'84.986930137199 2.067177857261 20163.0752214330146 9438635.9888499043815 2.059277291707588222 .99960496589466017622'
6test 283 line 58 toUtm8.easting: 3447670.550785
6test 284 line 58 toUtm8.northing: 3680238.888223
6test 285 line 58 toUtm8.gamma: 17.934948
6test 286 line 58 toUtm8.scale: 1.149831
6test 287 line 58 toUtm8.lat: 28.473948
6test 288 line 58 toUtm8.lon: 34.127306
6test 289 line 59 toUtm8.easting: 3396522.906798
6test 290 line 59 toUtm8.northing: 8093659.687593
6test 291 line 59 toUtm8.gamma: 57.747117
6test 292 line 59 toUtm8.scale: 1.144006
6test 293 line 59 toUtm8.lat: 56.629354
6test 294 line 59 toUtm8.lon: 62.196474
6test 295 line 60 toUtm8.easting: 11249894.100794  FAILED, KNOWN, expected 11249894.100784
6test 296 line 60 toUtm8.northing: 1619226.506360  FAILED, KNOWN, expected 1619226.506299
6test 297 line 60 toUtm8.gamma: 14.210358
6test 298 line 60 toUtm8.scale: 3.048347
6test 299 line 60 toUtm8.lat: 4.747762
6test 300 line 60 toUtm8.lon: 70.932555
6test 301 line 61 toUtm8.easting: 6808805.230950
6test 302 line 61 toUtm8.northing: 8044779.777369
6test 303 line 61 toUtm8.gamma: 68.242008
6test 304 line 61 toUtm8.scale: 1.621464
6test 305 line 61 toUtm8.lat: 35.882113
6test 306 line 61 toUtm8.lon: 76.741849
6test 307 line 62 toUtm8.easting: 2306021.556506
6test 308 line 62 toUtm8.northing: 757191.592866
6test 309 line 62 toUtm8.gamma: 2.385686
6test 310 line 62 toUtm8.scale: 1.066159
6test 311 line 62 toUtm8.lat: 6.420705
6test 312 line 62 toUtm8.lon: 20.416028
6test 313 line 63 toUtm8.easting: 1547406.313862
6test 314 line 63 toUtm8.northing: 6048712.751824
6test 315 line 63 toUtm8.gamma: 18.474372
6test 316 line 63 toUtm8.scale: 1.029123
6test 317 line 63 toUtm8.lat: 52.335248
6test 318 line 63 toUtm8.lon: 22.879294
6test 319 line 64 toUtm8.easting: 2430467.650383
6test 320 line 64 toUtm8.northing: 7557167.613972
6test 321 line 64 toUtm8.gamma: 42.110021
6test 322 line 64 toUtm8.scale: 1.072759
6test 323 line 64 toUtm8.lat: 59.846391
6test 324 line 64 toUtm8.lon: 46.262536
6test 325 line 65 toUtm8.easting: 2334053.905830
6test 326 line 65 toUtm8.northing: 1948076.966582
6test 327 line 65 toUtm8.gamma: 6.353185
6test 328 line 65 toUtm8.scale: 1.067733
6test 329 line 65 toUtm8.lat: 16.461790
6test 330 line 65 toUtm8.lon: 21.433269
6test 331 line 66 toUtm8.easting: 5564175.186737
6test 332 line 66 toUtm8.northing: 1836851.660412
6test 333 line 66 toUtm8.gamma: 11.870682
6test 334 line 66 toUtm8.scale: 1.408265
6test 335 line 66 toUtm8.lat: 11.707905
6test 336 line 66 toUtm8.lon: 45.827075
6test 337 line 67 toUtm8.easting: 6118505.590359
6test 338 line 67 toUtm8.northing: 7631684.552421
6test 339 line 67 toUtm8.gamma: 62.477323
6test 340 line 67 toUtm8.scale: 1.493420
6test 341 line 67 toUtm8.lat: 38.519075
6test 342 line 67 toUtm8.lon: 71.935918
6test skipped (11): line 68 toUtm8.'34.264007222954 82.647878110272 7365359.2946646287171 8818194.4515306837741 77.207042218974141605 1.73763853091849729372'
6test 343 line 69 toUtm8.easting: 36187.342415
6test 344 line 69 toUtm8.northing: 2142565.324802
6test 345 line 69 toUtm8.gamma: 0.114334
6test 346 line 69 toUtm8.scale: 0.999616
6test 347 line 69 toUtm8.lat: 19.376880
6test 348 line 69 toUtm8.lon: 0.344605
6test 349 line 70 toUtm8.easting: 2380328.546851
6test 350 line 70 toUtm8.northing: 8440109.872384
6test 351 line 70 toUtm8.gamma: 55.076067
6test 352 line 70 toUtm8.scale: 1.069658
6test 353 line 70 toUtm8.lat: 65.075805
6test 354 line 70 toUtm8.lon: 57.653438
6test 355 line 71 toUtm8.easting: 582511.608826
6test 356 line 71 toUtm8.northing: 8876047.217071
6test 357 line 71 toUtm8.gamma: 27.133300
6test 358 line 71 toUtm8.scale: 1.003749
6test 359 line 71 toUtm8.lat: 78.691870
6test 360 line 71 toUtm8.lon: 27.591736
6test 361 line 72 toUtm8.easting: 899441.350477
6test 362 line 72 toUtm8.northing: 4582046.430516
6test 363 line 72 toUtm8.gamma: 7.031211
6test 364 line 72 toUtm8.scale: 1.009573
6test 365 line 72 toUtm8.lat: 40.893022
6test 366 line 72 toUtm8.lon: 10.668804
6test skipped (12): line 73 toUtm8.'48.914278679322 87.35926802682 5022485.1243369246483 9741774.9337207800497 86.505947369926030588 1.32369954850478170836'
6test 367 line 74 toUtm8.easting: 6701004.587204
6test 368 line 74 toUtm8.northing: 2954368.258231
6test 369 line 74 toUtm8.gamma: 21.560153
6test 370 line 74 toUtm8.scale: 1.608554
6test 371 line 74 toUtm8.lat: 16.208377
6test 372 line 74 toUtm8.lon: 54.494282
6test 373 line 75 toUtm8.easting: 454986.218897
6test 374 line 75 toUtm8.northing: 4885087.887884
6test 375 line 75 toUtm8.gamma: 3.945648
6test 376 line 75 toUtm8.scale: 1.002147
6test 377 line 75 toUtm8.lat: 43.977936
6test 378 line 75 toUtm8.lon: 5.672541
6test skipped (13): line 76 toUtm8.'26.850860749352 82.834479937822 8903956.1403106503714 8470608.5774824981183 74.723116471645531699 2.13131124920824155268'
6test 379 line 77 toUtm8.easting: 1547627.594741
6test 380 line 77 toUtm8.northing: 6036584.538347
6test 381 line 77 toUtm8.gamma: 18.407629
6test 382 line 77 toUtm8.scale: 1.029132
6test 383 line 77 toUtm8.lat: 52.234165
6test 384 line 77 toUtm8.lon: 22.827655
6test 385 line 78 toUtm8.easting: 5221488.778597
6test 386 line 78 toUtm8.northing: 1762592.044392
6test 387 line 78 toUtm8.gamma: 10.927880
6test 388 line 78 toUtm8.scale: 1.356721
6test 389 line 78 toUtm8.lat: 11.674646
6test 390 line 78 toUtm8.lon: 43.500147
6test 391 line 79 toUtm8.easting: 4880570.297161
6test 392 line 79 toUtm8.northing: 3325433.988867
6test 393 line 79 toUtm8.gamma: 20.469862
6test 394 line 79 toUtm8.scale: 1.308476
6test 395 line 79 toUtm8.lat: 22.492753
6test 396 line 79 toUtm8.lon: 44.179153
6test skipped (14): line 80 toUtm8.'.910999463005 88.548822916123 23930680.0826936110445 7491462.0990379651261 75.937628056628715446 15.55636485152285563369'
6test 397 line 81 toUtm8.easting: 71519.450458
6test 398 line 81 toUtm8.northing: 3654740.444852
6test 399 line 81 toUtm8.gamma: 0.417448
6test 400 line 81 toUtm8.scale: 0.999663
6test 401 line 81 toUtm8.lat: 33.028802
6test 402 line 81 toUtm8.lon: 0.765843
6test 403 line 82 toUtm8.easting: 4152797.795220
6test 404 line 82 toUtm8.northing: 7823098.502751
6test 405 line 82 toUtm8.gamma: 58.238901
6test 406 line 82 toUtm8.scale: 1.218052
6test 407 line 82 toUtm8.lat: 50.649195
6test 408 line 82 toUtm8.lon: 64.389076
6test 409 line 83 toUtm8.easting: 2926725.707639
6test 410 line 83 toUtm8.northing: 7904918.072844
6test 411 line 83 toUtm8.gamma: 51.592748
6test 412 line 83 toUtm8.scale: 1.106206
6test 413 line 83 toUtm8.lat: 58.820640
6test 414 line 83 toUtm8.lon: 55.841048
6test 415 line 84 toUtm8.easting: 1325509.113869
6test 416 line 84 toUtm8.northing: 9675214.948213
6test 417 line 84 toUtm8.gamma: 76.116213
6test 418 line 84 toUtm8.scale: 1.021136
6test 419 line 84 toUtm8.lat: 77.865762
6test 420 line 84 toUtm8.lon: 76.414618
6test 421 line 85 toUtm8.easting: 3045296.448926
6test 422 line 85 toUtm8.northing: 542153.443280
6test 423 line 85 toUtm8.gamma: 2.185095
6test 424 line 85 toUtm8.scale: 1.116664
6test 425 line 85 toUtm8.lat: 4.389639
6test 426 line 85 toUtm8.lon: 26.458976
6test 427 line 86 toUtm8.easting: 11843870.887791  FAILED, KNOWN, expected 11843870.887518
6test 428 line 86 toUtm8.northing: 5912803.073690  FAILED, KNOWN, expected 5912803.073343
6test 429 line 86 toUtm8.gamma: 52.814260  FAILED, KNOWN, expected 52.814259
6test 430 line 86 toUtm8.scale: 3.267256
6test 431 line 86 toUtm8.lat: 13.924448
6test 432 line 86 toUtm8.lon: 79.017873
6test 433 line 87 toUtm8.easting: 8891099.704936
6test 434 line 87 toUtm8.northing: 162160.142227
6test 435 line 87 toUtm8.gamma: 1.312094
6test 436 line 87 toUtm8.scale: 2.157363
6test 437 line 87 toUtm8.lat: 0.679713
6test 438 line 87 toUtm8.lon: 62.036792
6test 439 line 88 toUtm8.easting: 4784814.214449
6test 440 line 88 toUtm8.northing: 2984497.432580
6test 441 line 88 toUtm8.gamma: 17.946545
6test 442 line 88 toUtm8.scale: 1.296116
6test 443 line 88 toUtm8.lat: 20.478281
6test 444 line 88 toUtm8.lon: 42.678234
6test 445 line 89 toUtm8.easting: 1772074.682154
6test 446 line 89 toUtm8.northing: 9491552.560143
6test 447 line 89 toUtm8.gamma: 73.634830
6test 448 line 89 toUtm8.scale: 1.038202
6test 449 line 89 toUtm8.lat: 73.695703
6test 450 line 89 toUtm8.lon: 74.259097
6test 451 line 90 toUtm8.easting: 1907649.782106
6test 452 line 90 toUtm8.northing: 6994232.429379
6test 453 line 90 toUtm8.gamma: 29.718929
6test 454 line 90 toUtm8.scale: 1.044503
6test 455 line 90 toUtm8.lat: 58.569370
6test 456 line 90 toUtm8.lon: 33.777549
6test 457 line 91 toUtm8.easting: 2084423.818962
6test 458 line 91 toUtm8.northing: 2211816.035619
6test 459 line 91 toUtm8.gamma: 6.556448
6test 460 line 91 toUtm8.scale: 1.053793
6test 461 line 91 toUtm8.lat: 18.933881
6test 462 line 91 toUtm8.lon: 19.492695
6test 463 line 92 toUtm8.easting: 1064373.671729
6test 464 line 92 toUtm8.northing: 7812482.547461
6test 465 line 92 toUtm8.gamma: 24.874124
6test 466 line 92 toUtm8.scale: 1.013490
6test 467 line 92 toUtm8.lat: 68.317934
6test 468 line 92 toUtm8.lon: 26.515687
6test skipped (15): line 93 toUtm8.'50.641941364984 87.111556505544 4770385.4792965339274 9734318.9029801439364 86.27311877223132818 1.29055338238288419467'
6test 469 line 94 toUtm8.easting: 6398096.677297
6test 470 line 94 toUtm8.northing: 4410894.752104
6test 471 line 94 toUtm8.gamma: 32.558023
6test 472 line 94 toUtm8.scale: 1.548004
6test 473 line 94 toUtm8.lat: 24.411298
6test 474 line 94 toUtm8.lon: 56.881823
6test 475 line 95 toUtm8.easting: 3138623.300415
6test 476 line 95 toUtm8.northing: 3082960.600798
6test 477 line 95 toUtm8.gamma: 13.557672
6test 478 line 95 toUtm8.scale: 1.123724
6test 479 line 95 toUtm8.lat: 24.571871
6test 480 line 95 toUtm8.lon: 30.073097
6test 481 line 96 toUtm8.easting: 2748325.794651
6test 482 line 96 toUtm8.northing: 4202811.912668
6test 483 line 96 toUtm8.gamma: 17.578706
6test 484 line 96 toUtm8.scale: 1.094102
6test 485 line 96 toUtm8.lat: 34.202576
6test 486 line 96 toUtm8.lon: 29.383166
6test 487 line 97 toUtm8.easting: 6677830.630367
6test 488 line 97 toUtm8.northing: 5350071.837395
6test 489 line 97 toUtm8.gamma: 41.306641
6test 490 line 97 toUtm8.scale: 1.599774
6test 491 line 97 toUtm8.lat: 27.756285
6test 492 line 97 toUtm8.lon: 61.881905
6test 493 line 98 toUtm8.easting: 5941536.667431
6test 494 line 98 toUtm8.northing: 3293112.175140
6test 495 line 98 toUtm8.gamma: 22.752845
6test 496 line 98 toUtm8.scale: 1.468473
6test 497 line 98 toUtm8.lat: 19.742270
6test 498 line 98 toUtm8.lon: 50.957821
6test 499 line 99 toUtm8.easting: 3152481.792567
6test 500 line 99 toUtm8.northing: 5903048.837978
6test 501 line 99 toUtm8.gamma: 31.494606
6test 502 line 99 toUtm8.scale: 1.124085
6test 503 line 99 toUtm8.lat: 45.453582
6test 504 line 99 toUtm8.lon: 40.659833
6test 505 line 100 toUtm8.easting: 10460475.897726  FAILED, KNOWN, expected 10460475.897730
6test 506 line 100 toUtm8.northing: 2553463.624385  FAILED, KNOWN, expected 2553463.624391
6test 507 line 100 toUtm8.gamma: 21.965869
6test 508 line 100 toUtm8.scale: 2.700296
6test 509 line 100 toUtm8.lat: 8.322144
6test 510 line 100 toUtm8.lon: 69.488157
6test 511 line 101 toUtm8.easting: 1964010.778021
6test 512 line 101 toUtm8.northing: 5634042.923056
6test 513 line 101 toUtm8.gamma: 20.117800
6test 514 line 101 toUtm8.scale: 1.047344
6test 515 line 101 toUtm8.lat: 47.749831
6test 516 line 101 toUtm8.lon: 26.322002
6test 517 line 102 toUtm8.easting: 2065306.424934
6test 518 line 102 toUtm8.northing: 2135008.468651
6test 519 line 102 toUtm8.gamma: 6.258981
6test 520 line 102 toUtm8.scale: 1.052800
6test 521 line 102 toUtm8.lat: 18.297493
6test 522 line 102 toUtm8.lon: 19.244669
6test 523 line 103 toUtm8.easting: 5127738.132976
6test 524 line 103 toUtm8.northing: 6793804.304411
6test 525 line 103 toUtm8.gamma: 50.557915
6test 526 line 103 toUtm8.scale: 1.339412
6test 527 line 103 toUtm8.lat: 40.834541
6test 528 line 103 toUtm8.lon: 61.650750
6test 529 line 104 toUtm8.easting: 8385525.148166
6test 530 line 104 toUtm8.northing: 6924932.344306
6test 531 line 104 toUtm8.gamma: 59.087561
6test 532 line 104 toUtm8.scale: 1.990364
6test 533 line 104 toUtm8.lat: 26.273247
6test 534 line 104 toUtm8.lon: 74.926694
6test 535 line 105 toUtm8.easting: 2297510.791909
6test 536 line 105 toUtm8.northing: 2805666.962834
6test 537 line 105 toUtm8.gamma: 9.301553
6test 538 line 105 toUtm8.scale: 1.065508
6test 539 line 105 toUtm8.lat: 23.698347
6test 540 line 105 toUtm8.lon: 22.155657
6test skipped (16): line 106 toUtm8.'12.364112546807 86.348578425071 13749544.9176345767153 8288728.3846500523233 75.033969786420407131 4.27058754359004466627'
6test 541 line 107 toUtm8.easting: 317518.455546
6test 542 line 107 toUtm8.northing: 1097517.583745
6test 543 line 107 toUtm8.gamma: 0.499004
6test 544 line 107 toUtm8.scale: 1.000848
6test 545 line 107 toUtm8.lat: 9.916091
6test 546 line 107 toUtm8.lon: 2.895277
6test 547 line 108 toUtm8.easting: 3856035.184888
6test 548 line 108 toUtm8.northing: 9141364.450290
6test 549 line 108 toUtm8.gamma: 75.972763
6test 550 line 108 toUtm8.scale: 1.186786
6test 551 line 108 toUtm8.lat: 56.553876
6test 552 line 108 toUtm8.lon: 78.215077
6test 553 line 109 toUtm8.easting: 1457484.942823
6test 554 line 109 toUtm8.northing: 9385297.101973
6test 555 line 109 toUtm8.gamma: 66.784662
6test 556 line 109 toUtm8.scale: 1.025660
6test 557 line 109 toUtm8.lat: 75.957631
6test 558 line 109 toUtm8.lon: 67.407383
6test 559 line 110 toUtm8.easting: 1304934.901841
6test 560 line 110 toUtm8.northing: 3604655.155715
6test 561 line 110 toUtm8.gamma: 7.343989
6test 562 line 110 toUtm8.scale: 1.020672
6test 563 line 110 toUtm8.lat: 31.826531
6test 564 line 110 toUtm8.lon: 13.731050
6test 565 line 111 toUtm8.easting: 1399093.491792
6test 566 line 111 toUtm8.northing: 8314607.120342
6test 567 line 111 toUtm8.gamma: 38.630161
6test 568 line 111 toUtm8.scale: 1.023625
6test 569 line 111 toUtm8.lat: 70.542985
6test 570 line 111 toUtm8.lon: 40.282055
6test 571 line 112 toUtm8.easting: 356983.618540
6test 572 line 112 toUtm8.northing: 4282309.048994
6test 573 line 112 toUtm8.gamma: 2.561485
6test 574 line 112 toUtm8.scale: 1.001170
6test 575 line 112 toUtm8.lat: 38.617487
6test 576 line 112 toUtm8.lon: 4.099838
6test 577 line 113 toUtm8.easting: 9952911.325092  FAILED, KNOWN, expected 9952911.325091
6test 578 line 113 toUtm8.northing: 1510288.212230  FAILED, KNOWN, expected 1510288.212229
6test 579 line 113 toUtm8.gamma: 12.752154
6test 580 line 113 toUtm8.scale: 2.511357
6test 581 line 113 toUtm8.lat: 5.389447
6test 582 line 113 toUtm8.lon: 66.729612
6test 583 line 114 toUtm8.easting: 6367592.504007
6test 584 line 114 toUtm8.northing: 1200437.077672
6test 585 line 114 toUtm8.gamma: 8.338041
6test 586 line 114 toUtm8.scale: 1.546210
6test 587 line 114 toUtm8.lat: 6.995168
6test 588 line 114 toUtm8.lon: 50.014763
6test 589 line 115 toUtm8.easting: 4391263.676460
6test 590 line 115 toUtm8.northing: 6325455.989408
6test 591 line 115 toUtm8.gamma: 42.653541
6test 592 line 115 toUtm8.scale: 1.245560
6test 593 line 115 toUtm8.lat: 42.321894
6test 594 line 115 toUtm8.lon: 53.784040
6test 595 line 116 toUtm8.easting: 6209880.527527
6test 596 line 116 toUtm8.northing: 2154754.449747
6test 597 line 116 toUtm8.gamma: 14.919512
6test 598 line 116 toUtm8.scale: 1.516560
6test 599 line 116 toUtm8.lat: 12.698515
6test 600 line 116 toUtm8.lon: 50.242047
6test 601 line 117 toUtm8.easting: 1507053.688772
6test 602 line 117 toUtm8.northing: 6261383.513280
6test 603 line 117 toUtm8.gamma: 19.280373
6test 604 line 117 toUtm8.scale: 1.027584
6test 605 line 117 toUtm8.lat: 54.207636
6test 606 line 117 toUtm8.lon: 23.325731
6test 607 line 118 toUtm8.easting: 8332725.003777
6test 608 line 118 toUtm8.northing: 3002712.329753
6test 609 line 118 toUtm8.gamma: 24.059212
6test 610 line 118 toUtm8.scale: 1.990450
6test 611 line 118 toUtm8.lat: 13.224787
6test 612 line 118 toUtm8.lon: 62.426698
6test 613 line 119 toUtm8.easting: 3958910.085235
6test 614 line 119 toUtm8.northing: 3462284.926102
6test 615 line 119 toUtm8.gamma: 18.546398
6test 616 line 119 toUtm8.scale: 1.199351
6test 617 line 119 toUtm8.lat: 25.650282
6test 618 line 119 toUtm8.lon: 37.710391
6test skipped (17): line 120 toUtm8.'20.684773383075 82.849734261238 10452892.2820830090734 8000059.6051139389546 71.07524025411428855 2.6501109339363854772'
6test 619 line 121 toUtm8.easting: 496148.253731
6test 620 line 121 toUtm8.northing: 6388503.365043
6test 621 line 121 toUtm8.gamma: 6.970955
6test 622 line 121 toUtm8.scale: 1.002620
6test 623 line 121 toUtm8.lat: 57.367533
6test 624 line 121 toUtm8.lon: 8.260866
6test 625 line 122 toUtm8.easting: 7375792.085850
6test 626 line 122 toUtm8.northing: 5544624.072155
6test 627 line 122 toUtm8.gamma: 44.510851
6test 628 line 122 toUtm8.scale: 1.745898
6test 629 line 122 toUtm8.lat: 25.958757
6test 630 line 122 toUtm8.lon: 65.760477
6test 631 line 123 toUtm8.easting: 2826258.041979
6test 632 line 123 toUtm8.northing: 5167759.816959
6test 633 line 123 toUtm8.gamma: 23.783897
6test 634 line 123 toUtm8.scale: 1.099415
6test 635 line 123 toUtm8.lat: 41.395848
6test 636 line 123 toUtm8.lon: 33.661790
6test 637 line 124 toUtm8.easting: 3958563.378851
6test 638 line 124 toUtm8.northing: 8499923.231243
6test 639 line 124 toUtm8.gamma: 66.570945
6test 640 line 124 toUtm8.scale: 1.197296
6test 641 line 124 toUtm8.lat: 54.266617
6test 642 line 124 toUtm8.lon: 70.602199
6test 643 line 125 toUtm8.easting: 4408189.533462
6test 644 line 125 toUtm8.northing: 8046312.003642
6test 645 line 125 toUtm8.gamma: 62.216959
6test 646 line 125 toUtm8.scale: 1.246750
6test 647 line 125 toUtm8.lat: 49.840393
6test 648 line 125 toUtm8.lon: 68.036728
6test 649 line 126 toUtm8.easting: 3629225.627512
6test 650 line 126 toUtm8.northing: 6371258.454645
6test 651 line 126 toUtm8.gamma: 38.881675
6test 652 line 126 toUtm8.scale: 1.165511
6test 653 line 126 toUtm8.lat: 46.306035
6test 654 line 126 toUtm8.lon: 48.085828
6test 655 line 127 toUtm8.easting: 602838.450710
6test 656 line 127 toUtm8.northing: 4851370.637205
6test 657 line 127 toUtm8.gamma: 5.160395
6test 658 line 127 toUtm8.scale: 1.004073
6test 659 line 127 toUtm8.lat: 43.570988
6test 660 line 127 toUtm8.lon: 7.464494
6test 661 line 128 toUtm8.easting: 764616.665051
6test 662 line 128 toUtm8.northing: 2164299.337945
6test 663 line 128 toUtm8.gamma: 2.429300
6test 664 line 128 toUtm8.scale: 1.006835
6test 665 line 128 toUtm8.lat: 19.427290
6test 666 line 128 toUtm8.lon: 7.268247
6test 667 line 129 toUtm8.easting: 5048953.021931
6test 668 line 129 toUtm8.northing: 1885974.057398
6test 669 line 129 toUtm8.gamma: 11.459804
6test 670 line 129 toUtm8.scale: 1.332207
6test 671 line 129 toUtm8.lat: 12.713794
6test 672 line 129 toUtm8.lon: 42.507018
6test 673 line 130 toUtm8.easting: 2293996.601155
6test 674 line 130 toUtm8.northing: 2392408.644221
6test 675 line 130 toUtm8.gamma: 7.791838
6test 676 line 130 toUtm8.scale: 1.065348
6test 677 line 130 toUtm8.lat: 20.238782
6test 678 line 130 toUtm8.lon: 21.566068
6test 679 line 131 toUtm8.easting: 1530603.839418
6test 680 line 131 toUtm8.northing: 7287841.459898
6test 681 line 131 toUtm8.gamma: 27.502921
6test 682 line 131 toUtm8.scale: 1.028416
6test 683 line 131 toUtm8.lat: 62.367847
6test 684 line 131 toUtm8.lon: 30.438849
6test 685 line 132 toUtm8.easting: 2660000.093152
6test 686 line 132 toUtm8.northing: 5161982.213248
6test 687 line 132 toUtm8.gamma: 22.629836
6test 688 line 132 toUtm8.scale: 1.087851
6test 689 line 132 toUtm8.lat: 41.891569
6test 690 line 132 toUtm8.lon: 31.959547
6test 691 line 133 toUtm8.easting: 5037478.329414
6test 692 line 133 toUtm8.northing: 8768172.379908
6test 693 line 133 toUtm8.gamma: 73.511182
6test 694 line 133 toUtm8.scale: 1.325919
6test 695 line 133 toUtm8.lat: 47.664248
6test 696 line 133 toUtm8.lon: 77.630062
6test 697 line 134 toUtm8.easting: 2289650.957799
6test 698 line 134 toUtm8.northing: 8784328.593607
6test 699 line 134 toUtm8.gamma: 60.786067
6test 700 line 134 toUtm8.scale: 1.064346
6test 701 line 134 toUtm8.lat: 67.259559
6test 702 line 134 toUtm8.lon: 62.715293
6test 703 line 135 toUtm8.easting: 647913.889744
6test 704 line 135 toUtm8.northing: 6742382.228217
6test 705 line 135 toUtm8.gamma: 10.252667
6test 706 line 135 toUtm8.scale: 1.004748
6test 707 line 135 toUtm8.lat: 60.295381
6test 708 line 135 toUtm8.lon: 11.763097
6test 709 line 136 toUtm8.easting: 1118372.698566
6test 710 line 136 toUtm8.northing: 9040627.942263
6test 711 line 136 toUtm8.gamma: 48.936803
6test 712 line 136 toUtm8.scale: 1.014920
6test 713 line 136 toUtm8.lat: 76.878914
6test 714 line 136 toUtm8.lon: 49.685773
6test 715 line 137 toUtm8.easting: 440696.510070
6test 716 line 137 toUtm8.northing: 5500355.826297
6test 717 line 137 toUtm8.gamma: 4.636104
6test 718 line 137 toUtm8.scale: 1.001986
6test 719 line 137 toUtm8.lat: 49.495349
6test 720 line 137 toUtm8.lon: 6.087551
6test 721 line 138 toUtm8.easting: 601728.149727
6test 722 line 138 toUtm8.northing: 9095352.048149
6test 723 line 138 toUtm8.gamma: 33.435771
6test 724 line 138 toUtm8.scale: 1.004027
6test 725 line 138 toUtm8.lat: 80.297265
6test 726 line 138 toUtm8.lon: 33.816372
6test 727 line 139 toUtm8.easting: 3481444.777827
6test 728 line 139 toUtm8.northing: 291665.708749
6test 729 line 139 toUtm8.gamma: 1.314726
6test 730 line 139 toUtm8.scale: 1.153534
6test 731 line 139 toUtm8.lat: 2.286437
6test 732 line 139 toUtm8.lon: 29.855149
6test 733 line 140 toUtm8.easting: 3515304.901524
6test 734 line 140 toUtm8.northing: 1443981.882918
6test 735 line 140 toUtm8.gamma: 6.641638
6test 736 line 140 toUtm8.scale: 1.156509
6test 737 line 140 toUtm8.lat: 11.264457
6test 738 line 140 toUtm8.lon: 30.743907
6test 739 line 141 toUtm8.easting: 160012.186959
6test 740 line 141 toUtm8.northing: 3922609.253231
6test 741 line 141 toUtm8.gamma: 1.022225
6test 742 line 141 toUtm8.scale: 0.999916
6test 743 line 141 toUtm8.lat: 35.434073
6test 744 line 141 toUtm8.lon: 1.762795
6test 745 line 142 toUtm8.easting: 4163744.245622
6test 746 line 142 toUtm8.northing: 936884.674804
6test 747 line 142 toUtm8.gamma: 4.892559
6test 748 line 142 toUtm8.scale: 1.222164
6test 749 line 142 toUtm8.lat: 6.923695
6test 750 line 142 toUtm8.lon: 35.289456
6test 751 line 143 toUtm8.easting: 6155200.017926
6test 752 line 143 toUtm8.northing: 6926306.628390
6test 753 line 143 toUtm8.gamma: 55.103258
6test 754 line 143 toUtm8.scale: 1.500556
6test 755 line 143 toUtm8.lat: 36.129672
6test 756 line 143 toUtm8.lon: 67.533176
6test skipped (18): line 144 toUtm8.'4.406528980638 81.965734206053 16263383.2854400911299 3591296.7313406507021 36.040254103487111035 6.58928781751888396522'
6test skipped (19): line 145 toUtm8.'8.474589009114 81.129945130597 14220995.5153984992101 5100587.4575033509156 47.314258427760984573 4.69320221531225352172'
6test 757 line 146 toUtm8.easting: 3173034.802372
6test 758 line 146 toUtm8.northing: 7263421.942957
6test 759 line 146 toUtm8.gamma: 45.215808
6test 760 line 146 toUtm8.scale: 1.125410
6test 761 line 146 toUtm8.lat: 53.907276
6test 762 line 146 toUtm8.lon: 51.252904
6test skipped (20): line 147 toUtm8.'22.120544817855 85.756781608119 10253274.0922039670098 8867574.2997916978265 79.198250285604314115 2.57237240666878171579'
6test 763 line 148 toUtm8.easting: 2415561.483230
6test 764 line 148 toUtm8.northing: 8813225.217097
6test 765 line 148 toUtm8.gamma: 62.548978
6test 766 line 148 toUtm8.scale: 1.071748
6test 767 line 148 toUtm8.lat: 66.444100
6test 768 line 148 toUtm8.lon: 64.532960
6test 769 line 149 toUtm8.easting: 9589179.293294  FAILED, KNOWN, expected 9589179.293295
6test 770 line 149 toUtm8.northing: 1777680.784144  FAILED, KNOWN, expected 1777680.784143
6test 771 line 149 toUtm8.gamma: 14.838483
6test 772 line 149 toUtm8.scale: 2.380716
6test 773 line 149 toUtm8.lat: 6.670965
6test 774 line 149 toUtm8.lon: 65.660408
6test 775 line 150 toUtm8.easting: 727939.438391
6test 776 line 150 toUtm8.northing: 3684363.236810
6test 777 line 150 toUtm8.gamma: 4.266227
6test 778 line 150 toUtm8.scale: 1.006140
6test 779 line 150 toUtm8.lat: 33.054057
6test 780 line 150 toUtm8.lon: 7.787458
6test 781 line 151 toUtm8.easting: 1250765.991085
6test 782 line 151 toUtm8.northing: 792869.242719
6test 783 line 151 toUtm8.gamma: 1.396497
6test 784 line 151 toUtm8.scale: 1.019026
6test 785 line 151 toUtm8.lat: 7.035525
6test 786 line 151 toUtm8.lon: 11.253707
6test 787 line 152 toUtm8.easting: 710421.705887
6test 788 line 152 toUtm8.northing: 5019406.075928
6test 789 line 152 toUtm8.gamma: 6.393949
6test 790 line 152 toUtm8.scale: 1.005812
6test 791 line 152 toUtm8.lat: 44.971340
6test 792 line 152 toUtm8.lon: 9.009304
6test 793 line 153 toUtm8.easting: 4600995.074643
6test 794 line 153 toUtm8.northing: 4505712.084593
6test 795 line 153 toUtm8.gamma: 27.997458
6test 796 line 153 toUtm8.scale: 1.271841
6test 797 line 153 toUtm8.lat: 30.821397
6test 798 line 153 toUtm8.lon: 45.970577
6test 799 line 154 toUtm8.easting: 557642.627782
6test 800 line 154 toUtm8.northing: 7006911.251644
6test 801 line 154 toUtm8.gamma: 9.769903
6test 802 line 154 toUtm8.scale: 1.003411
6test 803 line 154 toUtm8.lat: 62.763886
6test 804 line 154 toUtm8.lon: 10.960144
6test 805 line 155 toUtm8.easting: 4635062.294291
6test 806 line 155 toUtm8.northing: 2702556.153311
6test 807 line 155 toUtm8.gamma: 15.779547
6test 808 line 155 toUtm8.scale: 1.277178
6test 809 line 155 toUtm8.lat: 18.888611
6test 810 line 155 toUtm8.lon: 41.009871
6test skipped (21): line 156 toUtm8.'7.524119461376 81.050715469439 14554962.2559189870471 4716639.9085720199214 44.192751352918149954 4.96001986321419027847'
6test 811 line 157 toUtm8.easting: 882126.661736
6test 812 line 157 toUtm8.northing: 7947612.369506
6test 813 line 157 toUtm8.gamma: 22.429487
6test 814 line 157 toUtm8.scale: 1.009132
6test 815 line 157 toUtm8.lat: 70.063902
6test 816 line 157 toUtm8.lon: 23.705255
6test skipped (22): line 158 toUtm8.'3.556525834215 88.363529198819 20262021.6459832969292 8113827.8207957955275 76.936057264555500879 10.34909168211805703369'
6test 817 line 159 toUtm8.easting: 6500508.399850
6test 818 line 159 toUtm8.northing: 6956476.342368
6test 819 line 159 toUtm8.gamma: 56.237116
6test 820 line 159 toUtm8.scale: 1.563162
6test 821 line 159 toUtm8.lat: 34.551257
6test 822 line 159 toUtm8.lon: 69.111091
6test 823 line 160 toUtm8.easting: 3884036.641314
6test 824 line 160 toUtm8.northing: 6890167.411733
6test 825 line 160 toUtm8.gamma: 45.760130
6test 826 line 160 toUtm8.scale: 1.190167
6test 827 line 160 toUtm8.lat: 47.929051
6test 828 line 160 toUtm8.lon: 54.103418
6test 829 line 161 toUtm8.easting: 217855.546078
6test 830 line 161 toUtm8.northing: 6184108.122568
6test 831 line 161 toUtm8.gamma: 2.870993
6test 832 line 161 toUtm8.scale: 1.000182
6test 833 line 161 toUtm8.lat: 55.753536
6test 834 line 161 toUtm8.lon: 3.471798
6test skipped (23): line 162 toUtm8.'18.530847071862 86.555312055898 11384139.290401676268 8893889.9495562311576 79.77485364572019046 3.02467156922968230025'
6test 835 line 163 toUtm8.easting: 3469855.989805
6test 836 line 163 toUtm8.northing: 7723193.799228
6test 837 line 163 toUtm8.gamma: 53.114700
6test 838 line 163 toUtm8.scale: 1.150540
6test 839 line 163 toUtm8.lat: 54.510125
6test 840 line 163 toUtm8.lon: 58.556056
6test skipped (24): line 164 toUtm8.'42.864161881687 84.866325602975 5926165.994939154109 9385463.7327467371322 82.506981261616342016 1.45975761947329382411'
6test 841 line 165 toUtm8.easting: 5798639.662224
6test 842 line 165 toUtm8.northing: 5305387.640916
6test 843 line 165 toUtm8.gamma: 38.617257
6test 844 line 165 toUtm8.scale: 1.442263
6test 845 line 165 toUtm8.lat: 30.911943
6test 846 line 165 toUtm8.lon: 57.114102
6test 847 line 166 toUtm8.easting: 9464.934388
6test 848 line 166 toUtm8.northing: 6489121.624944
6test 849 line 166 toUtm8.gamma: 0.138696
6test 850 line 166 toUtm8.scale: 0.999601
6test 851 line 166 toUtm8.lat: 58.542493
6test 852 line 166 toUtm8.lon: 0.162593
6test skipped (25): line 167 toUtm8.'15.022689088683 85.792615487152 12575834.2756139069875 8356610.8954857643175 75.235223160840771295 3.59944161831319404851'
6test 853 line 168 toUtm8.easting: 2719653.543469
6test 854 line 168 toUtm8.northing: 9362389.163495
6test 855 line 168 toUtm8.gamma: 76.049670
6test 856 line 168 toUtm8.scale: 1.091315
6test 857 line 168 toUtm8.lat: 65.692275
6test 858 line 168 toUtm8.lon: 77.241377
6test 859 line 169 toUtm8.easting: 4845341.924698
6test 860 line 169 toUtm8.northing: 8710522.326901
6test 861 line 169 toUtm8.gamma: 72.320942
6test 862 line 169 toUtm8.scale: 1.300382
6test 863 line 169 toUtm8.lat: 48.806211
6test 864 line 169 toUtm8.lon: 76.486365
6test skipped (26): line 170 toUtm8.'56.436024794624 82.61156798689 3935261.5227628794258 9454271.6490618694486 81.162334302626197333 1.19476734082123451158'
6test 865 line 171 toUtm8.easting: 7074299.823000
6test 866 line 171 toUtm8.northing: 1648736.065055
6test 867 line 171 toUtm8.gamma: 12.145925
6test 868 line 171 toUtm8.scale: 1.687551
6test 869 line 171 toUtm8.lat: 8.766053
6test 870 line 171 toUtm8.lon: 54.367539
6test 871 line 172 toUtm8.easting: 3689072.579308
6test 872 line 172 toUtm8.northing: 2230802.665211
6test 873 line 172 toUtm8.gamma: 10.856248
6test 874 line 172 toUtm8.scale: 1.172689
6test 875 line 172 toUtm8.lat: 17.095495
6test 876 line 172 toUtm8.lon: 33.059128
6test 877 line 173 toUtm8.easting: 8102565.885587
6test 878 line 173 toUtm8.northing: 5167396.617580
6test 879 line 173 toUtm8.gamma: 42.324886
6test 880 line 173 toUtm8.scale: 1.921927
6test 881 line 173 toUtm8.lat: 22.142861
6test 882 line 173 toUtm8.lon: 67.200684
6test 883 line 174 toUtm8.easting: 8181271.353564
6test 884 line 174 toUtm8.northing: 4425436.547185
6test 885 line 174 toUtm8.gamma: 35.900845
6test 886 line 174 toUtm8.scale: 1.945017
6test 887 line 174 toUtm8.lat: 19.222623
6test 888 line 174 toUtm8.lon: 65.180785
6test 889 line 175 toUtm8.easting: 767067.394003
6test 890 line 175 toUtm8.northing: 3701745.857296
6test 891 line 175 toUtm8.gamma: 4.519201
6test 892 line 175 toUtm8.scale: 1.006863
6test 893 line 175 toUtm8.lat: 33.182474
6test 894 line 175 toUtm8.lon: 8.216952
6test 895 line 176 toUtm8.easting: 6688114.168572
6test 896 line 176 toUtm8.northing: 2052857.299639
6test 897 line 176 toUtm8.gamma: 14.766191
6test 898 line 176 toUtm8.scale: 1.607200
6test 899 line 176 toUtm8.lat: 11.417963
6test 900 line 176 toUtm8.lon: 52.808691
6test 901 line 177 toUtm8.easting: 5608408.773761
6test 902 line 177 toUtm8.northing: 3859055.659110
6test 903 line 177 toUtm8.gamma: 26.244151
6test 904 line 177 toUtm8.scale: 1.413463
6test 905 line 177 toUtm8.lat: 23.836688
6test 906 line 177 toUtm8.lon: 50.500180
6test 907 line 178 toUtm8.easting: 3836942.765275
6test 908 line 178 toUtm8.northing: 6415467.634326
6test 909 line 178 toUtm8.gamma: 40.575885
6test 910 line 178 toUtm8.scale: 1.185615
6test 911 line 178 toUtm8.lat: 45.550020
6test 912 line 178 toUtm8.lon: 50.148036
6test 913 line 179 toUtm8.easting: 1298730.366025
6test 914 line 179 toUtm8.northing: 6021453.000792
6test 915 line 179 toUtm8.gamma: 15.613320
6test 916 line 179 toUtm8.scale: 1.020367
6test 917 line 179 toUtm8.lat: 52.746079
6test 918 line 179 toUtm8.lon: 19.343926
6test 919 line 180 toUtm8.easting: 416934.289208
6test 920 line 180 toUtm8.northing: 7295683.451705
6test 921 line 180 toUtm8.gamma: 8.238232
6test 922 line 180 toUtm8.scale: 1.001729
6test 923 line 180 toUtm8.lat: 65.513348
6test 924 line 180 toUtm8.lon: 9.039529
6test 925 line 181 toUtm8.easting: 4336076.850889
6test 926 line 181 toUtm8.northing: 7617975.722779
6test 927 line 181 toUtm8.gamma: 56.537088
6test 928 line 181 toUtm8.scale: 1.238582
6test 929 line 181 toUtm8.lat: 48.709795
6test 930 line 181 toUtm8.lon: 63.554005
6test 931 line 182 toUtm8.easting: 168047.336980
6test 932 line 182 toUtm8.northing: 2185000.046530
6test 933 line 182 toUtm8.gamma: 0.542187
6test 934 line 182 toUtm8.scale: 0.999949
6test 935 line 182 toUtm8.lat: 19.753509
6test 936 line 182 toUtm8.lon: 1.603846
6test 937 line 183 toUtm8.easting: 8276281.328790
6test 938 line 183 toUtm8.northing: 263444.350545
6test 939 line 183 toUtm8.gamma: 2.071435
6test 940 line 183 toUtm8.scale: 1.980314
6test 941 line 183 toUtm8.lat: 1.202816
6test 942 line 183 toUtm8.lon: 59.377276
6test 943 line 184 toUtm8.easting: 4772573.810710
6test 944 line 184 toUtm8.northing: 6765710.336002
6test 945 line 184 toUtm8.gamma: 48.857561
6test 946 line 184 toUtm8.scale: 1.291911
6test 947 line 184 toUtm8.lat: 42.564975
6test 948 line 184 toUtm8.lon: 59.356947
6test 949 line 185 toUtm8.easting: 5427755.074639
6test 950 line 185 toUtm8.northing: 1556055.820924
6test 951 line 185 toUtm8.gamma: 9.862178
6test 952 line 185 toUtm8.scale: 1.387394
6test 953 line 185 toUtm8.lat: 10.090572
6test 954 line 185 toUtm8.lon: 44.604132
6test 955 line 186 toUtm8.easting: 11588458.616240  FAILED, KNOWN, expected 11588458.616041
6test 956 line 186 toUtm8.northing: 5707993.922683  FAILED, KNOWN, expected 5707993.922613
6test 957 line 186 toUtm8.gamma: 50.784827
6test 958 line 186 toUtm8.scale: 3.149567
6test 959 line 186 toUtm8.lat: 14.133028
6test 960 line 186 toUtm8.lon: 78.097533
6test 961 line 187 toUtm8.easting: 7152433.802688
6test 962 line 187 toUtm8.northing: 761390.695844
6test 963 line 187 toUtm8.gamma: 5.607350
6test 964 line 187 toUtm8.scale: 1.705261
6test 965 line 187 toUtm8.lat: 4.031123
6test 966 line 187 toUtm8.lon: 54.048782
6test 967 line 188 toUtm8.easting: 3105651.390901
6test 968 line 188 toUtm8.northing: 9426026.169064
6test 969 line 188 toUtm8.gamma: 78.750206
6test 970 line 188 toUtm8.scale: 1.119737
6test 971 line 188 toUtm8.lat: 62.746603
6test 972 line 188 toUtm8.lon: 79.968641
6test 973 line 189 toUtm8.easting: 2959009.639022
6test 974 line 189 toUtm8.northing: 8339242.269282
6test 975 line 189 toUtm8.gamma: 58.460865
6test 976 line 189 toUtm8.scale: 1.108554
6test 977 line 189 toUtm8.lat: 60.626429
6test 978 line 189 toUtm8.lon: 61.851551
6test 979 line 190 toUtm8.easting: 8640472.267145
6test 980 line 190 toUtm8.northing: 6230320.417931
6test 981 line 190 toUtm8.gamma: 52.816810
6test 982 line 190 toUtm8.scale: 2.062973
6test 983 line 190 toUtm8.lat: 23.600626
6test 984 line 190 toUtm8.lon: 72.811634
6test 985 line 191 toUtm8.easting: 811352.108932
6test 986 line 191 toUtm8.northing: 9816129.813481
6test 987 line 191 toUtm8.gamma: 77.299184
6test 988 line 191 toUtm8.scale: 1.007651
6test 989 line 191 toUtm8.lat: 82.572236
6test 990 line 191 toUtm8.lon: 77.402323
6test 991 line 192 toUtm8.easting: 6521874.973458
6test 992 line 192 toUtm8.northing: 1053612.479744
6test 993 line 192 toUtm8.gamma: 7.407328
6test 994 line 192 toUtm8.scale: 1.575529
6test 995 line 192 toUtm8.lat: 6.030051
6test 996 line 192 toUtm8.lon: 50.783505
6test 997 line 193 toUtm8.easting: 3477983.997875
6test 998 line 193 toUtm8.northing: 5651613.325947
6test 999 line 193 toUtm8.gamma: 31.530673
6test 1000 line 193 toUtm8.scale: 1.151875
6test 1001 line 193 toUtm8.lat: 42.411523
6test 1002 line 193 toUtm8.lon: 42.258009
6test 1003 line 194 toUtm8.easting: 629892.822243
6test 1004 line 194 toUtm8.northing: 3283914.910451
6test 1005 line 194 toUtm8.gamma: 3.210482
6test 1006 line 194 toUtm8.scale: 1.004499
6test 1007 line 194 toUtm8.lat: 29.526120
6test 1008 line 194 toUtm8.lon: 6.493069
6test 1009 line 195 toUtm8.easting: 3381879.687227
6test 1010 line 195 toUtm8.northing: 5103629.325665
6test 1011 line 195 toUtm8.gamma: 26.748108
6test 1012 line 195 toUtm8.scale: 1.143559
6test 1013 line 195 toUtm8.lat: 39.021853
6test 1014 line 195 toUtm8.lon: 38.641779
6test 1015 line 196 toUtm8.easting: 2815986.534177
6test 1016 line 196 toUtm8.northing: 9387029.120718
6test 1017 line 196 toUtm8.gamma: 76.967262
6test 1018 line 196 toUtm8.scale: 1.098032
6test 1019 line 196 toUtm8.lat: 64.971850
6test 1020 line 196 toUtm8.lon: 78.151893
6test 1021 line 197 toUtm8.easting: 3398195.889603
6test 1022 line 197 toUtm8.northing: 9138936.031490
6test 1023 line 197 toUtm8.gamma: 74.477499
6test 1024 line 197 toUtm8.scale: 1.144009
6test 1025 line 197 toUtm8.lat: 59.961819
6test 1026 line 197 toUtm8.lon: 76.473422
6test 1027 line 198 toUtm8.easting: 2421734.754637
6test 1028 line 198 toUtm8.northing: 5002372.094991
6test 1029 line 198 toUtm8.gamma: 20.017082
6test 1030 line 198 toUtm8.scale: 1.072592
6test 1031 line 198 toUtm8.lat: 41.374040
6test 1032 line 198 toUtm8.lon: 28.848343
6test 1033 line 199 toUtm8.easting: 2360869.895525
6test 1034 line 199 toUtm8.northing: 9553298.449536
6test 1035 line 199 toUtm8.gamma: 78.848205
6test 1036 line 199 toUtm8.scale: 1.068453
6test 1037 line 199 toUtm8.lat: 68.946087
6test 1038 line 199 toUtm8.lon: 79.574523
6test skipped (27): line 200 toUtm8.'79.275096210569 83.551272329394 1196539.9721941076965 9861920.8362302532842 83.437668440198132309 1.01713723718699411107'
6test 1039 line 201 toUtm8.easting: 1327758.704795
6test 1040 line 201 toUtm8.northing: 2375509.241683
6test 1041 line 201 toUtm8.gamma: 4.617572
6test 1042 line 201 toUtm8.scale: 1.021465
6test 1043 line 201 toUtm8.lat: 21.000252
6test 1044 line 201 toUtm8.lon: 12.697444
6test 1045 line 202 toUtm8.easting: 2070860.327644
6test 1046 line 202 toUtm8.northing: 8604500.719581
6test 1047 line 202 toUtm8.gamma: 54.722761
6test 1048 line 202 toUtm8.scale: 1.052469
6test 1049 line 202 toUtm8.lat: 68.015227
6test 1050 line 202 toUtm8.lon: 56.732419
6test 1051 line 203 toUtm8.easting: 6564776.654864
6test 1052 line 203 toUtm8.northing: 8171207.177379
6test 1053 line 203 toUtm8.gamma: 69.237523
6test 1054 line 203 toUtm8.scale: 1.573894
6test 1055 line 203 toUtm8.lat: 37.423675
6test 1056 line 203 toUtm8.lon: 76.947359
6test 1057 line 204 toUtm8.easting: 592653.553821
6test 1058 line 204 toUtm8.northing: 6125529.810052
6test 1059 line 204 toUtm8.gamma: 7.600785
6test 1060 line 204 toUtm8.scale: 1.003912
6test 1061 line 204 toUtm8.lat: 54.922707
6test 1062 line 204 toUtm8.lon: 9.260818
6test 1063 line 205 toUtm8.easting: 693459.671821
6test 1064 line 205 toUtm8.northing: 6943779.991032
6test 1065 line 205 toUtm8.gamma: 11.787587
6test 1066 line 205 toUtm8.scale: 1.005496
6test 1067 line 205 toUtm8.lat: 61.982810
6test 1068 line 205 toUtm8.lon: 13.299659
6test 1069 line 206 toUtm8.easting: 1838956.187625
6test 1070 line 206 toUtm8.northing: 3511959.612381
6test 1071 line 206 toUtm8.gamma: 9.844313
6test 1072 line 206 toUtm8.scale: 1.041603
6test 1073 line 206 toUtm8.lat: 30.324214
6test 1074 line 206 toUtm8.lon: 18.959769
6test 1075 line 207 toUtm8.easting: 4460690.884597
6test 1076 line 207 toUtm8.northing: 5541873.235403
6test 1077 line 207 toUtm8.gamma: 35.768613
6test 1078 line 207 toUtm8.scale: 1.254179
6test 1079 line 207 toUtm8.lat: 37.629667
6test 1080 line 207 toUtm8.lon: 49.649131
6test 1081 line 208 toUtm8.easting: 2311168.998941
6test 1082 line 208 toUtm8.northing: 9480561.869119
6test 1083 line 208 toUtm8.gamma: 76.828257
6test 1084 line 208 toUtm8.scale: 1.065556
6test 1085 line 208 toUtm8.lat: 69.225574
6test 1086 line 208 toUtm8.lon: 77.656135
6test 1087 line 209 toUtm8.easting: 4111775.114451
6test 1088 line 209 toUtm8.northing: 6509014.348792
6test 1089 line 209 toUtm8.gamma: 43.052130
6test 1090 line 209 toUtm8.scale: 1.214125
6test 1091 line 209 toUtm8.lat: 44.698478
6test 1092 line 209 toUtm8.lon: 52.979304
6test 1093 line 210 toUtm8.easting: 75358.261962
6test 1094 line 210 toUtm8.northing: 7711258.662251
6test 1095 line 210 toUtm8.gamma: 1.806297
6test 1096 line 210 toUtm8.scale: 0.999669
6test 1097 line 210 toUtm8.lat: 69.499594
6test 1098 line 210 toUtm8.lon: 1.928336
6test skipped (28): line 211 toUtm8.'27.981363604998 86.061112755721 8781885.2291162503299 9184776.4522114918448 81.795538514711932534 2.09490761781464961377'
6test 1099 line 212 toUtm8.easting: 954378.415174
6test 1100 line 212 toUtm8.northing: 7449110.669807
6test 1101 line 212 toUtm8.gamma: 19.380657
6test 1102 line 212 toUtm8.scale: 1.010768
6test 1103 line 212 toUtm8.lat: 65.699839
6test 1104 line 212 toUtm8.lon: 21.104725
6test 1105 line 213 toUtm8.easting: 720971.793706
6test 1106 line 213 toUtm8.northing: 5265195.121555
6test 1107 line 213 toUtm8.gamma: 7.002995
6test 1108 line 213 toUtm8.scale: 1.005995
6test 1109 line 213 toUtm8.lat: 47.143648
6test 1110 line 213 toUtm8.lon: 9.512189
6test 1111 line 214 toUtm8.easting: 561561.493937
6test 1112 line 214 toUtm8.northing: 989910.236221
6test 1113 line 214 toUtm8.gamma: 0.793118
6test 1114 line 214 toUtm8.scale: 1.003505
6test 1115 line 214 toUtm8.lat: 8.920167
6test 1116 line 214 toUtm8.lon: 5.101513
6test 1117 line 215 toUtm8.easting: 3446829.634468
6test 1118 line 215 toUtm8.northing: 9232868.155664
6test 1119 line 215 toUtm8.gamma: 76.279075
6test 1120 line 215 toUtm8.scale: 1.148263
6test 1121 line 215 toUtm8.lat: 59.778971
6test 1122 line 215 toUtm8.lon: 78.080322
6test skipped (29): line 216 toUtm8.'55.865310107291 87.384288430943 4048307.5459092527942 9800416.4229977935137 86.843918034217523739 1.20649504624906774925'
6test 1123 line 217 toUtm8.easting: 8973188.480293
6test 1124 line 217 toUtm8.northing: 7042230.087021
6test 1125 line 217 toUtm8.gamma: 60.872456
6test 1126 line 217 toUtm8.scale: 2.156098
6test 1127 line 217 toUtm8.lat: 24.310973
6test 1128 line 217 toUtm8.lon: 76.823777
6test 1129 line 218 toUtm8.easting: 126314.191618
6test 1130 line 218 toUtm8.northing: 396006.687921
6test 1131 line 218 toUtm8.gamma: 0.071065
6test 1132 line 218 toUtm8.scale: 0.999798
6test 1133 line 218 toUtm8.lat: 3.582041
6test 1134 line 218 toUtm8.lon: 1.137286
6test 1135 line 219 toUtm8.easting: 5247652.345647
6test 1136 line 219 toUtm8.northing: 8670513.359752
6test 1137 line 219 toUtm8.gamma: 72.700498
6test 1138 line 219 toUtm8.scale: 1.355272
6test 1139 line 219 toUtm8.lat: 46.124233
6test 1140 line 219 toUtm8.lon: 77.313118
6test skipped (30): line 220 toUtm8.'31.17139056295 87.104503768139 8103656.8381187232079 9469794.014736839373 84.490673011906282841 1.91216400164486142107'
6test 1141 line 221 toUtm8.easting: 6300112.758236
6test 1142 line 221 toUtm8.northing: 93835.917364
6test 1143 line 221 toUtm8.gamma: 0.644805
6test 1144 line 221 toUtm8.scale: 1.534073
6test 1145 line 221 toUtm8.lat: 0.553171
6test 1146 line 221 toUtm8.lon: 49.117104
6test 1147 line 222 toUtm8.easting: 3894813.593782
6test 1148 line 222 toUtm8.northing: 4833832.341027
6test 1149 line 222 toUtm8.gamma: 27.453298
6test 1150 line 222 toUtm8.scale: 1.192135
6test 1151 line 222 toUtm8.lat: 35.361587
6test 1152 line 222 toUtm8.lon: 41.860599
6test 1153 line 223 toUtm8.easting: 402511.346712
6test 1154 line 223 toUtm8.northing: 3520621.561911
6test 1155 line 223 toUtm8.gamma: 2.238474
6test 1156 line 223 toUtm8.scale: 1.001599
6test 1157 line 223 toUtm8.lat: 31.750314
6test 1158 line 223 toUtm8.lon: 4.248167
6test 1159 line 224 toUtm8.easting: 5357378.503148
6test 1160 line 224 toUtm8.northing: 2772997.602234
6test 1161 line 224 toUtm8.gamma: 17.823560
6test 1162 line 224 toUtm8.scale: 1.376031
6test 1163 line 224 toUtm8.lat: 17.924336
6test 1164 line 224 toUtm8.lon: 46.096402
6test 1165 line 225 toUtm8.easting: 2807553.985866
6test 1166 line 225 toUtm8.northing: 8177847.980275
6test 1167 line 225 toUtm8.gamma: 54.680045
6test 1168 line 225 toUtm8.scale: 1.097531
6test 1169 line 225 toUtm8.lat: 60.931488
6test 1170 line 225 toUtm8.lon: 58.221214
6test skipped (31): line 226 toUtm8.'5.358150979521 87.556213284144 18289045.16650076146 7792942.3396035398889 73.216494415207315628 8.09800850850277481729'
6test skipped (32): line 227 toUtm8.'28.616673489124 80.452426461437 8376822.4595378634541 8128174.6238782329989 70.920116640676321501 1.98487312027093768388'
6test 1171 line 228 toUtm8.easting: 11898068.352950  FAILED, KNOWN, expected 11898068.353272
6test 1172 line 228 toUtm8.northing: 4772439.493355  FAILED, KNOWN, expected 4772439.493697
6test 1173 line 228 toUtm8.gamma: 42.613968
6test 1174 line 228 toUtm8.scale: 3.314412
6test 1175 line 228 toUtm8.lat: 11.709763
6test 1176 line 228 toUtm8.lon: 76.760295
6test 1177 line 229 toUtm8.easting: 10550946.939052  FAILED, KNOWN, expected 10550946.939050
6test 1178 line 229 toUtm8.northing: 3851968.815305  FAILED, KNOWN, expected 3851968.815295
6test 1179 line 229 toUtm8.gamma: 33.383025
6test 1180 line 229 toUtm8.scale: 2.724754
6test 1181 line 229 toUtm8.lat: 12.009498
6test 1182 line 229 toUtm8.lon: 71.782351
6test skipped (33): line 230 toUtm8.'37.62978386356 85.795687334213 6828299.1236065501034 9394803.2274626281036 83.181386462369626591 1.62435875189611017521'
6test 1183 line 231 toUtm8.easting: 11162550.334001  FAILED, KNOWN, expected 11162550.334022
6test 1184 line 231 toUtm8.northing: 2640267.279546  FAILED, KNOWN, expected 2640267.279593
6test 1185 line 231 toUtm8.gamma: 23.145404
6test 1186 line 231 toUtm8.scale: 2.998408
6test 1187 line 231 toUtm8.lat: 7.721128
6test 1188 line 231 toUtm8.lon: 71.662731
6test 1189 line 232 toUtm8.easting: 4411584.447941
6test 1190 line 232 toUtm8.northing: 4956173.694407
6test 1191 line 232 toUtm8.gamma: 30.713919
6test 1192 line 232 toUtm8.scale: 1.248736
6test 1193 line 232 toUtm8.lat: 34.295026
6test 1194 line 232 toUtm8.lon: 46.442191
6test 1195 line 233 toUtm8.easting: 672108.897905
6test 1196 line 233 toUtm8.northing: 4751554.657054
6test 1197 line 233 toUtm8.gamma: 5.569178
6test 1198 line 233 toUtm8.scale: 1.005162
6test 1199 line 233 toUtm8.lat: 42.622496
6test 1200 line 233 toUtm8.lon: 8.193605
6test 1201 line 234 toUtm8.easting: 5022964.290579
6test 1202 line 234 toUtm8.northing: 6860418.199502
6test 1203 line 234 toUtm8.gamma: 50.862230
6test 1204 line 234 toUtm8.scale: 1.324925
6test 1205 line 234 toUtm8.lat: 41.667780
6test 1206 line 234 toUtm8.lon: 61.518288
6test 1207 line 235 toUtm8.easting: 1669655.595207
6test 1208 line 235 toUtm8.northing: 4152086.537021
6test 1209 line 235 toUtm8.gamma: 11.110237
6test 1210 line 235 toUtm8.scale: 1.034138
6test 1211 line 235 toUtm8.lat: 36.060369
6test 1212 line 235 toUtm8.lon: 18.444112
6test 1213 line 236 toUtm8.easting: 6055876.729655
6test 1214 line 236 toUtm8.northing: 4896837.552619
6test 1215 line 236 toUtm8.gamma: 35.799747
6test 1216 line 236 toUtm8.scale: 1.485967
6test 1217 line 236 toUtm8.lat: 27.948091
6test 1218 line 236 toUtm8.lon: 56.816429
6test 1219 line 237 toUtm8.easting: 1209214.164379
6test 1220 line 237 toUtm8.northing: 7266409.859178
6test 1221 line 237 toUtm8.gamma: 22.319633
6test 1222 line 237 toUtm8.scale: 1.017554
6test 1223 line 237 toUtm8.lat: 63.386030
6test 1224 line 237 toUtm8.lon: 24.662716
6test 1225 line 238 toUtm8.easting: 5154564.559584
6test 1226 line 238 toUtm8.northing: 698118.349975
6test 1227 line 238 toUtm8.gamma: 4.242360
6test 1228 line 238 toUtm8.scale: 1.347481
6test 1229 line 238 toUtm8.lat: 4.680922
6test 1230 line 238 toUtm8.lon: 42.114426
6test 1231 line 239 toUtm8.easting: 2695149.806543
6test 1232 line 239 toUtm8.northing: 8208197.765605
6test 1233 line 239 toUtm8.gamma: 54.178615
6test 1234 line 239 toUtm8.scale: 1.089730
6test 1235 line 239 toUtm8.lat: 61.826625
6test 1236 line 239 toUtm8.lon: 57.525096
6test 1237 line 240 toUtm8.easting: 3394792.327820
6test 1238 line 240 toUtm8.northing: 3217583.415552
6test 1239 line 240 toUtm8.gamma: 15.165863
6test 1240 line 240 toUtm8.scale: 1.145285
6test 1241 line 240 toUtm8.lat: 25.104353
6test 1242 line 240 toUtm8.lon: 32.528660
6test 1243 line 241 toUtm8.easting: 1429160.966985
6test 1244 line 241 toUtm8.northing: 8212685.362032
6test 1245 line 241 toUtm8.gamma: 37.484904
6test 1246 line 241 toUtm8.scale: 1.024676
6test 1247 line 241 toUtm8.lat: 69.678351
6test 1248 line 241 toUtm8.lon: 39.275513
6test skipped (34): line 242 toUtm8.'29.671383681805 84.19659549085 8343387.9980651104898 8885196.9545780118644 78.561937382568633298 1.97473261886829061763'
6test 1249 line 243 toUtm8.easting: 1990722.928606
6test 1250 line 243 toUtm8.northing: 7569202.065162
6test 1251 line 243 toUtm8.gamma: 37.075276
6test 1252 line 243 toUtm8.scale: 1.048486
6test 1253 line 243 toUtm8.lat: 62.300208
6test 1254 line 243 toUtm8.lon: 40.474051
6test 1255 line 244 toUtm8.easting: 1554980.099559
6test 1256 line 244 toUtm8.northing: 1449423.919586
6test 1257 line 244 toUtm8.gamma: 3.188328
6test 1258 line 244 toUtm8.scale: 1.029664
6test 1259 line 244 toUtm8.lat: 12.721776
6test 1260 line 244 toUtm8.lon: 14.190003
6test 1261 line 245 toUtm8.easting: 785205.450196
6test 1262 line 245 toUtm8.northing: 5575158.423096
6test 1263 line 245 toUtm8.gamma: 8.388417
6test 1264 line 245 toUtm8.scale: 1.007181
6test 1265 line 245 toUtm8.lat: 49.811296
6test 1266 line 245 toUtm8.lon: 10.925011
6test 1267 line 246 toUtm8.easting: 3310405.988313
6test 1268 line 246 toUtm8.northing: 5955022.233881
6test 1269 line 246 toUtm8.gamma: 33.007587
6test 1270 line 246 toUtm8.scale: 1.137141
6test 1271 line 246 toUtm8.lat: 45.132680
6test 1272 line 246 toUtm8.lon: 42.478624
6test 1273 line 247 toUtm8.easting: 4733460.960666
6test 1274 line 247 toUtm8.northing: 129034.889816
6test 1275 line 247 toUtm8.gamma: 0.737551
6test 1276 line 247 toUtm8.scale: 1.290439
6test 1277 line 247 toUtm8.lat: 0.904279
6test 1278 line 247 toUtm8.lon: 39.078412
6test 1279 line 248 toUtm8.easting: 3322708.343909
6test 1280 line 248 toUtm8.northing: 3864738.078742
6test 1281 line 248 toUtm8.gamma: 18.472566
6test 1282 line 248 toUtm8.scale: 1.138838
6test 1283 line 248 toUtm8.lat: 30.163605
6test 1284 line 248 toUtm8.lon: 33.577996
6test skipped (35): line 249 toUtm8.'27.643243707755 81.892859091432 8672864.4172042475623 8333465.9834441061554 73.206272638168122883 2.06544053870286774312'
6test skipped (36): line 250 toUtm8.'18.201207657521 82.434617649311 11126818.23119627031 7618712.1749910723126 67.88717347393512063 2.92241673495261070414'
6test skipped (37): line 251 toUtm8.'28.804576432117 89.886072420251 8650100.9817967479337 9975084.1689971279206 89.767446308690086924 2.05728879562910108817'
6test 1285 line 252 toUtm8.easting: 2212701.180192
6test 1286 line 252 toUtm8.northing: 650348.100229
6test 1287 line 252 toUtm8.gamma: 1.970441
6test 1288 line 252 toUtm8.scale: 1.060830
6test 1289 line 252 toUtm8.lat: 5.542998
6test 1290 line 252 toUtm8.lon: 19.589578
6test 1291 line 253 toUtm8.easting: 6890222.326618
6test 1292 line 253 toUtm8.northing: 7506813.499547
6test 1293 line 253 toUtm8.gamma: 62.684825
6test 1294 line 253 toUtm8.scale: 1.638488
6test 1295 line 253 toUtm8.lat: 34.237147
6test 1296 line 253 toUtm8.lon: 73.678164
6test 1297 line 254 toUtm8.easting: 6692260.067325
6test 1298 line 254 toUtm8.northing: 4244174.008110
6test 1299 line 254 toUtm8.gamma: 31.812920
6test 1300 line 254 toUtm8.scale: 1.604640
6test 1301 line 254 toUtm8.lat: 22.704949
6test 1302 line 254 toUtm8.lon: 57.877010
6test 1303 line 255 toUtm8.easting: 1225564.137190
6test 1304 line 255 toUtm8.northing: 4778923.924144
6test 1305 line 255 toUtm8.gamma: 10.083419
6test 1306 line 255 toUtm8.scale: 1.018134
6test 1307 line 255 toUtm8.lat: 42.192424
6test 1308 line 255 toUtm8.lon: 14.828196
6test 1309 line 256 toUtm8.easting: 12341116.155088  FAILED, KNOWN, expected 12341116.154950
6test 1310 line 256 toUtm8.northing: 5081855.520287  FAILED, KNOWN, expected 5081855.521966
6test 1311 line 256 toUtm8.gamma: 45.712545  FAILED, KNOWN, expected 45.712546
6test 1312 line 256 toUtm8.scale: 3.535170
6test 1313 line 256 toUtm8.lat: 11.481151
6test 1314 line 256 toUtm8.lon: 78.189236
6test 1315 line 257 toUtm8.easting: 6673845.021771
6test 1316 line 257 toUtm8.northing: 1177587.190565
6test 1317 line 257 toUtm8.gamma: 8.389141
6test 1318 line 257 toUtm8.scale: 1.605171
6test 1319 line 257 toUtm8.lat: 6.609626
6test 1320 line 257 toUtm8.lon: 51.735783
6test 1321 line 258 toUtm8.easting: 6966354.690417
6test 1322 line 258 toUtm8.northing: 3641802.005093
6test 1323 line 258 toUtm8.gamma: 27.409636
6test 1324 line 258 toUtm8.scale: 1.661469
6test 1325 line 258 toUtm8.lat: 19.059369
6test 1326 line 258 toUtm8.lon: 57.526439
6test 1327 max forward error: 1.678809e-03
6test 1328 max reverse error: 3.170456e-09
6test 1329 Utm.scale0: 0.9996
6test 1330 Utm.datum: WGS84
6test 1331 Utm.datum.ellipsoid.KsOrder: 8
6test 1332 WGS84.KsOrder: 8
623 of 1332 testUtmTMcoords.py tests (1.7%) FAILED, ALL KNOWN, 37 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 72.391 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testUtmUps.py
6testing testUtmUps.py 22.01.03 (module pygeodesy.utmups 22.10.04)
6test 1 UtmUps: 00 N 448251.0 5411932.0001
6test 2 UtmUps.ValidateOK: True
6test 3 UtmUps: 00 N 448252 5411933
6test 4 UtmUps: 00 N 448251.795 5411932.678
6test 5 UtmUps: 00Z N 448251.8 5411932.7 n/a n/a
6test 6 UtmUps.ValidateOK: True
6test 7 UtmUps.toLatLon: 43.684097°N, 175.265195°E
6test 8 UtmUps.toLatLon: 43°41′02.75″N, 175°15′54.7″E
6test 9 LL.toUtmUps: 60 N 360177 4838249
6test 10 LL.toUtmUps: 60 N 360176.686 4838249.416
6test 11 LL.toUtmUps: [Z:60T, H:N, E:360177, N:4838249, C:-1.19839167°, S:0.99984048]
6test 12 LL.toUtmUps.ValidateOK: True
6test 13 toUtmUps8ID1: 00Y N 1530125.78 2426773.6 -132.24798917° 0.99647445
6test 14 toUtmUps8ID1.ValidateOK: True
6test 15 toUtmUps8ID1.ValidateOK: True
6test 16 toUtmUps8ID2: 38 N 467367.68 8100752.13 -57.37878422′ 0.99961302  FAILED, KNOWN, expected 38 N 3320416.75 632668.43 +44.0° 1.01619505
6test 17 toUtmUps8ID2.ValidateOK: True
6test 18 toUtmUps8ID2.ValidateOK: True
6test 19 toUtmUps8ID2: 00 N 3320416.75 632668.43 +44.0° 1.01619505
6test 20 toUtmUps8ID2.ValidateOK: easting (3320416.7473598532): outside UPS range [1300000, 2700000]  FAILED, KNOWN, expected True
6test 21 toUtmUps8ID3: 00B S 2222979.47 1797474.9 -132.24786194° 0.99455723
6test 22 toUtmUps8ID3.ValidateOK: True
6test 23 toUtmUps8ID3.ValidateOK: True
6test 24 UtmUps.toLatLonID4.ValidateOK: True
6test 25 UtmUps.toLatLonID4: 84°17′14.04″N, 132°14′52.76″W
6test 26 UtmUps.toLatLonID4: 84.287234°N, 132.247989°W
6test 27 UtmUps.ValidateOK: easting (3320416.75): outside UPS range [1300000, 2700000]  FAILED, KNOWN, expected True
6test 28 UtmUps.toLatLonID5: 73°00′00.0″N, 044°00′00.0″E
6test 29 UtmUps.toLatLonID5: 73.0°N, 044.0°E
6test 30 UtmUps.ValidateOK: True
6test 31 UtmUps.toLatLonID6: 87°17′14.4″S, 132°14′52.3″E
6test 32 UtmUps.toLatLonID6: 87.287333°S, 132.247861°E
6test 33 latlon1: 61.2°N, 149.9°W
6test 34 toUtmUps8: 06 N 344174 6788521
6test 35 toUtmUps8: 06V N 344173.864114 6788521.418164 -2.54179531° 0.99989751
6test 36 toUtmUps8.ValidateOK: True
6test 37 toMgrs: 06V UN 44173 88521
6test 38 latlon2: LatLon(83°37′37.2″N, 032°39′50.4″W)
6test 39 toUtmUps8: 25 N 504164 9286466
6test 40 toUtmUps8: [Z:25X, H:N, E:504164, N:9286466]
6test 41 toUtmUps8: 25X N 504163.899383 9286465.664902 +20.03542083′ 0.99960021
6test 42 toUtmUps8.ValidateOK: True
6test 43 toMgrs: 25X EN 04163 86465
6test 44 latlon3: 33.33°N, 044.44°E
6test 45 toUtmUps8: 38 N 447882 3688012
6test 46 toUtmUps8: 38S N 447882.413169 3688011.692733 -18.46228466′ 0.99963349
6test 47 toUtmUps8.ValidateOK: True
6test 48 toMgrs: 38S MB 47882 88011
6test 49 latlon4: 79.0°S, 079.0°W
6test 50 toUtmUps8: 17 S 542594 1229296
6test 51 toUtmUps8: 17C S 542594.134555 1229296.157301 -1.96328341° 0.99962217
6test 52 toUtmUps8.ValidateOK: True
6test 53 toMgrs: 17C NN 42594 29296
6test 54 latlon5: 84.0°N, 084.0°E
6test 55 toUtmUps8: 00 N 2663075 1930308
6test 56 toUtmUps8: 00Z N 2663075.299562 1930307.977716 +84.0° 0.99673
6test 57 toUtmUps8.ValidateOK: True
6test 58 latlon6: 13.4125°N, 103.8667°E
6test 59 toUtmUps8: 48 N 377302 1483035
6test 60 toUtmUps8: 48P N 377302.354183 1483034.777084 -15.77480856′ 0.99978623
6test 61 toUtmUps8.ValidateOK: True
6test 62 toMgrs: 48P UV 77302 83034
6test 63 latlon7: 13.4125°S, 103.8667°W
6test 64 LL.toUtmUps: 13 S 622698 8516965
6test 65 LL.toUtmUps: 13L S 622697.645817 8516965.222916 -15.77480856′ 0.99978623
6test 66 LL.toUtmUps.ValidateOK: True
6test 67 toMgrs: 13L FF 22697 16965
6test 68 latlon8: 43.684097°N, 175.265195°E
6test 69 LL.toUtmUps: 60 N 360177 4838249
6test 70 LL.toUtmUps: 60 N 360176.691 4838249.422
6test 71 LL.toUtmUps: [Z:60T, H:N, E:360177, N:4838249, C:-1.19839163°, S:0.99984048]
6test 72 LL.toUtmUps.ValidateOK: True
6test 73 toMgrs: 60T UP 60176 38249
6test 74 UtmUps.toLatLon: 43.684097°N, 175.265195°E
6test 75 UtmUps.toLatLon: 43°41′02.75″N, 175°15′54.7″E
6test 76 latlon9: 41.321801°N, 074.801413°W
6test 77 LL.toUtmUps: 18 N 516620 4574500
6test 78 LL.toUtmUps: [Z:18T, H:N, E:516620, N:4574500, C:+7.86748851′, S:0.9996034]
6test 79 LL.toUtmUps.ValidateOK: True
6test 80 toMgrs: 18T WL 16619 74500
6test 81 UtmUps.toLatLon: 41.321801°N, 074.801413°W
6test 82 UtmUps.toLatLon: 41°19′18.48″N, 074°48′05.09″W
6test 83 parseUTMUPS5: 18 N 516620 4574500
6test 84 parseUTMUPS5.ValidateOK: True
6test 85 UtmUps.toLatLon: 41.321801°N, 074.801413°W
6test 86 UtmUps: 00A S 321441 5810117
6test 87 UtmUps.ValidateOK: easting (321441.0425108216): outside UPS range [800000, 3200000]  FAILED, KNOWN, expected True
6test 88 UtmUps.toLatLon: 53.713776°S, 023.77604°W
6test 89 UtmUps.toLatLon: 53°42′49.59″S, 023°46′33.74″W
6test 90 LL.toUtmUps: 27 S 316807 4044745
6test 91 LL.toUtmUps.ValidateOK: True
6test 92 LL.toUtmUps: 27 S 316807.326 4044744.532
6test 93 LL.toUtmUps: [Z:27F, H:S, E:316807, N:4044745, C:+2.23830171°, S:1.00001184]
6test 94 UtmUps: 00Z N 400000 5000000
6test 95 UtmUps.ValidateOK: True
6test 96 parseUTMUPS5: (31, 'N', 446000.0, 8436100.0, 'X')
6test 97 parseUTMUPS5: (0, 'S', 506346.0, 1057743.0, 'A')
64 of 97 testUtmUps.py tests (4.1%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 8.009 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testUtmUpsTMcoords.py
6testing testUtmUpsTMcoords.py 22.10.04 (module pygeodesy.utmups 22.10.04)
6test 1 line 1 toUtmUps8.easting: 1548706.791619
6test 2 line 1 toUtmUps8.northing: 8451449.198772
6test 3 line 1 toUtmUps8.gamma: 43.922790
6test 4 line 1 toUtmUps8.scale: 1.029060
6test 5 line 1 toUtmUps8.lat: 70.579277
6test 6 line 1 toUtmUps8.lon: 45.599420
6test 7 line 2 toUtmUps8.easting: 2624150.740929
6test 8 line 2 toUtmUps8.northing: 1204434.041605
6test 9 line 2 toUtmUps8.gamma: 4.292619
6test 10 line 2 toUtmUps8.scale: 1.086051
6test 11 line 2 toUtmUps8.lat: 10.018894
6test 12 line 2 toUtmUps8.lon: 23.313324
6test 13 line 3 toUtmUps8.easting: 9855841.232935
6test 14 line 3 toUtmUps8.northing: 6145496.115157  FAILED, KNOWN, expected 6145496.115155
6test 15 line 3 toUtmUps8.gamma: 53.348315
6test 16 line 3 toUtmUps8.scale: 2.445098
6test 17 line 3 toUtmUps8.lat: 19.479896
6test 18 line 3 toUtmUps8.lon: 75.662049
6test 19 line 4 toUtmUps8.easting: 3206390.691996
6test 20 line 4 toUtmUps8.northing: 2650745.400406
6test 21 line 4 toUtmUps8.gamma: 11.666950
6test 22 line 4 toUtmUps8.scale: 1.129359
6test 23 line 4 toUtmUps8.lat: 21.072465
6test 24 line 4 toUtmUps8.lon: 29.828684
6test 25 line 5 toUtmUps8.easting: 4328154.083501
6test 26 line 5 toUtmUps8.northing: 749647.623690
6test 27 line 5 toUtmUps8.gamma: 4.024317
6test 28 line 5 toUtmUps8.scale: 1.240829
6test 29 line 5 toUtmUps8.lat: 5.458957
6test 30 line 5 toUtmUps8.lon: 36.385237
6test 31 line 6 toUtmUps8.easting: 847598.266514
6test 32 line 6 toUtmUps8.northing: 7947180.962440
6test 33 line 6 toUtmUps8.gamma: 21.639091
6test 34 line 6 toUtmUps8.scale: 1.008399
6test 35 line 6 toUtmUps8.lat: 70.175454
6test 36 line 6 toUtmUps8.lon: 22.865350
6test 37 line 7 toUtmUps8.easting: 2727657.337974
6test 38 line 7 toUtmUps8.northing: 8283916.696410
6test 39 line 7 toUtmUps8.gamma: 55.690909
6test 40 line 7 toUtmUps8.scale: 1.091942
6test 41 line 7 toUtmUps8.lat: 61.965605
6test 42 line 7 toUtmUps8.lon: 58.931371
6test 43 line 8 toUtmUps8.easting: 2331001.751890
6test 44 line 8 toUtmUps8.northing: 1313608.224751
6test 45 line 8 toUtmUps8.gamma: 4.214690
6test 46 line 8 toUtmUps8.scale: 1.067599
6test 47 line 8 toUtmUps8.lat: 11.116050
6test 48 line 8 toUtmUps8.lon: 20.901069
6test 49 line 9 toUtmUps8.easting: 6035557.239480
6test 50 line 9 toUtmUps8.northing: 5791770.791879
6test 51 line 9 toUtmUps8.gamma: 43.698170
6test 52 line 9 toUtmUps8.scale: 1.481260
6test 53 line 9 toUtmUps8.lat: 32.210543
6test 54 line 9 toUtmUps8.lon: 60.705849
6test 55 line 10 toUtmUps8.easting: 1064553.125852
6test 56 line 10 toUtmUps8.northing: 9417273.737208
6test 57 line 10 toUtmUps8.gamma: 61.100380
6test 58 line 10 toUtmUps8.scale: 1.013475
6test 59 line 10 toUtmUps8.lat: 79.187451
6test 60 line 10 toUtmUps8.lon: 61.532382
6test 61 line 11 toUtmUps8.easting: 1400137.116164
6test 62 line 11 toUtmUps8.northing: 9616907.017686
6test 63 line 11 toUtmUps8.gamma: 74.527087
6test 64 line 11 toUtmUps8.scale: 1.023640
6test 65 line 11 toUtmUps8.lat: 77.103759
6test 66 line 11 toUtmUps8.lon: 74.899105
6test skipped (1): line 12 toUtmUps8.'21.889514024862 80.019885892785 9860691.0166261508479 7433039.1433282732643 65.357693372142649007 2.43897318400097845293'
6test skipped (2): line 13 toUtmUps8.'30.53629567699 82.186177919416 8076501.8336948099169 8561614.1747819103782 75.073393190238557702 1.90620203595203984732'
6test 67 line 14 toUtmUps8.easting: 3335099.866623
6test 68 line 14 toUtmUps8.northing: 6740519.084015
6test 69 line 14 toUtmUps8.gamma: 40.611821
6test 70 line 14 toUtmUps8.scale: 1.139021
6test 71 line 14 toUtmUps8.lat: 49.990485
6test 72 line 14 toUtmUps8.lon: 48.203179
6test skipped (3): line 15 toUtmUps8.'14.486311853451 80.905136710227 12051574.9284996192629 6587213.0519512810474 59.033236797073779959 3.3574686117030164354'
6test 73 line 16 toUtmUps8.easting: 5387578.735298
6test 74 line 16 toUtmUps8.northing: 4111216.907168
6test 75 line 16 toUtmUps8.gamma: 27.574337
6test 76 line 16 toUtmUps8.scale: 1.379357
6test 77 line 16 toUtmUps8.lat: 25.936824
6test 78 line 16 toUtmUps8.lon: 49.913598
6test 79 line 17 toUtmUps8.easting: 2622214.380233
6test 80 line 17 toUtmUps8.northing: 8678923.984567
6test 81 line 17 toUtmUps8.gamma: 61.697275
6test 82 line 17 toUtmUps8.scale: 1.084810
6test 83 line 17 toUtmUps8.lat: 64.402196
6test 84 line 17 toUtmUps8.lon: 64.091395
6test skipped (4): line 18 toUtmUps8.'48.451353594584 84.856197560189 5068474.169632778036 9492066.9937094951003 83.156739839119105102 1.3299901985118008373'
6test 85 line 19 toUtmUps8.easting: 738062.047779
6test 86 line 19 toUtmUps8.northing: 3031007.074116
6test 87 line 19 toUtmUps8.gamma: 3.416802
6test 88 line 19 toUtmUps8.scale: 1.006332
6test 89 line 19 toUtmUps8.lat: 27.203895
6test 90 line 19 toUtmUps8.lon: 7.440229
6test 91 line 20 toUtmUps8.easting: 1944413.834565
6test 92 line 20 toUtmUps8.northing: 9613299.224493
6test 93 line 20 toUtmUps8.gamma: 78.462831
6test 94 line 20 toUtmUps8.scale: 1.046134
6test 95 line 20 toUtmUps8.lat: 72.509000
6test 96 line 20 toUtmUps8.lon: 78.982283
6test 97 line 21 toUtmUps8.easting: 2114521.418406
6test 98 line 21 toUtmUps8.northing: 4954077.440098
6test 99 line 21 toUtmUps8.gamma: 17.571878
6test 100 line 21 toUtmUps8.scale: 1.055093
6test 101 line 21 toUtmUps8.lat: 41.824954
6test 102 line 21 toUtmUps8.lon: 25.392744
6test 103 line 22 toUtmUps8.easting: 620365.905090
6test 104 line 22 toUtmUps8.northing: 4755542.026562
6test 105 line 22 toUtmUps8.gamma: 5.152022
6test 106 line 22 toUtmUps8.scale: 1.004338
6test 107 line 22 toUtmUps8.lat: 42.701376
6test 108 line 22 toUtmUps8.lon: 7.572738
6test 109 line 23 toUtmUps8.easting: 263004.770989
6test 110 line 23 toUtmUps8.northing: 4493669.762451
6test 111 line 23 toUtmUps8.gamma: 2.020523
6test 112 line 23 toUtmUps8.scale: 1.000452
6test 113 line 23 toUtmUps8.lat: 40.552052
6test 114 line 23 toUtmUps8.lon: 3.106056
6test 115 line 24 toUtmUps8.easting: 3217221.739462
6test 116 line 24 toUtmUps8.northing: 437776.119161
6test 117 line 24 toUtmUps8.gamma: 1.848169
6test 118 line 24 toUtmUps8.scale: 1.130558
6test 119 line 24 toUtmUps8.lat: 3.501242
6test 120 line 24 toUtmUps8.lon: 27.806507
6test skipped (5): line 25 toUtmUps8.'10.148714782203 85.373767569431 14661142.4449607145297 7476100.8241849819567 68.376669038799719822 4.89664968310721668858'
6test 121 line 26 toUtmUps8.easting: 967777.158554
6test 122 line 26 toUtmUps8.northing: 6615684.266592
6test 123 line 26 toUtmUps8.gamma: 14.410044
6test 124 line 26 toUtmUps8.scale: 1.011100
6test 125 line 26 toUtmUps8.lat: 58.582623
6test 126 line 26 toUtmUps8.lon: 16.755558
6test 127 line 27 toUtmUps8.easting: 7558840.728461
6test 128 line 27 toUtmUps8.northing: 4144728.130764
6test 129 line 27 toUtmUps8.gamma: 32.557264
6test 130 line 27 toUtmUps8.scale: 1.791490
6test 131 line 27 toUtmUps8.lat: 19.793004
6test 132 line 27 toUtmUps8.lon: 61.746763
6test 133 line 28 toUtmUps8.easting: 1056008.314161
6test 134 line 28 toUtmUps8.northing: 9290799.692669
6test 135 line 28 toUtmUps8.gamma: 55.843278
6test 136 line 28 toUtmUps8.scale: 1.013253
6test 137 line 28 toUtmUps8.lat: 78.666776
6test 138 line 28 toUtmUps8.lon: 56.365355
6test 139 line 29 toUtmUps8.easting: 1943965.134687
6test 140 line 29 toUtmUps8.northing: 1389972.228690
6test 141 line 29 toUtmUps8.gamma: 3.774869
6test 142 line 29 toUtmUps8.scale: 1.046724
6test 143 line 29 toUtmUps8.lat: 11.998788
6test 144 line 29 toUtmUps8.lon: 17.597873
6test 145 line 30 toUtmUps8.easting: 5803077.072902
6test 146 line 30 toUtmUps8.northing: 5649957.943659
6test 147 line 30 toUtmUps8.gamma: 41.717943
6test 148 line 30 toUtmUps8.scale: 1.442572
6test 149 line 30 toUtmUps8.lat: 32.540378
6test 150 line 30 toUtmUps8.lon: 58.764613
6test 151 line 31 toUtmUps8.easting: 2928716.986009
6test 152 line 31 toUtmUps8.northing: 5731835.058317
6test 153 line 31 toUtmUps8.gamma: 28.538550
6test 154 line 31 toUtmUps8.scale: 1.106780
6test 155 line 31 toUtmUps8.lat: 45.160356
6test 156 line 31 toUtmUps8.lon: 37.465285
6test 157 line 32 toUtmUps8.easting: 326141.975756
6test 158 line 32 toUtmUps8.northing: 8881325.164543
6test 159 line 32 toUtmUps8.gamma: 16.111415
6test 160 line 32 toUtmUps8.scale: 1.000900
6test 161 line 32 toUtmUps8.lat: 79.584190
6test 162 line 32 toUtmUps8.lon: 16.367006
6test 163 line 33 toUtmUps8.easting: 3933015.267450
6test 164 line 33 toUtmUps8.northing: 7932373.909512
6test 165 line 33 toUtmUps8.gamma: 58.577424
6test 166 line 33 toUtmUps8.scale: 1.194811
6test 167 line 33 toUtmUps8.lat: 52.470664
6test 168 line 33 toUtmUps8.lon: 64.125580
6test 169 line 34 toUtmUps8.easting: 8598926.983213
6test 170 line 34 toUtmUps8.northing: 6214135.167503
6test 171 line 34 toUtmUps8.gamma: 52.612878
6test 172 line 34 toUtmUps8.scale: 2.051367
6test 173 line 34 toUtmUps8.lat: 23.702673
6test 174 line 34 toUtmUps8.lon: 72.630363
6test 175 line 35 toUtmUps8.easting: 6620553.333772
6test 176 line 35 toUtmUps8.northing: 6540527.122948
6test 177 line 35 toUtmUps8.gamma: 52.350140
6test 178 line 35 toUtmUps8.scale: 1.586614
6test 179 line 35 toUtmUps8.lat: 32.603520
6test 180 line 35 toUtmUps8.lon: 67.280123
6test 181 line 36 toUtmUps8.easting: 1515136.758292
6test 182 line 36 toUtmUps8.northing: 3858996.087537
6test 183 line 36 toUtmUps8.gamma: 9.225127
6test 184 line 36 toUtmUps8.scale: 1.028029
6test 185 line 36 toUtmUps8.lat: 33.776224
6test 186 line 36 toUtmUps8.lon: 16.280993
6test 187 line 37 toUtmUps8.easting: 479854.373445
6test 188 line 37 toUtmUps8.northing: 8980501.389896
6test 189 line 37 toUtmUps8.gamma: 25.021222
6test 190 line 37 toUtmUps8.scale: 1.002415
6test 191 line 37 toUtmUps8.lat: 79.932747
6test 192 line 37 toUtmUps8.lon: 25.363622
6test 193 line 38 toUtmUps8.easting: 5243446.564940
6test 194 line 38 toUtmUps8.northing: 140657.213960
6test 195 line 38 toUtmUps8.gamma: 0.862817
6test 196 line 38 toUtmUps8.scale: 1.360358
6test 197 line 38 toUtmUps8.lat: 0.935056
6test 198 line 38 toUtmUps8.lon: 42.538824
6test skipped (6): line 39 toUtmUps8.'13.490862440668 83.178380075606 12806457.9232176809509 7170118.6846750266674 64.708921319446620085 3.7405880916836789809'
6test 199 line 40 toUtmUps8.easting: 1202993.459158
6test 200 line 40 toUtmUps8.northing: 5557316.053599
6test 201 line 40 toUtmUps8.gamma: 12.579061
6test 202 line 40 toUtmUps8.scale: 1.017426
6test 203 line 40 toUtmUps8.lat: 48.979057
6test 204 line 40 toUtmUps8.lon: 16.474542
6test 205 line 41 toUtmUps8.easting: 1729088.710196
6test 206 line 41 toUtmUps8.northing: 7770874.289954
6test 207 line 41 toUtmUps8.gamma: 36.021783
6test 208 line 41 toUtmUps8.scale: 1.036397
6test 209 line 41 toUtmUps8.lat: 65.036016
6test 210 line 41 toUtmUps8.lon: 38.729091
6test 211 line 42 toUtmUps8.easting: 2437301.517425
6test 212 line 42 toUtmUps8.northing: 5539327.748318
6test 213 line 42 toUtmUps8.gamma: 23.461879
6test 214 line 42 toUtmUps8.scale: 1.073459
6test 215 line 42 toUtmUps8.lat: 45.510091
6test 216 line 42 toUtmUps8.lon: 31.303729
6test 217 line 43 toUtmUps8.easting: 3647186.135066
6test 218 line 43 toUtmUps8.northing: 2086412.330983
6test 219 line 43 toUtmUps8.gamma: 10.023991
6test 220 line 43 toUtmUps8.scale: 1.168707
6test 221 line 43 toUtmUps8.lat: 16.058010
6test 222 line 43 toUtmUps8.lon: 32.520026
6test 223 line 44 toUtmUps8.easting: 1818497.243556
6test 224 line 44 toUtmUps8.northing: 4275471.745057
6test 225 line 44 toUtmUps8.gamma: 12.499656
6test 226 line 44 toUtmUps8.scale: 1.040604
6test 227 line 44 toUtmUps8.lat: 36.845200
6test 228 line 44 toUtmUps8.lon: 20.282283
6test 229 line 45 toUtmUps8.easting: 3751304.113783
6test 230 line 45 toUtmUps8.northing: 5130454.001592
6test 231 line 45 toUtmUps8.gamma: 28.959707
6test 232 line 45 toUtmUps8.scale: 1.177681
6test 233 line 45 toUtmUps8.lat: 37.865481
6test 234 line 45 toUtmUps8.lon: 41.990402
6test 235 line 46 toUtmUps8.easting: 2616733.138544
6test 236 line 46 toUtmUps8.northing: 394644.463815
6test 237 line 46 toUtmUps8.gamma: 1.390425
6test 238 line 46 toUtmUps8.scale: 1.085595
6test 239 line 46 toUtmUps8.lat: 3.287272
6test 240 line 46 toUtmUps8.lon: 22.917604
6test 241 line 47 toUtmUps8.easting: 1756506.573942
6test 242 line 47 toUtmUps8.northing: 5570393.986394
6test 243 line 47 toUtmUps8.gamma: 17.897894
6test 244 line 47 toUtmUps8.scale: 1.037732
6test 245 line 47 toUtmUps8.lat: 47.813686
6test 246 line 47 toUtmUps8.lon: 23.545092
6test 247 line 48 toUtmUps8.easting: 8752461.894711
6test 248 line 48 toUtmUps8.northing: 6087728.152284
6test 249 line 48 toUtmUps8.gamma: 51.628465
6test 250 line 48 toUtmUps8.scale: 2.095465
6test 251 line 48 toUtmUps8.lat: 22.836853
6test 252 line 48 toUtmUps8.lon: 72.604385
6test 253 line 49 toUtmUps8.easting: 1309272.216432
6test 254 line 49 toUtmUps8.northing: 59520.028899
6test 255 line 49 toUtmUps8.gamma: 0.109069
6test 256 line 49 toUtmUps8.scale: 1.020897
6test 257 line 49 toUtmUps8.lat: 0.527262
6test 258 line 49 toUtmUps8.lon: 11.684209
6test 259 line 50 toUtmUps8.easting: 328652.277129
6test 260 line 50 toUtmUps8.northing: 2233043.958874
6test 261 line 50 toUtmUps8.gamma: 1.084863
6test 262 line 50 toUtmUps8.scale: 1.000935
6test 263 line 50 toUtmUps8.lat: 20.166742
6test 264 line 50 toUtmUps8.lon: 3.143948
6test skipped (7): line 51 toUtmUps8.'28.604629015528 85.988721094779 8637959.7164470998207 9190635.1560309800028 81.802562643198123218 2.05432863342852874819'
6test skipped (8): line 52 toUtmUps8.'28.984047991106 85.833447775172 8548521.4551470334531 9172410.9432821880799 81.583928102890161419 2.02964145862183583179'
6test 265 line 53 toUtmUps8.easting: 796987.281104
6test 266 line 53 toUtmUps8.northing: 7677446.357675
6test 267 line 53 toUtmUps8.gamma: 18.084472
6test 268 line 53 toUtmUps8.scale: 1.007381
6test 269 line 53 toUtmUps8.lat: 68.071020
6test 270 line 53 toUtmUps8.lon: 19.392823
6test skipped (9): line 54 toUtmUps8.'61.416576191872 81.981611413918 3291036.4967623295988 9513199.6006662170596 80.890253980644739593 1.13482563910814382209'
6test 271 line 55 toUtmUps8.easting: 7087225.330906
6test 272 line 55 toUtmUps8.northing: 8382823.855822
6test 273 line 55 toUtmUps8.gamma: 72.253756
6test 274 line 55 toUtmUps8.scale: 1.678070
6test 275 line 55 toUtmUps8.lat: 35.074753
6test 276 line 55 toUtmUps8.lon: 79.496003
6test 277 line 56 toUtmUps8.easting: 5090358.125724
6test 278 line 56 toUtmUps8.northing: 4318294.133489
6test 279 line 56 toUtmUps8.gamma: 28.266280
6test 280 line 56 toUtmUps8.scale: 1.336264
6test 281 line 56 toUtmUps8.lat: 28.078790
6test 282 line 56 toUtmUps8.lon: 48.684350
6test skipped (10): line 57 toUtmUps8.'84.986930137199 2.067177857261 20163.0752214330146 9438635.9888499043815 2.059277291707588222 .99960496589466017622'
6test 283 line 58 toUtmUps8.easting: 3447670.550785
6test 284 line 58 toUtmUps8.northing: 3680238.888223
6test 285 line 58 toUtmUps8.gamma: 17.934948
6test 286 line 58 toUtmUps8.scale: 1.149831
6test 287 line 58 toUtmUps8.lat: 28.473948
6test 288 line 58 toUtmUps8.lon: 34.127306
6test 289 line 59 toUtmUps8.easting: 3396522.906798
6test 290 line 59 toUtmUps8.northing: 8093659.687593
6test 291 line 59 toUtmUps8.gamma: 57.747117
6test 292 line 59 toUtmUps8.scale: 1.144006
6test 293 line 59 toUtmUps8.lat: 56.629354
6test 294 line 59 toUtmUps8.lon: 62.196474
6test 295 line 60 toUtmUps8.easting: 11249894.100794  FAILED, KNOWN, expected 11249894.100784
6test 296 line 60 toUtmUps8.northing: 1619226.506360  FAILED, KNOWN, expected 1619226.506299
6test 297 line 60 toUtmUps8.gamma: 14.210358
6test 298 line 60 toUtmUps8.scale: 3.048347
6test 299 line 60 toUtmUps8.lat: 4.747762
6test 300 line 60 toUtmUps8.lon: 70.932555
6test 301 line 61 toUtmUps8.easting: 6808805.230950
6test 302 line 61 toUtmUps8.northing: 8044779.777369
6test 303 line 61 toUtmUps8.gamma: 68.242008
6test 304 line 61 toUtmUps8.scale: 1.621464
6test 305 line 61 toUtmUps8.lat: 35.882113
6test 306 line 61 toUtmUps8.lon: 76.741849
6test 307 line 62 toUtmUps8.easting: 2306021.556506
6test 308 line 62 toUtmUps8.northing: 757191.592866
6test 309 line 62 toUtmUps8.gamma: 2.385686
6test 310 line 62 toUtmUps8.scale: 1.066159
6test 311 line 62 toUtmUps8.lat: 6.420705
6test 312 line 62 toUtmUps8.lon: 20.416028
6test 313 line 63 toUtmUps8.easting: 1547406.313862
6test 314 line 63 toUtmUps8.northing: 6048712.751824
6test 315 line 63 toUtmUps8.gamma: 18.474372
6test 316 line 63 toUtmUps8.scale: 1.029123
6test 317 line 63 toUtmUps8.lat: 52.335248
6test 318 line 63 toUtmUps8.lon: 22.879294
6test 319 line 64 toUtmUps8.easting: 2430467.650383
6test 320 line 64 toUtmUps8.northing: 7557167.613972
6test 321 line 64 toUtmUps8.gamma: 42.110021
6test 322 line 64 toUtmUps8.scale: 1.072759
6test 323 line 64 toUtmUps8.lat: 59.846391
6test 324 line 64 toUtmUps8.lon: 46.262536
6test 325 line 65 toUtmUps8.easting: 2334053.905830
6test 326 line 65 toUtmUps8.northing: 1948076.966582
6test 327 line 65 toUtmUps8.gamma: 6.353185
6test 328 line 65 toUtmUps8.scale: 1.067733
6test 329 line 65 toUtmUps8.lat: 16.461790
6test 330 line 65 toUtmUps8.lon: 21.433269
6test 331 line 66 toUtmUps8.easting: 5564175.186737
6test 332 line 66 toUtmUps8.northing: 1836851.660412
6test 333 line 66 toUtmUps8.gamma: 11.870682
6test 334 line 66 toUtmUps8.scale: 1.408265
6test 335 line 66 toUtmUps8.lat: 11.707905
6test 336 line 66 toUtmUps8.lon: 45.827075
6test 337 line 67 toUtmUps8.easting: 6118505.590359
6test 338 line 67 toUtmUps8.northing: 7631684.552421
6test 339 line 67 toUtmUps8.gamma: 62.477323
6test 340 line 67 toUtmUps8.scale: 1.493420
6test 341 line 67 toUtmUps8.lat: 38.519075
6test 342 line 67 toUtmUps8.lon: 71.935918
6test skipped (11): line 68 toUtmUps8.'34.264007222954 82.647878110272 7365359.2946646287171 8818194.4515306837741 77.207042218974141605 1.73763853091849729372'
6test 343 line 69 toUtmUps8.easting: 36187.342415
6test 344 line 69 toUtmUps8.northing: 2142565.324802
6test 345 line 69 toUtmUps8.gamma: 0.114334
6test 346 line 69 toUtmUps8.scale: 0.999616
6test 347 line 69 toUtmUps8.lat: 19.376880
6test 348 line 69 toUtmUps8.lon: 0.344605
6test 349 line 70 toUtmUps8.easting: 2380328.546851
6test 350 line 70 toUtmUps8.northing: 8440109.872384
6test 351 line 70 toUtmUps8.gamma: 55.076067
6test 352 line 70 toUtmUps8.scale: 1.069658
6test 353 line 70 toUtmUps8.lat: 65.075805
6test 354 line 70 toUtmUps8.lon: 57.653438
6test 355 line 71 toUtmUps8.easting: 582511.608826
6test 356 line 71 toUtmUps8.northing: 8876047.217071
6test 357 line 71 toUtmUps8.gamma: 27.133300
6test 358 line 71 toUtmUps8.scale: 1.003749
6test 359 line 71 toUtmUps8.lat: 78.691870
6test 360 line 71 toUtmUps8.lon: 27.591736
6test 361 line 72 toUtmUps8.easting: 899441.350477
6test 362 line 72 toUtmUps8.northing: 4582046.430516
6test 363 line 72 toUtmUps8.gamma: 7.031211
6test 364 line 72 toUtmUps8.scale: 1.009573
6test 365 line 72 toUtmUps8.lat: 40.893022
6test 366 line 72 toUtmUps8.lon: 10.668804
6test skipped (12): line 73 toUtmUps8.'48.914278679322 87.35926802682 5022485.1243369246483 9741774.9337207800497 86.505947369926030588 1.32369954850478170836'
6test 367 line 74 toUtmUps8.easting: 6701004.587204
6test 368 line 74 toUtmUps8.northing: 2954368.258231
6test 369 line 74 toUtmUps8.gamma: 21.560153
6test 370 line 74 toUtmUps8.scale: 1.608554
6test 371 line 74 toUtmUps8.lat: 16.208377
6test 372 line 74 toUtmUps8.lon: 54.494282
6test 373 line 75 toUtmUps8.easting: 454986.218897
6test 374 line 75 toUtmUps8.northing: 4885087.887884
6test 375 line 75 toUtmUps8.gamma: 3.945648
6test 376 line 75 toUtmUps8.scale: 1.002147
6test 377 line 75 toUtmUps8.lat: 43.977936
6test 378 line 75 toUtmUps8.lon: 5.672541
6test skipped (13): line 76 toUtmUps8.'26.850860749352 82.834479937822 8903956.1403106503714 8470608.5774824981183 74.723116471645531699 2.13131124920824155268'
6test 379 line 77 toUtmUps8.easting: 1547627.594741
6test 380 line 77 toUtmUps8.northing: 6036584.538347
6test 381 line 77 toUtmUps8.gamma: 18.407629
6test 382 line 77 toUtmUps8.scale: 1.029132
6test 383 line 77 toUtmUps8.lat: 52.234165
6test 384 line 77 toUtmUps8.lon: 22.827655
6test 385 line 78 toUtmUps8.easting: 5221488.778597
6test 386 line 78 toUtmUps8.northing: 1762592.044392
6test 387 line 78 toUtmUps8.gamma: 10.927880
6test 388 line 78 toUtmUps8.scale: 1.356721
6test 389 line 78 toUtmUps8.lat: 11.674646
6test 390 line 78 toUtmUps8.lon: 43.500147
6test 391 line 79 toUtmUps8.easting: 4880570.297161
6test 392 line 79 toUtmUps8.northing: 3325433.988867
6test 393 line 79 toUtmUps8.gamma: 20.469862
6test 394 line 79 toUtmUps8.scale: 1.308476
6test 395 line 79 toUtmUps8.lat: 22.492753
6test 396 line 79 toUtmUps8.lon: 44.179153
6test skipped (14): line 80 toUtmUps8.'.910999463005 88.548822916123 23930680.0826936110445 7491462.0990379651261 75.937628056628715446 15.55636485152285563369'
6test 397 line 81 toUtmUps8.easting: 71519.450458
6test 398 line 81 toUtmUps8.northing: 3654740.444852
6test 399 line 81 toUtmUps8.gamma: 0.417448
6test 400 line 81 toUtmUps8.scale: 0.999663
6test 401 line 81 toUtmUps8.lat: 33.028802
6test 402 line 81 toUtmUps8.lon: 0.765843
6test 403 line 82 toUtmUps8.easting: 4152797.795220
6test 404 line 82 toUtmUps8.northing: 7823098.502751
6test 405 line 82 toUtmUps8.gamma: 58.238901
6test 406 line 82 toUtmUps8.scale: 1.218052
6test 407 line 82 toUtmUps8.lat: 50.649195
6test 408 line 82 toUtmUps8.lon: 64.389076
6test 409 line 83 toUtmUps8.easting: 2926725.707639
6test 410 line 83 toUtmUps8.northing: 7904918.072844
6test 411 line 83 toUtmUps8.gamma: 51.592748
6test 412 line 83 toUtmUps8.scale: 1.106206
6test 413 line 83 toUtmUps8.lat: 58.820640
6test 414 line 83 toUtmUps8.lon: 55.841048
6test 415 line 84 toUtmUps8.easting: 1325509.113869
6test 416 line 84 toUtmUps8.northing: 9675214.948213
6test 417 line 84 toUtmUps8.gamma: 76.116213
6test 418 line 84 toUtmUps8.scale: 1.021136
6test 419 line 84 toUtmUps8.lat: 77.865762
6test 420 line 84 toUtmUps8.lon: 76.414618
6test 421 line 85 toUtmUps8.easting: 3045296.448926
6test 422 line 85 toUtmUps8.northing: 542153.443280
6test 423 line 85 toUtmUps8.gamma: 2.185095
6test 424 line 85 toUtmUps8.scale: 1.116664
6test 425 line 85 toUtmUps8.lat: 4.389639
6test 426 line 85 toUtmUps8.lon: 26.458976
6test 427 line 86 toUtmUps8.easting: 11843870.887791  FAILED, KNOWN, expected 11843870.887518
6test 428 line 86 toUtmUps8.northing: 5912803.073690  FAILED, KNOWN, expected 5912803.073343
6test 429 line 86 toUtmUps8.gamma: 52.814260  FAILED, KNOWN, expected 52.814259
6test 430 line 86 toUtmUps8.scale: 3.267256
6test 431 line 86 toUtmUps8.lat: 13.924448
6test 432 line 86 toUtmUps8.lon: 79.017873
6test 433 line 87 toUtmUps8.easting: 8891099.704936
6test 434 line 87 toUtmUps8.northing: 162160.142227
6test 435 line 87 toUtmUps8.gamma: 1.312094
6test 436 line 87 toUtmUps8.scale: 2.157363
6test 437 line 87 toUtmUps8.lat: 0.679713
6test 438 line 87 toUtmUps8.lon: 62.036792
6test 439 line 88 toUtmUps8.easting: 4784814.214449
6test 440 line 88 toUtmUps8.northing: 2984497.432580
6test 441 line 88 toUtmUps8.gamma: 17.946545
6test 442 line 88 toUtmUps8.scale: 1.296116
6test 443 line 88 toUtmUps8.lat: 20.478281
6test 444 line 88 toUtmUps8.lon: 42.678234
6test 445 line 89 toUtmUps8.easting: 1772074.682154
6test 446 line 89 toUtmUps8.northing: 9491552.560143
6test 447 line 89 toUtmUps8.gamma: 73.634830
6test 448 line 89 toUtmUps8.scale: 1.038202
6test 449 line 89 toUtmUps8.lat: 73.695703
6test 450 line 89 toUtmUps8.lon: 74.259097
6test 451 line 90 toUtmUps8.easting: 1907649.782106
6test 452 line 90 toUtmUps8.northing: 6994232.429379
6test 453 line 90 toUtmUps8.gamma: 29.718929
6test 454 line 90 toUtmUps8.scale: 1.044503
6test 455 line 90 toUtmUps8.lat: 58.569370
6test 456 line 90 toUtmUps8.lon: 33.777549
6test 457 line 91 toUtmUps8.easting: 2084423.818962
6test 458 line 91 toUtmUps8.northing: 2211816.035619
6test 459 line 91 toUtmUps8.gamma: 6.556448
6test 460 line 91 toUtmUps8.scale: 1.053793
6test 461 line 91 toUtmUps8.lat: 18.933881
6test 462 line 91 toUtmUps8.lon: 19.492695
6test 463 line 92 toUtmUps8.easting: 1064373.671729
6test 464 line 92 toUtmUps8.northing: 7812482.547461
6test 465 line 92 toUtmUps8.gamma: 24.874124
6test 466 line 92 toUtmUps8.scale: 1.013490
6test 467 line 92 toUtmUps8.lat: 68.317934
6test 468 line 92 toUtmUps8.lon: 26.515687
6test skipped (15): line 93 toUtmUps8.'50.641941364984 87.111556505544 4770385.4792965339274 9734318.9029801439364 86.27311877223132818 1.29055338238288419467'
6test 469 line 94 toUtmUps8.easting: 6398096.677297
6test 470 line 94 toUtmUps8.northing: 4410894.752104
6test 471 line 94 toUtmUps8.gamma: 32.558023
6test 472 line 94 toUtmUps8.scale: 1.548004
6test 473 line 94 toUtmUps8.lat: 24.411298
6test 474 line 94 toUtmUps8.lon: 56.881823
6test 475 line 95 toUtmUps8.easting: 3138623.300415
6test 476 line 95 toUtmUps8.northing: 3082960.600798
6test 477 line 95 toUtmUps8.gamma: 13.557672
6test 478 line 95 toUtmUps8.scale: 1.123724
6test 479 line 95 toUtmUps8.lat: 24.571871
6test 480 line 95 toUtmUps8.lon: 30.073097
6test 481 line 96 toUtmUps8.easting: 2748325.794651
6test 482 line 96 toUtmUps8.northing: 4202811.912668
6test 483 line 96 toUtmUps8.gamma: 17.578706
6test 484 line 96 toUtmUps8.scale: 1.094102
6test 485 line 96 toUtmUps8.lat: 34.202576
6test 486 line 96 toUtmUps8.lon: 29.383166
6test 487 line 97 toUtmUps8.easting: 6677830.630367
6test 488 line 97 toUtmUps8.northing: 5350071.837395
6test 489 line 97 toUtmUps8.gamma: 41.306641
6test 490 line 97 toUtmUps8.scale: 1.599774
6test 491 line 97 toUtmUps8.lat: 27.756285
6test 492 line 97 toUtmUps8.lon: 61.881905
6test 493 line 98 toUtmUps8.easting: 5941536.667431
6test 494 line 98 toUtmUps8.northing: 3293112.175140
6test 495 line 98 toUtmUps8.gamma: 22.752845
6test 496 line 98 toUtmUps8.scale: 1.468473
6test 497 line 98 toUtmUps8.lat: 19.742270
6test 498 line 98 toUtmUps8.lon: 50.957821
6test 499 line 99 toUtmUps8.easting: 3152481.792567
6test 500 line 99 toUtmUps8.northing: 5903048.837978
6test 501 line 99 toUtmUps8.gamma: 31.494606
6test 502 line 99 toUtmUps8.scale: 1.124085
6test 503 line 99 toUtmUps8.lat: 45.453582
6test 504 line 99 toUtmUps8.lon: 40.659833
6test 505 line 100 toUtmUps8.easting: 10460475.897726  FAILED, KNOWN, expected 10460475.897730
6test 506 line 100 toUtmUps8.northing: 2553463.624385  FAILED, KNOWN, expected 2553463.624391
6test 507 line 100 toUtmUps8.gamma: 21.965869
6test 508 line 100 toUtmUps8.scale: 2.700296
6test 509 line 100 toUtmUps8.lat: 8.322144
6test 510 line 100 toUtmUps8.lon: 69.488157
6test 511 line 101 toUtmUps8.easting: 1964010.778021
6test 512 line 101 toUtmUps8.northing: 5634042.923056
6test 513 line 101 toUtmUps8.gamma: 20.117800
6test 514 line 101 toUtmUps8.scale: 1.047344
6test 515 line 101 toUtmUps8.lat: 47.749831
6test 516 line 101 toUtmUps8.lon: 26.322002
6test 517 line 102 toUtmUps8.easting: 2065306.424934
6test 518 line 102 toUtmUps8.northing: 2135008.468651
6test 519 line 102 toUtmUps8.gamma: 6.258981
6test 520 line 102 toUtmUps8.scale: 1.052800
6test 521 line 102 toUtmUps8.lat: 18.297493
6test 522 line 102 toUtmUps8.lon: 19.244669
6test 523 line 103 toUtmUps8.easting: 5127738.132976
6test 524 line 103 toUtmUps8.northing: 6793804.304411
6test 525 line 103 toUtmUps8.gamma: 50.557915
6test 526 line 103 toUtmUps8.scale: 1.339412
6test 527 line 103 toUtmUps8.lat: 40.834541
6test 528 line 103 toUtmUps8.lon: 61.650750
6test 529 line 104 toUtmUps8.easting: 8385525.148166
6test 530 line 104 toUtmUps8.northing: 6924932.344306
6test 531 line 104 toUtmUps8.gamma: 59.087561
6test 532 line 104 toUtmUps8.scale: 1.990364
6test 533 line 104 toUtmUps8.lat: 26.273247
6test 534 line 104 toUtmUps8.lon: 74.926694
6test 535 line 105 toUtmUps8.easting: 2297510.791909
6test 536 line 105 toUtmUps8.northing: 2805666.962834
6test 537 line 105 toUtmUps8.gamma: 9.301553
6test 538 line 105 toUtmUps8.scale: 1.065508
6test 539 line 105 toUtmUps8.lat: 23.698347
6test 540 line 105 toUtmUps8.lon: 22.155657
6test skipped (16): line 106 toUtmUps8.'12.364112546807 86.348578425071 13749544.9176345767153 8288728.3846500523233 75.033969786420407131 4.27058754359004466627'
6test 541 line 107 toUtmUps8.easting: 317518.455546
6test 542 line 107 toUtmUps8.northing: 1097517.583745
6test 543 line 107 toUtmUps8.gamma: 0.499004
6test 544 line 107 toUtmUps8.scale: 1.000848
6test 545 line 107 toUtmUps8.lat: 9.916091
6test 546 line 107 toUtmUps8.lon: 2.895277
6test 547 line 108 toUtmUps8.easting: 3856035.184888
6test 548 line 108 toUtmUps8.northing: 9141364.450290
6test 549 line 108 toUtmUps8.gamma: 75.972763
6test 550 line 108 toUtmUps8.scale: 1.186786
6test 551 line 108 toUtmUps8.lat: 56.553876
6test 552 line 108 toUtmUps8.lon: 78.215077
6test 553 line 109 toUtmUps8.easting: 1457484.942823
6test 554 line 109 toUtmUps8.northing: 9385297.101973
6test 555 line 109 toUtmUps8.gamma: 66.784662
6test 556 line 109 toUtmUps8.scale: 1.025660
6test 557 line 109 toUtmUps8.lat: 75.957631
6test 558 line 109 toUtmUps8.lon: 67.407383
6test 559 line 110 toUtmUps8.easting: 1304934.901841
6test 560 line 110 toUtmUps8.northing: 3604655.155715
6test 561 line 110 toUtmUps8.gamma: 7.343989
6test 562 line 110 toUtmUps8.scale: 1.020672
6test 563 line 110 toUtmUps8.lat: 31.826531
6test 564 line 110 toUtmUps8.lon: 13.731050
6test 565 line 111 toUtmUps8.easting: 1399093.491792
6test 566 line 111 toUtmUps8.northing: 8314607.120342
6test 567 line 111 toUtmUps8.gamma: 38.630161
6test 568 line 111 toUtmUps8.scale: 1.023625
6test 569 line 111 toUtmUps8.lat: 70.542985
6test 570 line 111 toUtmUps8.lon: 40.282055
6test 571 line 112 toUtmUps8.easting: 356983.618540
6test 572 line 112 toUtmUps8.northing: 4282309.048994
6test 573 line 112 toUtmUps8.gamma: 2.561485
6test 574 line 112 toUtmUps8.scale: 1.001170
6test 575 line 112 toUtmUps8.lat: 38.617487
6test 576 line 112 toUtmUps8.lon: 4.099838
6test 577 line 113 toUtmUps8.easting: 9952911.325092  FAILED, KNOWN, expected 9952911.325091
6test 578 line 113 toUtmUps8.northing: 1510288.212230  FAILED, KNOWN, expected 1510288.212229
6test 579 line 113 toUtmUps8.gamma: 12.752154
6test 580 line 113 toUtmUps8.scale: 2.511357
6test 581 line 113 toUtmUps8.lat: 5.389447
6test 582 line 113 toUtmUps8.lon: 66.729612
6test 583 line 114 toUtmUps8.easting: 6367592.504007
6test 584 line 114 toUtmUps8.northing: 1200437.077672
6test 585 line 114 toUtmUps8.gamma: 8.338041
6test 586 line 114 toUtmUps8.scale: 1.546210
6test 587 line 114 toUtmUps8.lat: 6.995168
6test 588 line 114 toUtmUps8.lon: 50.014763
6test 589 line 115 toUtmUps8.easting: 4391263.676460
6test 590 line 115 toUtmUps8.northing: 6325455.989408
6test 591 line 115 toUtmUps8.gamma: 42.653541
6test 592 line 115 toUtmUps8.scale: 1.245560
6test 593 line 115 toUtmUps8.lat: 42.321894
6test 594 line 115 toUtmUps8.lon: 53.784040
6test 595 line 116 toUtmUps8.easting: 6209880.527527
6test 596 line 116 toUtmUps8.northing: 2154754.449747
6test 597 line 116 toUtmUps8.gamma: 14.919512
6test 598 line 116 toUtmUps8.scale: 1.516560
6test 599 line 116 toUtmUps8.lat: 12.698515
6test 600 line 116 toUtmUps8.lon: 50.242047
6test 601 line 117 toUtmUps8.easting: 1507053.688772
6test 602 line 117 toUtmUps8.northing: 6261383.513280
6test 603 line 117 toUtmUps8.gamma: 19.280373
6test 604 line 117 toUtmUps8.scale: 1.027584
6test 605 line 117 toUtmUps8.lat: 54.207636
6test 606 line 117 toUtmUps8.lon: 23.325731
6test 607 line 118 toUtmUps8.easting: 8332725.003777
6test 608 line 118 toUtmUps8.northing: 3002712.329753
6test 609 line 118 toUtmUps8.gamma: 24.059212
6test 610 line 118 toUtmUps8.scale: 1.990450
6test 611 line 118 toUtmUps8.lat: 13.224787
6test 612 line 118 toUtmUps8.lon: 62.426698
6test 613 line 119 toUtmUps8.easting: 3958910.085235
6test 614 line 119 toUtmUps8.northing: 3462284.926102
6test 615 line 119 toUtmUps8.gamma: 18.546398
6test 616 line 119 toUtmUps8.scale: 1.199351
6test 617 line 119 toUtmUps8.lat: 25.650282
6test 618 line 119 toUtmUps8.lon: 37.710391
6test skipped (17): line 120 toUtmUps8.'20.684773383075 82.849734261238 10452892.2820830090734 8000059.6051139389546 71.07524025411428855 2.6501109339363854772'
6test 619 line 121 toUtmUps8.easting: 496148.253731
6test 620 line 121 toUtmUps8.northing: 6388503.365043
6test 621 line 121 toUtmUps8.gamma: 6.970955
6test 622 line 121 toUtmUps8.scale: 1.002620
6test 623 line 121 toUtmUps8.lat: 57.367533
6test 624 line 121 toUtmUps8.lon: 8.260866
6test 625 line 122 toUtmUps8.easting: 7375792.085850
6test 626 line 122 toUtmUps8.northing: 5544624.072155
6test 627 line 122 toUtmUps8.gamma: 44.510851
6test 628 line 122 toUtmUps8.scale: 1.745898
6test 629 line 122 toUtmUps8.lat: 25.958757
6test 630 line 122 toUtmUps8.lon: 65.760477
6test 631 line 123 toUtmUps8.easting: 2826258.041979
6test 632 line 123 toUtmUps8.northing: 5167759.816959
6test 633 line 123 toUtmUps8.gamma: 23.783897
6test 634 line 123 toUtmUps8.scale: 1.099415
6test 635 line 123 toUtmUps8.lat: 41.395848
6test 636 line 123 toUtmUps8.lon: 33.661790
6test 637 line 124 toUtmUps8.easting: 3958563.378851
6test 638 line 124 toUtmUps8.northing: 8499923.231243
6test 639 line 124 toUtmUps8.gamma: 66.570945
6test 640 line 124 toUtmUps8.scale: 1.197296
6test 641 line 124 toUtmUps8.lat: 54.266617
6test 642 line 124 toUtmUps8.lon: 70.602199
6test 643 line 125 toUtmUps8.easting: 4408189.533462
6test 644 line 125 toUtmUps8.northing: 8046312.003642
6test 645 line 125 toUtmUps8.gamma: 62.216959
6test 646 line 125 toUtmUps8.scale: 1.246750
6test 647 line 125 toUtmUps8.lat: 49.840393
6test 648 line 125 toUtmUps8.lon: 68.036728
6test 649 line 126 toUtmUps8.easting: 3629225.627512
6test 650 line 126 toUtmUps8.northing: 6371258.454645
6test 651 line 126 toUtmUps8.gamma: 38.881675
6test 652 line 126 toUtmUps8.scale: 1.165511
6test 653 line 126 toUtmUps8.lat: 46.306035
6test 654 line 126 toUtmUps8.lon: 48.085828
6test 655 line 127 toUtmUps8.easting: 602838.450710
6test 656 line 127 toUtmUps8.northing: 4851370.637205
6test 657 line 127 toUtmUps8.gamma: 5.160395
6test 658 line 127 toUtmUps8.scale: 1.004073
6test 659 line 127 toUtmUps8.lat: 43.570988
6test 660 line 127 toUtmUps8.lon: 7.464494
6test 661 line 128 toUtmUps8.easting: 764616.665051
6test 662 line 128 toUtmUps8.northing: 2164299.337945
6test 663 line 128 toUtmUps8.gamma: 2.429300
6test 664 line 128 toUtmUps8.scale: 1.006835
6test 665 line 128 toUtmUps8.lat: 19.427290
6test 666 line 128 toUtmUps8.lon: 7.268247
6test 667 line 129 toUtmUps8.easting: 5048953.021931
6test 668 line 129 toUtmUps8.northing: 1885974.057398
6test 669 line 129 toUtmUps8.gamma: 11.459804
6test 670 line 129 toUtmUps8.scale: 1.332207
6test 671 line 129 toUtmUps8.lat: 12.713794
6test 672 line 129 toUtmUps8.lon: 42.507018
6test 673 line 130 toUtmUps8.easting: 2293996.601155
6test 674 line 130 toUtmUps8.northing: 2392408.644221
6test 675 line 130 toUtmUps8.gamma: 7.791838
6test 676 line 130 toUtmUps8.scale: 1.065348
6test 677 line 130 toUtmUps8.lat: 20.238782
6test 678 line 130 toUtmUps8.lon: 21.566068
6test 679 line 131 toUtmUps8.easting: 1530603.839418
6test 680 line 131 toUtmUps8.northing: 7287841.459898
6test 681 line 131 toUtmUps8.gamma: 27.502921
6test 682 line 131 toUtmUps8.scale: 1.028416
6test 683 line 131 toUtmUps8.lat: 62.367847
6test 684 line 131 toUtmUps8.lon: 30.438849
6test 685 line 132 toUtmUps8.easting: 2660000.093152
6test 686 line 132 toUtmUps8.northing: 5161982.213248
6test 687 line 132 toUtmUps8.gamma: 22.629836
6test 688 line 132 toUtmUps8.scale: 1.087851
6test 689 line 132 toUtmUps8.lat: 41.891569
6test 690 line 132 toUtmUps8.lon: 31.959547
6test 691 line 133 toUtmUps8.easting: 5037478.329414
6test 692 line 133 toUtmUps8.northing: 8768172.379908
6test 693 line 133 toUtmUps8.gamma: 73.511182
6test 694 line 133 toUtmUps8.scale: 1.325919
6test 695 line 133 toUtmUps8.lat: 47.664248
6test 696 line 133 toUtmUps8.lon: 77.630062
6test 697 line 134 toUtmUps8.easting: 2289650.957799
6test 698 line 134 toUtmUps8.northing: 8784328.593607
6test 699 line 134 toUtmUps8.gamma: 60.786067
6test 700 line 134 toUtmUps8.scale: 1.064346
6test 701 line 134 toUtmUps8.lat: 67.259559
6test 702 line 134 toUtmUps8.lon: 62.715293
6test 703 line 135 toUtmUps8.easting: 647913.889744
6test 704 line 135 toUtmUps8.northing: 6742382.228217
6test 705 line 135 toUtmUps8.gamma: 10.252667
6test 706 line 135 toUtmUps8.scale: 1.004748
6test 707 line 135 toUtmUps8.lat: 60.295381
6test 708 line 135 toUtmUps8.lon: 11.763097
6test 709 line 136 toUtmUps8.easting: 1118372.698566
6test 710 line 136 toUtmUps8.northing: 9040627.942263
6test 711 line 136 toUtmUps8.gamma: 48.936803
6test 712 line 136 toUtmUps8.scale: 1.014920
6test 713 line 136 toUtmUps8.lat: 76.878914
6test 714 line 136 toUtmUps8.lon: 49.685773
6test 715 line 137 toUtmUps8.easting: 440696.510070
6test 716 line 137 toUtmUps8.northing: 5500355.826297
6test 717 line 137 toUtmUps8.gamma: 4.636104
6test 718 line 137 toUtmUps8.scale: 1.001986
6test 719 line 137 toUtmUps8.lat: 49.495349
6test 720 line 137 toUtmUps8.lon: 6.087551
6test 721 line 138 toUtmUps8.easting: 601728.149727
6test 722 line 138 toUtmUps8.northing: 9095352.048149
6test 723 line 138 toUtmUps8.gamma: 33.435771
6test 724 line 138 toUtmUps8.scale: 1.004027
6test 725 line 138 toUtmUps8.lat: 80.297265
6test 726 line 138 toUtmUps8.lon: 33.816372
6test 727 line 139 toUtmUps8.easting: 3481444.777827
6test 728 line 139 toUtmUps8.northing: 291665.708749
6test 729 line 139 toUtmUps8.gamma: 1.314726
6test 730 line 139 toUtmUps8.scale: 1.153534
6test 731 line 139 toUtmUps8.lat: 2.286437
6test 732 line 139 toUtmUps8.lon: 29.855149
6test 733 line 140 toUtmUps8.easting: 3515304.901524
6test 734 line 140 toUtmUps8.northing: 1443981.882918
6test 735 line 140 toUtmUps8.gamma: 6.641638
6test 736 line 140 toUtmUps8.scale: 1.156509
6test 737 line 140 toUtmUps8.lat: 11.264457
6test 738 line 140 toUtmUps8.lon: 30.743907
6test 739 line 141 toUtmUps8.easting: 160012.186959
6test 740 line 141 toUtmUps8.northing: 3922609.253231
6test 741 line 141 toUtmUps8.gamma: 1.022225
6test 742 line 141 toUtmUps8.scale: 0.999916
6test 743 line 141 toUtmUps8.lat: 35.434073
6test 744 line 141 toUtmUps8.lon: 1.762795
6test 745 line 142 toUtmUps8.easting: 4163744.245622
6test 746 line 142 toUtmUps8.northing: 936884.674804
6test 747 line 142 toUtmUps8.gamma: 4.892559
6test 748 line 142 toUtmUps8.scale: 1.222164
6test 749 line 142 toUtmUps8.lat: 6.923695
6test 750 line 142 toUtmUps8.lon: 35.289456
6test 751 line 143 toUtmUps8.easting: 6155200.017926
6test 752 line 143 toUtmUps8.northing: 6926306.628390
6test 753 line 143 toUtmUps8.gamma: 55.103258
6test 754 line 143 toUtmUps8.scale: 1.500556
6test 755 line 143 toUtmUps8.lat: 36.129672
6test 756 line 143 toUtmUps8.lon: 67.533176
6test skipped (18): line 144 toUtmUps8.'4.406528980638 81.965734206053 16263383.2854400911299 3591296.7313406507021 36.040254103487111035 6.58928781751888396522'
6test skipped (19): line 145 toUtmUps8.'8.474589009114 81.129945130597 14220995.5153984992101 5100587.4575033509156 47.314258427760984573 4.69320221531225352172'
6test 757 line 146 toUtmUps8.easting: 3173034.802372
6test 758 line 146 toUtmUps8.northing: 7263421.942957
6test 759 line 146 toUtmUps8.gamma: 45.215808
6test 760 line 146 toUtmUps8.scale: 1.125410
6test 761 line 146 toUtmUps8.lat: 53.907276
6test 762 line 146 toUtmUps8.lon: 51.252904
6test skipped (20): line 147 toUtmUps8.'22.120544817855 85.756781608119 10253274.0922039670098 8867574.2997916978265 79.198250285604314115 2.57237240666878171579'
6test 763 line 148 toUtmUps8.easting: 2415561.483230
6test 764 line 148 toUtmUps8.northing: 8813225.217097
6test 765 line 148 toUtmUps8.gamma: 62.548978
6test 766 line 148 toUtmUps8.scale: 1.071748
6test 767 line 148 toUtmUps8.lat: 66.444100
6test 768 line 148 toUtmUps8.lon: 64.532960
6test 769 line 149 toUtmUps8.easting: 9589179.293294  FAILED, KNOWN, expected 9589179.293295
6test 770 line 149 toUtmUps8.northing: 1777680.784144  FAILED, KNOWN, expected 1777680.784143
6test 771 line 149 toUtmUps8.gamma: 14.838483
6test 772 line 149 toUtmUps8.scale: 2.380716
6test 773 line 149 toUtmUps8.lat: 6.670965
6test 774 line 149 toUtmUps8.lon: 65.660408
6test 775 line 150 toUtmUps8.easting: 727939.438391
6test 776 line 150 toUtmUps8.northing: 3684363.236810
6test 777 line 150 toUtmUps8.gamma: 4.266227
6test 778 line 150 toUtmUps8.scale: 1.006140
6test 779 line 150 toUtmUps8.lat: 33.054057
6test 780 line 150 toUtmUps8.lon: 7.787458
6test 781 line 151 toUtmUps8.easting: 1250765.991085
6test 782 line 151 toUtmUps8.northing: 792869.242719
6test 783 line 151 toUtmUps8.gamma: 1.396497
6test 784 line 151 toUtmUps8.scale: 1.019026
6test 785 line 151 toUtmUps8.lat: 7.035525
6test 786 line 151 toUtmUps8.lon: 11.253707
6test 787 line 152 toUtmUps8.easting: 710421.705887
6test 788 line 152 toUtmUps8.northing: 5019406.075928
6test 789 line 152 toUtmUps8.gamma: 6.393949
6test 790 line 152 toUtmUps8.scale: 1.005812
6test 791 line 152 toUtmUps8.lat: 44.971340
6test 792 line 152 toUtmUps8.lon: 9.009304
6test 793 line 153 toUtmUps8.easting: 4600995.074643
6test 794 line 153 toUtmUps8.northing: 4505712.084593
6test 795 line 153 toUtmUps8.gamma: 27.997458
6test 796 line 153 toUtmUps8.scale: 1.271841
6test 797 line 153 toUtmUps8.lat: 30.821397
6test 798 line 153 toUtmUps8.lon: 45.970577
6test 799 line 154 toUtmUps8.easting: 557642.627782
6test 800 line 154 toUtmUps8.northing: 7006911.251644
6test 801 line 154 toUtmUps8.gamma: 9.769903
6test 802 line 154 toUtmUps8.scale: 1.003411
6test 803 line 154 toUtmUps8.lat: 62.763886
6test 804 line 154 toUtmUps8.lon: 10.960144
6test 805 line 155 toUtmUps8.easting: 4635062.294291
6test 806 line 155 toUtmUps8.northing: 2702556.153311
6test 807 line 155 toUtmUps8.gamma: 15.779547
6test 808 line 155 toUtmUps8.scale: 1.277178
6test 809 line 155 toUtmUps8.lat: 18.888611
6test 810 line 155 toUtmUps8.lon: 41.009871
6test skipped (21): line 156 toUtmUps8.'7.524119461376 81.050715469439 14554962.2559189870471 4716639.9085720199214 44.192751352918149954 4.96001986321419027847'
6test 811 line 157 toUtmUps8.easting: 882126.661736
6test 812 line 157 toUtmUps8.northing: 7947612.369506
6test 813 line 157 toUtmUps8.gamma: 22.429487
6test 814 line 157 toUtmUps8.scale: 1.009132
6test 815 line 157 toUtmUps8.lat: 70.063902
6test 816 line 157 toUtmUps8.lon: 23.705255
6test skipped (22): line 158 toUtmUps8.'3.556525834215 88.363529198819 20262021.6459832969292 8113827.8207957955275 76.936057264555500879 10.34909168211805703369'
6test 817 line 159 toUtmUps8.easting: 6500508.399850
6test 818 line 159 toUtmUps8.northing: 6956476.342368
6test 819 line 159 toUtmUps8.gamma: 56.237116
6test 820 line 159 toUtmUps8.scale: 1.563162
6test 821 line 159 toUtmUps8.lat: 34.551257
6test 822 line 159 toUtmUps8.lon: 69.111091
6test 823 line 160 toUtmUps8.easting: 3884036.641314
6test 824 line 160 toUtmUps8.northing: 6890167.411733
6test 825 line 160 toUtmUps8.gamma: 45.760130
6test 826 line 160 toUtmUps8.scale: 1.190167
6test 827 line 160 toUtmUps8.lat: 47.929051
6test 828 line 160 toUtmUps8.lon: 54.103418
6test 829 line 161 toUtmUps8.easting: 217855.546078
6test 830 line 161 toUtmUps8.northing: 6184108.122568
6test 831 line 161 toUtmUps8.gamma: 2.870993
6test 832 line 161 toUtmUps8.scale: 1.000182
6test 833 line 161 toUtmUps8.lat: 55.753536
6test 834 line 161 toUtmUps8.lon: 3.471798
6test skipped (23): line 162 toUtmUps8.'18.530847071862 86.555312055898 11384139.290401676268 8893889.9495562311576 79.77485364572019046 3.02467156922968230025'
6test 835 line 163 toUtmUps8.easting: 3469855.989805
6test 836 line 163 toUtmUps8.northing: 7723193.799228
6test 837 line 163 toUtmUps8.gamma: 53.114700
6test 838 line 163 toUtmUps8.scale: 1.150540
6test 839 line 163 toUtmUps8.lat: 54.510125
6test 840 line 163 toUtmUps8.lon: 58.556056
6test skipped (24): line 164 toUtmUps8.'42.864161881687 84.866325602975 5926165.994939154109 9385463.7327467371322 82.506981261616342016 1.45975761947329382411'
6test 841 line 165 toUtmUps8.easting: 5798639.662224
6test 842 line 165 toUtmUps8.northing: 5305387.640916
6test 843 line 165 toUtmUps8.gamma: 38.617257
6test 844 line 165 toUtmUps8.scale: 1.442263
6test 845 line 165 toUtmUps8.lat: 30.911943
6test 846 line 165 toUtmUps8.lon: 57.114102
6test 847 line 166 toUtmUps8.easting: 9464.934388
6test 848 line 166 toUtmUps8.northing: 6489121.624944
6test 849 line 166 toUtmUps8.gamma: 0.138696
6test 850 line 166 toUtmUps8.scale: 0.999601
6test 851 line 166 toUtmUps8.lat: 58.542493
6test 852 line 166 toUtmUps8.lon: 0.162593
6test skipped (25): line 167 toUtmUps8.'15.022689088683 85.792615487152 12575834.2756139069875 8356610.8954857643175 75.235223160840771295 3.59944161831319404851'
6test 853 line 168 toUtmUps8.easting: 2719653.543469
6test 854 line 168 toUtmUps8.northing: 9362389.163495
6test 855 line 168 toUtmUps8.gamma: 76.049670
6test 856 line 168 toUtmUps8.scale: 1.091315
6test 857 line 168 toUtmUps8.lat: 65.692275
6test 858 line 168 toUtmUps8.lon: 77.241377
6test 859 line 169 toUtmUps8.easting: 4845341.924698
6test 860 line 169 toUtmUps8.northing: 8710522.326901
6test 861 line 169 toUtmUps8.gamma: 72.320942
6test 862 line 169 toUtmUps8.scale: 1.300382
6test 863 line 169 toUtmUps8.lat: 48.806211
6test 864 line 169 toUtmUps8.lon: 76.486365
6test skipped (26): line 170 toUtmUps8.'56.436024794624 82.61156798689 3935261.5227628794258 9454271.6490618694486 81.162334302626197333 1.19476734082123451158'
6test 865 line 171 toUtmUps8.easting: 7074299.823000
6test 866 line 171 toUtmUps8.northing: 1648736.065055
6test 867 line 171 toUtmUps8.gamma: 12.145925
6test 868 line 171 toUtmUps8.scale: 1.687551
6test 869 line 171 toUtmUps8.lat: 8.766053
6test 870 line 171 toUtmUps8.lon: 54.367539
6test 871 line 172 toUtmUps8.easting: 3689072.579308
6test 872 line 172 toUtmUps8.northing: 2230802.665211
6test 873 line 172 toUtmUps8.gamma: 10.856248
6test 874 line 172 toUtmUps8.scale: 1.172689
6test 875 line 172 toUtmUps8.lat: 17.095495
6test 876 line 172 toUtmUps8.lon: 33.059128
6test 877 line 173 toUtmUps8.easting: 8102565.885587
6test 878 line 173 toUtmUps8.northing: 5167396.617580
6test 879 line 173 toUtmUps8.gamma: 42.324886
6test 880 line 173 toUtmUps8.scale: 1.921927
6test 881 line 173 toUtmUps8.lat: 22.142861
6test 882 line 173 toUtmUps8.lon: 67.200684
6test 883 line 174 toUtmUps8.easting: 8181271.353564
6test 884 line 174 toUtmUps8.northing: 4425436.547185
6test 885 line 174 toUtmUps8.gamma: 35.900845
6test 886 line 174 toUtmUps8.scale: 1.945017
6test 887 line 174 toUtmUps8.lat: 19.222623
6test 888 line 174 toUtmUps8.lon: 65.180785
6test 889 line 175 toUtmUps8.easting: 767067.394003
6test 890 line 175 toUtmUps8.northing: 3701745.857296
6test 891 line 175 toUtmUps8.gamma: 4.519201
6test 892 line 175 toUtmUps8.scale: 1.006863
6test 893 line 175 toUtmUps8.lat: 33.182474
6test 894 line 175 toUtmUps8.lon: 8.216952
6test 895 line 176 toUtmUps8.easting: 6688114.168572
6test 896 line 176 toUtmUps8.northing: 2052857.299639
6test 897 line 176 toUtmUps8.gamma: 14.766191
6test 898 line 176 toUtmUps8.scale: 1.607200
6test 899 line 176 toUtmUps8.lat: 11.417963
6test 900 line 176 toUtmUps8.lon: 52.808691
6test 901 line 177 toUtmUps8.easting: 5608408.773761
6test 902 line 177 toUtmUps8.northing: 3859055.659110
6test 903 line 177 toUtmUps8.gamma: 26.244151
6test 904 line 177 toUtmUps8.scale: 1.413463
6test 905 line 177 toUtmUps8.lat: 23.836688
6test 906 line 177 toUtmUps8.lon: 50.500180
6test 907 line 178 toUtmUps8.easting: 3836942.765275
6test 908 line 178 toUtmUps8.northing: 6415467.634326
6test 909 line 178 toUtmUps8.gamma: 40.575885
6test 910 line 178 toUtmUps8.scale: 1.185615
6test 911 line 178 toUtmUps8.lat: 45.550020
6test 912 line 178 toUtmUps8.lon: 50.148036
6test 913 line 179 toUtmUps8.easting: 1298730.366025
6test 914 line 179 toUtmUps8.northing: 6021453.000792
6test 915 line 179 toUtmUps8.gamma: 15.613320
6test 916 line 179 toUtmUps8.scale: 1.020367
6test 917 line 179 toUtmUps8.lat: 52.746079
6test 918 line 179 toUtmUps8.lon: 19.343926
6test 919 line 180 toUtmUps8.easting: 416934.289208
6test 920 line 180 toUtmUps8.northing: 7295683.451705
6test 921 line 180 toUtmUps8.gamma: 8.238232
6test 922 line 180 toUtmUps8.scale: 1.001729
6test 923 line 180 toUtmUps8.lat: 65.513348
6test 924 line 180 toUtmUps8.lon: 9.039529
6test 925 line 181 toUtmUps8.easting: 4336076.850889
6test 926 line 181 toUtmUps8.northing: 7617975.722779
6test 927 line 181 toUtmUps8.gamma: 56.537088
6test 928 line 181 toUtmUps8.scale: 1.238582
6test 929 line 181 toUtmUps8.lat: 48.709795
6test 930 line 181 toUtmUps8.lon: 63.554005
6test 931 line 182 toUtmUps8.easting: 168047.336980
6test 932 line 182 toUtmUps8.northing: 2185000.046530
6test 933 line 182 toUtmUps8.gamma: 0.542187
6test 934 line 182 toUtmUps8.scale: 0.999949
6test 935 line 182 toUtmUps8.lat: 19.753509
6test 936 line 182 toUtmUps8.lon: 1.603846
6test 937 line 183 toUtmUps8.easting: 8276281.328790
6test 938 line 183 toUtmUps8.northing: 263444.350545
6test 939 line 183 toUtmUps8.gamma: 2.071435
6test 940 line 183 toUtmUps8.scale: 1.980314
6test 941 line 183 toUtmUps8.lat: 1.202816
6test 942 line 183 toUtmUps8.lon: 59.377276
6test 943 line 184 toUtmUps8.easting: 4772573.810710
6test 944 line 184 toUtmUps8.northing: 6765710.336002
6test 945 line 184 toUtmUps8.gamma: 48.857561
6test 946 line 184 toUtmUps8.scale: 1.291911
6test 947 line 184 toUtmUps8.lat: 42.564975
6test 948 line 184 toUtmUps8.lon: 59.356947
6test 949 line 185 toUtmUps8.easting: 5427755.074639
6test 950 line 185 toUtmUps8.northing: 1556055.820924
6test 951 line 185 toUtmUps8.gamma: 9.862178
6test 952 line 185 toUtmUps8.scale: 1.387394
6test 953 line 185 toUtmUps8.lat: 10.090572
6test 954 line 185 toUtmUps8.lon: 44.604132
6test 955 line 186 toUtmUps8.easting: 11588458.616240  FAILED, KNOWN, expected 11588458.616041
6test 956 line 186 toUtmUps8.northing: 5707993.922683  FAILED, KNOWN, expected 5707993.922613
6test 957 line 186 toUtmUps8.gamma: 50.784827
6test 958 line 186 toUtmUps8.scale: 3.149567
6test 959 line 186 toUtmUps8.lat: 14.133028
6test 960 line 186 toUtmUps8.lon: 78.097533
6test 961 line 187 toUtmUps8.easting: 7152433.802688
6test 962 line 187 toUtmUps8.northing: 761390.695844
6test 963 line 187 toUtmUps8.gamma: 5.607350
6test 964 line 187 toUtmUps8.scale: 1.705261
6test 965 line 187 toUtmUps8.lat: 4.031123
6test 966 line 187 toUtmUps8.lon: 54.048782
6test 967 line 188 toUtmUps8.easting: 3105651.390901
6test 968 line 188 toUtmUps8.northing: 9426026.169064
6test 969 line 188 toUtmUps8.gamma: 78.750206
6test 970 line 188 toUtmUps8.scale: 1.119737
6test 971 line 188 toUtmUps8.lat: 62.746603
6test 972 line 188 toUtmUps8.lon: 79.968641
6test 973 line 189 toUtmUps8.easting: 2959009.639022
6test 974 line 189 toUtmUps8.northing: 8339242.269282
6test 975 line 189 toUtmUps8.gamma: 58.460865
6test 976 line 189 toUtmUps8.scale: 1.108554
6test 977 line 189 toUtmUps8.lat: 60.626429
6test 978 line 189 toUtmUps8.lon: 61.851551
6test 979 line 190 toUtmUps8.easting: 8640472.267145
6test 980 line 190 toUtmUps8.northing: 6230320.417931
6test 981 line 190 toUtmUps8.gamma: 52.816810
6test 982 line 190 toUtmUps8.scale: 2.062973
6test 983 line 190 toUtmUps8.lat: 23.600626
6test 984 line 190 toUtmUps8.lon: 72.811634
6test 985 line 191 toUtmUps8.easting: 811352.108932
6test 986 line 191 toUtmUps8.northing: 9816129.813481
6test 987 line 191 toUtmUps8.gamma: 77.299184
6test 988 line 191 toUtmUps8.scale: 1.007651
6test 989 line 191 toUtmUps8.lat: 82.572236
6test 990 line 191 toUtmUps8.lon: 77.402323
6test 991 line 192 toUtmUps8.easting: 6521874.973458
6test 992 line 192 toUtmUps8.northing: 1053612.479744
6test 993 line 192 toUtmUps8.gamma: 7.407328
6test 994 line 192 toUtmUps8.scale: 1.575529
6test 995 line 192 toUtmUps8.lat: 6.030051
6test 996 line 192 toUtmUps8.lon: 50.783505
6test 997 line 193 toUtmUps8.easting: 3477983.997875
6test 998 line 193 toUtmUps8.northing: 5651613.325947
6test 999 line 193 toUtmUps8.gamma: 31.530673
6test 1000 line 193 toUtmUps8.scale: 1.151875
6test 1001 line 193 toUtmUps8.lat: 42.411523
6test 1002 line 193 toUtmUps8.lon: 42.258009
6test 1003 line 194 toUtmUps8.easting: 629892.822243
6test 1004 line 194 toUtmUps8.northing: 3283914.910451
6test 1005 line 194 toUtmUps8.gamma: 3.210482
6test 1006 line 194 toUtmUps8.scale: 1.004499
6test 1007 line 194 toUtmUps8.lat: 29.526120
6test 1008 line 194 toUtmUps8.lon: 6.493069
6test 1009 line 195 toUtmUps8.easting: 3381879.687227
6test 1010 line 195 toUtmUps8.northing: 5103629.325665
6test 1011 line 195 toUtmUps8.gamma: 26.748108
6test 1012 line 195 toUtmUps8.scale: 1.143559
6test 1013 line 195 toUtmUps8.lat: 39.021853
6test 1014 line 195 toUtmUps8.lon: 38.641779
6test 1015 line 196 toUtmUps8.easting: 2815986.534177
6test 1016 line 196 toUtmUps8.northing: 9387029.120718
6test 1017 line 196 toUtmUps8.gamma: 76.967262
6test 1018 line 196 toUtmUps8.scale: 1.098032
6test 1019 line 196 toUtmUps8.lat: 64.971850
6test 1020 line 196 toUtmUps8.lon: 78.151893
6test 1021 line 197 toUtmUps8.easting: 3398195.889603
6test 1022 line 197 toUtmUps8.northing: 9138936.031490
6test 1023 line 197 toUtmUps8.gamma: 74.477499
6test 1024 line 197 toUtmUps8.scale: 1.144009
6test 1025 line 197 toUtmUps8.lat: 59.961819
6test 1026 line 197 toUtmUps8.lon: 76.473422
6test 1027 line 198 toUtmUps8.easting: 2421734.754637
6test 1028 line 198 toUtmUps8.northing: 5002372.094991
6test 1029 line 198 toUtmUps8.gamma: 20.017082
6test 1030 line 198 toUtmUps8.scale: 1.072592
6test 1031 line 198 toUtmUps8.lat: 41.374040
6test 1032 line 198 toUtmUps8.lon: 28.848343
6test 1033 line 199 toUtmUps8.easting: 2360869.895525
6test 1034 line 199 toUtmUps8.northing: 9553298.449536
6test 1035 line 199 toUtmUps8.gamma: 78.848205
6test 1036 line 199 toUtmUps8.scale: 1.068453
6test 1037 line 199 toUtmUps8.lat: 68.946087
6test 1038 line 199 toUtmUps8.lon: 79.574523
6test skipped (27): line 200 toUtmUps8.'79.275096210569 83.551272329394 1196539.9721941076965 9861920.8362302532842 83.437668440198132309 1.01713723718699411107'
6test 1039 line 201 toUtmUps8.easting: 1327758.704795
6test 1040 line 201 toUtmUps8.northing: 2375509.241683
6test 1041 line 201 toUtmUps8.gamma: 4.617572
6test 1042 line 201 toUtmUps8.scale: 1.021465
6test 1043 line 201 toUtmUps8.lat: 21.000252
6test 1044 line 201 toUtmUps8.lon: 12.697444
6test 1045 line 202 toUtmUps8.easting: 2070860.327644
6test 1046 line 202 toUtmUps8.northing: 8604500.719581
6test 1047 line 202 toUtmUps8.gamma: 54.722761
6test 1048 line 202 toUtmUps8.scale: 1.052469
6test 1049 line 202 toUtmUps8.lat: 68.015227
6test 1050 line 202 toUtmUps8.lon: 56.732419
6test 1051 line 203 toUtmUps8.easting: 6564776.654864
6test 1052 line 203 toUtmUps8.northing: 8171207.177379
6test 1053 line 203 toUtmUps8.gamma: 69.237523
6test 1054 line 203 toUtmUps8.scale: 1.573894
6test 1055 line 203 toUtmUps8.lat: 37.423675
6test 1056 line 203 toUtmUps8.lon: 76.947359
6test 1057 line 204 toUtmUps8.easting: 592653.553821
6test 1058 line 204 toUtmUps8.northing: 6125529.810052
6test 1059 line 204 toUtmUps8.gamma: 7.600785
6test 1060 line 204 toUtmUps8.scale: 1.003912
6test 1061 line 204 toUtmUps8.lat: 54.922707
6test 1062 line 204 toUtmUps8.lon: 9.260818
6test 1063 line 205 toUtmUps8.easting: 693459.671821
6test 1064 line 205 toUtmUps8.northing: 6943779.991032
6test 1065 line 205 toUtmUps8.gamma: 11.787587
6test 1066 line 205 toUtmUps8.scale: 1.005496
6test 1067 line 205 toUtmUps8.lat: 61.982810
6test 1068 line 205 toUtmUps8.lon: 13.299659
6test 1069 line 206 toUtmUps8.easting: 1838956.187625
6test 1070 line 206 toUtmUps8.northing: 3511959.612381
6test 1071 line 206 toUtmUps8.gamma: 9.844313
6test 1072 line 206 toUtmUps8.scale: 1.041603
6test 1073 line 206 toUtmUps8.lat: 30.324214
6test 1074 line 206 toUtmUps8.lon: 18.959769
6test 1075 line 207 toUtmUps8.easting: 4460690.884597
6test 1076 line 207 toUtmUps8.northing: 5541873.235403
6test 1077 line 207 toUtmUps8.gamma: 35.768613
6test 1078 line 207 toUtmUps8.scale: 1.254179
6test 1079 line 207 toUtmUps8.lat: 37.629667
6test 1080 line 207 toUtmUps8.lon: 49.649131
6test 1081 line 208 toUtmUps8.easting: 2311168.998941
6test 1082 line 208 toUtmUps8.northing: 9480561.869119
6test 1083 line 208 toUtmUps8.gamma: 76.828257
6test 1084 line 208 toUtmUps8.scale: 1.065556
6test 1085 line 208 toUtmUps8.lat: 69.225574
6test 1086 line 208 toUtmUps8.lon: 77.656135
6test 1087 line 209 toUtmUps8.easting: 4111775.114451
6test 1088 line 209 toUtmUps8.northing: 6509014.348792
6test 1089 line 209 toUtmUps8.gamma: 43.052130
6test 1090 line 209 toUtmUps8.scale: 1.214125
6test 1091 line 209 toUtmUps8.lat: 44.698478
6test 1092 line 209 toUtmUps8.lon: 52.979304
6test 1093 line 210 toUtmUps8.easting: 75358.261962
6test 1094 line 210 toUtmUps8.northing: 7711258.662251
6test 1095 line 210 toUtmUps8.gamma: 1.806297
6test 1096 line 210 toUtmUps8.scale: 0.999669
6test 1097 line 210 toUtmUps8.lat: 69.499594
6test 1098 line 210 toUtmUps8.lon: 1.928336
6test skipped (28): line 211 toUtmUps8.'27.981363604998 86.061112755721 8781885.2291162503299 9184776.4522114918448 81.795538514711932534 2.09490761781464961377'
6test 1099 line 212 toUtmUps8.easting: 954378.415174
6test 1100 line 212 toUtmUps8.northing: 7449110.669807
6test 1101 line 212 toUtmUps8.gamma: 19.380657
6test 1102 line 212 toUtmUps8.scale: 1.010768
6test 1103 line 212 toUtmUps8.lat: 65.699839
6test 1104 line 212 toUtmUps8.lon: 21.104725
6test 1105 line 213 toUtmUps8.easting: 720971.793706
6test 1106 line 213 toUtmUps8.northing: 5265195.121555
6test 1107 line 213 toUtmUps8.gamma: 7.002995
6test 1108 line 213 toUtmUps8.scale: 1.005995
6test 1109 line 213 toUtmUps8.lat: 47.143648
6test 1110 line 213 toUtmUps8.lon: 9.512189
6test 1111 line 214 toUtmUps8.easting: 561561.493937
6test 1112 line 214 toUtmUps8.northing: 989910.236221
6test 1113 line 214 toUtmUps8.gamma: 0.793118
6test 1114 line 214 toUtmUps8.scale: 1.003505
6test 1115 line 214 toUtmUps8.lat: 8.920167
6test 1116 line 214 toUtmUps8.lon: 5.101513
6test 1117 line 215 toUtmUps8.easting: 3446829.634468
6test 1118 line 215 toUtmUps8.northing: 9232868.155664
6test 1119 line 215 toUtmUps8.gamma: 76.279075
6test 1120 line 215 toUtmUps8.scale: 1.148263
6test 1121 line 215 toUtmUps8.lat: 59.778971
6test 1122 line 215 toUtmUps8.lon: 78.080322
6test skipped (29): line 216 toUtmUps8.'55.865310107291 87.384288430943 4048307.5459092527942 9800416.4229977935137 86.843918034217523739 1.20649504624906774925'
6test 1123 line 217 toUtmUps8.easting: 8973188.480293
6test 1124 line 217 toUtmUps8.northing: 7042230.087021
6test 1125 line 217 toUtmUps8.gamma: 60.872456
6test 1126 line 217 toUtmUps8.scale: 2.156098
6test 1127 line 217 toUtmUps8.lat: 24.310973
6test 1128 line 217 toUtmUps8.lon: 76.823777
6test 1129 line 218 toUtmUps8.easting: 126314.191618
6test 1130 line 218 toUtmUps8.northing: 396006.687921
6test 1131 line 218 toUtmUps8.gamma: 0.071065
6test 1132 line 218 toUtmUps8.scale: 0.999798
6test 1133 line 218 toUtmUps8.lat: 3.582041
6test 1134 line 218 toUtmUps8.lon: 1.137286
6test 1135 line 219 toUtmUps8.easting: 5247652.345647
6test 1136 line 219 toUtmUps8.northing: 8670513.359752
6test 1137 line 219 toUtmUps8.gamma: 72.700498
6test 1138 line 219 toUtmUps8.scale: 1.355272
6test 1139 line 219 toUtmUps8.lat: 46.124233
6test 1140 line 219 toUtmUps8.lon: 77.313118
6test skipped (30): line 220 toUtmUps8.'31.17139056295 87.104503768139 8103656.8381187232079 9469794.014736839373 84.490673011906282841 1.91216400164486142107'
6test 1141 line 221 toUtmUps8.easting: 6300112.758236
6test 1142 line 221 toUtmUps8.northing: 93835.917364
6test 1143 line 221 toUtmUps8.gamma: 0.644805
6test 1144 line 221 toUtmUps8.scale: 1.534073
6test 1145 line 221 toUtmUps8.lat: 0.553171
6test 1146 line 221 toUtmUps8.lon: 49.117104
6test 1147 line 222 toUtmUps8.easting: 3894813.593782
6test 1148 line 222 toUtmUps8.northing: 4833832.341027
6test 1149 line 222 toUtmUps8.gamma: 27.453298
6test 1150 line 222 toUtmUps8.scale: 1.192135
6test 1151 line 222 toUtmUps8.lat: 35.361587
6test 1152 line 222 toUtmUps8.lon: 41.860599
6test 1153 line 223 toUtmUps8.easting: 402511.346712
6test 1154 line 223 toUtmUps8.northing: 3520621.561911
6test 1155 line 223 toUtmUps8.gamma: 2.238474
6test 1156 line 223 toUtmUps8.scale: 1.001599
6test 1157 line 223 toUtmUps8.lat: 31.750314
6test 1158 line 223 toUtmUps8.lon: 4.248167
6test 1159 line 224 toUtmUps8.easting: 5357378.503148
6test 1160 line 224 toUtmUps8.northing: 2772997.602234
6test 1161 line 224 toUtmUps8.gamma: 17.823560
6test 1162 line 224 toUtmUps8.scale: 1.376031
6test 1163 line 224 toUtmUps8.lat: 17.924336
6test 1164 line 224 toUtmUps8.lon: 46.096402
6test 1165 line 225 toUtmUps8.easting: 2807553.985866
6test 1166 line 225 toUtmUps8.northing: 8177847.980275
6test 1167 line 225 toUtmUps8.gamma: 54.680045
6test 1168 line 225 toUtmUps8.scale: 1.097531
6test 1169 line 225 toUtmUps8.lat: 60.931488
6test 1170 line 225 toUtmUps8.lon: 58.221214
6test skipped (31): line 226 toUtmUps8.'5.358150979521 87.556213284144 18289045.16650076146 7792942.3396035398889 73.216494415207315628 8.09800850850277481729'
6test skipped (32): line 227 toUtmUps8.'28.616673489124 80.452426461437 8376822.4595378634541 8128174.6238782329989 70.920116640676321501 1.98487312027093768388'
6test 1171 line 228 toUtmUps8.easting: 11898068.352950  FAILED, KNOWN, expected 11898068.353272
6test 1172 line 228 toUtmUps8.northing: 4772439.493355  FAILED, KNOWN, expected 4772439.493697
6test 1173 line 228 toUtmUps8.gamma: 42.613968
6test 1174 line 228 toUtmUps8.scale: 3.314412
6test 1175 line 228 toUtmUps8.lat: 11.709763
6test 1176 line 228 toUtmUps8.lon: 76.760295
6test 1177 line 229 toUtmUps8.easting: 10550946.939052  FAILED, KNOWN, expected 10550946.939050
6test 1178 line 229 toUtmUps8.northing: 3851968.815305  FAILED, KNOWN, expected 3851968.815295
6test 1179 line 229 toUtmUps8.gamma: 33.383025
6test 1180 line 229 toUtmUps8.scale: 2.724754
6test 1181 line 229 toUtmUps8.lat: 12.009498
6test 1182 line 229 toUtmUps8.lon: 71.782351
6test skipped (33): line 230 toUtmUps8.'37.62978386356 85.795687334213 6828299.1236065501034 9394803.2274626281036 83.181386462369626591 1.62435875189611017521'
6test 1183 line 231 toUtmUps8.easting: 11162550.334001  FAILED, KNOWN, expected 11162550.334022
6test 1184 line 231 toUtmUps8.northing: 2640267.279546  FAILED, KNOWN, expected 2640267.279593
6test 1185 line 231 toUtmUps8.gamma: 23.145404
6test 1186 line 231 toUtmUps8.scale: 2.998408
6test 1187 line 231 toUtmUps8.lat: 7.721128
6test 1188 line 231 toUtmUps8.lon: 71.662731
6test 1189 line 232 toUtmUps8.easting: 4411584.447941
6test 1190 line 232 toUtmUps8.northing: 4956173.694407
6test 1191 line 232 toUtmUps8.gamma: 30.713919
6test 1192 line 232 toUtmUps8.scale: 1.248736
6test 1193 line 232 toUtmUps8.lat: 34.295026
6test 1194 line 232 toUtmUps8.lon: 46.442191
6test 1195 line 233 toUtmUps8.easting: 672108.897905
6test 1196 line 233 toUtmUps8.northing: 4751554.657054
6test 1197 line 233 toUtmUps8.gamma: 5.569178
6test 1198 line 233 toUtmUps8.scale: 1.005162
6test 1199 line 233 toUtmUps8.lat: 42.622496
6test 1200 line 233 toUtmUps8.lon: 8.193605
6test 1201 line 234 toUtmUps8.easting: 5022964.290579
6test 1202 line 234 toUtmUps8.northing: 6860418.199502
6test 1203 line 234 toUtmUps8.gamma: 50.862230
6test 1204 line 234 toUtmUps8.scale: 1.324925
6test 1205 line 234 toUtmUps8.lat: 41.667780
6test 1206 line 234 toUtmUps8.lon: 61.518288
6test 1207 line 235 toUtmUps8.easting: 1669655.595207
6test 1208 line 235 toUtmUps8.northing: 4152086.537021
6test 1209 line 235 toUtmUps8.gamma: 11.110237
6test 1210 line 235 toUtmUps8.scale: 1.034138
6test 1211 line 235 toUtmUps8.lat: 36.060369
6test 1212 line 235 toUtmUps8.lon: 18.444112
6test 1213 line 236 toUtmUps8.easting: 6055876.729655
6test 1214 line 236 toUtmUps8.northing: 4896837.552619
6test 1215 line 236 toUtmUps8.gamma: 35.799747
6test 1216 line 236 toUtmUps8.scale: 1.485967
6test 1217 line 236 toUtmUps8.lat: 27.948091
6test 1218 line 236 toUtmUps8.lon: 56.816429
6test 1219 line 237 toUtmUps8.easting: 1209214.164379
6test 1220 line 237 toUtmUps8.northing: 7266409.859178
6test 1221 line 237 toUtmUps8.gamma: 22.319633
6test 1222 line 237 toUtmUps8.scale: 1.017554
6test 1223 line 237 toUtmUps8.lat: 63.386030
6test 1224 line 237 toUtmUps8.lon: 24.662716
6test 1225 line 238 toUtmUps8.easting: 5154564.559584
6test 1226 line 238 toUtmUps8.northing: 698118.349975
6test 1227 line 238 toUtmUps8.gamma: 4.242360
6test 1228 line 238 toUtmUps8.scale: 1.347481
6test 1229 line 238 toUtmUps8.lat: 4.680922
6test 1230 line 238 toUtmUps8.lon: 42.114426
6test 1231 line 239 toUtmUps8.easting: 2695149.806543
6test 1232 line 239 toUtmUps8.northing: 8208197.765605
6test 1233 line 239 toUtmUps8.gamma: 54.178615
6test 1234 line 239 toUtmUps8.scale: 1.089730
6test 1235 line 239 toUtmUps8.lat: 61.826625
6test 1236 line 239 toUtmUps8.lon: 57.525096
6test 1237 line 240 toUtmUps8.easting: 3394792.327820
6test 1238 line 240 toUtmUps8.northing: 3217583.415552
6test 1239 line 240 toUtmUps8.gamma: 15.165863
6test 1240 line 240 toUtmUps8.scale: 1.145285
6test 1241 line 240 toUtmUps8.lat: 25.104353
6test 1242 line 240 toUtmUps8.lon: 32.528660
6test 1243 line 241 toUtmUps8.easting: 1429160.966985
6test 1244 line 241 toUtmUps8.northing: 8212685.362032
6test 1245 line 241 toUtmUps8.gamma: 37.484904
6test 1246 line 241 toUtmUps8.scale: 1.024676
6test 1247 line 241 toUtmUps8.lat: 69.678351
6test 1248 line 241 toUtmUps8.lon: 39.275513
6test skipped (34): line 242 toUtmUps8.'29.671383681805 84.19659549085 8343387.9980651104898 8885196.9545780118644 78.561937382568633298 1.97473261886829061763'
6test 1249 line 243 toUtmUps8.easting: 1990722.928606
6test 1250 line 243 toUtmUps8.northing: 7569202.065162
6test 1251 line 243 toUtmUps8.gamma: 37.075276
6test 1252 line 243 toUtmUps8.scale: 1.048486
6test 1253 line 243 toUtmUps8.lat: 62.300208
6test 1254 line 243 toUtmUps8.lon: 40.474051
6test 1255 line 244 toUtmUps8.easting: 1554980.099559
6test 1256 line 244 toUtmUps8.northing: 1449423.919586
6test 1257 line 244 toUtmUps8.gamma: 3.188328
6test 1258 line 244 toUtmUps8.scale: 1.029664
6test 1259 line 244 toUtmUps8.lat: 12.721776
6test 1260 line 244 toUtmUps8.lon: 14.190003
6test 1261 line 245 toUtmUps8.easting: 785205.450196
6test 1262 line 245 toUtmUps8.northing: 5575158.423096
6test 1263 line 245 toUtmUps8.gamma: 8.388417
6test 1264 line 245 toUtmUps8.scale: 1.007181
6test 1265 line 245 toUtmUps8.lat: 49.811296
6test 1266 line 245 toUtmUps8.lon: 10.925011
6test 1267 line 246 toUtmUps8.easting: 3310405.988313
6test 1268 line 246 toUtmUps8.northing: 5955022.233881
6test 1269 line 246 toUtmUps8.gamma: 33.007587
6test 1270 line 246 toUtmUps8.scale: 1.137141
6test 1271 line 246 toUtmUps8.lat: 45.132680
6test 1272 line 246 toUtmUps8.lon: 42.478624
6test 1273 line 247 toUtmUps8.easting: 4733460.960666
6test 1274 line 247 toUtmUps8.northing: 129034.889816
6test 1275 line 247 toUtmUps8.gamma: 0.737551
6test 1276 line 247 toUtmUps8.scale: 1.290439
6test 1277 line 247 toUtmUps8.lat: 0.904279
6test 1278 line 247 toUtmUps8.lon: 39.078412
6test 1279 line 248 toUtmUps8.easting: 3322708.343909
6test 1280 line 248 toUtmUps8.northing: 3864738.078742
6test 1281 line 248 toUtmUps8.gamma: 18.472566
6test 1282 line 248 toUtmUps8.scale: 1.138838
6test 1283 line 248 toUtmUps8.lat: 30.163605
6test 1284 line 248 toUtmUps8.lon: 33.577996
6test skipped (35): line 249 toUtmUps8.'27.643243707755 81.892859091432 8672864.4172042475623 8333465.9834441061554 73.206272638168122883 2.06544053870286774312'
6test skipped (36): line 250 toUtmUps8.'18.201207657521 82.434617649311 11126818.23119627031 7618712.1749910723126 67.88717347393512063 2.92241673495261070414'
6test skipped (37): line 251 toUtmUps8.'28.804576432117 89.886072420251 8650100.9817967479337 9975084.1689971279206 89.767446308690086924 2.05728879562910108817'
6test 1285 line 252 toUtmUps8.easting: 2212701.180192
6test 1286 line 252 toUtmUps8.northing: 650348.100229
6test 1287 line 252 toUtmUps8.gamma: 1.970441
6test 1288 line 252 toUtmUps8.scale: 1.060830
6test 1289 line 252 toUtmUps8.lat: 5.542998
6test 1290 line 252 toUtmUps8.lon: 19.589578
6test 1291 line 253 toUtmUps8.easting: 6890222.326618
6test 1292 line 253 toUtmUps8.northing: 7506813.499547
6test 1293 line 253 toUtmUps8.gamma: 62.684825
6test 1294 line 253 toUtmUps8.scale: 1.638488
6test 1295 line 253 toUtmUps8.lat: 34.237147
6test 1296 line 253 toUtmUps8.lon: 73.678164
6test 1297 line 254 toUtmUps8.easting: 6692260.067325
6test 1298 line 254 toUtmUps8.northing: 4244174.008110
6test 1299 line 254 toUtmUps8.gamma: 31.812920
6test 1300 line 254 toUtmUps8.scale: 1.604640
6test 1301 line 254 toUtmUps8.lat: 22.704949
6test 1302 line 254 toUtmUps8.lon: 57.877010
6test 1303 line 255 toUtmUps8.easting: 1225564.137190
6test 1304 line 255 toUtmUps8.northing: 4778923.924144
6test 1305 line 255 toUtmUps8.gamma: 10.083419
6test 1306 line 255 toUtmUps8.scale: 1.018134
6test 1307 line 255 toUtmUps8.lat: 42.192424
6test 1308 line 255 toUtmUps8.lon: 14.828196
6test 1309 line 256 toUtmUps8.easting: 12341116.155088  FAILED, KNOWN, expected 12341116.154950
6test 1310 line 256 toUtmUps8.northing: 5081855.520287  FAILED, KNOWN, expected 5081855.521966
6test 1311 line 256 toUtmUps8.gamma: 45.712545  FAILED, KNOWN, expected 45.712546
6test 1312 line 256 toUtmUps8.scale: 3.535170
6test 1313 line 256 toUtmUps8.lat: 11.481151
6test 1314 line 256 toUtmUps8.lon: 78.189236
6test 1315 line 257 toUtmUps8.easting: 6673845.021771
6test 1316 line 257 toUtmUps8.northing: 1177587.190565
6test 1317 line 257 toUtmUps8.gamma: 8.389141
6test 1318 line 257 toUtmUps8.scale: 1.605171
6test 1319 line 257 toUtmUps8.lat: 6.609626
6test 1320 line 257 toUtmUps8.lon: 51.735783
6test 1321 line 258 toUtmUps8.easting: 6966354.690417
6test 1322 line 258 toUtmUps8.northing: 3641802.005093
6test 1323 line 258 toUtmUps8.gamma: 27.409636
6test 1324 line 258 toUtmUps8.scale: 1.661469
6test 1325 line 258 toUtmUps8.lat: 19.059369
6test 1326 line 258 toUtmUps8.lon: 57.526439
6test 1327 max forward error: 1.678809e-03
6test 1328 max reverse error: 3.170456e-09
6test 1329 Utm.scale0: 0.9996
6test 1330 Utm.datum: WGS84
6test 1331 Utm.datum.ellipsoid.KsOrder: 8
6test 1332 Ups.scale0: 0.994  FAILED, KNOWN, expected 0.9996
6test 1333 Ups.datum: WGS84
6test 1334 Ups.datum.ellipsoid.KsOrder: 8
6test 1335 WGS84.KsOrder: 8
624 of 1335 testUtmUpsTMcoords.py tests (1.8%) FAILED, ALL KNOWN, 37 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 81.630 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testVectorial.py
./pygeodesy/ellipsoidalNvector.py:280: DeprecationWarning: Property_RO L{pygeodesy.ltpTuples.Ned.ned} has been DEPRECATED, use property C{ned4}.
  dn = delta.ned
./pygeodesy/deprecated/__init__.py:64: DeprecationWarning: class L{pygeodesy.deprecated.Ned3Tuple} has been DEPRECATED, use class L{pygeodesy.Ned4Tuple}.
  deprecated_class(cls)
6testing testVectorial.py 22.10.09
6testVectorial(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 1 toLatLon: 44.995674°N, 045.0°E
6test 2 toNvector: (0.50004, 0.50004, 0.70705)
6test 3 isequalTo: False
6test 4 isequalTo: True
6test 5 length: 0.99992449715
6test 6 euclid: 0.99995577
6test 7 length: 1.00
6test 8 euclid: 1.0000
6test 9 meanOf: 44.995674°N, 045.0°E
6test 10 meanOf: LatLon
6test 11 apply: (0.5, 0.5, 0.707)
6test 12 init: (0.5, 0.5, 0.707)
6test 13 i***: (0.5, 0.5, 0.707)
6test 14 abs: 0.99992449715
6test 15 sumOf: (52.70504, 0.61904, 0.70705)
6test 16 sumOf: Nv
6test 17 sumOf: sumOf
6test 18 length: 52.7134151513
6test 19 sizeof: 128  FAILED, KNOWN, expected 72
6test 20 copy: True
6test 21 length: 52.2051356286
6test 22 length: 52.2051356286
6test 23 sizeof: 128
6test 24 nearestOn: 51.0°N, 001.0°E
6test 25 nearestOn: 50.987°N, 000.298°W
6test 26 nearestOn: 51.0°N, 002.0°E
6test 27 nearestOn: 50.995°N, 002.655°E
6test 28 nearestOn: 51.0°N, 001.9°E
6test 29 nearestOn: True
6test 30 distanceTo: 42.826
6test 31 nearestOn: 51.0°N, 002.0°E
6test 32 nearestOn: True
6test 33 nearestOn: 00.0°N, 000.0°E
6test 34 nearestOn: True
6test 35 nearestOn: 00.0°N, 020.0°E
6test 36 nearestOn: True
6test 37 nearestOn: 02.0°N, 002.0°E
6test 38 nearestOn: 02.0°N, 002.0°E
6test 39 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4755443.4294, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 40 neareston6: (LatLon(45°30′03.94″N, 002°00′00.0″E), 39078.729285, 1.501072, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 41 BasseC: 47.3038°N, 002.5721°W
6test 42 BasseH: 47.311067°N, 002.528617°W
6test 43 triangulate: 47.323667°N, 002.568501°W
6test 44 triangulate: True
6test 45 trilaterate: 37.419078°N, 121.960579°W
6test 46 trilaterate: True
6test 47 trilaterate: 08.068912°S, 034.888699°W
6test 48 trilaterate: True
6test 49 trilaterate: 08.068912°S, 034.888695°W  FAILED, KNOWN, expected 08.068912°S, 034.888699°W
6test 50 trilaterate: True
6test 51 trilaterate: 42.67456065°N, 002.49539502°E
6test 52 trilaterate: distance1 (5110), distance2 (5110), distance3 (5110), point1 (LatLon(42°41′19.82″N, 002°26′19.89″E)), point2 (LatLon(42°38′07.52″N, 002°31′21.25″E)) or point3 (LatLon(42°38′43.44″N, 002°30′17.32″E)): no intersection (useZ=False, z=-8.13526e-05)
6test 53 destinationNed: 48°53′12.01″N, 002°22′29.0″E, +0.20m
6testNvector(pygeodesy.ellipsoidalNvector, 22.09.20)
6test 54 sumOf: Nvector
6test 55 ecef.x, .y, .z: 3194659.54086, 3194659.54086, 4487008.4122
6test 56 ecef.lat, .lon: 44.995674, 45.0
6test 57 ecef.height: -0.0
6test 58 ecef.M: -0.707106781, -0.499962243, 0.500037754, 0.707106781, -0.499962243, 0.500037754, 0.0, 0.707160174, 0.707053385
6test 59 .isEllipsoidal: True
6test 60 .isSpherical: False
6test 61 .latlon: (44.995674, 45.0)
6test 62 .philam: (0.785323, 0.785398)
6test 63 .latlonheight: (44.995674, 45.0, 0.0)
6test 64 .philamheight: (0.785323, 0.785398, 0.0)
6test 65 parse: (0.5, 0.5, 0.707)
6test 66 cmp: 0
6test 67 eq: True
6test 68 ge: True
6test 69 gt: False
6test 70 le: True
6test 71 lt: False
6test 72 ne: False
6test 73 *: (1.0, 1.0, 1.414)
6test 74 +: (1.0, 1.0, 1.414)
6test 75 /: (0.5, 0.5, 0.707)
6test 76 -: (0.5, 0.5, 0.707)
6test 77 @: (0.0, 0.0, 0.0)
6test 78 @: (0.0, 0.0, 0.0)
6test 79 rotate: (0.26268, 0.26268, 0.37143)
6test 80 crosserrors: True
6test 81 0: divisor (0): float division by zero
6test 82 intersections2: (500.0, 0.0, 0.0)
6test 83 nearestOn: (0.0, 0.0, 0.0)
6test 84 nearestOn: True
6test 85 nearestOn: (100.0, 100.0, 100.0)
6test 86 nearestOn: True
6test 87 iscolinearWith: False
6test 88 iscolinearWith: True
6test 89 nearestOn: (0.0, 0.0, 0.0)
6test 90 nearestOn: True
6test 91 nearestOn: (100.0, 100.0, 100.0)
6test 92 nearestOn: True
6test 93 iscolinearWith: False
6test 94 iscolinearWith: True
6testVectorial(pygeodesy.sphericalNvector, 23.01.18)
6test 95 crossTrackDistanceTo: -305.67
6test 96 crossTrackDistanceTo: -307.55
6test 97 toLatLon: 44.995674°N, 045.0°E
6test 98 toNvector: (0.50004, 0.50004, 0.70705)
6test 99 isequalTo: False
6test 100 isequalTo: True
6test 101 length: 0.99992449715
6test 102 euclid: 0.99995577
6test 103 length: 1.00
6test 104 euclid: 1.0000
6test 105 meanOf: 44.995674°N, 045.0°E
6test 106 meanOf: LatLon
6test 107 apply: (0.5, 0.5, 0.707)
6test 108 init: (0.5, 0.5, 0.707)
6test 109 i***: (0.5, 0.5, 0.707)
6test 110 abs: 0.99992449715
6test 111 sumOf: (52.70504, 0.61904, 0.70705)
6test 112 sumOf: Nv
6test 113 sumOf: sumOf
6test 114 length: 52.7134151513
6test 115 sizeof: 128  FAILED, KNOWN, expected 72
6test 116 copy: True
6test 117 length: 52.2051356286
6test 118 length: 52.2051356286
6test 119 sizeof: 128
6test 120 toCartesian: [3185744.919, 3185744.919, 4504643.315]
6test 121 toLatLon: 44.995674°N, 045.0°E, -0.00m  FAILED, KNOWN, expected 44.995674°N, 045.0°E
6test 122 toNvector: (0.50004, 0.50004, 0.70705, -0.00)
6test 123 intersection: 02.499372°N, 002.5°E
6test 124 isenclosedBy: True
6test 125 isenclosedBy*: True
6test 126 isenclosedBy: True
6test 127 isenclosedBy*: True
6test 128 iswithin: False
6test 129 iswithin: True
6test 130 nearestOn: 51.0°N, 001.0°E
6test 131 nearestOn: 50.987°N, 000.298°W
6test 132 nearestOn: 51.0°N, 002.0°E
6test 133 nearestOn: 50.995°N, 002.655°E
6test 134 nearestOn: 51.0°N, 001.9°E
6test 135 nearestOn: True
6test 136 distanceTo: 42.712
6test 137 nearestOn: 51.0°N, 002.0°E
6test 138 nearestOn: True
6test 139 nearestOn: 00.0°N, 000.0°E
6test 140 nearestOn: True
6test 141 nearestOn: 00.0°N, 020.0°E
6test 142 nearestOn: True
6test 143 nearestOn: 02.0°N, 002.0°E
6test 144 nearestOn: 02.0°N, 002.0°E
6test 145 neareston6: (LatLon(45°00′00.0″N, 001°00′00.0″E), 4773243.784965, 0.0, 1, LatLon(45°00′00.0″N, 001°00′00.0″E), LatLon(45°00′00.0″N, 001°00′00.0″E))
6test 146 neareston6: (LatLon(45°30′03.93″N, 002°00′00.0″E), 38968.531578, 1.501091, 2, LatLon(45°00′00.0″N, 002°00′00.0″E), LatLon(46°00′00.0″N, 002°00′00.0″E))
6test 147 BasseC: 47.3038°N, 002.5721°W
6test 148 BasseH: 47.311067°N, 002.528617°W
6test 149 triangulate: 47.323667°N, 002.568501°W
6test 150 triangulate: True
6test 151 trilaterate: 37.419078°N, 121.960579°W
6test 152 trilaterate: True
6test 153 trilaterate: 08.068912°S, 034.888699°W
6test 154 trilaterate: True
6test 155 trilaterate: 08.068912°S, 034.888695°W  FAILED, KNOWN, expected 08.068912°S, 034.888699°W
6test 156 trilaterate: True
6test 157 trilaterate: 42.67456065°N, 002.49539502°E
6test 158 trilaterate: distance1 (5110), distance2 (5110), distance3 (5110), point1 (LatLon(42°41′19.82″N, 002°26′19.89″E)), point2 (LatLon(42°38′07.52″N, 002°31′21.25″E)) or point3 (LatLon(42°38′43.44″N, 002°30′17.32″E)): no intersection (useZ=False, z=-8.13526e-05)
6testNvector(pygeodesy.sphericalNvector, 23.01.18)
6test 159 sumOf: Nvector
6test 160 ecef.x, .y, .z: 3185744.91853, 3185744.91853, 4504643.3148
6test 161 ecef.lat, .lon: 44.995674, 45.0
6test 162 ecef.height: 0.0
6test 163 ecef.M: -0.707106781, -0.499962243, 0.500037754, 0.707106781, -0.499962243, 0.500037754, 0.0, 0.707160174, 0.707053385
6test 164 .isEllipsoidal: False
6test 165 .isSpherical: True
6test 166 .latlon: (44.995674, 45.0)
6test 167 .philam: (0.785323, 0.785398)
6test 168 .latlonheight: (44.995674, 45.0, 0.0)
6test 169 .philamheight: (0.785323, 0.785398, 0.0)
6test 170 parse: (0.5, 0.5, 0.707)
6test 171 cmp: 0
6test 172 eq: True
6test 173 ge: True
6test 174 gt: False
6test 175 le: True
6test 176 lt: False
6test 177 ne: False
6test 178 *: (1.0, 1.0, 1.414)
6test 179 +: (1.0, 1.0, 1.414)
6test 180 /: (0.5, 0.5, 0.707)
6test 181 -: (0.5, 0.5, 0.707)
6test 182 @: (0.0, 0.0, 0.0)
6test 183 @: (0.0, 0.0, 0.0)
6test 184 rotate: (0.26268, 0.26268, 0.37143)
6test 185 crosserrors: True
6test 186 0: divisor (0): float division by zero
6test 187 intersections2: (500.0, 0.0, 0.0)
6test 188 nearestOn: (0.0, 0.0, 0.0)
6test 189 nearestOn: True
6test 190 nearestOn: (100.0, 100.0, 100.0)
6test 191 nearestOn: True
6test 192 iscolinearWith: False
6test 193 iscolinearWith: True
6test 194 nearestOn: (0.0, 0.0, 0.0)
6test 195 nearestOn: True
6test 196 nearestOn: (100.0, 100.0, 100.0)
6test 197 nearestOn: True
6test 198 iscolinearWith: False
6test 199 iscolinearWith: True
6testNvectorBase(pygeodesy.nvectorBase, 22.10.05)
6test 200 sumOf: Vector4Tuple
6test 201 ecef.x, .y, .z: 3185744.91853, 3185744.91853, 4504643.3148
6test 202 ecef.lat, .lon: 44.995674, 45.0
6test 203 ecef.height: 0.0
6test 204 ecef.M: -0.707106781, -0.499962243, 0.500037754, 0.707106781, -0.499962243, 0.500037754, 0.0, 0.707160174, 0.707053385
6test 205 .isEllipsoidal: False
6test 206 .isSpherical: True
6test 207 .latlon: (44.995674, 45.0)
6test 208 .philam: (0.785323, 0.785398)
6test 209 .latlonheight: (44.995674, 45.0, 0.0)
6test 210 .philamheight: (0.785323, 0.785398, 0.0)
6test 211 parse: (0.5, 0.5, 0.707)
6test 212 cmp: 0
6test 213 eq: True
6test 214 ge: True
6test 215 gt: False
6test 216 le: True
6test 217 lt: False
6test 218 ne: False
6test 219 *: (1.0, 1.0, 1.414)
6test 220 +: (1.0, 1.0, 1.414)
6test 221 /: (0.5, 0.5, 0.707)
6test 222 -: (0.5, 0.5, 0.707)
6test 223 @: (0.0, 0.0, 0.0)
6test 224 @: (0.0, 0.0, 0.0)
6test 225 rotate: (0.26268, 0.26268, 0.37143)
6test 226 crosserrors: True
6test 227 0: divisor (0): float division by zero
6test 228 intersections2: (500.0, 0.0, 0.0)
6test 229 nearestOn: (0.0, 0.0, 0.0)
6test 230 nearestOn: True
6test 231 nearestOn: (100.0, 100.0, 100.0)
6test 232 nearestOn: True
6test 233 iscolinearWith: False
6test 234 iscolinearWith: True
6test 235 nearestOn: (0.0, 0.0, 0.0)
6test 236 nearestOn: True
6test 237 nearestOn: (100.0, 100.0, 100.0)
6test 238 nearestOn: True
6test 239 iscolinearWith: False
6test 240 iscolinearWith: True
6testNvectorBase(pygeodesy.nvectorBase, 22.10.05)
6test 241 sumOf: Vector4Tuple
6test 242 ecef.x, .y, .z: 3194659.54086, 3194659.54086, 4487008.4122
6test 243 ecef.lat, .lon: 44.995674, 45.0
6test 244 ecef.height: -0.0
6test 245 ecef.M: -0.707106781, -0.499962243, 0.500037754, 0.707106781, -0.499962243, 0.500037754, 0.0, 0.707160174, 0.707053385
6test 246 .isEllipsoidal: True
6test 247 .isSpherical: False
6test 248 .latlon: (44.995674, 45.0)
6test 249 .philam: (0.785323, 0.785398)
6test 250 .latlonheight: (44.995674, 45.0, 0.0)
6test 251 .philamheight: (0.785323, 0.785398, 0.0)
6test 252 parse: (0.5, 0.5, 0.707)
6test 253 cmp: 0
6test 254 eq: True
6test 255 ge: True
6test 256 gt: False
6test 257 le: True
6test 258 lt: False
6test 259 ne: False
6test 260 *: (1.0, 1.0, 1.414)
6test 261 +: (1.0, 1.0, 1.414)
6test 262 /: (0.5, 0.5, 0.707)
6test 263 -: (0.5, 0.5, 0.707)
6test 264 @: (0.0, 0.0, 0.0)
6test 265 @: (0.0, 0.0, 0.0)
6test 266 rotate: (0.26268, 0.26268, 0.37143)
6test 267 crosserrors: True
6test 268 0: divisor (0): float division by zero
6test 269 intersections2: (500.0, 0.0, 0.0)
6test 270 nearestOn: (0.0, 0.0, 0.0)
6test 271 nearestOn: True
6test 272 nearestOn: (100.0, 100.0, 100.0)
6test 273 nearestOn: True
6test 274 iscolinearWith: False
6test 275 iscolinearWith: True
6test 276 nearestOn: (0.0, 0.0, 0.0)
6test 277 nearestOn: True
6test 278 nearestOn: (100.0, 100.0, 100.0)
6test 279 nearestOn: True
6test 280 iscolinearWith: False
6test 281 iscolinearWith: True
6testCartesian(pygeodesy.sphericalNvector, 23.01.18)
614 tests skipped (14): No module named 'numpy': required by vector2d._numpy
6testCartesian(pygeodesy.sphericalTrigonometry, 23.01.18)
614 tests skipped (28): No module named 'numpy': required by vector2d._numpy
6testCartesian(pygeodesy.ellipsoidalNvector, 22.09.20)
614 tests skipped (42): No module named 'numpy': required by vector2d._numpy
6testCartesian(pygeodesy.ellipsoidalVincenty, 22.09.12)
614 tests skipped (56): No module named 'numpy': required by vector2d._numpy
6testCartesian(pygeodesy.ellipsoidalKarney, 22.07.07)
614 tests skipped (70): No module named 'numpy': required by vector2d._numpy
6testCartesian(pygeodesy.ellipsoidalExact, 22.07.07)
614 tests skipped (84): No module named 'numpy': required by vector2d._numpy
6testCartesianBase(pygeodesy.cartesianBase, 22.11.03)
614 tests skipped (98): No module named 'numpy': required by vector2d._numpy
6testNvectorBase(pygeodesy.nvectorBase, 22.10.05)
614 tests skipped (112): No module named 'numpy': required by vector2d._numpy
6testVector3d(pygeodesy.vector2d, 22.10.12)
614 tests skipped (126): No module named 'numpy': required by vector2d._numpy
6testTrilaterate2d2(pygeodesy.vector2d, 22.10.12)
6test 282 trilaterate2d2: (2.0, 3.0)
6test 283 trilaterate2d2: delta (6.39335377017e-06), radius1 (1.0), distance (1.00000639335) and trilaterate2d2(x=1.999994, y=3.000006): exceeds eps (2.22045e-16)
6test 284 trilaterate2d2: (-500.0, 250.0)
6test 285 meeus2: 2.236, 3.0, 2.0, 0.0
6test 286 meeus2: (3.0, 2.0, 0)
6test 287 circum3: 2.2361
6test 288 circum3: (3.0, 2.0, 0)
6test 289 circum3: None
67 tests skipped (133): No module named 'numpy': required by vector2d._numpy
6testTrilaterate3d2(pygeodesy.vector2d, 22.10.12)
618 tests skipped (151): No module named 'numpy': required by vector2d._numpy
6testIntersection3d3(pygeodesy.vector3d, 22.10.23)
6test 290 (30, 17): (Vector3d(30.30584, 16.75258, 0.0), 0, 0)
6test 291 (-1,  3): (Vector3d(-1.0429, 2.92225, 0.0), -1, -2)
6test 292 (65, 32): (Vector3d(64.86667, 32.0, 0.0), 1, -2)
6test 293 (-2, 17): <class 'pygeodesy.errors.IntersectionError'>
6test 294 (49, 25): (Vector3d(49.0, 25.0, 0.0), 0, 0)
6test 295 at 0: (0.0, 50.0, 0.0)
6test 296 at 3: (2.6168, 49.93148, 0.0)
6test 297 at 6: (5.22642, 49.72609, 0.0)
6test 298 at 9: (7.82172, 49.38442, 0.0)
6test 299 at 12: (10.39558, 48.90738, 0.0)
6test 300 at 15: (12.94095, 48.29629, 0.0)
6test 301 at 18: (15.45085, 47.55283, 0.0)
6test 302 at 21: (17.9184, 46.67902, 0.0)
6test 303 at 24: (20.33683, 45.67727, 0.0)
6test 304 at 27: (22.69952, 44.55033, 0.0)
6test 305 at 30: (25.0, 43.30127, 0.0)
6test 306 at 33: (27.23195, 41.93353, 0.0)
6test 307 at 36: (29.38926, 40.45085, 0.0)
6test 308 at 39: (31.46602, 38.8573, 0.0)
6test 309 at 42: (33.45653, 37.15724, 0.0)
6test 310 at 45: (35.35534, 35.35534, 0.0)
6test 311 at 48: (37.15724, 33.45653, 0.0)
6test 312 at 51: (38.8573, 31.46602, 0.0)
6test 313 at 54: (40.45085, 29.38926, 0.0)
6test 314 at 57: (41.93353, 27.23195, 0.0)
6test 315 at 60: (43.30127, 25.0, 0.0)
6test 316 at 63: (44.55033, 22.69952, 0.0)
6test 317 at 66: (45.67727, 20.33683, 0.0)
6test 318 at 69: (46.67902, 17.9184, 0.0)
6test 319 at 72: (47.55283, 15.45085, 0.0)
6test 320 at 75: (48.29629, 12.94095, 0.0)
6test 321 at 78: (48.90738, 10.39558, 0.0)
6test 322 at 81: (49.38442, 7.82172, 0.0)
6test 323 at 84: (49.72609, 5.22642, 0.0)
6test 324 at 87: (49.93148, 2.6168, 0.0)
6test 325 at 90: (50.0, 0.0, 0.0)
6test 326 at 93: (49.93148, -2.6168, 0.0)
6test 327 at 96: (49.72609, -5.22642, 0.0)
6test 328 at 99: (49.38442, -7.82172, 0.0)
6test 329 at 102: (48.90738, -10.39558, 0.0)
6test 330 at 105: (48.29629, -12.94095, 0.0)
6test 331 at 108: (47.55283, -15.45085, 0.0)
6test 332 at 111: (46.67902, -17.9184, 0.0)
6test 333 at 114: (45.67727, -20.33683, 0.0)
6test 334 at 117: (44.55033, -22.69952, 0.0)
6test 335 at 120: (43.30127, -25.0, 0.0)
6test 336 at 123: (41.93353, -27.23195, 0.0)
6test 337 at 126: (40.45085, -29.38926, 0.0)
6test 338 at 129: (38.8573, -31.46602, 0.0)
6test 339 at 132: (37.15724, -33.45653, 0.0)
6test 340 at 135: (35.35534, -35.35534, 0.0)
6test 341 at 138: (33.45653, -37.15724, 0.0)
6test 342 at 141: (31.46602, -38.8573, 0.0)
6test 343 at 144: (29.38926, -40.45085, 0.0)
6test 344 at 147: (27.23195, -41.93353, 0.0)
6test 345 at 150: (25.0, -43.30127, 0.0)
6test 346 at 153: (22.69952, -44.55033, 0.0)
6test 347 at 156: (20.33683, -45.67727, 0.0)
6test 348 at 159: (17.9184, -46.67902, 0.0)
6test 349 at 162: (15.45085, -47.55283, 0.0)
6test 350 at 165: (12.94095, -48.29629, 0.0)
6test 351 at 168: (10.39558, -48.90738, 0.0)
6test 352 at 171: (7.82172, -49.38442, 0.0)
6test 353 at 174: (5.22642, -49.72609, 0.0)
6test 354 at 177: (2.6168, -49.93148, 0.0)
6test 355 at 180: (0.0, -50.0, 0.0)
6test 356 at 183: (-2.6168, -49.93148, 0.0)
6test 357 at 186: (-5.22642, -49.72609, 0.0)
6test 358 at 189: (-7.82172, -49.38442, 0.0)
6test 359 at 192: (-10.39558, -48.90738, 0.0)
6test 360 at 195: (-12.94095, -48.29629, 0.0)
6test 361 at 198: (-15.45085, -47.55283, 0.0)
6test 362 at 201: (-17.9184, -46.67902, 0.0)
6test 363 at 204: (-20.33683, -45.67727, 0.0)
6test 364 at 207: (-22.69952, -44.55033, 0.0)
6test 365 at 210: (-25.0, -43.30127, 0.0)
6test 366 at 213: (-27.23195, -41.93353, 0.0)
6test 367 at 216: (-29.38926, -40.45085, 0.0)
6test 368 at 219: (-31.46602, -38.8573, 0.0)
6test 369 at 222: (-33.45653, -37.15724, 0.0)
6test 370 at 225: (-35.35534, -35.35534, 0.0)
6test 371 at 228: (-37.15724, -33.45653, 0.0)
6test 372 at 231: (-38.8573, -31.46602, 0.0)
6test 373 at 234: (-40.45085, -29.38926, 0.0)
6test 374 at 237: (-41.93353, -27.23195, 0.0)
6test 375 at 240: (-43.30127, -25.0, 0.0)
6test 376 at 243: (-44.55033, -22.69952, 0.0)
6test 377 at 246: (-45.67727, -20.33683, 0.0)
6test 378 at 249: (-46.67902, -17.9184, 0.0)
6test 379 at 252: (-47.55283, -15.45085, 0.0)
6test 380 at 255: (-48.29629, -12.94095, 0.0)
6test 381 at 258: (-48.90738, -10.39558, 0.0)
6test 382 at 261: (-49.38442, -7.82172, 0.0)
6test 383 at 264: (-49.72609, -5.22642, 0.0)
6test 384 at 267: (-49.93148, -2.6168, 0.0)
6test 385 at 270: (-50.0, 0.0, 0.0)
6test 386 at 273: (-49.93148, 2.6168, 0.0)
6test 387 at 276: (-49.72609, 5.22642, 0.0)
6test 388 at 279: (-49.38442, 7.82172, 0.0)
6test 389 at 282: (-48.90738, 10.39558, 0.0)
6test 390 at 285: (-48.29629, 12.94095, 0.0)
6test 391 at 288: (-47.55283, 15.45085, 0.0)
6test 392 at 291: (-46.67902, 17.9184, 0.0)
6test 393 at 294: (-45.67727, 20.33683, 0.0)
6test 394 at 297: (-44.55033, 22.69952, 0.0)
6test 395 at 300: (-43.30127, 25.0, 0.0)
6test 396 at 303: (-41.93353, 27.23195, 0.0)
6test 397 at 306: (-40.45085, 29.38926, 0.0)
6test 398 at 309: (-38.8573, 31.46602, 0.0)
6test 399 at 312: (-37.15724, 33.45653, 0.0)
6test 400 at 315: (-35.35534, 35.35534, 0.0)
6test 401 at 318: (-33.45653, 37.15724, 0.0)
6test 402 at 321: (-31.46602, 38.8573, 0.0)
6test 403 at 324: (-29.38926, 40.45085, 0.0)
6test 404 at 327: (-27.23195, 41.93353, 0.0)
6test 405 at 330: (-25.0, 43.30127, 0.0)
6test 406 at 333: (-22.69952, 44.55033, 0.0)
6test 407 at 336: (-20.33683, 45.67727, 0.0)
6test 408 at 339: (-17.9184, 46.67902, 0.0)
6test 409 at 342: (-15.45085, 47.55283, 0.0)
6test 410 at 345: (-12.94095, 48.29629, 0.0)
6test 411 at 348: (-10.39558, 48.90738, 0.0)
6test 412 at 351: (-7.82172, 49.38442, 0.0)
6test 413 at 354: (-5.22642, 49.72609, 0.0)
6test 414 at 357: (-2.6168, 49.93148, 0.0)
6test 415 at 360: (0.0, 50.0, 0.0)
6test 416 max error: 2.3317285650e-13
67 of 416 testVectorial.py tests (1.7%) FAILED, incl. 5 KNOWN plus 2 DeprecationWarnings, 151 skipped (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 372.204 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testWebMercator.py
6testing testWebMercator.py 22.04.22 (module pygeodesy.webmercator 22.09.12)
6test 1 toWm1: -626172.13571216 6887893.4928338
6test 2 Wm1.y: 6887893.49283380
6test 3 copy(Wm): (<class 'pygeodesy.webmercator.Wm'>, True)
6test 4 Wm.copy(): (<class 'pygeodesy.webmercator.Wm'>, True)
6test 5 Wm2: 448251.795 5411932.678
6test 6 Wm2: 448252 5411933
6test 7 Wm2: 448251.8 5411932.7
6test 8 copy(Wm): (<class 'pygeodesy.webmercator.Wm'>, True)
6test 9 Wm.copy(): (<class 'pygeodesy.webmercator.Wm'>, True)
6test 10 Wm2.to2ll: 43.65321741, 4.02671439
6test 11 Wm2.toLatLon: 43.653217°N, 004.026714°E
6test 12 Wm2.toLatLon: 43°39′11.58″N, 004°01′36.17″E
6test 13 toWm1: 448251.795 5411932.678
6test 14 toWm2: 448252 5411933
6test 15 toWm3: [x:448252, y:5411933, radius:6378137]
6test 16 copy: 448251.795 5411932.678
6test 17 parse: 448251.795 5411932.678
6test 18 parse: 448251.795 5411932.678
6test 19 parse: [x:448251.795, y:5411932.678, radius:6378137.0]
6test 20 toWm4: 11562388 1506899
6test 21 toWm4: 11562388.154378 1506899.04498
6test 22 toWm4E: 11562388 1496994
6test 23 toWm4E: 11562388.154378 1496993.698095
6test 24 toWm5: -11169056 2800000
6test 25 toWm5: -11169055.576258 2800000.003136
6test 26 toWm5E: -11169056 2782367
6test 27 toWm5E: -11169055.576258 2782367.05923
6test 28 Wm6.toLatLon: 24.46358°N, 100.333333°W
6test 29 Wm6.toLatLon: 24°27′48.89″N, 100°20′00.0″W
6test 30 Wm6.toLatLonE: 24.299812°N, 100.333333°W
6test 31 Wm6.toLatLonE: 24°17′59.32″N, 100°20′00.0″W
6test 32 Wm7.toLatLon: 24.381787°N, 100.333333°W
6test 33 Wm7.toLatLon: 24°22′54.43″N, 100°20′00.0″W
6test 34 Wm7.toLatLonE: 24.218566°N, 100.333333°W
6test 35 Wm7.toLatLonE: 24°13′06.84″N, 100°20′00.0″W
6test 36 Wm8.toWm: -33878.893, 6693890.382, 6378137.0
6test 37 Wm8.toWm: [x:-33878.893, y:6693890.382]
6test 38 Wm8.toWm: -33878.893 6693890.382 6371008.771
6test 39 Wm8.toWm.x: -33878.893
6test 40 Wm8.toWm.y: 6693890.382
6test 41 Wm8.toWm.latlon: 51.408596, -0.304339
6test 42 Wm8.toWm.philam: 0.897249, -0.005312
6test 43 Wm8.toLatLon: 51.408596053784°N, 000.304339270785°W
6test 44 Wm8.toLatLon: 51°24′30.945794″N, 000°18′15.621375″W
6test 45 Wm9.toLatLon: TypeError
6test 46 Wm9.toLatLon: TypeError
6test 47 Wm9.toLatLon: TypeError
6test 48 Wm9.toLatLon: TypeError
6test 49 Wm9.toLatLon: TypeError
6test 50 toWm(LatLon(10.0000, 0)).y: 1118889.97
6test 51 toWm(LatLon(20.0000, 0)).y: 2273030.93
6test 52 toWm(LatLon(30.0000, 0)).y: 3503549.84
6test 53 toWm(LatLon(40.0000, 0)).y: 4865942.28
6test 54 toWm(LatLon(50.0000, 0)).y: 6446275.84
6test 55 toWm(LatLon(60.0000, 0)).y: 8399737.89
6test 56 toWm(LatLon(10.0003, 0)).y: 1118921.37
6test 57 toWm(LatLon(20.0003, 0)).y: 2273063.83
6test 58 toWm(LatLon(30.0003, 0)).y: 3503585.55
6test 59 toWm(LatLon(40.0003, 0)).y: 4865982.65
6test 60 toWm(LatLon(50.0003, 0)).y: 6446323.95
6test 61 toWm(LatLon(60.0003, 0)).y: 8399799.73
6test 62 toWm(LatLonE(10.0000, 0)).y: 1111475.10
6test 63 toWm(LatLonE(20.0000, 0)).y: 2258423.65
6test 64 toWm(LatLonE(30.0000, 0)).y: 3482189.09
6test 65 toWm(LatLonE(40.0000, 0)).y: 4838471.40
6test 66 toWm(LatLonE(50.0000, 0)).y: 6413524.59
6test 67 toWm(LatLonE(60.0000, 0)).y: 8362698.55
6test 68 toWm(LatLonE(10.0003, 0)).y: 1111506.30
6test 69 toWm(LatLonE(20.0003, 0)).y: 2258456.36
6test 70 toWm(LatLonE(30.0003, 0)).y: 3482224.61
6test 71 toWm(LatLonE(40.0003, 0)).y: 4838511.61
6test 72 toWm(LatLonE(50.0003, 0)).y: 6413572.57
6test 73 toWm(LatLonE(60.0003, 0)).y: 8362760.29
6all 73 testWebMercator.py tests passed (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 2.552 ms

running /usr/local/bin/p....on3.9 -W default ~/PyGeodesy/test/testWgrs.py
6testing testWgrs.py 21.01.10 (module pygeodesy.wgrs 22.09.24)
6test 1 Georef: 'NKLN2444638946'
6test 2 Georef: Georef('NKLN2444638946')
6test 3 Georef: NKLN2444638946
6test 4 Georef.latlon: 57.64911, 10.40744
6test 5 Georef.toLatLon: LatLon(57°38′56.8″N, 010°24′26.78″E)
6test 6 codec3: NKLN2444638946
6test 7 decode3: 57.64911, 10.40744, 6.0
6test 8 encode: NKLN2444638946
6test 9 Georef: 'NKLN2444638946H0'
6test 10 Georef: Georef('NKLN2444638946H0')
6test 11 Georef: NKLN2444638946H0
6test 12 Georef.latlon: 57.64911, 10.40744
6test 13 Georef.precision: 6
6test 14 Georef.radius: None
6test 15 Georef: 'GJPJ3424917166'
6test 16 Georef: Georef('GJPJ3424917166')
6test 17 Georef: GJPJ3424917166
6test 18 Georef.latlon: 38.286108, -76.42917
6test 19 Georef.toLatLon: LatLon(38°17′09.99″N, 076°25′45.01″W)
6test 20 codec3: GJPJ3424917166
6test 21 decode3: 38.286108, -76.429175, 6.0
6test 22 encode: GJPJ3424917166
6test 23 Georef: 'GJPJ3424917166H0'
6test 24 Georef: Georef('GJPJ3424917166H0')
6test 25 Georef: GJPJ3424917166H0
6test 26 Georef.latlon: 38.286108, -76.42917
6test 27 Georef.precision: 6
6test 28 Georef.radius: None
6test 29 Georef.3Tuple: 38.286108, -76.42917, 0.0
6test 30 codec3: MKPG1204
6test 31 decode3: 51.075, -1.7917, 3.0
6test 32 encode: MKPG1204
6test 33 codec3: WJKG1503
6test 34 decode3: 36.0583, 129.2583, 3.0
6test 35 encode: WJKG1503
6test 36 codec5: GJPJ4103R5
6test 37 decode5: 38.0583, -76.3083, 3.0, None, 9260.0
6test 38 encode: GJPJ4103R5
6test 39 codec5: GJPJ4103H17
6test 40 decode5: 38.0583, -76.3083, 3.0, 5181.6, None
6test 41 encode: GJPJ4103H17
6test 42 codec5: GJPJ4103R5H17
6test 43 decode5: 38.0583, -76.3083, 3.0, 5181.6, 9260.0
6test 44 encode: GJPJ4103R5H17
6test 45 precision: -1  FAILED, KNOWN, expected 0
6test 46 resolution: 15°
6test 47 precision: 0
6test 48 resolution: 15°
6test 49 precision: 1
6test 50 resolution: 1°
6test 51 precision: 2
6test 52 resolution: 0.1′
6test 53 precision: 3
6test 54 resolution: 0.01′
6test 55 precision: 4
6test 56 resolution: 0.001′
6test 57 precision: 5
6test 58 resolution: 0.0001′
6test 59 precision: 6
6test 60 resolution: 0.00001′
6test 61 precision: 7
6test 62 resolution: 0.000001′
6test 63 precision: 8
6test 64 resolution: 0.0000001′
6test 65 precision: 9
6test 66 resolution: 0.00000001′
6test 67 precision: 10
6test 68 resolution: 0.000000001′
6test 69 precision: 11
6test 70 resolution: 0.0000000001′
6test 71 precision: 12  FAILED, KNOWN, expected 11
6test 72 resolution: 0.0000000001′
62 of 72 testWgrs.py tests (2.8%) FAILED, ALL KNOWN (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W  default) 2.201 ms

test/run.py /usr/local/bin/p....on3.9 -W default: all OK (PyGeodesy 23.3.12 Python 3.9.6 64bit arm64 coverage 4.5.4 macOS 13.2.1 isLazy 0 -W default) 9:14.737
